[{"index":"1","url":"https://leetcode.com/problems/two-sum","title":"Two Sum","difficulty":"Easy","description":"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nYou can return the answer in any order.\n\n \n\nExample 1:\n\nInput: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nOutput: Because nums[0] + nums[1] == 9, we return [0, 1].\n\n\nExample 2:\n\nInput: nums = [3,2,4], target = 6\nOutput: [1,2]\n\n\nExample 3:\n\nInput: nums = [3,3], target = 6\nOutput: [0,1]\n\n\n \n\nConstraints:\n\n2 <= nums.length <= 103\n-109 <= nums[i] <= 109\n-109 <= target <= 109\nOnly one valid answer exists."},{"index":"2","url":"https://leetcode.com/problems/add-two-numbers","title":"Add Two Numbers","difficulty":"Medium","description":"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\n\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\n \n\nExample 1:\n\nInput: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [7,0,8]\nExplanation: 342 + 465 = 807.\n\n\nExample 2:\n\nInput: l1 = [0], l2 = [0]\nOutput: [0]\n\n\nExample 3:\n\nInput: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\nOutput: [8,9,9,9,0,0,0,1]\n\n\n \n\nConstraints:\n\nThe number of nodes in each linked list is in the range [1, 100].\n0 <= Node.val <= 9\nIt is guaranteed that the list represents a number that does not have leading zeros."},{"index":"3","url":"https://leetcode.com/problems/longest-substring-without-repeating-characters","title":"Longest Substring Without Repeating Characters","difficulty":"Medium","description":"Given a string s, find the length of the longest substring without repeating characters.\n\n \n\nExample 1:\n\nInput: s = \"abcabcbb\"\nOutput: 3\nExplanation: The answer is \"abc\", with the length of 3.\n\n\nExample 2:\n\nInput: s = \"bbbbb\"\nOutput: 1\nExplanation: The answer is \"b\", with the length of 1.\n\n\nExample 3:\n\nInput: s = \"pwwkew\"\nOutput: 3\nExplanation: The answer is \"wke\", with the length of 3.\nNotice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n\n\nExample 4:\n\nInput: s = \"\"\nOutput: 0\n\n\n \n\nConstraints:\n\n0 <= s.length <= 5 * 104\ns consists of English letters, digits, symbols and spaces."},{"index":"4","url":"https://leetcode.com/problems/median-of-two-sorted-arrays","title":"Median of Two Sorted Arrays","difficulty":"Hard","description":"Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.\n\nFollow up: The overall run time complexity should be O(log (m+n)).\n\n \n\nExample 1:\n\nInput: nums1 = [1,3], nums2 = [2]\nOutput: 2.00000\nExplanation: merged array = [1,2,3] and median is 2.\n\n\nExample 2:\n\nInput: nums1 = [1,2], nums2 = [3,4]\nOutput: 2.50000\nExplanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n\n\nExample 3:\n\nInput: nums1 = [0,0], nums2 = [0,0]\nOutput: 0.00000\n\n\nExample 4:\n\nInput: nums1 = [], nums2 = [1]\nOutput: 1.00000\n\n\nExample 5:\n\nInput: nums1 = [2], nums2 = []\nOutput: 2.00000\n\n\n \n\nConstraints:\n\nnums1.length == m\nnums2.length == n\n0 <= m <= 1000\n0 <= n <= 1000\n1 <= m + n <= 2000\n-106 <= nums1[i], nums2[i] <= 106"},{"index":"5","url":"https://leetcode.com/problems/longest-palindromic-substring","title":"Longest Palindromic Substring","difficulty":"Medium","description":"Given a string s, return the longest palindromic substring in s.\n\n \n\nExample 1:\n\nInput: s = \"babad\"\nOutput: \"bab\"\nNote: \"aba\" is also a valid answer.\n\n\nExample 2:\n\nInput: s = \"cbbd\"\nOutput: \"bb\"\n\n\nExample 3:\n\nInput: s = \"a\"\nOutput: \"a\"\n\n\nExample 4:\n\nInput: s = \"ac\"\nOutput: \"a\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns consist of only digits and English letters (lower-case and/or upper-case),"},{"index":"6","url":"https://leetcode.com/problems/zigzag-conversion","title":"ZigZag Conversion","difficulty":"Medium","description":"The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\nP   A   H   N\nA P L S I I G\nY   I   R\n\n\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\n\nWrite the code that will take a string and make this conversion given a number of rows:\n\nstring convert(string s, int numRows);\n\n\n \n\nExample 1:\n\nInput: s = \"PAYPALISHIRING\", numRows = 3\nOutput: \"PAHNAPLSIIGYIR\"\n\n\nExample 2:\n\nInput: s = \"PAYPALISHIRING\", numRows = 4\nOutput: \"PINALSIGYAHRPI\"\nExplanation:\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n\n\nExample 3:\n\nInput: s = \"A\", numRows = 1\nOutput: \"A\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns consists of English letters (lower-case and upper-case), ',' and '.'.\n1 <= numRows <= 1000"},{"index":"7","url":"https://leetcode.com/problems/reverse-integer","title":"Reverse Integer","difficulty":"Easy","description":"Given a 32-bit signed integer, reverse digits of an integer.\n\nNote:\nAssume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.\n\n \n\nExample 1:\n\nInput: x = 123\nOutput: 321\n\n\nExample 2:\n\nInput: x = -123\nOutput: -321\n\n\nExample 3:\n\nInput: x = 120\nOutput: 21\n\n\nExample 4:\n\nInput: x = 0\nOutput: 0\n\n\n \n\nConstraints:\n\n-231 <= x <= 231 - 1"},{"index":"8","url":"https://leetcode.com/problems/string-to-integer-atoi","title":"String to Integer (atoi)","difficulty":"Medium","description":"Implement atoi which converts a string to an integer.\n\nThe function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.\n\nThe string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.\n\nIf the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.\n\nIf no valid conversion could be performed, a zero value is returned.\n\nNote:\n\nOnly the space character ' ' is considered a whitespace character.\nAssume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. If the numerical value is out of the range of representable values, 231 − 1 or −231 is returned.\n\n \n\nExample 1:\n\nInput: str = \"42\"\nOutput: 42\n\n\nExample 2:\n\nInput: str = \"   -42\"\nOutput: -42\nExplanation: The first non-whitespace character is '-', which is the minus sign. Then take as many numerical digits as possible, which gets 42.\n\n\nExample 3:\n\nInput: str = \"4193 with words\"\nOutput: 4193\nExplanation: Conversion stops at digit '3' as the next character is not a numerical digit.\n\n\nExample 4:\n\nInput: str = \"words and 987\"\nOutput: 0\nExplanation: The first non-whitespace character is 'w', which is not a numerical digit or a +/- sign. Therefore no valid conversion could be performed.\n\n\nExample 5:\n\nInput: str = \"-91283472332\"\nOutput: -2147483648\nExplanation: The number \"-91283472332\" is out of the range of a 32-bit signed integer. Thefore INT_MIN (−231) is returned.\n\n\n \n\nConstraints:\n\n0 <= s.length <= 200\ns consists of English letters (lower-case and upper-case), digits, ' ', '+', '-' and '.'."},{"index":"9","url":"https://leetcode.com/problems/palindrome-number","title":"Palindrome Number","difficulty":"Easy","description":"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.\n\nFollow up: Could you solve it without converting the integer to a string?\n\n \n\nExample 1:\n\nInput: x = 121\nOutput: true\n\n\nExample 2:\n\nInput: x = -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n\n\nExample 3:\n\nInput: x = 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n\n\nExample 4:\n\nInput: x = -101\nOutput: false\n\n\n \n\nConstraints:\n\n-231 <= x <= 231 - 1"},{"index":"10","url":"https://leetcode.com/problems/regular-expression-matching","title":"Regular Expression Matching","difficulty":"Hard","description":"Given an input string (s) and a pattern (p), implement regular expression matching with support for '.' and '*' where: \n\n'.' Matches any single character.​​​​\n'*' Matches zero or more of the preceding element.\n\nThe matching should cover the entire input string (not partial).\n\n \n\nExample 1:\n\nInput: s = \"aa\", p = \"a\"\nOutput: false\nExplanation: \"a\" does not match the entire string \"aa\".\n\n\nExample 2:\n\nInput: s = \"aa\", p = \"a*\"\nOutput: true\nExplanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes \"aa\".\n\n\nExample 3:\n\nInput: s = \"ab\", p = \".*\"\nOutput: true\nExplanation: \".*\" means \"zero or more (*) of any character (.)\".\n\n\nExample 4:\n\nInput: s = \"aab\", p = \"c*a*b\"\nOutput: true\nExplanation: c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches \"aab\".\n\n\nExample 5:\n\nInput: s = \"mississippi\", p = \"mis*is*p*.\"\nOutput: false\n\n\n \n\nConstraints:\n\n0 <= s.length <= 20\n0 <= p.length <= 30\ns contains only lowercase English letters.\np contains only lowercase English letters, '.', and '*'.\nIt is guaranteed for each appearance of the character '*', there will be a previous valid character to match."},{"index":"11","url":"https://leetcode.com/problems/container-with-most-water","title":"Container With Most Water","difficulty":"Medium","description":"Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.\n\nNotice that you may not slant the container.\n\n \n\nExample 1:\n\nInput: height = [1,8,6,2,5,4,8,3,7]\nOutput: 49\nExplanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\n\n\nExample 2:\n\nInput: height = [1,1]\nOutput: 1\n\n\nExample 3:\n\nInput: height = [4,3,2,1,4]\nOutput: 16\n\n\nExample 4:\n\nInput: height = [1,2,1]\nOutput: 2\n\n\n \n\nConstraints:\n\nn = height.length\n2 <= n <= 3 * 104\n0 <= height[i] <= 3 * 104"},{"index":"12","url":"https://leetcode.com/problems/integer-to-roman","title":"Integer to Roman","difficulty":"Medium","description":"Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.\n\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\n\nFor example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\n\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\n\nI can be placed before V (5) and X (10) to make 4 and 9. \nX can be placed before L (50) and C (100) to make 40 and 90. \nC can be placed before D (500) and M (1000) to make 400 and 900.\n\nGiven an integer, convert it to a roman numeral.\n\n \n\nExample 1:\n\nInput: num = 3\nOutput: \"III\"\n\n\nExample 2:\n\nInput: num = 4\nOutput: \"IV\"\n\n\nExample 3:\n\nInput: num = 9\nOutput: \"IX\"\n\n\nExample 4:\n\nInput: num = 58\nOutput: \"LVIII\"\nExplanation: L = 50, V = 5, III = 3.\n\n\nExample 5:\n\nInput: num = 1994\nOutput: \"MCMXCIV\"\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4.\n\n\n \n\nConstraints:\n\n1 <= num <= 3999"},{"index":"13","url":"https://leetcode.com/problems/roman-to-integer","title":"Roman to Integer","difficulty":"Easy","description":"Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.\n\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\n\nFor example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\n\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\n\nI can be placed before V (5) and X (10) to make 4 and 9. \nX can be placed before L (50) and C (100) to make 40 and 90. \nC can be placed before D (500) and M (1000) to make 400 and 900.\n\nGiven a roman numeral, convert it to an integer.\n\n \n\nExample 1:\n\nInput: s = \"III\"\nOutput: 3\n\n\nExample 2:\n\nInput: s = \"IV\"\nOutput: 4\n\n\nExample 3:\n\nInput: s = \"IX\"\nOutput: 9\n\n\nExample 4:\n\nInput: s = \"LVIII\"\nOutput: 58\nExplanation: L = 50, V= 5, III = 3.\n\n\nExample 5:\n\nInput: s = \"MCMXCIV\"\nOutput: 1994\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 15\ns contains only the characters ('I', 'V', 'X', 'L', 'C', 'D', 'M').\nIt is guaranteed that s is a valid roman numeral in the range [1, 3999]."},{"index":"14","url":"https://leetcode.com/problems/longest-common-prefix","title":"Longest Common Prefix","difficulty":"Easy","description":"Write a function to find the longest common prefix string amongst an array of strings.\n\nIf there is no common prefix, return an empty string \"\".\n\n \n\nExample 1:\n\nInput: strs = [\"flower\",\"flow\",\"flight\"]\nOutput: \"fl\"\n\n\nExample 2:\n\nInput: strs = [\"dog\",\"racecar\",\"car\"]\nOutput: \"\"\nExplanation: There is no common prefix among the input strings.\n\n\n \n\nConstraints:\n\n0 <= strs.length <= 200\n0 <= strs[i].length <= 200\nstrs[i] consists of only lower-case English letters."},{"index":"15","url":"https://leetcode.com/problems/3sum","title":"3Sum","difficulty":"Medium","description":"Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.\n\nNotice that the solution set must not contain duplicate triplets.\n\n \n\nExample 1:\n\nInput: nums = [-1,0,1,2,-1,-4]\nOutput: [[-1,-1,2],[-1,0,1]]\n\n\nExample 2:\n\nInput: nums = []\nOutput: []\n\n\nExample 3:\n\nInput: nums = [0]\nOutput: []\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 3000\n-105 <= nums[i] <= 105"},{"index":"16","url":"https://leetcode.com/problems/3sum-closest","title":"3Sum Closest","difficulty":"Medium","description":"Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.\n\n \n\nExample 1:\n\nInput: nums = [-1,2,1,-4], target = 1\nOutput: 2\nExplanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n\n\n \n\nConstraints:\n\n3 <= nums.length <= 10^3\n-10^3 <= nums[i] <= 10^3\n-10^4 <= target <= 10^4"},{"index":"17","url":"https://leetcode.com/problems/letter-combinations-of-a-phone-number","title":"Letter Combinations of a Phone Number","difficulty":"Medium","description":"Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.\n\nA mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\n\n \n\nExample 1:\n\nInput: digits = \"23\"\nOutput: [\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]\n\n\nExample 2:\n\nInput: digits = \"\"\nOutput: []\n\n\nExample 3:\n\nInput: digits = \"2\"\nOutput: [\"a\",\"b\",\"c\"]\n\n\n \n\nConstraints:\n\n0 <= digits.length <= 4\ndigits[i] is a digit in the range ['2', '9']."},{"index":"18","url":"https://leetcode.com/problems/4sum","title":"4Sum","difficulty":"Medium","description":"Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.\n\nNotice that the solution set must not contain duplicate quadruplets.\n\n \n\nExample 1:\n\nInput: nums = [1,0,-1,0,-2,2], target = 0\nOutput: [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\n\n\nExample 2:\n\nInput: nums = [], target = 0\nOutput: []\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 200\n-109 <= nums[i] <= 109\n-109 <= target <= 109"},{"index":"19","url":"https://leetcode.com/problems/remove-nth-node-from-end-of-list","title":"Remove Nth Node From End of List","difficulty":"Medium","description":"Given the head of a linked list, remove the nth node from the end of the list and return its head.\n\nFollow up: Could you do this in one pass?\n\n \n\nExample 1:\n\nInput: head = [1,2,3,4,5], n = 2\nOutput: [1,2,3,5]\n\n\nExample 2:\n\nInput: head = [1], n = 1\nOutput: []\n\n\nExample 3:\n\nInput: head = [1,2], n = 1\nOutput: [1]\n\n\n \n\nConstraints:\n\nThe number of nodes in the list is sz.\n1 <= sz <= 30\n0 <= Node.val <= 100\n1 <= n <= sz"},{"index":"20","url":"https://leetcode.com/problems/valid-parentheses","title":"Valid Parentheses","difficulty":"Easy","description":"Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\n\nAn input string is valid if:\n\nOpen brackets must be closed by the same type of brackets.\nOpen brackets must be closed in the correct order.\n\n \n\nExample 1:\n\nInput: s = \"()\"\nOutput: true\n\n\nExample 2:\n\nInput: s = \"()[]{}\"\nOutput: true\n\n\nExample 3:\n\nInput: s = \"(]\"\nOutput: false\n\n\nExample 4:\n\nInput: s = \"([)]\"\nOutput: false\n\n\nExample 5:\n\nInput: s = \"{[]}\"\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= s.length <= 104\ns consists of parentheses only '()[]{}'."},{"index":"21","url":"https://leetcode.com/problems/merge-two-sorted-lists","title":"Merge Two Sorted Lists","difficulty":"Easy","description":"Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.\n\n \n\nExample 1:\n\nInput: l1 = [1,2,4], l2 = [1,3,4]\nOutput: [1,1,2,3,4,4]\n\n\nExample 2:\n\nInput: l1 = [], l2 = []\nOutput: []\n\n\nExample 3:\n\nInput: l1 = [], l2 = [0]\nOutput: [0]\n\n\n \n\nConstraints:\n\nThe number of nodes in both lists is in the range [0, 50].\n-100 <= Node.val <= 100\nBoth l1 and l2 are sorted in non-decreasing order."},{"index":"22","url":"https://leetcode.com/problems/generate-parentheses","title":"Generate Parentheses","difficulty":"Medium","description":"Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\n\n \n\nExample 1:\n\nInput: n = 3\nOutput: [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n\n\nExample 2:\n\nInput: n = 1\nOutput: [\"()\"]\n\n\n \n\nConstraints:\n\n1 <= n <= 8"},{"index":"23","url":"https://leetcode.com/problems/merge-k-sorted-lists","title":"Merge k Sorted Lists","difficulty":"Hard","description":"You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.\n\nMerge all the linked-lists into one sorted linked-list and return it.\n\n \n\nExample 1:\n\nInput: lists = [[1,4,5],[1,3,4],[2,6]]\nOutput: [1,1,2,3,4,4,5,6]\nExplanation: The linked-lists are:\n[\n  1->4->5,\n  1->3->4,\n  2->6\n]\nmerging them into one sorted list:\n1->1->2->3->4->4->5->6\n\n\nExample 2:\n\nInput: lists = []\nOutput: []\n\n\nExample 3:\n\nInput: lists = [[]]\nOutput: []\n\n\n \n\nConstraints:\n\nk == lists.length\n0 <= k <= 10^4\n0 <= lists[i].length <= 500\n-10^4 <= lists[i][j] <= 10^4\nlists[i] is sorted in ascending order.\nThe sum of lists[i].length won't exceed 10^4."},{"index":"24","url":"https://leetcode.com/problems/swap-nodes-in-pairs","title":"Swap Nodes in Pairs","difficulty":"Medium","description":"Given a linked list, swap every two adjacent nodes and return its head.\n\nYou may not modify the values in the list's nodes. Only nodes itself may be changed.\n\n \n\nExample 1:\n\nInput: head = [1,2,3,4]\nOutput: [2,1,4,3]\n\n\nExample 2:\n\nInput: head = []\nOutput: []\n\n\nExample 3:\n\nInput: head = [1]\nOutput: [1]\n\n\n \n\nConstraints:\n\nThe number of nodes in the list is in the range [0, 100].\n0 <= Node.val <= 100"},{"index":"25","url":"https://leetcode.com/problems/reverse-nodes-in-k-group","title":"Reverse Nodes in k-Group","difficulty":"Hard","description":"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\n\nk is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is.\n\nFollow up:\n\nCould you solve the problem in O(1) extra memory space?\nYou may not alter the values in the list's nodes, only nodes itself may be changed.\n\n \n\nExample 1:\n\nInput: head = [1,2,3,4,5], k = 2\nOutput: [2,1,4,3,5]\n\n\nExample 2:\n\nInput: head = [1,2,3,4,5], k = 3\nOutput: [3,2,1,4,5]\n\n\nExample 3:\n\nInput: head = [1,2,3,4,5], k = 1\nOutput: [1,2,3,4,5]\n\n\nExample 4:\n\nInput: head = [1], k = 1\nOutput: [1]\n\n\n \n\nConstraints:\n\nThe number of nodes in the list is in the range sz.\n1 <= sz <= 5000\n0 <= Node.val <= 1000\n1 <= k <= sz"},{"index":"26","url":"https://leetcode.com/problems/remove-duplicates-from-sorted-array","title":"Remove Duplicates from Sorted Array","difficulty":"Easy","description":"Given a sorted array nums, remove the duplicates in-place such that each element appears only once and returns the new length.\n\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\n\nClarification:\n\nConfused why the returned value is an integer but your answer is an array?\n\nNote that the input array is passed in by reference, which means a modification to the input array will be known to the caller as well.\n\nInternally you can think of this:\n\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}\n\n \n\nExample 1:\n\nInput: nums = [1,1,2]\nOutput: 2, nums = [1,2]\nExplanation: Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the returned length.\n\n\nExample 2:\n\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\nOutput: 5, nums = [0,1,2,3,4]\nExplanation: Your function should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively. It doesn't matter what values are set beyond the returned length.\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 3 * 104\n-104 <= nums[i] <= 104\nnums is sorted in ascending order."},{"index":"27","url":"https://leetcode.com/problems/remove-element","title":"Remove Element","difficulty":"Easy","description":"Given an array nums and a value val, remove all instances of that value in-place and return the new length.\n\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\n\nThe order of elements can be changed. It doesn't matter what you leave beyond the new length.\n\nClarification:\n\nConfused why the returned value is an integer but your answer is an array?\n\nNote that the input array is passed in by reference, which means a modification to the input array will be known to the caller as well.\n\nInternally you can think of this:\n\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeElement(nums, val);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}\n\n \n\nExample 1:\n\nInput: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2]\nExplanation: Your function should return length = 2, with the first two elements of nums being 2.\nIt doesn't matter what you leave beyond the returned length. For example if you return 2 with nums = [2,2,3,3] or nums = [2,3,0,0], your answer will be accepted.\n\n\nExample 2:\n\nInput: nums = [0,1,2,2,3,0,4,2], val = 2\nOutput: 5, nums = [0,1,4,0,3]\nExplanation: Your function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4. Note that the order of those five elements can be arbitrary. It doesn't matter what values are set beyond the returned length.\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 100\n0 <= nums[i] <= 50\n0 <= val <= 100"},{"index":"28","url":"https://leetcode.com/problems/implement-strstr","title":"Implement strStr()","difficulty":"Easy","description":"Implement strStr().\n\nReturn the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\n\nClarification:\n\nWhat should we return when needle is an empty string? This is a great question to ask during an interview.\n\nFor the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().\n\n \n\nExample 1:\n\nInput: haystack = \"hello\", needle = \"ll\"\nOutput: 2\n\n\nExample 2:\n\nInput: haystack = \"aaaaa\", needle = \"bba\"\nOutput: -1\n\n\nExample 3:\n\nInput: haystack = \"\", needle = \"\"\nOutput: 0\n\n\n \n\nConstraints:\n\n0 <= haystack.length, needle.length <= 5 * 104\nhaystack and needle consist of only lower-case English characters."},{"index":"29","url":"https://leetcode.com/problems/divide-two-integers","title":"Divide Two Integers","difficulty":"Medium","description":"Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.\n\nReturn the quotient after dividing dividend by divisor.\n\nThe integer division should truncate toward zero, which means losing its fractional part. For example, truncate(8.345) = 8 and truncate(-2.7335) = -2.\n\nNote:\n\nAssume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For this problem, assume that your function returns 231 − 1 when the division result overflows.\n\n \n\nExample 1:\n\nInput: dividend = 10, divisor = 3\nOutput: 3\nExplanation: 10/3 = truncate(3.33333..) = 3.\n\n\nExample 2:\n\nInput: dividend = 7, divisor = -3\nOutput: -2\nExplanation: 7/-3 = truncate(-2.33333..) = -2.\n\n\nExample 3:\n\nInput: dividend = 0, divisor = 1\nOutput: 0\n\n\nExample 4:\n\nInput: dividend = 1, divisor = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n-231 <= dividend, divisor <= 231 - 1\ndivisor != 0"},{"index":"30","url":"https://leetcode.com/problems/substring-with-concatenation-of-all-words","title":"Substring with Concatenation of All Words","difficulty":"Hard","description":"You are given a string s and an array of strings words of the same length. Return all starting indices of substring(s) in s that is a concatenation of each word in words exactly once, in any order, and without any intervening characters.\n\nYou can return the answer in any order.\n\n \n\nExample 1:\n\nInput: s = \"barfoothefoobarman\", words = [\"foo\",\"bar\"]\nOutput: [0,9]\nExplanation: Substrings starting at index 0 and 9 are \"barfoo\" and \"foobar\" respectively.\nThe output order does not matter, returning [9,0] is fine too.\n\n\nExample 2:\n\nInput: s = \"wordgoodgoodgoodbestword\", words = [\"word\",\"good\",\"best\",\"word\"]\nOutput: []\n\n\nExample 3:\n\nInput: s = \"barfoofoobarthefoobarman\", words = [\"bar\",\"foo\",\"the\"]\nOutput: [6,9,12]\n\n\n \n\nConstraints:\n\n1 <= s.length <= 104\ns consists of lower-case English letters.\n1 <= words.length <= 5000\n1 <= words[i].length <= 30\nwords[i] consists of lower-case English letters."},{"index":"31","url":"https://leetcode.com/problems/next-permutation","title":"Next Permutation","difficulty":"Medium","description":"Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\n\nIf such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order).\n\nThe replacement must be in place and use only constant extra memory.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3]\nOutput: [1,3,2]\n\n\nExample 2:\n\nInput: nums = [3,2,1]\nOutput: [1,2,3]\n\n\nExample 3:\n\nInput: nums = [1,1,5]\nOutput: [1,5,1]\n\n\nExample 4:\n\nInput: nums = [1]\nOutput: [1]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n0 <= nums[i] <= 100"},{"index":"32","url":"https://leetcode.com/problems/longest-valid-parentheses","title":"Longest Valid Parentheses","difficulty":"Hard","description":"Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.\n\n \n\nExample 1:\n\nInput: s = \"(()\"\nOutput: 2\nExplanation: The longest valid parentheses substring is \"()\".\n\n\nExample 2:\n\nInput: s = \")()())\"\nOutput: 4\nExplanation: The longest valid parentheses substring is \"()()\".\n\n\nExample 3:\n\nInput: s = \"\"\nOutput: 0\n\n\n \n\nConstraints:\n\n0 <= s.length <= 3 * 104\ns[i] is '(', or ')'."},{"index":"33","url":"https://leetcode.com/problems/search-in-rotated-sorted-array","title":"Search in Rotated Sorted Array","difficulty":"Medium","description":"You are given an integer array nums sorted in ascending order, and an integer target.\n\nSuppose that nums is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\n\nIf target is found in the array return its index, otherwise, return -1.\n\n \n\nExample 1:\n\nInput: nums = [4,5,6,7,0,1,2], target = 0\nOutput: 4\n\n\nExample 2:\n\nInput: nums = [4,5,6,7,0,1,2], target = 3\nOutput: -1\n\n\nExample 3:\n\nInput: nums = [1], target = 0\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 5000\n-10^4 <= nums[i] <= 10^4\nAll values of nums are unique.\nnums is guranteed to be rotated at some pivot.\n-10^4 <= target <= 10^4"},{"index":"34","url":"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array","title":"Find First and Last Position of Element in Sorted Array","difficulty":"Medium","description":"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.\n\nIf target is not found in the array, return [-1, -1].\n\nFollow up: Could you write an algorithm with O(log n) runtime complexity?\n\n \n\nExample 1:\n\nInput: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\n\n\nExample 2:\n\nInput: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n\n\nExample 3:\n\nInput: nums = [], target = 0\nOutput: [-1,-1]\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 105\n-109 <= nums[i] <= 109\nnums is a non-decreasing array.\n-109 <= target <= 109"},{"index":"35","url":"https://leetcode.com/problems/search-insert-position","title":"Search Insert Position","difficulty":"Easy","description":"Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\n\n \n\nExample 1:\n\nInput: nums = [1,3,5,6], target = 5\nOutput: 2\n\n\nExample 2:\n\nInput: nums = [1,3,5,6], target = 2\nOutput: 1\n\n\nExample 3:\n\nInput: nums = [1,3,5,6], target = 7\nOutput: 4\n\n\nExample 4:\n\nInput: nums = [1,3,5,6], target = 0\nOutput: 0\n\n\nExample 5:\n\nInput: nums = [1], target = 0\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 104\n-104 <= nums[i] <= 104\nnums contains distinct values sorted in ascending order.\n-104 <= target <= 104"},{"index":"36","url":"https://leetcode.com/problems/valid-sudoku","title":"Valid Sudoku","difficulty":"Medium","description":"Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:\n\nEach row must contain the digits 1-9 without repetition.\nEach column must contain the digits 1-9 without repetition.\nEach of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.\n\nNote:\n\nA Sudoku board (partially filled) could be valid but is not necessarily solvable.\nOnly the filled cells need to be validated according to the mentioned rules.\n\n \n\nExample 1:\n\nInput: board = \n[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\nOutput: true\n\n\nExample 2:\n\nInput: board = \n[[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\nOutput: false\nExplanation: Same as Example 1, except with the 5 in the top left corner being modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\n\n\n \n\nConstraints:\n\nboard.length == 9\nboard[i].length == 9\nboard[i][j] is a digit or '.'."},{"index":"37","url":"https://leetcode.com/problems/sudoku-solver","title":"Sudoku Solver","difficulty":"Hard","description":"Write a program to solve a Sudoku puzzle by filling the empty cells.\n\nA sudoku solution must satisfy all of the following rules:\n\nEach of the digits 1-9 must occur exactly once in each row.\nEach of the digits 1-9 must occur exactly once in each column.\nEach of the digits 1-9 must occur exactly once in each of the 9 3x3 sub-boxes of the grid.\n\nThe '.' character indicates empty cells.\n\n \n\nExample 1:\n\nInput: board = [[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\nOutput: [[\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],[\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],[\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],[\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],[\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],[\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],[\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],[\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],[\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]]\nExplanation: The input board is shown above and the only valid solution is shown below:\n\n\n\n\n \n\nConstraints:\n\nboard.length == 9\nboard[i].length == 9\nboard[i][j] is a digit or '.'.\nIt is guaranteed that the input board has only one solution."},{"index":"38","url":"https://leetcode.com/problems/count-and-say","title":"Count and Say","difficulty":"Easy","description":"The count-and-say sequence is a sequence of digit strings defined by the recursive formula:\n\ncountAndSay(1) = \"1\"\ncountAndSay(n) is the way you would \"say\" the digit string from countAndSay(n-1), which is then converted into a different digit string.\n\nTo determine how you \"say\" a digit string, split it into the minimal number of groups so that each group is a contiguous section all of the same character. Then for each group, say the number of characters, then say the character. To convert the saying into a digit string, replace the counts with a number and concatenate every saying.\n\nFor example, the saying and conversion for digit string \"3322251\":\n\nGiven a positive integer n, return the nth term of the count-and-say sequence.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: \"1\"\nExplanation: This is the base case.\n\n\nExample 2:\n\nInput: n = 4\nOutput: \"1211\"\nExplanation:\ncountAndSay(1) = \"1\"\ncountAndSay(2) = say \"1\" = one 1 = \"11\"\ncountAndSay(3) = say \"11\" = two 1's = \"21\"\ncountAndSay(4) = say \"21\" = one 2 + one 1 = \"12\" + \"11\" = \"1211\"\n\n\n \n\nConstraints:\n\n1 <= n <= 30"},{"index":"39","url":"https://leetcode.com/problems/combination-sum","title":"Combination Sum","difficulty":"Medium","description":"Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.\n\nThe same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different.\n\nIt is guaranteed that the number of unique combinations that sum up to target is less than 150 combinations for the given input.\n\n \n\nExample 1:\n\nInput: candidates = [2,3,6,7], target = 7\nOutput: [[2,2,3],[7]]\nExplanation:\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n\n\nExample 2:\n\nInput: candidates = [2,3,5], target = 8\nOutput: [[2,2,2,2],[2,3,3],[3,5]]\n\n\nExample 3:\n\nInput: candidates = [2], target = 1\nOutput: []\n\n\nExample 4:\n\nInput: candidates = [1], target = 1\nOutput: [[1]]\n\n\nExample 5:\n\nInput: candidates = [1], target = 2\nOutput: [[1,1]]\n\n\n \n\nConstraints:\n\n1 <= candidates.length <= 30\n1 <= candidates[i] <= 200\nAll elements of candidates are distinct.\n1 <= target <= 500"},{"index":"40","url":"https://leetcode.com/problems/combination-sum-ii","title":"Combination Sum II","difficulty":"Medium","description":"Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\n\nEach number in candidates may only be used once in the combination.\n\nNote: The solution set must not contain duplicate combinations.\n\n \n\nExample 1:\n\nInput: candidates = [10,1,2,7,6,1,5], target = 8\nOutput: \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n\n\nExample 2:\n\nInput: candidates = [2,5,2,1,2], target = 5\nOutput: \n[\n[1,2,2],\n[5]\n]\n\n\n \n\nConstraints:\n\n1 <= candidates.length <= 100\n1 <= candidates[i] <= 50\n1 <= target <= 30"},{"index":"41","url":"https://leetcode.com/problems/first-missing-positive","title":"First Missing Positive","difficulty":"Hard","description":"Given an unsorted integer array nums, find the smallest missing positive integer.\n\nFollow up: Could you implement an algorithm that runs in O(n) time and uses constant extra space.?\n\n \n\nExample 1:\n\nInput: nums = [1,2,0]\nOutput: 3\n\n\nExample 2:\n\nInput: nums = [3,4,-1,1]\nOutput: 2\n\n\nExample 3:\n\nInput: nums = [7,8,9,11,12]\nOutput: 1\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 300\n-231 <= nums[i] <= 231 - 1"},{"index":"42","url":"https://leetcode.com/problems/trapping-rain-water","title":"Trapping Rain Water","difficulty":"Hard","description":"Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.\n\n \n\nExample 1:\n\nInput: height = [0,1,0,2,1,0,1,3,2,1,2,1]\nOutput: 6\nExplanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n\n\nExample 2:\n\nInput: height = [4,2,0,3,2,5]\nOutput: 9\n\n\n \n\nConstraints:\n\nn == height.length\n0 <= n <= 3 * 104\n0 <= height[i] <= 105"},{"index":"43","url":"https://leetcode.com/problems/multiply-strings","title":"Multiply Strings","difficulty":"Medium","description":"Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.\n\nNote: You must not use any built-in BigInteger library or convert the inputs to integer directly.\n\n \n\nExample 1:\n\nInput: num1 = \"2\", num2 = \"3\"\nOutput: \"6\"\n\n\nExample 2:\n\nInput: num1 = \"123\", num2 = \"456\"\nOutput: \"56088\"\n\n\n \n\nConstraints:\n\n1 <= num1.length, num2.length <= 200\nnum1 and num2 consist of digits only.\nBoth num1 and num2 do not contain any leading zero, except the number 0 itself."},{"index":"44","url":"https://leetcode.com/problems/wildcard-matching","title":"Wildcard Matching","difficulty":"Hard","description":"Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:\n\n'?' Matches any single character.\n'*' Matches any sequence of characters (including the empty sequence).\n\nThe matching should cover the entire input string (not partial).\n\n \n\nExample 1:\n\nInput: s = \"aa\", p = \"a\"\nOutput: false\nExplanation: \"a\" does not match the entire string \"aa\".\n\n\nExample 2:\n\nInput: s = \"aa\", p = \"*\"\nOutput: true\nExplanation: '*' matches any sequence.\n\n\nExample 3:\n\nInput: s = \"cb\", p = \"?a\"\nOutput: false\nExplanation: '?' matches 'c', but the second letter is 'a', which does not match 'b'.\n\n\nExample 4:\n\nInput: s = \"adceb\", p = \"*a*b\"\nOutput: true\nExplanation: The first '*' matches the empty sequence, while the second '*' matches the substring \"dce\".\n\n\nExample 5:\n\nInput: s = \"acdcb\", p = \"a*c?b\"\nOutput: false\n\n\n \n\nConstraints:\n\n0 <= s.length, p.length <= 2000\ns contains only lowercase English letters.\np contains only lowercase English letters, '?' or '*'."},{"index":"45","url":"https://leetcode.com/problems/jump-game-ii","title":"Jump Game II","difficulty":"Hard","description":"Given an array of non-negative integers nums, you are initially positioned at the first index of the array.\n\nEach element in the array represents your maximum jump length at that position.\n\nYour goal is to reach the last index in the minimum number of jumps.\n\nYou can assume that you can always reach the last index.\n\n \n\nExample 1:\n\nInput: nums = [2,3,1,1,4]\nOutput: 2\nExplanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\n\nExample 2:\n\nInput: nums = [2,3,0,1,4]\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 3 * 104\n0 <= nums[i] <= 105"},{"index":"46","url":"https://leetcode.com/problems/permutations","title":"Permutations","difficulty":"Medium","description":"Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3]\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n\n\nExample 2:\n\nInput: nums = [0,1]\nOutput: [[0,1],[1,0]]\n\n\nExample 3:\n\nInput: nums = [1]\nOutput: [[1]]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 6\n-10 <= nums[i] <= 10\nAll the integers of nums are unique."},{"index":"47","url":"https://leetcode.com/problems/permutations-ii","title":"Permutations II","difficulty":"Medium","description":"Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.\n\n \n\nExample 1:\n\nInput: nums = [1,1,2]\nOutput:\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n\n\nExample 2:\n\nInput: nums = [1,2,3]\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 8\n-10 <= nums[i] <= 10"},{"index":"48","url":"https://leetcode.com/problems/rotate-image","title":"Rotate Image","difficulty":"Medium","description":"You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\n\nYou have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.\n\n \n\nExample 1:\n\nInput: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [[7,4,1],[8,5,2],[9,6,3]]\n\n\nExample 2:\n\nInput: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]\nOutput: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]\n\n\nExample 3:\n\nInput: matrix = [[1]]\nOutput: [[1]]\n\n\nExample 4:\n\nInput: matrix = [[1,2],[3,4]]\nOutput: [[3,1],[4,2]]\n\n\n \n\nConstraints:\n\nmatrix.length == n\nmatrix[i].length == n\n1 <= n <= 20\n-1000 <= matrix[i][j] <= 1000"},{"index":"49","url":"https://leetcode.com/problems/group-anagrams","title":"Group Anagrams","difficulty":"Medium","description":"Given an array of strings strs, group the anagrams together. You can return the answer in any order.\n\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n\n \n\nExample 1:\n\nInput: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\nOutput: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n\n\nExample 2:\n\nInput: strs = [\"\"]\nOutput: [[\"\"]]\n\n\nExample 3:\n\nInput: strs = [\"a\"]\nOutput: [[\"a\"]]\n\n\n \n\nConstraints:\n\n1 <= strs.length <= 104\n0 <= strs[i].length <= 100\nstrs[i] consists of lower-case English letters."},{"index":"50","url":"https://leetcode.com/problems/powx-n","title":"Pow(x, n)","difficulty":"Medium","description":"Implement pow(x, n), which calculates x raised to the power n (i.e. xn).\n\n \n\nExample 1:\n\nInput: x = 2.00000, n = 10\nOutput: 1024.00000\n\n\nExample 2:\n\nInput: x = 2.10000, n = 3\nOutput: 9.26100\n\n\nExample 3:\n\nInput: x = 2.00000, n = -2\nOutput: 0.25000\nExplanation: 2-2 = 1/22 = 1/4 = 0.25\n\n\n \n\nConstraints:\n\n-100.0 < x < 100.0\n-231 <= n <= 231-1\n-104 <= xn <= 104"},{"index":"51","url":"https://leetcode.com/problems/n-queens","title":"N-Queens","difficulty":"Hard","description":"The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\n\nGiven an integer n, return all distinct solutions to the n-queens puzzle.\n\nEach solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively.\n\n \n\nExample 1:\n\nInput: n = 4\nOutput: [[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]]\nExplanation: There exist two distinct solutions to the 4-queens puzzle as shown above\n\n\nExample 2:\n\nInput: n = 1\nOutput: [[\"Q\"]]\n\n\n \n\nConstraints:\n\n1 <= n <= 9"},{"index":"52","url":"https://leetcode.com/problems/n-queens-ii","title":"N-Queens II","difficulty":"Hard","description":"The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\n\nGiven an integer n, return the number of distinct solutions to the n-queens puzzle.\n\n \n\nExample 1:\n\nInput: n = 4\nOutput: 2\nExplanation: There are two distinct solutions to the 4-queens puzzle as shown.\n\n\nExample 2:\n\nInput: n = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= n <= 9"},{"index":"53","url":"https://leetcode.com/problems/maximum-subarray","title":"Maximum Subarray","difficulty":"Easy","description":"Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.\n\nFollow up: If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.\n\n \n\nExample 1:\n\nInput: nums = [-2,1,-3,4,-1,2,1,-5,4]\nOutput: 6\nExplanation: [4,-1,2,1] has the largest sum = 6.\n\n\nExample 2:\n\nInput: nums = [1]\nOutput: 1\n\n\nExample 3:\n\nInput: nums = [0]\nOutput: 0\n\n\nExample 4:\n\nInput: nums = [-1]\nOutput: -1\n\n\nExample 5:\n\nInput: nums = [-2147483647]\nOutput: -2147483647\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 2 * 104\n-231 <= nums[i] <= 231 - 1"},{"index":"54","url":"https://leetcode.com/problems/spiral-matrix","title":"Spiral Matrix","difficulty":"Medium","description":"Given an m x n matrix, return all elements of the matrix in spiral order.\n\n \n\nExample 1:\n\nInput: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [1,2,3,6,9,8,7,4,5]\n\n\nExample 2:\n\nInput: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\nOutput: [1,2,3,4,8,12,11,10,9,5,6,7]\n\n\n \n\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 10\n-100 <= matrix[i][j] <= 100"},{"index":"55","url":"https://leetcode.com/problems/jump-game","title":"Jump Game","difficulty":"Medium","description":"Given an array of non-negative integers, you are initially positioned at the first index of the array.\n\nEach element in the array represents your maximum jump length at that position.\n\nDetermine if you are able to reach the last index.\n\n \n\nExample 1:\n\nInput: nums = [2,3,1,1,4]\nOutput: true\nExplanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\n\nExample 2:\n\nInput: nums = [3,2,1,0,4]\nOutput: false\nExplanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 3 * 10^4\n0 <= nums[i][j] <= 10^5"},{"index":"56","url":"https://leetcode.com/problems/merge-intervals","title":"Merge Intervals","difficulty":"Medium","description":"Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.\n\n \n\nExample 1:\n\nInput: intervals = [[1,3],[2,6],[8,10],[15,18]]\nOutput: [[1,6],[8,10],[15,18]]\nExplanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\n\n\nExample 2:\n\nInput: intervals = [[1,4],[4,5]]\nOutput: [[1,5]]\nExplanation: Intervals [1,4] and [4,5] are considered overlapping.\n\n\n \n\nConstraints:\n\n1 <= intervals.length <= 104\nintervals[i].length == 2\n0 <= starti <= endi <= 104"},{"index":"57","url":"https://leetcode.com/problems/insert-interval","title":"Insert Interval","difficulty":"Medium","description":"Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\n\nYou may assume that the intervals were initially sorted according to their start times.\n\n \n\nExample 1:\n\nInput: intervals = [[1,3],[6,9]], newInterval = [2,5]\nOutput: [[1,5],[6,9]]\n\n\nExample 2:\n\nInput: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\nOutput: [[1,2],[3,10],[12,16]]\nExplanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n\nExample 3:\n\nInput: intervals = [], newInterval = [5,7]\nOutput: [[5,7]]\n\n\nExample 4:\n\nInput: intervals = [[1,5]], newInterval = [2,3]\nOutput: [[1,5]]\n\n\nExample 5:\n\nInput: intervals = [[1,5]], newInterval = [2,7]\nOutput: [[1,7]]\n\n\n \n\nConstraints:\n\n0 <= intervals.length <= 104\nintervals[i].length == 2\n0 <= intervals[i][0] <= intervals[i][1] <= 105\nintervals is sorted by intervals[i][0] in ascending order.\nnewInterval.length == 2\n0 <= newInterval[0] <= newInterval[1] <= 105"},{"index":"58","url":"https://leetcode.com/problems/length-of-last-word","title":"Length of Last Word","difficulty":"Easy","description":"Given a string s consists of some words separated by spaces, return the length of the last word in the string. If the last word does not exist, return 0.\n\nA word is a maximal substring consisting of non-space characters only.\n\n \n\nExample 1:\n\nInput: s = \"Hello World\"\nOutput: 5\n\n\nExample 2:\n\nInput: s = \" \"\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= s.length <= 104\ns consists of only English letters and spaces ' '."},{"index":"59","url":"https://leetcode.com/problems/spiral-matrix-ii","title":"Spiral Matrix II","difficulty":"Medium","description":"Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.\n\n \n\nExample 1:\n\nInput: n = 3\nOutput: [[1,2,3],[8,9,4],[7,6,5]]\n\n\nExample 2:\n\nInput: n = 1\nOutput: [[1]]\n\n\n \n\nConstraints:\n\n1 <= n <= 20"},{"index":"60","url":"https://leetcode.com/problems/permutation-sequence","title":"Permutation Sequence","difficulty":"Hard","description":"The set [1, 2, 3, ..., n] contains a total of n! unique permutations.\n\nBy listing and labeling all of the permutations in order, we get the following sequence for n = 3:\n\n\"123\"\n\"132\"\n\"213\"\n\"231\"\n\"312\"\n\"321\"\n\nGiven n and k, return the kth permutation sequence.\n\n \n\nExample 1:\n\nInput: n = 3, k = 3\nOutput: \"213\"\n\n\nExample 2:\n\nInput: n = 4, k = 9\nOutput: \"2314\"\n\n\nExample 3:\n\nInput: n = 3, k = 1\nOutput: \"123\"\n\n\n \n\nConstraints:\n\n1 <= n <= 9\n1 <= k <= n!"},{"index":"61","url":"https://leetcode.com/problems/rotate-list","title":"Rotate List","difficulty":"Medium","description":"Given the head of a linked list, rotate the list to the right by k places.\n\n \n\nExample 1:\n\nInput: head = [1,2,3,4,5], k = 2\nOutput: [4,5,1,2,3]\n\n\nExample 2:\n\nInput: head = [0,1,2], k = 4\nOutput: [2,0,1]\n\n\n \n\nConstraints:\n\nThe number of nodes in the list is in the range [0, 500].\n-100 <= Node.val <= 100\n0 <= k <= 2 * 109"},{"index":"62","url":"https://leetcode.com/problems/unique-paths","title":"Unique Paths","difficulty":"Medium","description":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\n\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\n\nHow many possible unique paths are there?\n\n \n\nExample 1:\n\nInput: m = 3, n = 7\nOutput: 28\n\n\nExample 2:\n\nInput: m = 3, n = 2\nOutput: 3\nExplanation:\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -> Down -> Down\n2. Down -> Down -> Right\n3. Down -> Right -> Down\n\n\nExample 3:\n\nInput: m = 7, n = 3\nOutput: 28\n\n\nExample 4:\n\nInput: m = 3, n = 3\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= m, n <= 100\nIt's guaranteed that the answer will be less than or equal to 2 * 109."},{"index":"63","url":"https://leetcode.com/problems/unique-paths-ii","title":"Unique Paths II","difficulty":"Medium","description":"A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\n\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\n\nNow consider if some obstacles are added to the grids. How many unique paths would there be?\n\nAn obstacle and space is marked as 1 and 0 respectively in the grid.\n\n \n\nExample 1:\n\nInput: obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\nOutput: 2\nExplanation: There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -> Right -> Down -> Down\n2. Down -> Down -> Right -> Right\n\n\nExample 2:\n\nInput: obstacleGrid = [[0,1],[0,0]]\nOutput: 1\n\n\n \n\nConstraints:\n\nm == obstacleGrid.length\nn == obstacleGrid[i].length\n1 <= m, n <= 100\nobstacleGrid[i][j] is 0 or 1."},{"index":"64","url":"https://leetcode.com/problems/minimum-path-sum","title":"Minimum Path Sum","difficulty":"Medium","description":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.\n\nNote: You can only move either down or right at any point in time.\n\n \n\nExample 1:\n\nInput: grid = [[1,3,1],[1,5,1],[4,2,1]]\nOutput: 7\nExplanation: Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum.\n\n\nExample 2:\n\nInput: grid = [[1,2,3],[4,5,6]]\nOutput: 12\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 200\n0 <= grid[i][j] <= 100"},{"index":"65","url":"https://leetcode.com/problems/valid-number","title":"Valid Number","difficulty":"Hard","description":"Validate if a given string can be interpreted as a decimal number.\n\nSome examples:\n\"0\" => true\n\" 0.1 \" => true\n\"abc\" => false\n\"1 a\" => false\n\"2e10\" => true\n\" -90e3   \" => true\n\" 1e\" => false\n\"e3\" => false\n\" 6e-1\" => true\n\" 99e2.5 \" => false\n\"53.5e93\" => true\n\" --6 \" => false\n\"-+3\" => false\n\"95a54e53\" => false\n\nNote: It is intended for the problem statement to be ambiguous. It would be best if you gathered all requirements up front before implementing one. However, here is a list of characters that can be in a valid decimal number:\n\nNumbers 0-9\nExponent - \"e\"\nPositive/negative sign - \"+\"/\"-\"\nDecimal point - \".\"\n\nOf course, the context of these characters also matters in the input.\n\n \n\nExample 1:\n\nInput: s = \"0\"\nOutput: true\n\n\nExample 2:\n\nInput: s = \"3\"\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= s.length <= 20\ns consists of only English letters, digits, space ' ', plus '+', minus '-', or dot '.'."},{"index":"66","url":"https://leetcode.com/problems/plus-one","title":"Plus One","difficulty":"Easy","description":"Given a non-empty array of decimal digits representing a non-negative integer, increment one to the integer.\n\nThe digits are stored such that the most significant digit is at the head of the list, and each element in the array contains a single digit.\n\nYou may assume the integer does not contain any leading zero, except the number 0 itself.\n\n \n\nExample 1:\n\nInput: digits = [1,2,3]\nOutput: [1,2,4]\nExplanation: The array represents the integer 123.\n\n\nExample 2:\n\nInput: digits = [4,3,2,1]\nOutput: [4,3,2,2]\nExplanation: The array represents the integer 4321.\n\n\nExample 3:\n\nInput: digits = [0]\nOutput: [1]\n\n\n \n\nConstraints:\n\n1 <= digits.length <= 100\n0 <= digits[i] <= 9"},{"index":"67","url":"https://leetcode.com/problems/add-binary","title":"Add Binary","difficulty":"Easy","description":"Given two binary strings a and b, return their sum as a binary string.\n\n \n\nExample 1:\n\nInput: a = \"11\", b = \"1\"\nOutput: \"100\"\n\n\nExample 2:\n\nInput: a = \"1010\", b = \"1011\"\nOutput: \"10101\"\n\n\n \n\nConstraints:\n\n1 <= a.length, b.length <= 104\na and b consist only of '0' or '1' characters.\nEach string does not contain leading zeros except for the zero itself."},{"index":"68","url":"https://leetcode.com/problems/text-justification","title":"Text Justification","difficulty":"Hard","description":"Given an array of words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified.\n\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly maxWidth characters.\n\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\n\nFor the last line of text, it should be left justified and no extra space is inserted between words.\n\nNote:\n\nA word is defined as a character sequence consisting of non-space characters only.\nEach word's length is guaranteed to be greater than 0 and not exceed maxWidth.\nThe input array words contains at least one word.\n\n \n\nExample 1:\n\nInput: words = [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"], maxWidth = 16\nOutput:\n[\n   \"This    is    an\",\n   \"example  of text\",\n   \"justification.  \"\n]\n\nExample 2:\n\nInput: words = [\"What\",\"must\",\"be\",\"acknowledgment\",\"shall\",\"be\"], maxWidth = 16\nOutput:\n[\n  \"What   must   be\",\n  \"acknowledgment  \",\n  \"shall be        \"\n]\nExplanation: Note that the last line is \"shall be    \" instead of \"shall     be\", because the last line must be left-justified instead of fully-justified.\nNote that the second line is also left-justified becase it contains only one word.\n\nExample 3:\n\nInput: words = [\"Science\",\"is\",\"what\",\"we\",\"understand\",\"well\",\"enough\",\"to\",\"explain\",\"to\",\"a\",\"computer.\",\"Art\",\"is\",\"everything\",\"else\",\"we\",\"do\"], maxWidth = 20\nOutput:\n[\n  \"Science  is  what we\",\n  \"understand      well\",\n  \"enough to explain to\",\n  \"a  computer.  Art is\",\n  \"everything  else  we\",\n  \"do                  \"\n]\n\n \n\nConstraints:\n\n1 <= words.length <= 300\n1 <= words[i].length <= 20\nwords[i] consists of only English letters and symbols.\n1 <= maxWidth <= 100\nwords[i].length <= maxWidth"},{"index":"69","url":"https://leetcode.com/problems/sqrtx","title":"Sqrt(x)","difficulty":"Easy","description":"Given a non-negative integer x, compute and return the square root of x.\n\nSince the return type is an integer, the decimal digits are truncated, and only the integer part of the result is returned.\n\n \n\nExample 1:\n\nInput: x = 4\nOutput: 2\n\n\nExample 2:\n\nInput: x = 8\nOutput: 2\nExplanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.\n\n \n\nConstraints:\n\n0 <= x <= 231 - 1"},{"index":"70","url":"https://leetcode.com/problems/climbing-stairs","title":"Climbing Stairs","difficulty":"Easy","description":"You are climbing a staircase. It takes n steps to reach the top.\n\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\n\n \n\nExample 1:\n\nInput: n = 2\nOutput: 2\nExplanation: There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\n\n\nExample 2:\n\nInput: n = 3\nOutput: 3\nExplanation: There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step\n\n\n \n\nConstraints:\n\n1 <= n <= 45"},{"index":"71","url":"https://leetcode.com/problems/simplify-path","title":"Simplify Path","difficulty":"Medium","description":"Given an absolute path for a file (Unix-style), simplify it. Or in other words, convert it to the canonical path.\n\nIn a UNIX-style file system, a period '.' refers to the current directory. Furthermore, a double period '..' moves the directory up a level.\n\nNote that the returned canonical path must always begin with a slash '/', and there must be only a single slash '/' between two directory names. The last directory name (if it exists) must not end with a trailing '/'. Also, the canonical path must be the shortest string representing the absolute path.\n\n \n\nExample 1:\n\nInput: path = \"/home/\"\nOutput: \"/home\"\nExplanation: Note that there is no trailing slash after the last directory name.\n\n\nExample 2:\n\nInput: path = \"/../\"\nOutput: \"/\"\nExplanation: Going one level up from the root directory is a no-op, as the root level is the highest level you can go.\n\n\nExample 3:\n\nInput: path = \"/home//foo/\"\nOutput: \"/home/foo\"\nExplanation: In the canonical path, multiple consecutive slashes are replaced by a single one.\n\n\nExample 4:\n\nInput: path = \"/a/./b/../../c/\"\nOutput: \"/c\"\n\n\n \n\nConstraints:\n\n1 <= path.length <= 3000\npath consists of English letters, digits, period '.', slash '/' or '_'.\npath is a valid Unix path."},{"index":"72","url":"https://leetcode.com/problems/edit-distance","title":"Edit Distance","difficulty":"Hard","description":"Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.\n\nYou have the following three operations permitted on a word:\n\nInsert a character\nDelete a character\nReplace a character\n\n \n\nExample 1:\n\nInput: word1 = \"horse\", word2 = \"ros\"\nOutput: 3\nExplanation: \nhorse -> rorse (replace 'h' with 'r')\nrorse -> rose (remove 'r')\nrose -> ros (remove 'e')\n\n\nExample 2:\n\nInput: word1 = \"intention\", word2 = \"execution\"\nOutput: 5\nExplanation: \nintention -> inention (remove 't')\ninention -> enention (replace 'i' with 'e')\nenention -> exention (replace 'n' with 'x')\nexention -> exection (replace 'n' with 'c')\nexection -> execution (insert 'u')\n\n\n \n\nConstraints:\n\n0 <= word1.length, word2.length <= 500\nword1 and word2 consist of lowercase English letters."},{"index":"73","url":"https://leetcode.com/problems/set-matrix-zeroes","title":"Set Matrix Zeroes","difficulty":"Medium","description":"Given an m x n matrix. If an element is 0, set its entire row and column to 0. Do it in-place.\n\nFollow up:\n\nA straight forward solution using O(mn) space is probably a bad idea.\nA simple improvement uses O(m + n) space, but still not the best solution.\nCould you devise a constant space solution?\n\n \n\nExample 1:\n\nInput: matrix = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: [[1,0,1],[0,0,0],[1,0,1]]\n\n\nExample 2:\n\nInput: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\nOutput: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n\n\n \n\nConstraints:\n\nm == matrix.length\nn == matrix[0].length\n1 <= m, n <= 200\n-231 <= matrix[i][j] <= 231 - 1"},{"index":"74","url":"https://leetcode.com/problems/search-a-2d-matrix","title":"Search a 2D Matrix","difficulty":"Medium","description":"Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\n\nIntegers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row.\n\n \n\nExample 1:\n\nInput: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,50]], target = 3\nOutput: true\n\n\nExample 2:\n\nInput: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,50]], target = 13\nOutput: false\n\n\nExample 3:\n\nInput: matrix = [], target = 0\nOutput: false\n\n\n \n\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n0 <= m, n <= 100\n-104 <= matrix[i][j], target <= 104"},{"index":"75","url":"https://leetcode.com/problems/sort-colors","title":"Sort Colors","difficulty":"Medium","description":"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\n\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\n\nFollow up:\n\nCould you solve this problem without using the library's sort function?\nCould you come up with a one-pass algorithm using only O(1) constant space?\n\n \n\nExample 1:\n\nInput: nums = [2,0,2,1,1,0]\nOutput: [0,0,1,1,2,2]\n\n\nExample 2:\n\nInput: nums = [2,0,1]\nOutput: [0,1,2]\n\n\nExample 3:\n\nInput: nums = [0]\nOutput: [0]\n\n\nExample 4:\n\nInput: nums = [1]\nOutput: [1]\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 300\nnums[i] is 0, 1, or 2."},{"index":"76","url":"https://leetcode.com/problems/minimum-window-substring","title":"Minimum Window Substring","difficulty":"Hard","description":"Given two strings s and t, return the minimum window in s which will contain all the characters in t. If there is no such window in s that covers all characters in t, return the empty string \"\".\n\nNote that If there is such a window, it is guaranteed that there will always be only one unique minimum window in s.\n\n \n\nExample 1:\n\nInput: s = \"ADOBECODEBANC\", t = \"ABC\"\nOutput: \"BANC\"\n\n\nExample 2:\n\nInput: s = \"a\", t = \"a\"\nOutput: \"a\"\n\n\n \n\nConstraints:\n\n1 <= s.length, t.length <= 105\ns and t consist of English letters.\n\n \n\nFollow up: Could you find an algorithm that runs in O(n) time?"},{"index":"77","url":"https://leetcode.com/problems/combinations","title":"Combinations","difficulty":"Medium","description":"Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.\n\nYou may return the answer in any order.\n\n \n\nExample 1:\n\nInput: n = 4, k = 2\nOutput:\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]\n\n\nExample 2:\n\nInput: n = 1, k = 1\nOutput: [[1]]\n\n\n \n\nConstraints:\n\n1 <= n <= 20\n1 <= k <= n"},{"index":"78","url":"https://leetcode.com/problems/subsets","title":"Subsets","difficulty":"Medium","description":"Given an integer array nums, return all possible subsets (the power set).\n\nThe solution set must not contain duplicate subsets.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3]\nOutput: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n\n\nExample 2:\n\nInput: nums = [0]\nOutput: [[],[0]]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10\n-10 <= nums[i] <= 10"},{"index":"79","url":"https://leetcode.com/problems/word-search","title":"Word Search","difficulty":"Medium","description":"Given an m x n board and a word, find if the word exists in the grid.\n\nThe word can be constructed from letters of sequentially adjacent cells, where \"adjacent\" cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.\n\n \n\nExample 1:\n\nInput: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\nOutput: true\n\n\nExample 2:\n\nInput: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\nOutput: true\n\n\nExample 3:\n\nInput: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"\nOutput: false\n\n\n \n\nConstraints:\n\nm == board.length\nn = board[i].length\n1 <= m, n <= 200\n1 <= word.length <= 103\nboard and word consists only of lowercase and uppercase English letters."},{"index":"80","url":"https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii","title":"Remove Duplicates from Sorted Array II","difficulty":"Medium","description":"Given a sorted array nums, remove the duplicates in-place such that duplicates appeared at most twice and return the new length.\n\nDo not allocate extra space for another array; you must do this by modifying the input array in-place with O(1) extra memory.\n\nClarification:\n\nConfused why the returned value is an integer, but your answer is an array?\n\nNote that the input array is passed in by reference, which means a modification to the input array will be known to the caller.\n\nInternally you can think of this:\n\n// nums is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to nums in your function would be known by the caller.\n// using the length returned by your function, it prints the first len elements.\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}\n\n\n \n\nExample 1:\n\nInput: nums = [1,1,1,2,2,3]\nOutput: 5, nums = [1,1,2,2,3]\nExplanation: Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively. It doesn't matter what you leave beyond the returned length.\n\n\nExample 2:\n\nInput: nums = [0,0,1,1,1,1,2,3,3]\nOutput: 7, nums = [0,0,1,1,2,3,3]\nExplanation: Your function should return length = 7, with the first seven elements of nums being modified to 0, 0, 1, 1, 2, 3 and 3 respectively. It doesn't matter what values are set beyond the returned length.\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 3 * 104\n-104 <= nums[i] <= 104\nnums is sorted in ascending order."},{"index":"81","url":"https://leetcode.com/problems/search-in-rotated-sorted-array-ii","title":"Search in Rotated Sorted Array II","difficulty":"Medium","description":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n\n(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).\n\nYou are given a target value to search. If found in the array return true, otherwise return false.\n\nExample 1:\n\nInput: nums = [2,5,6,0,0,1,2], target = 0\nOutput: true\n\n\nExample 2:\n\nInput: nums = [2,5,6,0,0,1,2], target = 3\nOutput: false\n\nFollow up:\n\nThis is a follow up problem to Search in Rotated Sorted Array, where nums may contain duplicates.\nWould this affect the run-time complexity? How and why?"},{"index":"82","url":"https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii","title":"Remove Duplicates from Sorted List II","difficulty":"Medium","description":"Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.\n\nReturn the linked list sorted as well.\n\nExample 1:\n\nInput: 1->2->3->3->4->4->5\nOutput: 1->2->5\n\n\nExample 2:\n\nInput: 1->1->1->2->3\nOutput: 2->3\n"},{"index":"83","url":"https://leetcode.com/problems/remove-duplicates-from-sorted-list","title":"Remove Duplicates from Sorted List","difficulty":"Easy","description":"Given a sorted linked list, delete all duplicates such that each element appear only once.\n\nExample 1:\n\nInput: 1->1->2\nOutput: 1->2\n\n\nExample 2:\n\nInput: 1->1->2->3->3\nOutput: 1->2->3\n"},{"index":"84","url":"https://leetcode.com/problems/largest-rectangle-in-histogram","title":"Largest Rectangle in Histogram","difficulty":"Hard","description":"Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\n\n \n\n\nAbove is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].\n\n \n\n\nThe largest rectangle is shown in the shaded area, which has area = 10 unit.\n\n \n\nExample:\n\nInput: [2,1,5,6,2,3]\nOutput: 10\n"},{"index":"85","url":"https://leetcode.com/problems/maximal-rectangle","title":"Maximal Rectangle","difficulty":"Hard","description":"Given a rows x cols binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\n\n \n\nExample 1:\n\nInput: matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\nOutput: 6\nExplanation: The maximal rectangle is shown in the above picture.\n\n\nExample 2:\n\nInput: matrix = []\nOutput: 0\n\n\nExample 3:\n\nInput: matrix = [[\"0\"]]\nOutput: 0\n\n\nExample 4:\n\nInput: matrix = [[\"1\"]]\nOutput: 1\n\n\nExample 5:\n\nInput: matrix = [[\"0\",\"0\"]]\nOutput: 0\n\n\n \n\nConstraints:\n\nrows == matrix.length\ncols == matrix.length\n0 <= row, cols <= 200\nmatrix[i][j] is '0' or '1'."},{"index":"86","url":"https://leetcode.com/problems/partition-list","title":"Partition List","difficulty":"Medium","description":"Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.\n\nYou should preserve the original relative order of the nodes in each of the two partitions.\n\nExample:\n\nInput: head = 1->4->3->2->5->2, x = 3\nOutput: 1->2->2->4->3->5\n"},{"index":"87","url":"https://leetcode.com/problems/scramble-string","title":"Scramble String","difficulty":"Hard","description":"We can scramble a string s to get a string t using the following algorithm:\n\nIf the length of the string is 1, stop.\nIf the length of the string is > 1, do the following:\nSplit the string into two non-empty substrings at a random index, i.e., if the string is s, divide it to x and y where s = x + y.\nRandomly decide to swap the two substrings or to keep them in the same order. i.e., after this step, s may become s = x + y or s = y + x.\nApply step 1 recursively on each of the two substrings x and y.\n\nGiven two strings s1 and s2 of the same length, return true if s2 is a scrambled string of s1, otherwise, return false.\n\n \n\nExample 1:\n\nInput: s1 = \"great\", s2 = \"rgeat\"\nOutput: true\nExplanation: One possible scenario applied on s1 is:\n\"great\" --> \"gr/eat\" // divide at random index.\n\"gr/eat\" --> \"gr/eat\" // random decision is not to swap the two substrings and keep them in order.\n\"gr/eat\" --> \"g/r / e/at\" // apply the same algorithm recursively on both substrings. divide at ranom index each of them.\n\"g/r / e/at\" --> \"r/g / e/at\" // random decision was to swap the first substring and to keep the second substring in the same order.\n\"r/g / e/at\" --> \"r/g / e/ a/t\" // again apply the algorithm recursively, divide \"at\" to \"a/t\".\n\"r/g / e/ a/t\" --> \"r/g / e/ a/t\" // random decision is to keep both substrings in the same order.\nThe algorithm stops now and the result string is \"rgeat\" which is s2.\nAs there is one possible scenario that led s1 to be scrambled to s2, we return true.\n\n\nExample 2:\n\nInput: s1 = \"abcde\", s2 = \"caebd\"\nOutput: false\n\n\nExample 3:\n\nInput: s1 = \"a\", s2 = \"a\"\nOutput: true\n\n\n \n\nConstraints:\n\ns1.length == s2.length\n1 <= s1.length <= 30\ns1 and s2 consist of lower-case English letters."},{"index":"88","url":"https://leetcode.com/problems/merge-sorted-array","title":"Merge Sorted Array","difficulty":"Easy","description":"Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.\n\nNote:\n\nThe number of elements initialized in nums1 and nums2 are m and n respectively.\nYou may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.\n\nExample:\n\nInput:\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\nOutput: [1,2,2,3,5,6]\n\n\n \n\nConstraints:\n\n-10^9 <= nums1[i], nums2[i] <= 10^9\nnums1.length == m + n\nnums2.length == n"},{"index":"89","url":"https://leetcode.com/problems/gray-code","title":"Gray Code","difficulty":"Medium","description":"The gray code is a binary numeral system where two successive values differ in only one bit.\n\nGiven a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.\n\nExample 1:\n\nInput: 2\nOutput: [0,1,3,2]\nExplanation:\n00 - 0\n01 - 1\n11 - 3\n10 - 2\n\nFor a given n, a gray code sequence may not be uniquely defined.\nFor example, [0,2,3,1] is also a valid gray code sequence.\n\n00 - 0\n10 - 2\n11 - 3\n01 - 1\n\n\nExample 2:\n\nInput: 0\nOutput: [0]\nExplanation: We define the gray code sequence to begin with 0.\n             A gray code sequence of n has size = 2n, which for n = 0 the size is 20 = 1.\n             Therefore, for n = 0 the gray code sequence is [0].\n"},{"index":"90","url":"https://leetcode.com/problems/subsets-ii","title":"Subsets II","difficulty":"Medium","description":"Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\n\nNote: The solution set must not contain duplicate subsets.\n\nExample:\n\nInput: [1,2,2]\nOutput:\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n"},{"index":"91","url":"https://leetcode.com/problems/decode-ways","title":"Decode Ways","difficulty":"Medium","description":"A message containing letters from A-Z is being encoded to numbers using the following mapping:\n\n'A' -> 1\n'B' -> 2\n...\n'Z' -> 26\n\n\nGiven a non-empty string containing only digits, determine the total number of ways to decode it.\n\nThe answer is guaranteed to fit in a 32-bit integer.\n\n \n\nExample 1:\n\nInput: s = \"12\"\nOutput: 2\nExplanation: It could be decoded as \"AB\" (1 2) or \"L\" (12).\n\n\nExample 2:\n\nInput: s = \"226\"\nOutput: 3\nExplanation: It could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6).\n\n\nExample 3:\n\nInput: s = \"0\"\nOutput: 0\nExplanation: There is no character that is mapped to a number starting with '0'. We cannot ignore a zero when we face it while decoding. So, each '0' should be part of \"10\" --> 'J' or \"20\" --> 'T'.\n\n\nExample 4:\n\nInput: s = \"1\"\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= s.length <= 100\ns contains only digits and may contain leading zero(s)."},{"index":"92","url":"https://leetcode.com/problems/reverse-linked-list-ii","title":"Reverse Linked List II","difficulty":"Medium","description":"Reverse a linked list from position m to n. Do it in one-pass.\n\nNote: 1 ≤ m ≤ n ≤ length of list.\n\nExample:\n\nInput: 1->2->3->4->5->NULL, m = 2, n = 4\nOutput: 1->4->3->2->5->NULL\n"},{"index":"93","url":"https://leetcode.com/problems/restore-ip-addresses","title":"Restore IP Addresses","difficulty":"Medium","description":"Given a string s containing only digits, return all possible valid IP addresses that can be obtained from s. You can return them in any order.\n\nA valid IP address consists of exactly four integers, each integer is between 0 and 255, separated by single dots and cannot have leading zeros. For example, \"0.1.2.201\" and \"192.168.1.1\" are valid IP addresses and \"0.011.255.245\", \"192.168.1.312\" and \"192.168@1.1\" are invalid IP addresses. \n\n \n\nExample 1:\n\nInput: s = \"25525511135\"\nOutput: [\"255.255.11.135\",\"255.255.111.35\"]\n\n\nExample 2:\n\nInput: s = \"0000\"\nOutput: [\"0.0.0.0\"]\n\n\nExample 3:\n\nInput: s = \"1111\"\nOutput: [\"1.1.1.1\"]\n\n\nExample 4:\n\nInput: s = \"010010\"\nOutput: [\"0.10.0.10\",\"0.100.1.0\"]\n\n\nExample 5:\n\nInput: s = \"101023\"\nOutput: [\"1.0.10.23\",\"1.0.102.3\",\"10.1.0.23\",\"10.10.2.3\",\"101.0.2.3\"]\n\n\n \n\nConstraints:\n\n0 <= s.length <= 3000\ns consists of digits only."},{"index":"94","url":"https://leetcode.com/problems/binary-tree-inorder-traversal","title":"Binary Tree Inorder Traversal","difficulty":"Medium","description":"Given the root of a binary tree, return the inorder traversal of its nodes' values.\n\n \n\nExample 1:\n\nInput: root = [1,null,2,3]\nOutput: [1,3,2]\n\n\nExample 2:\n\nInput: root = []\nOutput: []\n\n\nExample 3:\n\nInput: root = [1]\nOutput: [1]\n\n\nExample 4:\n\nInput: root = [1,2]\nOutput: [2,1]\n\n\nExample 5:\n\nInput: root = [1,null,2]\nOutput: [1,2]\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 100].\n-100 <= Node.val <= 100\n\n \n\nFollow up:\n\nRecursive solution is trivial, could you do it iteratively?\n\n "},{"index":"95","url":"https://leetcode.com/problems/unique-binary-search-trees-ii","title":"Unique Binary Search Trees II","difficulty":"Medium","description":"Given an integer n, generate all structurally unique BST's (binary search trees) that store values 1 ... n.\n\nExample:\n\nInput: 3\nOutput:\n[\n  [1,null,3,2],\n  [3,2,null,1],\n  [3,1,null,null,2],\n  [2,1,3],\n  [1,null,2,null,3]\n]\nExplanation:\nThe above output corresponds to the 5 unique BST's shown below:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n\n\n \n\nConstraints:\n\n0 <= n <= 8"},{"index":"96","url":"https://leetcode.com/problems/unique-binary-search-trees","title":"Unique Binary Search Trees","difficulty":"Medium","description":"Given n, how many structurally unique BST's (binary search trees) that store values 1 ... n?\n\nExample:\n\nInput: 3\nOutput: 5\nExplanation:\nGiven n = 3, there are a total of 5 unique BST's:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n\n\n \n\nConstraints:\n\n1 <= n <= 19"},{"index":"97","url":"https://leetcode.com/problems/interleaving-string","title":"Interleaving String","difficulty":"Hard","description":"Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2.\n\nAn interleaving of two strings s and t is a configuration where they are divided into non-empty substrings such that:\n\ns = s1 + s2 + ... + sn\nt = t1 + t2 + ... + tm\n|n - m| <= 1\nThe interleaving is s1 + t1 + s2 + t2 + s3 + t3 + ... or t1 + s1 + t2 + s2 + t3 + s3 + ...\n\nNote: a + b is the concatenation of strings a and b.\n\n \n\nExample 1:\n\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"\nOutput: true\n\n\nExample 2:\n\nInput: s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"\nOutput: false\n\n\nExample 3:\n\nInput: s1 = \"\", s2 = \"\", s3 = \"\"\nOutput: true\n\n\n \n\nConstraints:\n\n0 <= s1.length, s2.length <= 100\n0 <= s3.length <= 200\ns1, s2, and s3 consist of lower-case English letters."},{"index":"98","url":"https://leetcode.com/problems/validate-binary-search-tree","title":"Validate Binary Search Tree","difficulty":"Medium","description":"Given a binary tree, determine if it is a valid binary search tree (BST).\n\nAssume a BST is defined as follows:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\n \n\nExample 1:\n\n    2\n   / \\\n  1   3\n\nInput: [2,1,3]\nOutput: true\n\n\nExample 2:\n\n    5\n   / \\\n  1   4\n     / \\\n    3   6\n\nInput: [5,1,4,null,null,3,6]\nOutput: false\nExplanation: The root node's value is 5 but its right child's value is 4.\n"},{"index":"99","url":"https://leetcode.com/problems/recover-binary-search-tree","title":"Recover Binary Search Tree","difficulty":"Hard","description":"You are given the root of a binary search tree (BST), where exactly two nodes of the tree were swapped by mistake. Recover the tree without changing its structure.\n\nFollow up: A solution using O(n) space is pretty straight forward. Could you devise a constant space solution?\n\n \n\nExample 1:\n\nInput: root = [1,3,null,null,2]\nOutput: [3,1,null,null,2]\nExplanation: 3 cannot be a left child of 1 because 3 > 1. Swapping 1 and 3 makes the BST valid.\n\n\nExample 2:\n\nInput: root = [3,1,4,null,null,2]\nOutput: [2,1,4,null,null,3]\nExplanation: 2 cannot be in the right subtree of 3 because 2 < 3. Swapping 2 and 3 makes the BST valid.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 1000].\n-231 <= Node.val <= 231 - 1"},{"index":"100","url":"https://leetcode.com/problems/same-tree","title":"Same Tree","difficulty":"Easy","description":"Given two binary trees, write a function to check if they are the same or not.\n\nTwo binary trees are considered the same if they are structurally identical and the nodes have the same value.\n\nExample 1:\n\nInput:     1         1\n          / \\       / \\\n         2   3     2   3\n\n        [1,2,3],   [1,2,3]\n\nOutput: true\n\n\nExample 2:\n\nInput:     1         1\n          /           \\\n         2             2\n\n        [1,2],     [1,null,2]\n\nOutput: false\n\n\nExample 3:\n\nInput:     1         1\n          / \\       / \\\n         2   1     1   2\n\n        [1,2,1],   [1,1,2]\n\nOutput: false\n"},{"index":"101","url":"https://leetcode.com/problems/symmetric-tree","title":"Symmetric Tree","difficulty":"Easy","description":"Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).\n\nFor example, this binary tree [1,2,2,3,4,4,3] is symmetric:\n\n    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n\n\n \n\nBut the following [1,2,2,null,3,null,3] is not:\n\n    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n\n\n \n\nFollow up: Solve it both recursively and iteratively."},{"index":"102","url":"https://leetcode.com/problems/binary-tree-level-order-traversal","title":"Binary Tree Level Order Traversal","difficulty":"Medium","description":"Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\n\nFor example:\nGiven binary tree [3,9,20,null,null,15,7],\n\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n\nreturn its level order traversal as:\n\n\n[\n  [3],\n  [9,20],\n  [15,7]\n]\n"},{"index":"103","url":"https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal","title":"Binary Tree Zigzag Level Order Traversal","difficulty":"Medium","description":"Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).\n\nFor example:\nGiven binary tree [3,9,20,null,null,15,7],\n\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n\nreturn its zigzag level order traversal as:\n\n\n[\n  [3],\n  [20,9],\n  [15,7]\n]\n"},{"index":"104","url":"https://leetcode.com/problems/maximum-depth-of-binary-tree","title":"Maximum Depth of Binary Tree","difficulty":"Easy","description":"Given a binary tree, find its maximum depth.\n\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\n\nNote: A leaf is a node with no children.\n\nExample:\n\nGiven binary tree [3,9,20,null,null,15,7],\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nreturn its depth = 3."},{"index":"105","url":"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal","title":"Construct Binary Tree from Preorder and Inorder Traversal","difficulty":"Medium","description":"Given preorder and inorder traversal of a tree, construct the binary tree.\n\nNote:\nYou may assume that duplicates do not exist in the tree.\n\nFor example, given\n\npreorder = [3,9,20,15,7]\ninorder = [9,3,15,20,7]\n\nReturn the following binary tree:\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7"},{"index":"106","url":"https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal","title":"Construct Binary Tree from Inorder and Postorder Traversal","difficulty":"Medium","description":"Given inorder and postorder traversal of a tree, construct the binary tree.\n\nNote:\nYou may assume that duplicates do not exist in the tree.\n\nFor example, given\n\ninorder = [9,3,15,20,7]\npostorder = [9,15,7,20,3]\n\nReturn the following binary tree:\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n"},{"index":"107","url":"https://leetcode.com/problems/binary-tree-level-order-traversal-ii","title":"Binary Tree Level Order Traversal II","difficulty":"Easy","description":"Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).\n\nFor example:\nGiven binary tree [3,9,20,null,null,15,7],\n\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n\nreturn its bottom-up level order traversal as:\n\n\n[\n  [15,7],\n  [9,20],\n  [3]\n]\n"},{"index":"108","url":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree","title":"Convert Sorted Array to Binary Search Tree","difficulty":"Easy","description":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.\n\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.\n\nExample:\n\nGiven the sorted array: [-10,-3,0,5,9],\n\nOne possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:\n\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n"},{"index":"109","url":"https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree","title":"Convert Sorted List to Binary Search Tree","difficulty":"Medium","description":"Given the head of a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.\n\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.\n\n \n\nExample 1:\n\nInput: head = [-10,-3,0,5,9]\nOutput: [0,-3,9,-10,null,5]\nExplanation: One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.\n\n\nExample 2:\n\nInput: head = []\nOutput: []\n\n\nExample 3:\n\nInput: head = [0]\nOutput: [0]\n\n\nExample 4:\n\nInput: head = [1,3]\nOutput: [3,1]\n\n\n \n\nConstraints:\n\nThe number of nodes in head is in the range [0, 2 * 104].\n-10^5 <= Node.val <= 10^5"},{"index":"110","url":"https://leetcode.com/problems/balanced-binary-tree","title":"Balanced Binary Tree","difficulty":"Easy","description":"Given a binary tree, determine if it is height-balanced.\n\nFor this problem, a height-balanced binary tree is defined as:\n\na binary tree in which the left and right subtrees of every node differ in height by no more than 1.\n\n \n\nExample 1:\n\nInput: root = [3,9,20,null,null,15,7]\nOutput: true\n\n\nExample 2:\n\nInput: root = [1,2,2,3,3,null,null,4,4]\nOutput: false\n\n\nExample 3:\n\nInput: root = []\nOutput: true\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 5000].\n-104 <= Node.val <= 104"},{"index":"111","url":"https://leetcode.com/problems/minimum-depth-of-binary-tree","title":"Minimum Depth of Binary Tree","difficulty":"Easy","description":"Given a binary tree, find its minimum depth.\n\nThe minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.\n\nNote: A leaf is a node with no children.\n\n \n\nExample 1:\n\nInput: root = [3,9,20,null,null,15,7]\nOutput: 2\n\n\nExample 2:\n\nInput: root = [2,null,3,null,4,null,5,null,6]\nOutput: 5\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 105].\n-1000 <= Node.val <= 1000"},{"index":"112","url":"https://leetcode.com/problems/path-sum","title":"Path Sum","difficulty":"Easy","description":"Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\n\nNote: A leaf is a node with no children.\n\nExample:\n\nGiven the below binary tree and sum = 22,\n\n      5\n     / \\\n    4   8\n   /   / \\\n  11  13  4\n /  \\      \\\n7    2      1\n\n\nreturn true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22."},{"index":"113","url":"https://leetcode.com/problems/path-sum-ii","title":"Path Sum II","difficulty":"Medium","description":"Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.\n\nNote: A leaf is a node with no children.\n\nExample:\n\nGiven the below binary tree and sum = 22,\n\n      5\n     / \\\n    4   8\n   /   / \\\n  11  13  4\n /  \\    / \\\n7    2  5   1\n\n\nReturn:\n\n[\n   [5,4,11,2],\n   [5,8,4,5]\n]\n"},{"index":"114","url":"https://leetcode.com/problems/flatten-binary-tree-to-linked-list","title":"Flatten Binary Tree to Linked List","difficulty":"Medium","description":"Given a binary tree, flatten it to a linked list in-place.\n\nFor example, given the following tree:\n\n    1\n   / \\\n  2   5\n / \\   \\\n3   4   6\n\n\nThe flattened tree should look like:\n\n1\n \\\n  2\n   \\\n    3\n     \\\n      4\n       \\\n        5\n         \\\n          6\n"},{"index":"115","url":"https://leetcode.com/problems/distinct-subsequences","title":"Distinct Subsequences","difficulty":"Hard","description":"Given two strings s and t, return the number of distinct subsequences of s which equals t.\n\nA string's subsequence is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., \"ACE\" is a subsequence of \"ABCDE\" while \"AEC\" is not).\n\nIt's guaranteed the answer fits on a 32-bit signed integer.\n\n \n\nExample 1:\n\nInput: s = \"rabbbit\", t = \"rabbit\"\nOutput: 3\nExplanation:\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\nrabbbit\nrabbbit\nrabbbit\n\n\nExample 2:\n\nInput: s = \"babgbag\", t = \"bag\"\nOutput: 5\nExplanation:\nAs shown below, there are 5 ways you can generate \"bag\" from S.\nbabgbag\nbabgbag\nbabgbag\nbabgbag\nbabgbag\n\n \n\nConstraints:\n\n0 <= s.length, t.length <= 1000\ns and t consist of English letters."},{"index":"116","url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","title":"Populating Next Right Pointers in Each Node","difficulty":"Medium","description":"You are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:\n\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n\n\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\n\nInitially, all next pointers are set to NULL.\n\n \n\nFollow up:\n\nYou may only use constant extra space.\nRecursive approach is fine, you may assume implicit stack space does not count as extra space for this problem.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,5,6,7]\nOutput: [1,#,2,3,#,4,5,6,7,#]\nExplanation: Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level.\n\n\n \n\nConstraints:\n\nThe number of nodes in the given tree is less than 4096.\n-1000 <= node.val <= 1000"},{"index":"117","url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","title":"Populating Next Right Pointers in Each Node II","difficulty":"Medium","description":"Given a binary tree\n\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n\n\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\n\nInitially, all next pointers are set to NULL.\n\n \n\nFollow up:\n\nYou may only use constant extra space.\nRecursive approach is fine, you may assume implicit stack space does not count as extra space for this problem.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,5,null,7]\nOutput: [1,#,2,3,#,4,5,7,#]\nExplanation: Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level.\n\n\n \n\nConstraints:\n\nThe number of nodes in the given tree is less than 6000.\n-100 <= node.val <= 100"},{"index":"118","url":"https://leetcode.com/problems/pascals-triangle","title":"Pascal's Triangle","difficulty":"Easy","description":"Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.\n\n\nIn Pascal's triangle, each number is the sum of the two numbers directly above it.\n\nExample:\n\nInput: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n"},{"index":"119","url":"https://leetcode.com/problems/pascals-triangle-ii","title":"Pascal's Triangle II","difficulty":"Easy","description":"Given an integer rowIndex, return the rowIndexth row of the Pascal's triangle.\n\nNotice that the row index starts from 0.\n\n\nIn Pascal's triangle, each number is the sum of the two numbers directly above it.\n\nFollow up:\n\nCould you optimize your algorithm to use only O(k) extra space?\n\n \n\nExample 1:\n\nInput: rowIndex = 3\nOutput: [1,3,3,1]\n\n\nExample 2:\n\nInput: rowIndex = 0\nOutput: [1]\n\n\nExample 3:\n\nInput: rowIndex = 1\nOutput: [1,1]\n\n\n \n\nConstraints:\n\n0 <= rowIndex <= 40"},{"index":"120","url":"https://leetcode.com/problems/triangle","title":"Triangle","difficulty":"Medium","description":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.\n\nFor example, given the following triangle\n\n[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n\n\nThe minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).\n\nNote:\n\nBonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle."},{"index":"121","url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","title":"Best Time to Buy and Sell Stock","difficulty":"Easy","description":"Say you have an array for which the ith element is the price of a given stock on day i.\n\nIf you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.\n\nNote that you cannot sell a stock before you buy one.\n\nExample 1:\n\nInput: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.\n\n\nExample 2:\n\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"},{"index":"122","url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","title":"Best Time to Buy and Sell Stock II","difficulty":"Easy","description":"Say you have an array prices for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).\n\nNote: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).\n\nExample 1:\n\nInput: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\n\n\nExample 2:\n\nInput: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n\n\nExample 3:\n\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n\n \n\nConstraints:\n\n1 <= prices.length <= 3 * 10 ^ 4\n0 <= prices[i] <= 10 ^ 4"},{"index":"123","url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","title":"Best Time to Buy and Sell Stock III","difficulty":"Hard","description":"Say you have an array for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete at most two transactions.\n\nNote: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).\n\n \n\nExample 1:\n\nInput: prices = [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\nThen buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\n\nExample 2:\n\nInput: prices = [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nNote that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.\n\n\nExample 3:\n\nInput: prices = [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n\n\nExample 4:\n\nInput: prices = [1]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= prices.length <= 105\n0 <= prices[i] <= 105"},{"index":"124","url":"https://leetcode.com/problems/binary-tree-maximum-path-sum","title":"Binary Tree Maximum Path Sum","difficulty":"Hard","description":"Given a non-empty binary tree, find the maximum path sum.\n\nFor this problem, a path is defined as any node sequence from some starting node to any node in the tree along the parent-child connections. The path must contain at least one node and does not need to go through the root.\n\n \n\nExample 1:\n\nInput: root = [1,2,3]\nOutput: 6\n\n\nExample 2:\n\nInput: root = [-10,9,20,null,null,15,7]\nOutput: 42\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 3 * 104].\n-1000 <= Node.val <= 1000"},{"index":"125","url":"https://leetcode.com/problems/valid-palindrome","title":"Valid Palindrome","difficulty":"Easy","description":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\n\nNote: For the purpose of this problem, we define empty string as valid palindrome.\n\nExample 1:\n\nInput: \"A man, a plan, a canal: Panama\"\nOutput: true\n\n\nExample 2:\n\nInput: \"race a car\"\nOutput: false\n\n\n \n\nConstraints:\n\ns consists only of printable ASCII characters."},{"index":"126","url":"https://leetcode.com/problems/word-ladder-ii","title":"Word Ladder II","difficulty":"Hard","description":"Given two words (beginWord and endWord), and a dictionary's word list, find all shortest transformation sequence(s) from beginWord to endWord, such that:\n\nOnly one letter can be changed at a time\nEach transformed word must exist in the word list. Note that beginWord is not a transformed word.\n\nNote:\n\nReturn an empty list if there is no such transformation sequence.\nAll words have the same length.\nAll words contain only lowercase alphabetic characters.\nYou may assume no duplicates in the word list.\nYou may assume beginWord and endWord are non-empty and are not the same.\n\nExample 1:\n\nInput:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]\n\n\nExample 2:\n\nInput:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"},{"index":"127","url":"https://leetcode.com/problems/word-ladder","title":"Word Ladder","difficulty":"Medium","description":"Given two words (beginWord and endWord), and a dictionary's word list, find the length of shortest transformation sequence from beginWord to endWord, such that:\n\nOnly one letter can be changed at a time.\nEach transformed word must exist in the word list.\n\nNote:\n\nReturn 0 if there is no such transformation sequence.\nAll words have the same length.\nAll words contain only lowercase alphabetic characters.\nYou may assume no duplicates in the word list.\nYou may assume beginWord and endWord are non-empty and are not the same.\n\nExample 1:\n\nInput:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.\n\n\nExample 2:\n\nInput:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"},{"index":"128","url":"https://leetcode.com/problems/longest-consecutive-sequence","title":"Longest Consecutive Sequence","difficulty":"Hard","description":"Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.\n\nFollow up: Could you implement the O(n) solution? \n\n \n\nExample 1:\n\nInput: nums = [100,4,200,1,3,2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.\n\n\nExample 2:\n\nInput: nums = [0,3,7,2,5,8,4,6,0,1]\nOutput: 9\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 104\n-109 <= nums[i] <= 109"},{"index":"129","url":"https://leetcode.com/problems/sum-root-to-leaf-numbers","title":"Sum Root to Leaf Numbers","difficulty":"Medium","description":"Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.\n\nAn example is the root-to-leaf path 1->2->3 which represents the number 123.\n\nFind the total sum of all root-to-leaf numbers.\n\nNote: A leaf is a node with no children.\n\nExample:\n\nInput: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.\n\nExample 2:\n\nInput: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026."},{"index":"130","url":"https://leetcode.com/problems/surrounded-regions","title":"Surrounded Regions","difficulty":"Medium","description":"Given a 2D board containing 'X' and 'O' (the letter O), capture all regions surrounded by 'X'.\n\nA region is captured by flipping all 'O's into 'X's in that surrounded region.\n\nExample:\n\nX X X X\nX O O X\nX X O X\nX O X X\n\n\nAfter running your function, the board should be:\n\nX X X X\nX X X X\nX X X X\nX O X X\n\n\nExplanation:\n\nSurrounded regions shouldn’t be on the border, which means that any 'O' on the border of the board are not flipped to 'X'. Any 'O' that is not on the border and it is not connected to an 'O' on the border will be flipped to 'X'. Two cells are connected if they are adjacent cells connected horizontally or vertically."},{"index":"131","url":"https://leetcode.com/problems/palindrome-partitioning","title":"Palindrome Partitioning","difficulty":"Medium","description":"Given a string s, partition s such that every substring of the partition is a palindrome.\n\nReturn all possible palindrome partitioning of s.\n\nExample:\n\nInput: \"aab\"\nOutput:\n[\n  [\"aa\",\"b\"],\n  [\"a\",\"a\",\"b\"]\n]\n"},{"index":"132","url":"https://leetcode.com/problems/palindrome-partitioning-ii","title":"Palindrome Partitioning II","difficulty":"Hard","description":"Given a string s, partition s such that every substring of the partition is a palindrome.\n\nReturn the minimum cuts needed for a palindrome partitioning of s.\n\n \n\nExample 1:\n\nInput: s = \"aab\"\nOutput: 1\nExplanation: The palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.\n\n\nExample 2:\n\nInput: s = \"a\"\nOutput: 0\n\n\nExample 3:\n\nInput: s = \"ab\"\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= s.length <= 2000\ns consists of lower-case English letters only."},{"index":"133","url":"https://leetcode.com/problems/clone-graph","title":"Clone Graph","difficulty":"Medium","description":"Given a reference of a node in a connected undirected graph.\n\nReturn a deep copy (clone) of the graph.\n\nEach node in the graph contains a val (int) and a list (List[Node]) of its neighbors.\n\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n}\n\n\n \n\nTest case format:\n\nFor simplicity sake, each node's value is the same as the node's index (1-indexed). For example, the first node with val = 1, the second node with val = 2, and so on. The graph is represented in the test case using an adjacency list.\n\nAdjacency list is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.\n\nThe given node will always be the first node with val = 1. You must return the copy of the given node as a reference to the cloned graph.\n\n \n\nExample 1:\n\nInput: adjList = [[2,4],[1,3],[2,4],[1,3]]\nOutput: [[2,4],[1,3],[2,4],[1,3]]\nExplanation: There are 4 nodes in the graph.\n1st node (val = 1)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n2nd node (val = 2)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n3rd node (val = 3)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n4th node (val = 4)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n\n\nExample 2:\n\nInput: adjList = [[]]\nOutput: [[]]\nExplanation: Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors.\n\n\nExample 3:\n\nInput: adjList = []\nOutput: []\nExplanation: This an empty graph, it does not have any nodes.\n\n\nExample 4:\n\nInput: adjList = [[2],[1]]\nOutput: [[2],[1]]\n\n\n \n\nConstraints:\n\n1 <= Node.val <= 100\nNode.val is unique for each node.\nNumber of Nodes will not exceed 100.\nThere is no repeated edges and no self-loops in the graph.\nThe Graph is connected and all nodes can be visited starting from the given node."},{"index":"134","url":"https://leetcode.com/problems/gas-station","title":"Gas Station","difficulty":"Medium","description":"There are N gas stations along a circular route, where the amount of gas at station i is gas[i].\n\nYou have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.\n\nReturn the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1.\n\nNote:\n\nIf there exists a solution, it is guaranteed to be unique.\nBoth input arrays are non-empty and have the same length.\nEach element in the input arrays is a non-negative integer.\n\nExample 1:\n\nInput: \ngas  = [1,2,3,4,5]\ncost = [3,4,5,1,2]\n\nOutput: 3\n\nExplanation:\nStart at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\nTherefore, return 3 as the starting index.\n\n\nExample 2:\n\nInput: \ngas  = [2,3,4]\ncost = [3,4,3]\n\nOutput: -1\n\nExplanation:\nYou can't start at station 0 or 1, as there is not enough gas to travel to the next station.\nLet's start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\nTherefore, you can't travel around the circuit once no matter where you start.\n"},{"index":"135","url":"https://leetcode.com/problems/candy","title":"Candy","difficulty":"Hard","description":"There are N children standing in a line. Each child is assigned a rating value.\n\nYou are giving candies to these children subjected to the following requirements:\n\nEach child must have at least one candy.\nChildren with a higher rating get more candies than their neighbors.\n\nWhat is the minimum candies you must give?\n\nExample 1:\n\nInput: [1,0,2]\nOutput: 5\nExplanation: You can allocate to the first, second and third child with 2, 1, 2 candies respectively.\n\n\nExample 2:\n\nInput: [1,2,2]\nOutput: 4\nExplanation: You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\n             The third child gets 1 candy because it satisfies the above two conditions.\n"},{"index":"136","url":"https://leetcode.com/problems/single-number","title":"Single Number","difficulty":"Easy","description":"Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.\n\nFollow up: Could you implement a solution with a linear runtime complexity and without using extra memory?\n\n \n\nExample 1:\n\nInput: nums = [2,2,1]\nOutput: 1\n\n\nExample 2:\n\nInput: nums = [4,1,2,1,2]\nOutput: 4\n\n\nExample 3:\n\nInput: nums = [1]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 3 * 104\n-3 * 104 <= nums[i] <= 3 * 104\nEach element in the array appears twice except for one element which appears only once."},{"index":"137","url":"https://leetcode.com/problems/single-number-ii","title":"Single Number II","difficulty":"Medium","description":"Given a non-empty array of integers, every element appears three times except for one, which appears exactly once. Find that single one.\n\nNote:\n\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\n\nExample 1:\n\nInput: [2,2,3,2]\nOutput: 3\n\n\nExample 2:\n\nInput: [0,1,0,1,0,1,99]\nOutput: 99"},{"index":"138","url":"https://leetcode.com/problems/copy-list-with-random-pointer","title":"Copy List with Random Pointer","difficulty":"Medium","description":"A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.\n\nReturn a deep copy of the list.\n\nThe Linked List is represented in the input/output as a list of n nodes. Each node is represented as a pair of [val, random_index] where:\n\nval: an integer representing Node.val\nrandom_index: the index of the node (range from 0 to n-1) where random pointer points to, or null if it does not point to any node.\n\n \n\nExample 1:\n\nInput: head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\nOutput: [[7,null],[13,0],[11,4],[10,2],[1,0]]\n\n\nExample 2:\n\nInput: head = [[1,1],[2,1]]\nOutput: [[1,1],[2,1]]\n\n\nExample 3:\n\nInput: head = [[3,null],[3,0],[3,null]]\nOutput: [[3,null],[3,0],[3,null]]\n\n\nExample 4:\n\nInput: head = []\nOutput: []\nExplanation: Given linked list is empty (null pointer), so return null.\n\n\n \n\nConstraints:\n\n-10000 <= Node.val <= 10000\nNode.random is null or pointing to a node in the linked list.\nThe number of nodes will not exceed 1000."},{"index":"139","url":"https://leetcode.com/problems/word-break","title":"Word Break","difficulty":"Medium","description":"Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words.\n\nNote:\n\nThe same word in the dictionary may be reused multiple times in the segmentation.\nYou may assume the dictionary does not contain duplicate words.\n\nExample 1:\n\nInput: s = \"leetcode\", wordDict = [\"leet\", \"code\"]\nOutput: true\nExplanation: Return true because \"leetcode\" can be segmented as \"leet code\".\n\n\nExample 2:\n\nInput: s = \"applepenapple\", wordDict = [\"apple\", \"pen\"]\nOutput: true\nExplanation: Return true because \"applepenapple\" can be segmented as \"apple pen apple\".\n             Note that you are allowed to reuse a dictionary word.\n\n\nExample 3:\n\nInput: s = \"catsandog\", wordDict = [\"cats\", \"dog\", \"sand\", \"and\", \"cat\"]\nOutput: false\n"},{"index":"140","url":"https://leetcode.com/problems/word-break-ii","title":"Word Break II","difficulty":"Hard","description":"Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences.\n\nNote:\n\nThe same word in the dictionary may be reused multiple times in the segmentation.\nYou may assume the dictionary does not contain duplicate words.\n\nExample 1:\n\nInput:\ns = \"catsanddog\"\nwordDict = [\"cat\", \"cats\", \"and\", \"sand\", \"dog\"]\nOutput:\n[\n  \"cats and dog\",\n  \"cat sand dog\"\n]\n\n\nExample 2:\n\nInput:\ns = \"pineapplepenapple\"\nwordDict = [\"apple\", \"pen\", \"applepen\", \"pine\", \"pineapple\"]\nOutput:\n[\n  \"pine apple pen apple\",\n  \"pineapple pen apple\",\n  \"pine applepen apple\"\n]\nExplanation: Note that you are allowed to reuse a dictionary word.\n\n\nExample 3:\n\nInput:\ns = \"catsandog\"\nwordDict = [\"cats\", \"dog\", \"sand\", \"and\", \"cat\"]\nOutput:\n[]"},{"index":"141","url":"https://leetcode.com/problems/linked-list-cycle","title":"Linked List Cycle","difficulty":"Easy","description":"Given head, the head of a linked list, determine if the linked list has a cycle in it.\n\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.\n\nReturn true if there is a cycle in the linked list. Otherwise, return false.\n\n \n\nExample 1:\n\nInput: head = [3,2,0,-4], pos = 1\nOutput: true\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\n\n\nExample 2:\n\nInput: head = [1,2], pos = 0\nOutput: true\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node.\n\n\nExample 3:\n\nInput: head = [1], pos = -1\nOutput: false\nExplanation: There is no cycle in the linked list.\n\n\n \n\nConstraints:\n\nThe number of the nodes in the list is in the range [0, 104].\n-105 <= Node.val <= 105\npos is -1 or a valid index in the linked-list.\n\n \n\nFollow up: Can you solve it using O(1) (i.e. constant) memory?"},{"index":"142","url":"https://leetcode.com/problems/linked-list-cycle-ii","title":"Linked List Cycle II","difficulty":"Medium","description":"Given a linked list, return the node where the cycle begins. If there is no cycle, return null.\n\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.\n\nNotice that you should not modify the linked list.\n\n \n\nExample 1:\n\nInput: head = [3,2,0,-4], pos = 1\nOutput: tail connects to node index 1\nExplanation: There is a cycle in the linked list, where tail connects to the second node.\n\n\nExample 2:\n\nInput: head = [1,2], pos = 0\nOutput: tail connects to node index 0\nExplanation: There is a cycle in the linked list, where tail connects to the first node.\n\n\nExample 3:\n\nInput: head = [1], pos = -1\nOutput: no cycle\nExplanation: There is no cycle in the linked list.\n\n\n \n\nConstraints:\n\nThe number of the nodes in the list is in the range [0, 104].\n-105 <= Node.val <= 105\npos is -1 or a valid index in the linked-list.\n\n \n\nFollow up: Can you solve it using O(1) (i.e. constant) memory?"},{"index":"143","url":"https://leetcode.com/problems/reorder-list","title":"Reorder List","difficulty":"Medium","description":"Given a singly linked list L: L0→L1→…→Ln-1→Ln,\nreorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…\n\nYou may not modify the values in the list's nodes, only nodes itself may be changed.\n\nExample 1:\n\nGiven 1->2->3->4, reorder it to 1->4->2->3.\n\nExample 2:\n\nGiven 1->2->3->4->5, reorder it to 1->5->2->4->3.\n"},{"index":"144","url":"https://leetcode.com/problems/binary-tree-preorder-traversal","title":"Binary Tree Preorder Traversal","difficulty":"Medium","description":"Given the root of a binary tree, return the preorder traversal of its nodes' values.\n\n \n\nExample 1:\n\nInput: root = [1,null,2,3]\nOutput: [1,2,3]\n\n\nExample 2:\n\nInput: root = []\nOutput: []\n\n\nExample 3:\n\nInput: root = [1]\nOutput: [1]\n\n\nExample 4:\n\nInput: root = [1,2]\nOutput: [1,2]\n\n\nExample 5:\n\nInput: root = [1,null,2]\nOutput: [1,2]\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 100].\n-100 <= Node.val <= 100\n\n \n\nFollow up:\n\nRecursive solution is trivial, could you do it iteratively?\n\n "},{"index":"145","url":"https://leetcode.com/problems/binary-tree-postorder-traversal","title":"Binary Tree Postorder Traversal","difficulty":"Medium","description":"Given the root of a binary tree, return the postorder traversal of its nodes' values.\n\n \n\nExample 1:\n\nInput: root = [1,null,2,3]\nOutput: [3,2,1]\n\n\nExample 2:\n\nInput: root = []\nOutput: []\n\n\nExample 3:\n\nInput: root = [1]\nOutput: [1]\n\n\nExample 4:\n\nInput: root = [1,2]\nOutput: [2,1]\n\n\nExample 5:\n\nInput: root = [1,null,2]\nOutput: [2,1]\n\n\n \n\nConstraints:\n\nThe number of the nodes in the tree is in the range [0, 100].\n-100 <= Node.val <= 100\n\n \n\nFollow up:\n\nRecursive solution is trivial, could you do it iteratively?\n\n "},{"index":"146","url":"https://leetcode.com/problems/lru-cache","title":"LRU Cache","difficulty":"Medium","description":"Design a data structure that follows the constraints of a Least Recently Used (LRU) cache.\n\nImplement the LRUCache class:\n\nLRUCache(int capacity) Initialize the LRU cache with positive size capacity.\nint get(int key) Return the value of the key if the key exists, otherwise return -1.\nvoid put(int key, int value) Update the value of the key if the key exists. Otherwise, add the key-value pair to the cache. If the number of keys exceeds the capacity from this operation, evict the least recently used key.\n\nFollow up:\nCould you do get and put in O(1) time complexity?\n\n \n\nExample 1:\n\nInput\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\nOutput\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\nExplanation\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // cache is {1=1}\nlRUCache.put(2, 2); // cache is {1=1, 2=2}\nlRUCache.get(1);    // return 1\nlRUCache.put(3, 3); // LRU key was 2, evicts key 2, cache is {1=1, 3=3}\nlRUCache.get(2);    // returns -1 (not found)\nlRUCache.put(4, 4); // LRU key was 1, evicts key 1, cache is {4=4, 3=3}\nlRUCache.get(1);    // return -1 (not found)\nlRUCache.get(3);    // return 3\nlRUCache.get(4);    // return 4\n\n\n \n\nConstraints:\n\n1 <= capacity <= 3000\n0 <= key <= 3000\n0 <= value <= 104\nAt most 3 * 104 calls will be made to get and put."},{"index":"147","url":"https://leetcode.com/problems/insertion-sort-list","title":"Insertion Sort List","difficulty":"Medium","description":"Sort a linked list using insertion sort.\n\n\nA graphical example of insertion sort. The partial sorted list (black) initially contains only the first element in the list.\nWith each iteration one element (red) is removed from the input data and inserted in-place into the sorted list\n \n\nAlgorithm of Insertion Sort:\n\nInsertion sort iterates, consuming one input element each repetition, and growing a sorted output list.\nAt each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list, and inserts it there.\nIt repeats until no input elements remain.\n\n\nExample 1:\n\nInput: 4->2->1->3\nOutput: 1->2->3->4\n\n\nExample 2:\n\nInput: -1->5->3->4->0\nOutput: -1->0->3->4->5\n"},{"index":"148","url":"https://leetcode.com/problems/sort-list","title":"Sort List","difficulty":"Medium","description":"Given the head of a linked list, return the list after sorting it in ascending order.\n\nFollow up: Can you sort the linked list in O(n logn) time and O(1) memory (i.e. constant space)?\n\n \n\nExample 1:\n\nInput: head = [4,2,1,3]\nOutput: [1,2,3,4]\n\n\nExample 2:\n\nInput: head = [-1,5,3,4,0]\nOutput: [-1,0,3,4,5]\n\n\nExample 3:\n\nInput: head = []\nOutput: []\n\n\n \n\nConstraints:\n\nThe number of nodes in the list is in the range [0, 5 * 104].\n-105 <= Node.val <= 105"},{"index":"149","url":"https://leetcode.com/problems/max-points-on-a-line","title":"Max Points on a Line","difficulty":"Hard","description":"Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.\n\nExample 1:\n\nInput: [[1,1],[2,2],[3,3]]\nOutput: 3\nExplanation:\n^\n|\n|        o\n|     o\n|  o  \n+------------->\n0  1  2  3  4\n\n\nExample 2:\n\nInput: [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\nOutput: 4\nExplanation:\n^\n|\n|  o\n|     o        o\n|        o\n|  o        o\n+------------------->\n0  1  2  3  4  5  6\n\n\nNOTE: input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature."},{"index":"150","url":"https://leetcode.com/problems/evaluate-reverse-polish-notation","title":"Evaluate Reverse Polish Notation","difficulty":"Medium","description":"Evaluate the value of an arithmetic expression in Reverse Polish Notation.\n\nValid operators are +, -, *, /. Each operand may be an integer or another expression.\n\nNote:\n\nDivision between two integers should truncate toward zero.\nThe given RPN expression is always valid. That means the expression would always evaluate to a result and there won't be any divide by zero operation.\n\nExample 1:\n\nInput: [\"2\", \"1\", \"+\", \"3\", \"*\"]\nOutput: 9\nExplanation: ((2 + 1) * 3) = 9\n\n\nExample 2:\n\nInput: [\"4\", \"13\", \"5\", \"/\", \"+\"]\nOutput: 6\nExplanation: (4 + (13 / 5)) = 6\n\n\nExample 3:\n\nInput: [\"10\", \"6\", \"9\", \"3\", \"+\", \"-11\", \"*\", \"/\", \"*\", \"17\", \"+\", \"5\", \"+\"]\nOutput: 22\nExplanation: \n  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n"},{"index":"151","url":"https://leetcode.com/problems/reverse-words-in-a-string","title":"Reverse Words in a String","difficulty":"Medium","description":"Given an input string s, reverse the order of the words.\n\nA word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.\n\nReturn a string of the words in reverse order concatenated by a single space.\n\nNote that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.\n\n \n\nExample 1:\n\nInput: s = \"the sky is blue\"\nOutput: \"blue is sky the\"\n\n\nExample 2:\n\nInput: s = \"  hello world  \"\nOutput: \"world hello\"\nExplanation: Your reversed string should not contain leading or trailing spaces.\n\n\nExample 3:\n\nInput: s = \"a good   example\"\nOutput: \"example good a\"\nExplanation: You need to reduce multiple spaces between two words to a single space in the reversed string.\n\n\nExample 4:\n\nInput: s = \"  Bob    Loves  Alice   \"\nOutput: \"Alice Loves Bob\"\n\n\nExample 5:\n\nInput: s = \"Alice does not even like bob\"\nOutput: \"bob like even not does Alice\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 104\ns contains English letters (upper-case and lower-case), digits, and spaces ' '.\nThere is at least one word in s.\n\n \n\nFollow up:\n\nCould you solve it in-place with O(1) extra space?\n\n "},{"index":"152","url":"https://leetcode.com/problems/maximum-product-subarray","title":"Maximum Product Subarray","difficulty":"Medium","description":"Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.\n\nExample 1:\n\nInput: [2,3,-2,4]\nOutput: 6\nExplanation: [2,3] has the largest product 6.\n\n\nExample 2:\n\nInput: [-2,0,-1]\nOutput: 0\nExplanation: The result cannot be 2, because [-2,-1] is not a subarray."},{"index":"153","url":"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array","title":"Find Minimum in Rotated Sorted Array","difficulty":"Medium","description":"Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:\n\n[4,5,6,7,0,1,2] if it was rotated 4 times.\n[0,1,2,4,5,6,7] if it was rotated 7 times.\n\nNotice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]].\n\nGiven the sorted rotated array nums, return the minimum element of this array.\n\n \n\nExample 1:\n\nInput: nums = [3,4,5,1,2]\nOutput: 1\nExplanation: The original array was [1,2,3,4,5] rotated 3 times.\n\n\nExample 2:\n\nInput: nums = [4,5,6,7,0,1,2]\nOutput: 0\nExplanation: The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.\n\n\nExample 3:\n\nInput: nums = [11,13,15,17]\nOutput: 11\nExplanation: The original array was [11,13,15,17] and it was rotated 4 times. \n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 5000\n-5000 <= nums[i] <= 5000\nAll the integers of nums are unique.\nnums is sorted and rotated between 1 and n times."},{"index":"154","url":"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii","title":"Find Minimum in Rotated Sorted Array II","difficulty":"Hard","description":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n\n(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).\n\nFind the minimum element.\n\nThe array may contain duplicates.\n\nExample 1:\n\nInput: [1,3,5]\nOutput: 1\n\nExample 2:\n\nInput: [2,2,2,0,1]\nOutput: 0\n\nNote:\n\nThis is a follow up problem to Find Minimum in Rotated Sorted Array.\nWould allow duplicates affect the run-time complexity? How and why?"},{"index":"155","url":"https://leetcode.com/problems/min-stack","title":"Min Stack","difficulty":"Easy","description":"Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.\n\npush(x) -- Push element x onto stack.\npop() -- Removes the element on top of the stack.\ntop() -- Get the top element.\ngetMin() -- Retrieve the minimum element in the stack.\n\n \n\nExample 1:\n\nInput\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\nOutput\n[null,null,null,null,-3,null,0,-2]\n\nExplanation\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin(); // return -3\nminStack.pop();\nminStack.top();    // return 0\nminStack.getMin(); // return -2\n\n\n \n\nConstraints:\n\nMethods pop, top and getMin operations will always be called on non-empty stacks."},{"index":"160","url":"https://leetcode.com/problems/intersection-of-two-linked-lists","title":"Intersection of Two Linked Lists","difficulty":"Easy","description":"Write a program to find the node at which the intersection of two singly linked lists begins.\n\nFor example, the following two linked lists:\n\nbegin to intersect at node c1.\n\n \n\nExample 1:\n\nInput: intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\nOutput: Reference of the node with value = 8\nInput Explanation: The intersected node's value is 8 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,6,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.\n\n \n\nExample 2:\n\nInput: intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\nOutput: Reference of the node with value = 2\nInput Explanation: The intersected node's value is 2 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.\n\n\n \n\nExample 3:\n\nInput: intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\nOutput: null\nInput Explanation: From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\nExplanation: The two lists do not intersect, so return null.\n\n\n \n\nNotes:\n\nIf the two linked lists have no intersection at all, return null.\nThe linked lists must retain their original structure after the function returns.\nYou may assume there are no cycles anywhere in the entire linked structure.\nEach value on each linked list is in the range [1, 10^9].\nYour code should preferably run in O(n) time and use only O(1) memory."},{"index":"162","url":"https://leetcode.com/problems/find-peak-element","title":"Find Peak Element","difficulty":"Medium","description":"A peak element is an element that is greater than its neighbors.\n\nGiven an input array nums, where nums[i] ≠ nums[i+1], find a peak element and return its index.\n\nThe array may contain multiple peaks, in that case return the index to any one of the peaks is fine.\n\nYou may imagine that nums[-1] = nums[n] = -∞.\n\nExample 1:\n\nInput: nums = [1,2,3,1]\nOutput: 2\nExplanation: 3 is a peak element and your function should return the index number 2.\n\nExample 2:\n\nInput: nums = [1,2,1,3,5,6,4]\nOutput: 1 or 5 \nExplanation: Your function can return either index number 1 where the peak element is 2, \n             or index number 5 where the peak element is 6.\n\n\nFollow up: Your solution should be in logarithmic complexity."},{"index":"164","url":"https://leetcode.com/problems/maximum-gap","title":"Maximum Gap","difficulty":"Hard","description":"Given an unsorted array, find the maximum difference between the successive elements in its sorted form.\n\nReturn 0 if the array contains less than 2 elements.\n\nExample 1:\n\nInput: [3,6,9,1]\nOutput: 3\nExplanation: The sorted form of the array is [1,3,6,9], either\n             (3,6) or (6,9) has the maximum difference 3.\n\nExample 2:\n\nInput: [10]\nOutput: 0\nExplanation: The array contains less than 2 elements, therefore return 0.\n\nNote:\n\nYou may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.\nTry to solve it in linear time/space."},{"index":"165","url":"https://leetcode.com/problems/compare-version-numbers","title":"Compare Version Numbers","difficulty":"Medium","description":"Given two version numbers, version1 and version2, compare them.\n\nVersion numbers consist of one or more revisions joined by a dot '.'. Each revision consists of digits and may contain leading zeros. Every revision contains at least one character. Revisions are 0-indexed from left to right, with the leftmost revision being revision 0, the next revision being revision 1, and so on. For example 2.5.33 and 0.1 are valid version numbers.\n\nTo compare version numbers, compare their revisions in left-to-right order. Revisions are compared using their integer value ignoring any leading zeros. This means that revisions 1 and 001 are considered equal. If a version number does not specify a revision at an index, then treat the revision as 0. For example, version 1.0 is less than version 1.1 because their revision 0s are the same, but their revision 1s are 0 and 1 respectively, and 0 < 1.\n\nReturn the following:\n\nIf version1 < version2, return -1.\nIf version1 > version2, return 1.\nOtherwise, return 0.\n\n \n\nExample 1:\n\nInput: version1 = \"1.01\", version2 = \"1.001\"\nOutput: 0\nExplanation: Ignoring leading zeroes, both \"01\" and \"001\" represent the same integer \"1\".\n\n\nExample 2:\n\nInput: version1 = \"1.0\", version2 = \"1.0.0\"\nOutput: 0\nExplanation: version1 does not specify revision 2, which means it is treated as \"0\".\n\n\nExample 3:\n\nInput: version1 = \"0.1\", version2 = \"1.1\"\nOutput: -1\nExplanation: version1's revision 0 is \"0\", while version2's revision 0 is \"1\". 0 < 1, so version1 < version2.\n\n\nExample 4:\n\nInput: version1 = \"1.0.1\", version2 = \"1\"\nOutput: 1\n\n\nExample 5:\n\nInput: version1 = \"7.5.2.4\", version2 = \"7.5.3\"\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= version1.length, version2.length <= 500\nversion1 and version2 only contain digits and '.'.\nversion1 and version2 are valid version numbers.\nAll the given revisions in version1 and version2 can be stored in a 32-bit integer."},{"index":"166","url":"https://leetcode.com/problems/fraction-to-recurring-decimal","title":"Fraction to Recurring Decimal","difficulty":"Medium","description":"Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.\n\nIf the fractional part is repeating, enclose the repeating part in parentheses.\n\nIf multiple answers are possible, return any of them.\n\nIt is guaranteed that the length of the answer string is less than 104 for all the given inputs.\n\n \n\nExample 1:\n\nInput: numerator = 1, denominator = 2\nOutput: \"0.5\"\n\n\nExample 2:\n\nInput: numerator = 2, denominator = 1\nOutput: \"2\"\n\n\nExample 3:\n\nInput: numerator = 2, denominator = 3\nOutput: \"0.(6)\"\n\n\nExample 4:\n\nInput: numerator = 4, denominator = 333\nOutput: \"0.(012)\"\n\n\nExample 5:\n\nInput: numerator = 1, denominator = 5\nOutput: \"0.2\"\n\n\n \n\nConstraints:\n\n-231 <= numerator, denominator <= 231 - 1\ndenominator != 0"},{"index":"167","url":"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted","title":"Two Sum II - Input array is sorted","difficulty":"Easy","description":"Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.\n\nThe function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.\n\nNote:\n\nYour returned answers (both index1 and index2) are not zero-based.\nYou may assume that each input would have exactly one solution and you may not use the same element twice.\n\n \n\nExample 1:\n\nInput: numbers = [2,7,11,15], target = 9\nOutput: [1,2]\nExplanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.\n\n\nExample 2:\n\nInput: numbers = [2,3,4], target = 6\nOutput: [1,3]\n\n\nExample 3:\n\nInput: numbers = [-1,0], target = -1\nOutput: [1,2]\n\n\n \n\nConstraints:\n\n2 <= nums.length <= 3 * 104\n-1000 <= nums[i] <= 1000\nnums is sorted in increasing order.\n-1000 <= target <= 1000"},{"index":"168","url":"https://leetcode.com/problems/excel-sheet-column-title","title":"Excel Sheet Column Title","difficulty":"Easy","description":"Given a positive integer, return its corresponding column title as appear in an Excel sheet.\n\nFor example:\n\n    1 -> A\n    2 -> B\n    3 -> C\n    ...\n    26 -> Z\n    27 -> AA\n    28 -> AB \n    ...\n\n\nExample 1:\n\nInput: 1\nOutput: \"A\"\n\n\nExample 2:\n\nInput: 28\nOutput: \"AB\"\n\n\nExample 3:\n\nInput: 701\nOutput: \"ZY\"\n"},{"index":"169","url":"https://leetcode.com/problems/majority-element","title":"Majority Element","difficulty":"Easy","description":"Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.\n\nYou may assume that the array is non-empty and the majority element always exist in the array.\n\nExample 1:\n\nInput: [3,2,3]\nOutput: 3\n\nExample 2:\n\nInput: [2,2,1,1,1,2,2]\nOutput: 2\n"},{"index":"171","url":"https://leetcode.com/problems/excel-sheet-column-number","title":"Excel Sheet Column Number","difficulty":"Easy","description":"Given a column title as appear in an Excel sheet, return its corresponding column number.\n\nFor example:\n\n    A -> 1\n    B -> 2\n    C -> 3\n    ...\n    Z -> 26\n    AA -> 27\n    AB -> 28 \n    ...\n\n\nExample 1:\n\nInput: \"A\"\nOutput: 1\n\n\nExample 2:\n\nInput: \"AB\"\nOutput: 28\n\n\nExample 3:\n\nInput: \"ZY\"\nOutput: 701\n\n\n \n\nConstraints:\n\n1 <= s.length <= 7\ns consists only of uppercase English letters.\ns is between \"A\" and \"FXSHRXW\"."},{"index":"172","url":"https://leetcode.com/problems/factorial-trailing-zeroes","title":"Factorial Trailing Zeroes","difficulty":"Easy","description":"Given an integer n, return the number of trailing zeroes in n!.\n\nFollow up: Could you write a solution that works in logarithmic time complexity?\n\n \n\nExample 1:\n\nInput: n = 3\nOutput: 0\nExplanation: 3! = 6, no trailing zero.\n\n\nExample 2:\n\nInput: n = 5\nOutput: 1\nExplanation: 5! = 120, one trailing zero.\n\n\nExample 3:\n\nInput: n = 0\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= n <= 104"},{"index":"173","url":"https://leetcode.com/problems/binary-search-tree-iterator","title":"Binary Search Tree Iterator","difficulty":"Medium","description":"Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.\n\nCalling next() will return the next smallest number in the BST.\n\n \n\nExample:\n\nBSTIterator iterator = new BSTIterator(root);\niterator.next();    // return 3\niterator.next();    // return 7\niterator.hasNext(); // return true\niterator.next();    // return 9\niterator.hasNext(); // return true\niterator.next();    // return 15\niterator.hasNext(); // return true\niterator.next();    // return 20\niterator.hasNext(); // return false\n\n\n \n\nNote:\n\nnext() and hasNext() should run in average O(1) time and uses O(h) memory, where h is the height of the tree.\nYou may assume that next() call will always be valid, that is, there will be at least a next smallest number in the BST when next() is called."},{"index":"174","url":"https://leetcode.com/problems/dungeon-game","title":"Dungeon Game","difficulty":"Hard","description":"The demons had captured the princess (P) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (K) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess.\n\nThe knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately.\n\nSome of the rooms are guarded by demons, so the knight loses health (negative integers) upon entering these rooms; other rooms are either empty (0's) or contain magic orbs that increase the knight's health (positive integers).\n\nIn order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step.\n\n \n\nWrite a function to determine the knight's minimum initial health so that he is able to rescue the princess.\n\nFor example, given the dungeon below, the initial health of the knight must be at least 7 if he follows the optimal path RIGHT-> RIGHT -> DOWN -> DOWN.\n\n-2 (K)\t-3\t3\n-5\t-10\t1\n10\t30\t-5 (P)\n\n \n\nNote:\n\nThe knight's health has no upper bound.\nAny room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned."},{"index":"175","url":"https://leetcode.com/problems/combine-two-tables","title":"Combine Two Tables","difficulty":"Easy","description":"SQL Schema\n\nTable: Person\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| PersonId    | int     |\n| FirstName   | varchar |\n| LastName    | varchar |\n+-------------+---------+\nPersonId is the primary key column for this table.\n\n\nTable: Address\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| AddressId   | int     |\n| PersonId    | int     |\n| City        | varchar |\n| State       | varchar |\n+-------------+---------+\nAddressId is the primary key column for this table.\n\n\n \n\nWrite a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:\n\nFirstName, LastName, City, State\n"},{"index":"176","url":"https://leetcode.com/problems/second-highest-salary","title":"Second Highest Salary","difficulty":"Easy","description":"SQL Schema\n\nWrite a SQL query to get the second highest salary from the Employee table.\n\n+----+--------+\n| Id | Salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+\n\n\nFor example, given the above Employee table, the query should return 200 as the second highest salary. If there is no second highest salary, then the query should return null.\n\n+---------------------+\n| SecondHighestSalary |\n+---------------------+\n| 200                 |\n+---------------------+\n"},{"index":"177","url":"https://leetcode.com/problems/nth-highest-salary","title":"Nth Highest Salary","difficulty":"Medium","description":"Write a SQL query to get the nth highest salary from the Employee table.\n\n+----+--------+\n| Id | Salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+\n\n\nFor example, given the above Employee table, the nth highest salary where n = 2 is 200. If there is no nth highest salary, then the query should return null.\n\n+------------------------+\n| getNthHighestSalary(2) |\n+------------------------+\n| 200                    |\n+------------------------+\n"},{"index":"178","url":"https://leetcode.com/problems/rank-scores","title":"Rank Scores","difficulty":"Medium","description":"SQL Schema\n\nWrite a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no \"holes\" between ranks.\n\n+----+-------+\n| Id | Score |\n+----+-------+\n| 1  | 3.50  |\n| 2  | 3.65  |\n| 3  | 4.00  |\n| 4  | 3.85  |\n| 5  | 4.00  |\n| 6  | 3.65  |\n+----+-------+\n\n\nFor example, given the above Scores table, your query should generate the following report (order by highest score):\n\n+-------+---------+\n| score | Rank    |\n+-------+---------+\n| 4.00  | 1       |\n| 4.00  | 1       |\n| 3.85  | 2       |\n| 3.65  | 3       |\n| 3.65  | 3       |\n| 3.50  | 4       |\n+-------+---------+\n\n\nImportant Note: For MySQL solutions, to escape reserved words used as column names, you can use an apostrophe before and after the keyword. For example `Rank`."},{"index":"179","url":"https://leetcode.com/problems/largest-number","title":"Largest Number","difficulty":"Medium","description":"Given a list of non-negative integers nums, arrange them such that they form the largest number.\n\nNote: The result may be very large, so you need to return a string instead of an integer.\n\n \n\nExample 1:\n\nInput: nums = [10,2]\nOutput: \"210\"\n\n\nExample 2:\n\nInput: nums = [3,30,34,5,9]\nOutput: \"9534330\"\n\n\nExample 3:\n\nInput: nums = [1]\nOutput: \"1\"\n\n\nExample 4:\n\nInput: nums = [10]\nOutput: \"10\"\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n0 <= nums[i] <= 109"},{"index":"180","url":"https://leetcode.com/problems/consecutive-numbers","title":"Consecutive Numbers","difficulty":"Medium","description":"SQL Schema\n\nWrite a SQL query to find all numbers that appear at least three times consecutively.\n\n+----+-----+\n| Id | Num |\n+----+-----+\n| 1  |  1  |\n| 2  |  1  |\n| 3  |  1  |\n| 4  |  2  |\n| 5  |  1  |\n| 6  |  2  |\n| 7  |  2  |\n+----+-----+\n\n\nFor example, given the above Logs table, 1 is the only number that appears consecutively for at least three times.\n\n+-----------------+\n| ConsecutiveNums |\n+-----------------+\n| 1               |\n+-----------------+\n"},{"index":"181","url":"https://leetcode.com/problems/employees-earning-more-than-their-managers","title":"Employees Earning More Than Their Managers","difficulty":"Easy","description":"SQL Schema\n\nThe Employee table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.\n\n+----+-------+--------+-----------+\n| Id | Name  | Salary | ManagerId |\n+----+-------+--------+-----------+\n| 1  | Joe   | 70000  | 3         |\n| 2  | Henry | 80000  | 4         |\n| 3  | Sam   | 60000  | NULL      |\n| 4  | Max   | 90000  | NULL      |\n+----+-------+--------+-----------+\n\n\nGiven the Employee table, write a SQL query that finds out employees who earn more than their managers. For the above table, Joe is the only employee who earns more than his manager.\n\n+----------+\n| Employee |\n+----------+\n| Joe      |\n+----------+\n"},{"index":"182","url":"https://leetcode.com/problems/duplicate-emails","title":"Duplicate Emails","difficulty":"Easy","description":"SQL Schema\n\nWrite a SQL query to find all duplicate emails in a table named Person.\n\n+----+---------+\n| Id | Email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+\n\n\nFor example, your query should return the following for the above table:\n\n+---------+\n| Email   |\n+---------+\n| a@b.com |\n+---------+\n\n\nNote: All emails are in lowercase."},{"index":"183","url":"https://leetcode.com/problems/customers-who-never-order","title":"Customers Who Never Order","difficulty":"Easy","description":"SQL Schema\n\nSuppose that a website contains two tables, the Customers table and the Orders table. Write a SQL query to find all customers who never order anything.\n\nTable: Customers.\n\n+----+-------+\n| Id | Name  |\n+----+-------+\n| 1  | Joe   |\n| 2  | Henry |\n| 3  | Sam   |\n| 4  | Max   |\n+----+-------+\n\n\nTable: Orders.\n\n+----+------------+\n| Id | CustomerId |\n+----+------------+\n| 1  | 3          |\n| 2  | 1          |\n+----+------------+\n\n\nUsing the above tables as example, return the following:\n\n+-----------+\n| Customers |\n+-----------+\n| Henry     |\n| Max       |\n+-----------+\n"},{"index":"184","url":"https://leetcode.com/problems/department-highest-salary","title":"Department Highest Salary","difficulty":"Medium","description":"SQL Schema\n\nThe Employee table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.\n\n+----+-------+--------+--------------+\n| Id | Name  | Salary | DepartmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 70000  | 1            |\n| 2  | Jim   | 90000  | 1            |\n| 3  | Henry | 80000  | 2            |\n| 4  | Sam   | 60000  | 2            |\n| 5  | Max   | 90000  | 1            |\n+----+-------+--------+--------------+\n\n\nThe Department table holds all departments of the company.\n\n+----+----------+\n| Id | Name     |\n+----+----------+\n| 1  | IT       |\n| 2  | Sales    |\n+----+----------+\n\n\nWrite a SQL query to find employees who have the highest salary in each of the departments. For the above tables, your SQL query should return the following rows (order of rows does not matter).\n\n+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| IT         | Jim      | 90000  |\n| Sales      | Henry    | 80000  |\n+------------+----------+--------+\n\n\nExplanation:\n\nMax and Jim both have the highest salary in the IT department and Henry has the highest salary in the Sales department."},{"index":"185","url":"https://leetcode.com/problems/department-top-three-salaries","title":"Department Top Three Salaries","difficulty":"Hard","description":"SQL Schema\n\nThe Employee table holds all employees. Every employee has an Id, and there is also a column for the department Id.\n\n+----+-------+--------+--------------+\n| Id | Name  | Salary | DepartmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 85000  | 1            |\n| 2  | Henry | 80000  | 2            |\n| 3  | Sam   | 60000  | 2            |\n| 4  | Max   | 90000  | 1            |\n| 5  | Janet | 69000  | 1            |\n| 6  | Randy | 85000  | 1            |\n| 7  | Will  | 70000  | 1            |\n+----+-------+--------+--------------+\n\n\nThe Department table holds all departments of the company.\n\n+----+----------+\n| Id | Name     |\n+----+----------+\n| 1  | IT       |\n| 2  | Sales    |\n+----+----------+\n\n\nWrite a SQL query to find employees who earn the top three salaries in each of the department. For the above tables, your SQL query should return the following rows (order of rows does not matter).\n\n+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| IT         | Randy    | 85000  |\n| IT         | Joe      | 85000  |\n| IT         | Will     | 70000  |\n| Sales      | Henry    | 80000  |\n| Sales      | Sam      | 60000  |\n+------------+----------+--------+\n\n\nExplanation:\n\nIn IT department, Max earns the highest salary, both Randy and Joe earn the second highest salary, and Will earns the third highest salary. There are only two employees in the Sales department, Henry earns the highest salary while Sam earns the second highest salary."},{"index":"187","url":"https://leetcode.com/problems/repeated-dna-sequences","title":"Repeated DNA Sequences","difficulty":"Medium","description":"All DNA is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T', for example: \"ACGAATTCCG\". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.\n\nWrite a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.\n\n \n\nExample 1:\n\nInput: s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\"\nOutput: [\"AAAAACCCCC\",\"CCCCCAAAAA\"]\n\n\nExample 2:\n\nInput: s = \"AAAAAAAAAAAAA\"\nOutput: [\"AAAAAAAAAA\"]\n\n\n \n\nConstraints:\n\n0 <= s.length <= 105\ns[i] is 'A', 'C', 'G', or 'T'."},{"index":"188","url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","title":"Best Time to Buy and Sell Stock IV","difficulty":"Hard","description":"You are given an integer array prices where prices[i] is the price of a given stock on the ith day.\n\nDesign an algorithm to find the maximum profit. You may complete at most k transactions.\n\nNotice that you may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n\n \n\nExample 1:\n\nInput: k = 2, prices = [2,4,1]\nOutput: 2\nExplanation: Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.\n\n\nExample 2:\n\nInput: k = 2, prices = [3,2,6,5,0,3]\nOutput: 7\nExplanation: Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n\n\n \n\nConstraints:\n\n0 <= k <= 109\n0 <= prices.length <= 1000\n0 <= prices[i] <= 1000"},{"index":"189","url":"https://leetcode.com/problems/rotate-array","title":"Rotate Array","difficulty":"Medium","description":"Given an array, rotate the array to the right by k steps, where k is non-negative.\n\nFollow up:\n\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\nCould you do it in-place with O(1) extra space?\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,4,5,6,7], k = 3\nOutput: [5,6,7,1,2,3,4]\nExplanation:\nrotate 1 steps to the right: [7,1,2,3,4,5,6]\nrotate 2 steps to the right: [6,7,1,2,3,4,5]\nrotate 3 steps to the right: [5,6,7,1,2,3,4]\n\n\nExample 2:\n\nInput: nums = [-1,-100,3,99], k = 2\nOutput: [3,99,-1,-100]\nExplanation: \nrotate 1 steps to the right: [99,-1,-100,3]\nrotate 2 steps to the right: [3,99,-1,-100]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 2 * 104\n-231 <= nums[i] <= 231 - 1\n0 <= k <= 105"},{"index":"190","url":"https://leetcode.com/problems/reverse-bits","title":"Reverse Bits","difficulty":"Easy","description":"Reverse bits of a given 32 bits unsigned integer.\n\nNote:\n\nNote that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.\nIn Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.\n\nFollow up:\n\nIf this function is called many times, how would you optimize it?\n\n \n\nExample 1:\n\nInput: n = 00000010100101000001111010011100\nOutput:    964176192 (00111001011110000010100101000000)\nExplanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.\n\n\nExample 2:\n\nInput: n = 11111111111111111111111111111101\nOutput:   3221225471 (10111111111111111111111111111111)\nExplanation: The input binary string 11111111111111111111111111111101 represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is 10111111111111111111111111111111.\n\n\n \n\nConstraints:\n\nThe input must be a binary string of length 32"},{"index":"191","url":"https://leetcode.com/problems/number-of-1-bits","title":"Number of 1 Bits","difficulty":"Easy","description":"Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight).\n\nNote:\n\nNote that in some languages such as Java, there is no unsigned integer type. In this case, the input will be given as a signed integer type. It should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.\nIn Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 3 above, the input represents the signed integer. -3.\n\nFollow up: If this function is called many times, how would you optimize it?\n\n \n\nExample 1:\n\nInput: n = 00000000000000000000000000001011\nOutput: 3\nExplanation: The input binary string 00000000000000000000000000001011 has a total of three '1' bits.\n\n\nExample 2:\n\nInput: n = 00000000000000000000000010000000\nOutput: 1\nExplanation: The input binary string 00000000000000000000000010000000 has a total of one '1' bit.\n\n\nExample 3:\n\nInput: n = 11111111111111111111111111111101\nOutput: 31\nExplanation: The input binary string 11111111111111111111111111111101 has a total of thirty one '1' bits.\n\n\n \n\nConstraints:\n\nThe input must be a binary string of length 32"},{"index":"192","url":"https://leetcode.com/problems/word-frequency","title":"Word Frequency","difficulty":"Medium","description":"Write a bash script to calculate the frequency of each word in a text file words.txt.\n\nFor simplicity sake, you may assume:\n\nwords.txt contains only lowercase characters and space ' ' characters.\nEach word must consist of lowercase characters only.\nWords are separated by one or more whitespace characters.\n\nExample:\n\nAssume that words.txt has the following content:\n\nthe day is sunny the the\nthe sunny is is\n\n\nYour script should output the following, sorted by descending frequency:\n\nthe 4\nis 3\nsunny 2\nday 1\n\n\nNote:\n\nDon't worry about handling ties, it is guaranteed that each word's frequency count is unique.\nCould you write it in one-line using Unix pipes?"},{"index":"193","url":"https://leetcode.com/problems/valid-phone-numbers","title":"Valid Phone Numbers","difficulty":"Easy","description":"Given a text file file.txt that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.\n\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\n\nYou may also assume each line in the text file must not contain leading or trailing white spaces.\n\nExample:\n\nAssume that file.txt has the following content:\n\n987-123-4567\n123 456 7890\n(123) 456-7890\n\n\nYour script should output the following valid phone numbers:\n\n987-123-4567\n(123) 456-7890\n"},{"index":"194","url":"https://leetcode.com/problems/transpose-file","title":"Transpose File","difficulty":"Medium","description":"Given a text file file.txt, transpose its content.\n\nYou may assume that each row has the same number of columns and each field is separated by the ' ' character.\n\nExample:\n\nIf file.txt has the following content:\n\nname age\nalice 21\nryan 30\n\n\nOutput the following:\n\nname alice ryan\nage 21 30\n\n\n "},{"index":"195","url":"https://leetcode.com/problems/tenth-line","title":"Tenth Line","difficulty":"Easy","description":"Given a text file file.txt, print just the 10th line of the file.\n\nExample:\n\nAssume that file.txt has the following content:\n\nLine 1\nLine 2\nLine 3\nLine 4\nLine 5\nLine 6\nLine 7\nLine 8\nLine 9\nLine 10\n\n\nYour script should output the tenth line, which is:\n\nLine 10\n\nNote:\n1. If the file contains less than 10 lines, what should you output?\n2. There's at least three different solutions. Try to explore all possibilities."},{"index":"196","url":"https://leetcode.com/problems/delete-duplicate-emails","title":"Delete Duplicate Emails","difficulty":"Easy","description":"Write a SQL query to delete all duplicate email entries in a table named Person, keeping only unique emails based on its smallest Id.\n\n+----+------------------+\n| Id | Email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n| 3  | john@example.com |\n+----+------------------+\nId is the primary key column for this table.\n\n\nFor example, after running your query, the above Person table should have the following rows:\n\n+----+------------------+\n| Id | Email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n+----+------------------+\n\n\nNote:\n\nYour output is the whole Person table after executing your sql. Use delete statement."},{"index":"197","url":"https://leetcode.com/problems/rising-temperature","title":"Rising Temperature","difficulty":"Easy","description":"SQL Schema\n\nTable: Weather\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| recordDate    | date    |\n| temperature   | int     |\n+---------------+---------+\nid is the primary key for this table.\nThis table contains information about the temperature in a certain day.\n\n\n \n\nWrite an SQL query to find all dates' id with higher temperature compared to its previous dates (yesterday).\n\nReturn the result table in any order.\n\nThe query result format is in the following example:\n\nWeather\n+----+------------+-------------+\n| id | recordDate | Temperature |\n+----+------------+-------------+\n| 1  | 2015-01-01 | 10          |\n| 2  | 2015-01-02 | 25          |\n| 3  | 2015-01-03 | 20          |\n| 4  | 2015-01-04 | 30          |\n+----+------------+-------------+\n\nResult table:\n+----+\n| id |\n+----+\n| 2  |\n| 4  |\n+----+\nIn 2015-01-02, temperature was higher than the previous day (10 -> 25).\nIn 2015-01-04, temperature was higher than the previous day (30 -> 20).\n"},{"index":"198","url":"https://leetcode.com/problems/house-robber","title":"House Robber","difficulty":"Easy","description":"You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.\n\nGiven a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,1]\nOutput: 4\nExplanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).\n             Total amount you can rob = 1 + 3 = 4.\n\n\nExample 2:\n\nInput: nums = [2,7,9,3,1]\nOutput: 12\nExplanation: Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\n             Total amount you can rob = 2 + 9 + 1 = 12.\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 100\n0 <= nums[i] <= 400"},{"index":"199","url":"https://leetcode.com/problems/binary-tree-right-side-view","title":"Binary Tree Right Side View","difficulty":"Medium","description":"Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.\n\nExample:\n\nInput: [1,2,3,null,5,null,4]\nOutput: [1, 3, 4]\nExplanation:\n\n   1            <---\n /   \\\n2     3         <---\n \\     \\\n  5     4       <---\n"},{"index":"200","url":"https://leetcode.com/problems/number-of-islands","title":"Number of Islands","difficulty":"Medium","description":"Given an m x n 2d grid map of '1's (land) and '0's (water), return the number of islands.\n\nAn island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.\n\n \n\nExample 1:\n\nInput: grid = [\n  [\"1\",\"1\",\"1\",\"1\",\"0\"],\n  [\"1\",\"1\",\"0\",\"1\",\"0\"],\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"0\",\"0\",\"0\",\"0\",\"0\"]\n]\nOutput: 1\n\n\nExample 2:\n\nInput: grid = [\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"0\",\"0\",\"1\",\"0\",\"0\"],\n  [\"0\",\"0\",\"0\",\"1\",\"1\"]\n]\nOutput: 3\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 300\ngrid[i][j] is '0' or '1'."},{"index":"201","url":"https://leetcode.com/problems/bitwise-and-of-numbers-range","title":"Bitwise AND of Numbers Range","difficulty":"Medium","description":"Given a range [m, n] where 0 <= m <= n <= 2147483647, return the bitwise AND of all numbers in this range, inclusive.\n\nExample 1:\n\nInput: [5,7]\nOutput: 4\n\n\nExample 2:\n\nInput: [0,1]\nOutput: 0"},{"index":"202","url":"https://leetcode.com/problems/happy-number","title":"Happy Number","difficulty":"Easy","description":"Write an algorithm to determine if a number n is \"happy\".\n\nA happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.\n\nReturn True if n is a happy number, and False if not.\n\nExample: \n\nInput: 19\nOutput: true\nExplanation: \n12 + 92 = 82\n82 + 22 = 68\n62 + 82 = 100\n12 + 02 + 02 = 1\n"},{"index":"203","url":"https://leetcode.com/problems/remove-linked-list-elements","title":"Remove Linked List Elements","difficulty":"Easy","description":"Remove all elements from a linked list of integers that have value val.\n\nExample:\n\nInput:  1->2->6->3->4->5->6, val = 6\nOutput: 1->2->3->4->5\n"},{"index":"204","url":"https://leetcode.com/problems/count-primes","title":"Count Primes","difficulty":"Easy","description":"Count the number of prime numbers less than a non-negative number, n.\n\n \n\nExample 1:\n\nInput: n = 10\nOutput: 4\nExplanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.\n\n\nExample 2:\n\nInput: n = 0\nOutput: 0\n\n\nExample 3:\n\nInput: n = 1\nOutput: 0\n\n\n \n\nConstraints:\n\n0 <= n <= 5 * 106"},{"index":"205","url":"https://leetcode.com/problems/isomorphic-strings","title":"Isomorphic Strings","difficulty":"Easy","description":"Given two strings s and t, determine if they are isomorphic.\n\nTwo strings are isomorphic if the characters in s can be replaced to get t.\n\nAll occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.\n\nExample 1:\n\nInput: s = \"egg\", t = \"add\"\nOutput: true\n\n\nExample 2:\n\nInput: s = \"foo\", t = \"bar\"\nOutput: false\n\nExample 3:\n\nInput: s = \"paper\", t = \"title\"\nOutput: true\n\nNote:\nYou may assume both s and t have the same length."},{"index":"206","url":"https://leetcode.com/problems/reverse-linked-list","title":"Reverse Linked List","difficulty":"Easy","description":"Reverse a singly linked list.\n\nExample:\n\nInput: 1->2->3->4->5->NULL\nOutput: 5->4->3->2->1->NULL\n\n\nFollow up:\n\nA linked list can be reversed either iteratively or recursively. Could you implement both?"},{"index":"207","url":"https://leetcode.com/problems/course-schedule","title":"Course Schedule","difficulty":"Medium","description":"There are a total of numCourses courses you have to take, labeled from 0 to numCourses-1.\n\nSome courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: [0,1]\n\nGiven the total number of courses and a list of prerequisite pairs, is it possible for you to finish all courses?\n\n \n\nExample 1:\n\nInput: numCourses = 2, prerequisites = [[1,0]]\nOutput: true\nExplanation: There are a total of 2 courses to take. \n             To take course 1 you should have finished course 0. So it is possible.\n\n\nExample 2:\n\nInput: numCourses = 2, prerequisites = [[1,0],[0,1]]\nOutput: false\nExplanation: There are a total of 2 courses to take. \n             To take course 1 you should have finished course 0, and to take course 0 you should\n             also have finished course 1. So it is impossible.\n\n\n \n\nConstraints:\n\nThe input prerequisites is a graph represented by a list of edges, not adjacency matrices. Read more about how a graph is represented.\nYou may assume that there are no duplicate edges in the input prerequisites.\n1 <= numCourses <= 10^5"},{"index":"208","url":"https://leetcode.com/problems/implement-trie-prefix-tree","title":"Implement Trie (Prefix Tree)","difficulty":"Medium","description":"Implement a trie with insert, search, and startsWith methods.\n\nExample:\n\nTrie trie = new Trie();\n\ntrie.insert(\"apple\");\ntrie.search(\"apple\");   // returns true\ntrie.search(\"app\");     // returns false\ntrie.startsWith(\"app\"); // returns true\ntrie.insert(\"app\");   \ntrie.search(\"app\");     // returns true\n\n\nNote:\n\nYou may assume that all inputs are consist of lowercase letters a-z.\nAll inputs are guaranteed to be non-empty strings."},{"index":"209","url":"https://leetcode.com/problems/minimum-size-subarray-sum","title":"Minimum Size Subarray Sum","difficulty":"Medium","description":"Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum ≥ s. If there isn't one, return 0 instead.\n\nExample: \n\nInput: s = 7, nums = [2,3,1,2,4,3]\nOutput: 2\nExplanation: the subarray [4,3] has the minimal length under the problem constraint.\nFollow up:\nIf you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log n). "},{"index":"210","url":"https://leetcode.com/problems/course-schedule-ii","title":"Course Schedule II","difficulty":"Medium","description":"There are a total of n courses you have to take labelled from 0 to n - 1.\n\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\n\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\n\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array.\n\n \n\nExample 1:\n\nInput: numCourses = 2, prerequisites = [[1,0]]\nOutput: [0,1]\nExplanation: There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1].\n\n\nExample 2:\n\nInput: numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]\nOutput: [0,2,1,3]\nExplanation: There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0.\nSo one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3].\n\n\nExample 3:\n\nInput: numCourses = 1, prerequisites = []\nOutput: [0]\n\n\n \n\nConstraints:\n\n1 <= numCourses <= 2000\n0 <= prerequisites.length <= numCourses * (numCourses - 1)\nprerequisites[i].length == 2\n0 <= ai, bi < numCourses\nai != bi\nAll the pairs [ai, bi] are distinct."},{"index":"211","url":"https://leetcode.com/problems/design-add-and-search-words-data-structure","title":"Design Add and Search Words Data Structure","difficulty":"Medium","description":"Design a data structure that supports adding new words and finding if a string matches any previously added string.\n\nImplement the WordDictionary class:\n\nWordDictionary() Initializes the object.\nvoid addWord(word) Adds word to the data structure, it can be matched later.\nbool search(word) Returns true if there is any string in the data structure that matches word or false otherwise. word may contain dots '.' where dots can be matched with any letter.\n\n \n\nExample:\n\nInput\n[\"WordDictionary\",\"addWord\",\"addWord\",\"addWord\",\"search\",\"search\",\"search\",\"search\"]\n[[],[\"bad\"],[\"dad\"],[\"mad\"],[\"pad\"],[\"bad\"],[\".ad\"],[\"b..\"]]\nOutput\n[null,null,null,null,false,true,true,true]\n\nExplanation\nWordDictionary wordDictionary = new WordDictionary();\nwordDictionary.addWord(\"bad\");\nwordDictionary.addWord(\"dad\");\nwordDictionary.addWord(\"mad\");\nwordDictionary.search(\"pad\"); // return False\nwordDictionary.search(\"bad\"); // return True\nwordDictionary.search(\".ad\"); // return True\nwordDictionary.search(\"b..\"); // return True\n\n\n \n\nConstraints:\n\n1 <= word.length <= 500\nword in addWord consists lower-case English letters.\nword in search consist of  '.' or lower-case English letters.\nAt most 50000 calls will be made to addWord and search."},{"index":"212","url":"https://leetcode.com/problems/word-search-ii","title":"Word Search II","difficulty":"Hard","description":"Given an m x n board of characters and a list of strings words, return all words on the board.\n\nEach word must be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.\n\n \n\nExample 1:\n\nInput: board = [[\"o\",\"a\",\"a\",\"n\"],[\"e\",\"t\",\"a\",\"e\"],[\"i\",\"h\",\"k\",\"r\"],[\"i\",\"f\",\"l\",\"v\"]], words = [\"oath\",\"pea\",\"eat\",\"rain\"]\nOutput: [\"eat\",\"oath\"]\n\n\nExample 2:\n\nInput: board = [[\"a\",\"b\"],[\"c\",\"d\"]], words = [\"abcb\"]\nOutput: []\n\n\n \n\nConstraints:\n\nm == board.length\nn == board[i].length\n1 <= m, n <= 12\nboard[i][j] is a lowercase English letter.\n1 <= words.length <= 3 * 104\n1 <= words[i].length <= 10\nwords[i] consists of lowercase English letters.\nAll the strings of words are unique."},{"index":"213","url":"https://leetcode.com/problems/house-robber-ii","title":"House Robber II","difficulty":"Medium","description":"You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and it will automatically contact the police if two adjacent houses were broken into on the same night.\n\nGiven a list of non-negative integers nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.\n\n \n\nExample 1:\n\nInput: nums = [2,3,2]\nOutput: 3\nExplanation: You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.\n\n\nExample 2:\n\nInput: nums = [1,2,3,1]\nOutput: 4\nExplanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\n\n\nExample 3:\n\nInput: nums = [0]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n0 <= nums[i] <= 1000"},{"index":"214","url":"https://leetcode.com/problems/shortest-palindrome","title":"Shortest Palindrome","difficulty":"Hard","description":"Given a string s, you can convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.\n\n \n\nExample 1:\n\nInput: s = \"aacecaaa\"\nOutput: \"aaacecaaa\"\n\n\nExample 2:\n\nInput: s = \"abcd\"\nOutput: \"dcbabcd\"\n\n\n \n\nConstraints:\n\n0 <= s.length <= 5 * 104\ns consists of lowercase English letters only."},{"index":"215","url":"https://leetcode.com/problems/kth-largest-element-in-an-array","title":"Kth Largest Element in an Array","difficulty":"Medium","description":"Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.\n\nExample 1:\n\nInput: [3,2,1,5,6,4] and k = 2\nOutput: 5\n\n\nExample 2:\n\nInput: [3,2,3,1,2,4,5,5,6] and k = 4\nOutput: 4\n\nNote:\nYou may assume k is always valid, 1 ≤ k ≤ array's length."},{"index":"216","url":"https://leetcode.com/problems/combination-sum-iii","title":"Combination Sum III","difficulty":"Medium","description":"Find all valid combinations of k numbers that sum up to n such that the following conditions are true:\n\nOnly numbers 1 through 9 are used.\nEach number is used at most once.\n\nReturn a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.\n\n \n\nExample 1:\n\nInput: k = 3, n = 7\nOutput: [[1,2,4]]\nExplanation:\n1 + 2 + 4 = 7\nThere are no other valid combinations.\n\nExample 2:\n\nInput: k = 3, n = 9\nOutput: [[1,2,6],[1,3,5],[2,3,4]]\nExplanation:\n1 + 2 + 6 = 9\n1 + 3 + 5 = 9\n2 + 3 + 4 = 9\nThere are no other valid combinations.\n\n\nExample 3:\n\nInput: k = 4, n = 1\nOutput: []\nExplanation: There are no valid combinations. [1,2,1] is not valid because 1 is used twice.\n\n\nExample 4:\n\nInput: k = 3, n = 2\nOutput: []\nExplanation: There are no valid combinations.\n\n\nExample 5:\n\nInput: k = 9, n = 45\nOutput: [[1,2,3,4,5,6,7,8,9]]\nExplanation:\n1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 = 45\n​​​​​​​There are no other valid combinations.\n\n\n \n\nConstraints:\n\n2 <= k <= 9\n1 <= n <= 60"},{"index":"217","url":"https://leetcode.com/problems/contains-duplicate","title":"Contains Duplicate","difficulty":"Easy","description":"Given an array of integers, find if the array contains any duplicates.\n\nYour function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.\n\nExample 1:\n\nInput: [1,2,3,1]\nOutput: true\n\nExample 2:\n\nInput: [1,2,3,4]\nOutput: false\n\nExample 3:\n\nInput: [1,1,1,3,3,4,3,2,4,2]\nOutput: true"},{"index":"218","url":"https://leetcode.com/problems/the-skyline-problem","title":"The Skyline Problem","difficulty":"Hard","description":"A city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Now suppose you are given the locations and height of all the buildings as shown on a cityscape photo (Figure A), write a program to output the skyline formed by these buildings collectively (Figure B).\n\n \n\nThe geometric information of each building is represented by a triplet of integers [Li, Ri, Hi], where Li and Ri are the x coordinates of the left and right edge of the ith building, respectively, and Hi is its height. It is guaranteed that 0 ≤ Li, Ri ≤ INT_MAX, 0 < Hi ≤ INT_MAX, and Ri - Li > 0. You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.\n\nFor instance, the dimensions of all buildings in Figure A are recorded as: [ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] .\n\nThe output is a list of \"key points\" (red dots in Figure B) in the format of [ [x1,y1], [x2, y2], [x3, y3], ... ] that uniquely defines a skyline. A key point is the left endpoint of a horizontal line segment. Note that the last key point, where the rightmost building ends, is merely used to mark the termination of the skyline, and always has zero height. Also, the ground in between any two adjacent buildings should be considered part of the skyline contour.\n\nFor instance, the skyline in Figure B should be represented as:[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ].\n\nNotes:\n\nThe number of buildings in any input list is guaranteed to be in the range [0, 10000].\nThe input list is already sorted in ascending order by the left x position Li.\nThe output list must be sorted by the x position.\nThere must be no consecutive horizontal lines of equal height in the output skyline. For instance, [...[2 3], [4 5], [7 5], [11 5], [12 7]...] is not acceptable; the three lines of height 5 should be merged into one in the final output as such: [...[2 3], [4 5], [12 7], ...]"},{"index":"219","url":"https://leetcode.com/problems/contains-duplicate-ii","title":"Contains Duplicate II","difficulty":"Easy","description":"Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.\n\nExample 1:\n\nInput: nums = [1,2,3,1], k = 3\nOutput: true\n\n\nExample 2:\n\nInput: nums = [1,0,1,1], k = 1\nOutput: true\n\n\nExample 3:\n\nInput: nums = [1,2,3,1,2,3], k = 2\nOutput: false\n"},{"index":"220","url":"https://leetcode.com/problems/contains-duplicate-iii","title":"Contains Duplicate III","difficulty":"Medium","description":"Given an array of integers, find out whether there are two distinct indices i and j in the array such that the absolute difference between nums[i] and nums[j] is at most t and the absolute difference between i and j is at most k.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,1], k = 3, t = 0\nOutput: true\n\n\nExample 2:\n\nInput: nums = [1,0,1,1], k = 1, t = 2\nOutput: true\n\n\nExample 3:\n\nInput: nums = [1,5,9,1,5,9], k = 2, t = 3\nOutput: false\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 2 * 104\n-231 <= nums[i] <= 231 - 1\n0 <= k <= 104\n0 <= t <= 231 - 1"},{"index":"221","url":"https://leetcode.com/problems/maximal-square","title":"Maximal Square","difficulty":"Medium","description":"Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.\n\nExample:\n\nInput: \n\n1 0 1 0 0\n1 0 1 1 1\n1 1 1 1 1\n1 0 0 1 0\n\nOutput: 4\n"},{"index":"222","url":"https://leetcode.com/problems/count-complete-tree-nodes","title":"Count Complete Tree Nodes","difficulty":"Medium","description":"Given a complete binary tree, count the number of nodes.\n\nNote:\n\nDefinition of a complete binary tree from Wikipedia:\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n\nExample:\n\nInput: \n    1\n   / \\\n  2   3\n / \\  /\n4  5 6\n\nOutput: 6"},{"index":"223","url":"https://leetcode.com/problems/rectangle-area","title":"Rectangle Area","difficulty":"Medium","description":"Find the total area covered by two rectilinear rectangles in a 2D plane.\n\nEach rectangle is defined by its bottom left corner and top right corner as shown in the figure.\n\nExample:\n\nInput: A = -3, B = 0, C = 3, D = 4, E = 0, F = -1, G = 9, H = 2\nOutput: 45\n\nNote:\n\nAssume that the total area is never beyond the maximum possible value of int."},{"index":"224","url":"https://leetcode.com/problems/basic-calculator","title":"Basic Calculator","difficulty":"Hard","description":"Implement a basic calculator to evaluate a simple expression string.\n\nThe expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces .\n\nExample 1:\n\nInput: \"1 + 1\"\nOutput: 2\n\n\nExample 2:\n\nInput: \" 2-1 + 2 \"\nOutput: 3\n\nExample 3:\n\nInput: \"(1+(4+5+2)-3)+(6+8)\"\nOutput: 23\nNote:\nYou may assume that the given expression is always valid.\nDo not use the eval built-in library function."},{"index":"225","url":"https://leetcode.com/problems/implement-stack-using-queues","title":"Implement Stack using Queues","difficulty":"Easy","description":"Implement a last in first out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal queue (push, top, pop, and empty).\n\nImplement the MyStack class:\n\nvoid push(int x) Pushes element x to the top of the stack.\nint pop() Removes the element on the top of the stack and returns it.\nint top() Returns the element on the top of the stack.\nboolean empty() Returns true if the stack is empty, false otherwise.\n\nNotes:\n\nYou must use only standard operations of a queue, which means only push to back, peek/pop from front, size, and is empty operations are valid.\nDepending on your language, the queue may not be supported natively. You may simulate a queue using a list or deque (double-ended queue), as long as you use only a queue's standard operations.\n\nFollow-up: Can you implement the stack such that each operation is amortized O(1) time complexity? In other words, performing n operations will take overall O(n) time even if one of those operations may take longer.\n\n \n\nExample 1:\n\nInput\n[\"MyStack\", \"push\", \"push\", \"top\", \"pop\", \"empty\"]\n[[], [1], [2], [], [], []]\nOutput\n[null, null, null, 2, 2, false]\n\nExplanation\nMyStack myStack = new MyStack();\nmyStack.push(1);\nmyStack.push(2);\nmyStack.top(); // return 2\nmyStack.pop(); // return 2\nmyStack.empty(); // return False\n\n\n \n\nConstraints:\n\n1 <= x <= 9\nAt most 100 calls will be made to push, pop, top, and empty.\nAll the calls to pop and top are valid."},{"index":"226","url":"https://leetcode.com/problems/invert-binary-tree","title":"Invert Binary Tree","difficulty":"Easy","description":"Invert a binary tree.\n\nExample:\n\nInput:\n\n     4\n   /   \\\n  2     7\n / \\   / \\\n1   3 6   9\n\nOutput:\n\n     4\n   /   \\\n  7     2\n / \\   / \\\n9   6 3   1\n\nTrivia:\nThis problem was inspired by this original tweet by Max Howell:\n\nGoogle: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so f*** off."},{"index":"227","url":"https://leetcode.com/problems/basic-calculator-ii","title":"Basic Calculator II","difficulty":"Medium","description":"Implement a basic calculator to evaluate a simple expression string.\n\nThe expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.\n\nExample 1:\n\nInput: \"3+2*2\"\nOutput: 7\n\n\nExample 2:\n\nInput: \" 3/2 \"\nOutput: 1\n\nExample 3:\n\nInput: \" 3+5 / 2 \"\nOutput: 5\n\n\nNote:\n\nYou may assume that the given expression is always valid.\nDo not use the eval built-in library function."},{"index":"228","url":"https://leetcode.com/problems/summary-ranges","title":"Summary Ranges","difficulty":"Easy","description":"You are given a sorted unique integer array nums.\n\nReturn the smallest sorted list of ranges that cover all the numbers in the array exactly. That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums.\n\nEach range [a,b] in the list should be output as:\n\n\"a->b\" if a != b\n\"a\" if a == b\n\n \n\nExample 1:\n\nInput: nums = [0,1,2,4,5,7]\nOutput: [\"0->2\",\"4->5\",\"7\"]\nExplanation: The ranges are:\n[0,2] --> \"0->2\"\n[4,5] --> \"4->5\"\n[7,7] --> \"7\"\n\n\nExample 2:\n\nInput: nums = [0,2,3,4,6,8,9]\nOutput: [\"0\",\"2->4\",\"6\",\"8->9\"]\nExplanation: The ranges are:\n[0,0] --> \"0\"\n[2,4] --> \"2->4\"\n[6,6] --> \"6\"\n[8,9] --> \"8->9\"\n\n\nExample 3:\n\nInput: nums = []\nOutput: []\n\n\nExample 4:\n\nInput: nums = [-1]\nOutput: [\"-1\"]\n\n\nExample 5:\n\nInput: nums = [0]\nOutput: [\"0\"]\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 20\n-231 <= nums[i] <= 231 - 1\nAll the values of nums are unique.\nnums is sorted in ascending order."},{"index":"229","url":"https://leetcode.com/problems/majority-element-ii","title":"Majority Element II","difficulty":"Medium","description":"Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.\n\nFollow-up: Could you solve the problem in linear time and in O(1) space?\n\n \n\nExample 1:\n\nInput: nums = [3,2,3]\nOutput: [3]\n\n\nExample 2:\n\nInput: nums = [1]\nOutput: [1]\n\n\nExample 3:\n\nInput: nums = [1,2]\nOutput: [1,2]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 5 * 104\n-109 <= nums[i] <= 109"},{"index":"230","url":"https://leetcode.com/problems/kth-smallest-element-in-a-bst","title":"Kth Smallest Element in a BST","difficulty":"Medium","description":"Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.\n\n \n\nExample 1:\n\nInput: root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n   2\nOutput: 1\n\nExample 2:\n\nInput: root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\nOutput: 3\n\n\nFollow up:\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?\n\n \n\nConstraints:\n\nThe number of elements of the BST is between 1 to 10^4.\nYou may assume k is always valid, 1 ≤ k ≤ BST's total elements."},{"index":"231","url":"https://leetcode.com/problems/power-of-two","title":"Power of Two","difficulty":"Easy","description":"Given an integer n, return true if it is a power of two. Otherwise, return false.\n\nAn integer n is a power of two, if there exists an integer x such that n == 2x.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: true\nExplanation: 20 = 1\n\n\nExample 2:\n\nInput: n = 16\nOutput: true\nExplanation: 24 = 16\n\n\nExample 3:\n\nInput: n = 3\nOutput: false\n\n\nExample 4:\n\nInput: n = 4\nOutput: true\n\n\nExample 5:\n\nInput: n = 5\nOutput: false\n\n\n \n\nConstraints:\n\n-231 <= n <= 231 - 1"},{"index":"232","url":"https://leetcode.com/problems/implement-queue-using-stacks","title":"Implement Queue using Stacks","difficulty":"Easy","description":"Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty).\n\nImplement the MyQueue class:\n\nvoid push(int x) Pushes element x to the back of the queue.\nint pop() Removes the element from the front of the queue and returns it.\nint peek() Returns the element at the front of the queue.\nboolean empty() Returns true if the queue is empty, false otherwise.\n\nNotes:\n\nYou must use only standard operations of a stack, which means only push to top, peek/pop from top, size, and is empty operations are valid.\nDepending on your language, the stack may not be supported natively. You may simulate a stack using a list or deque (double-ended queue) as long as you use only a stack's standard operations.\n\nFollow-up: Can you implement the queue such that each operation is amortized O(1) time complexity? In other words, performing n operations will take overall O(n) time even if one of those operations may take longer.\n\n \n\nExample 1:\n\nInput\n[\"MyQueue\", \"push\", \"push\", \"peek\", \"pop\", \"empty\"]\n[[], [1], [2], [], [], []]\nOutput\n[null, null, null, 1, 1, false]\n\nExplanation\nMyQueue myQueue = new MyQueue();\nmyQueue.push(1); // queue is: [1]\nmyQueue.push(2); // queue is: [1, 2] (leftmost is front of the queue)\nmyQueue.peek(); // return 1\nmyQueue.pop(); // return 1, queue is [2]\nmyQueue.empty(); // return false\n\n\n \n\nConstraints:\n\n1 <= x <= 9\nAt most 100 calls will be made to push, pop, peek, and empty.\nAll the calls to pop and peek are valid."},{"index":"233","url":"https://leetcode.com/problems/number-of-digit-one","title":"Number of Digit One","difficulty":"Hard","description":"Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n\nExample:\n\nInput: 13\nOutput: 6 \nExplanation: Digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.\n"},{"index":"234","url":"https://leetcode.com/problems/palindrome-linked-list","title":"Palindrome Linked List","difficulty":"Easy","description":"Given a singly linked list, determine if it is a palindrome.\n\nExample 1:\n\nInput: 1->2\nOutput: false\n\nExample 2:\n\nInput: 1->2->2->1\nOutput: true\n\nFollow up:\nCould you do it in O(n) time and O(1) space?"},{"index":"235","url":"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree","title":"Lowest Common Ancestor of a Binary Search Tree","difficulty":"Easy","description":"Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.\n\nAccording to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”\n\n \n\nExample 1:\n\nInput: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8\nOutput: 6\nExplanation: The LCA of nodes 2 and 8 is 6.\n\n\nExample 2:\n\nInput: root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4\nOutput: 2\nExplanation: The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.\n\n\nExample 3:\n\nInput: root = [2,1], p = 2, q = 1\nOutput: 2\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 105].\n-109 <= Node.val <= 109\nAll Node.val are unique.\np != q\np and q will exist in the BST."},{"index":"236","url":"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree","title":"Lowest Common Ancestor of a Binary Tree","difficulty":"Medium","description":"Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.\n\nAccording to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).”\n\n \n\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\nOutput: 3\nExplanation: The LCA of nodes 5 and 1 is 3.\n\n\nExample 2:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\nOutput: 5\nExplanation: The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.\n\n\nExample 3:\n\nInput: root = [1,2], p = 1, q = 2\nOutput: 1\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 105].\n-109 <= Node.val <= 109\nAll Node.val are unique.\np != q\np and q will exist in the tree."},{"index":"237","url":"https://leetcode.com/problems/delete-node-in-a-linked-list","title":"Delete Node in a Linked List","difficulty":"Easy","description":"Write a function to delete a node in a singly-linked list. You will not be given access to the head of the list, instead you will be given access to the node to be deleted directly.\n\nIt is guaranteed that the node to be deleted is not a tail node in the list.\n\n \n\nExample 1:\n\nInput: head = [4,5,1,9], node = 5\nOutput: [4,1,9]\nExplanation: You are given the second node with value 5, the linked list should become 4 -> 1 -> 9 after calling your function.\n\n\nExample 2:\n\nInput: head = [4,5,1,9], node = 1\nOutput: [4,5,9]\nExplanation: You are given the third node with value 1, the linked list should become 4 -> 5 -> 9 after calling your function.\n\n\nExample 3:\n\nInput: head = [1,2,3,4], node = 3\nOutput: [1,2,4]\n\n\nExample 4:\n\nInput: head = [0,1], node = 0\nOutput: [1]\n\n\nExample 5:\n\nInput: head = [-3,5,-99], node = -3\nOutput: [5,-99]\n\n\n \n\nConstraints:\n\nThe number of the nodes in the given list is in the range [2, 1000].\n-1000 <= Node.val <= 1000\nThe value of each node in the list is unique.\nThe node to be deleted is in the list and is not a tail node"},{"index":"238","url":"https://leetcode.com/problems/product-of-array-except-self","title":"Product of Array Except Self","difficulty":"Medium","description":"Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\n\nExample:\n\nInput:  [1,2,3,4]\nOutput: [24,12,8,6]\n\n\nConstraint: It's guaranteed that the product of the elements of any prefix or suffix of the array (including the whole array) fits in a 32 bit integer.\n\nNote: Please solve it without division and in O(n).\n\nFollow up:\nCould you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.)"},{"index":"239","url":"https://leetcode.com/problems/sliding-window-maximum","title":"Sliding Window Maximum","difficulty":"Hard","description":"You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.\n\nReturn the max sliding window.\n\n \n\nExample 1:\n\nInput: nums = [1,3,-1,-3,5,3,6,7], k = 3\nOutput: [3,3,5,5,6,7]\nExplanation: \nWindow position                Max\n---------------               -----\n[1  3  -1] -3  5  3  6  7       3\n 1 [3  -1  -3] 5  3  6  7       3\n 1  3 [-1  -3  5] 3  6  7       5\n 1  3  -1 [-3  5  3] 6  7       5\n 1  3  -1  -3 [5  3  6] 7       6\n 1  3  -1  -3  5 [3  6  7]      7\n\n\nExample 2:\n\nInput: nums = [1], k = 1\nOutput: [1]\n\n\nExample 3:\n\nInput: nums = [1,-1], k = 1\nOutput: [1,-1]\n\n\nExample 4:\n\nInput: nums = [9,11], k = 2\nOutput: [11]\n\n\nExample 5:\n\nInput: nums = [4,-2], k = 2\nOutput: [4]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 105\n-104 <= nums[i] <= 104\n1 <= k <= nums.length"},{"index":"240","url":"https://leetcode.com/problems/search-a-2d-matrix-ii","title":"Search a 2D Matrix II","difficulty":"Medium","description":"Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:\n\nIntegers in each row are sorted in ascending from left to right.\nIntegers in each column are sorted in ascending from top to bottom.\n\nExample:\n\nConsider the following matrix:\n\n[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n\n\nGiven target = 5, return true.\n\nGiven target = 20, return false."},{"index":"241","url":"https://leetcode.com/problems/different-ways-to-add-parentheses","title":"Different Ways to Add Parentheses","difficulty":"Medium","description":"Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are +, - and *.\n\nExample 1:\n\nInput: \"2-1-1\"\nOutput: [0, 2]\nExplanation: \n((2-1)-1) = 0 \n(2-(1-1)) = 2\n\nExample 2:\n\nInput: \"2*3-4*5\"\nOutput: [-34, -14, -10, -10, 10]\nExplanation: \n(2*(3-(4*5))) = -34 \n((2*3)-(4*5)) = -14 \n((2*(3-4))*5) = -10 \n(2*((3-4)*5)) = -10 \n(((2*3)-4)*5) = 10\n"},{"index":"242","url":"https://leetcode.com/problems/valid-anagram","title":"Valid Anagram","difficulty":"Easy","description":"Given two strings s and t , write a function to determine if t is an anagram of s.\n\nExample 1:\n\nInput: s = \"anagram\", t = \"nagaram\"\nOutput: true\n\n\nExample 2:\n\nInput: s = \"rat\", t = \"car\"\nOutput: false\n\n\nNote:\nYou may assume the string contains only lowercase alphabets.\n\nFollow up:\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?"},{"index":"257","url":"https://leetcode.com/problems/binary-tree-paths","title":"Binary Tree Paths","difficulty":"Easy","description":"Given a binary tree, return all root-to-leaf paths.\n\nNote: A leaf is a node with no children.\n\nExample:\n\nInput:\n\n   1\n /   \\\n2     3\n \\\n  5\n\nOutput: [\"1->2->5\", \"1->3\"]\n\nExplanation: All root-to-leaf paths are: 1->2->5, 1->3\n"},{"index":"258","url":"https://leetcode.com/problems/add-digits","title":"Add Digits","difficulty":"Easy","description":"Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.\n\nExample:\n\nInput: 38\nOutput: 2 \nExplanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. \n             Since 2 has only one digit, return it.\n\n\nFollow up:\nCould you do it without any loop/recursion in O(1) runtime?"},{"index":"260","url":"https://leetcode.com/problems/single-number-iii","title":"Single Number III","difficulty":"Medium","description":"Given an integer array nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in any order.\n\nFollow up: Your algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?\n\n \n\nExample 1:\n\nInput: nums = [1,2,1,3,2,5]\nOutput: [3,5]\nExplanation:  [5, 3] is also a valid answer.\n\n\nExample 2:\n\nInput: nums = [-1,0]\nOutput: [-1,0]\n\n\nExample 3:\n\nInput: nums = [0,1]\nOutput: [1,0]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 30000\n Each integer in nums will appear twice, only two integers will appear once."},{"index":"262","url":"https://leetcode.com/problems/trips-and-users","title":"Trips and Users","difficulty":"Hard","description":"SQL Schema\n\nThe Trips table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the Users table. Status is an ENUM type of (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’).\n\n+----+-----------+-----------+---------+--------------------+----------+\n| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|\n+----+-----------+-----------+---------+--------------------+----------+\n| 1  |     1     |    10     |    1    |     completed      |2013-10-01|\n| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|\n| 3  |     3     |    12     |    6    |     completed      |2013-10-01|\n| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|\n| 5  |     1     |    10     |    1    |     completed      |2013-10-02|\n| 6  |     2     |    11     |    6    |     completed      |2013-10-02|\n| 7  |     3     |    12     |    6    |     completed      |2013-10-02|\n| 8  |     2     |    12     |    12   |     completed      |2013-10-03|\n| 9  |     3     |    10     |    12   |     completed      |2013-10-03| \n| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|\n+----+-----------+-----------+---------+--------------------+----------+\n\n\nThe Users table holds all users. Each user has an unique Users_Id, and Role is an ENUM type of (‘client’, ‘driver’, ‘partner’).\n\n+----------+--------+--------+\n| Users_Id | Banned |  Role  |\n+----------+--------+--------+\n|    1     |   No   | client |\n|    2     |   Yes  | client |\n|    3     |   No   | client |\n|    4     |   No   | client |\n|    10    |   No   | driver |\n|    11    |   No   | driver |\n|    12    |   No   | driver |\n|    13    |   No   | driver |\n+----------+--------+--------+\n\n\nWrite a SQL query to find the cancellation rate of requests made by unbanned users (both client and driver must be unbanned) between Oct 1, 2013 and Oct 3, 2013. The cancellation rate is computed by dividing the number of canceled (by client or driver) requests made by unbanned users by the total number of requests made by unbanned users.\n\nFor the above tables, your SQL query should return the following rows with the cancellation rate being rounded to two decimal places.\n\n+------------+-------------------+\n|     Day    | Cancellation Rate |\n+------------+-------------------+\n| 2013-10-01 |       0.33        |\n| 2013-10-02 |       0.00        |\n| 2013-10-03 |       0.50        |\n+------------+-------------------+\n\n\nCredits:\nSpecial thanks to @cak1erlizhou for contributing this question, writing the problem description and adding part of the test cases."},{"index":"263","url":"https://leetcode.com/problems/ugly-number","title":"Ugly Number","difficulty":"Easy","description":"Write a program to check whether a given number is an ugly number.\n\nUgly numbers are positive numbers whose prime factors only include 2, 3, 5.\n\nExample 1:\n\nInput: 6\nOutput: true\nExplanation: 6 = 2 × 3\n\nExample 2:\n\nInput: 8\nOutput: true\nExplanation: 8 = 2 × 2 × 2\n\n\nExample 3:\n\nInput: 14\nOutput: false \nExplanation: 14 is not ugly since it includes another prime factor 7.\n\n\nNote:\n\n1 is typically treated as an ugly number.\nInput is within the 32-bit signed integer range: [−231,  231 − 1]."},{"index":"264","url":"https://leetcode.com/problems/ugly-number-ii","title":"Ugly Number II","difficulty":"Medium","description":"Write a program to find the n-th ugly number.\n\nUgly numbers are positive numbers whose prime factors only include 2, 3, 5. \n\nExample:\n\nInput: n = 10\nOutput: 12\nExplanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.\n\nNote:  \n\n1 is typically treated as an ugly number.\nn does not exceed 1690."},{"index":"268","url":"https://leetcode.com/problems/missing-number","title":"Missing Number","difficulty":"Easy","description":"Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.\n\nFollow up: Could you implement a solution using only O(1) extra space complexity and O(n) runtime complexity?\n\n \n\nExample 1:\n\nInput: nums = [3,0,1]\nOutput: 2\nExplanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.\n\n\nExample 2:\n\nInput: nums = [0,1]\nOutput: 2\nExplanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.\n\n\nExample 3:\n\nInput: nums = [9,6,4,2,3,5,7,0,1]\nOutput: 8\nExplanation: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.\n\n\nExample 4:\n\nInput: nums = [0]\nOutput: 1\nExplanation: n = 1 since there is 1 number, so all numbers are in the range [0,1]. 1 is the missing number in the range since it does not appear in nums.\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 104\n0 <= nums[i] <= n\nAll the numbers of nums are unique."},{"index":"273","url":"https://leetcode.com/problems/integer-to-english-words","title":"Integer to English Words","difficulty":"Hard","description":"Convert a non-negative integer num to its English words representation.\n\n \n\nExample 1:\n\nInput: num = 123\nOutput: \"One Hundred Twenty Three\"\n\n\nExample 2:\n\nInput: num = 12345\nOutput: \"Twelve Thousand Three Hundred Forty Five\"\n\n\nExample 3:\n\nInput: num = 1234567\nOutput: \"One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven\"\n\n\nExample 4:\n\nInput: num = 1234567891\nOutput: \"One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One\"\n\n\n \n\nConstraints:\n\n0 <= num <= 231 - 1"},{"index":"274","url":"https://leetcode.com/problems/h-index","title":"H-Index","difficulty":"Medium","description":"Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\n\nAccording to the definition of h-index on Wikipedia: \"A scientist has index h if h of his/her N papers have at least h citations each, and the other N − h papers have no more than h citations each.\"\n\nExample:\n\nInput: citations = [3,0,6,1,5]\nOutput: 3 \nExplanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had \n             received 3, 0, 6, 1, 5 citations respectively. \n             Since the researcher has 3 papers with at least 3 citations each and the remaining \n             two with no more than 3 citations each, her h-index is 3.\n\nNote: If there are several possible values for h, the maximum one is taken as the h-index."},{"index":"275","url":"https://leetcode.com/problems/h-index-ii","title":"H-Index II","difficulty":"Medium","description":"Given an array of citations sorted in ascending order (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.\n\nAccording to the definition of h-index on Wikipedia: \"A scientist has index h if h of his/her N papers have at least h citations each, and the other N − h papers have no more than h citations each.\"\n\nExample:\n\nInput: citations = [0,1,3,5,6]\nOutput: 3 \nExplanation: [0,1,3,5,6] means the researcher has 5 papers in total and each of them had \n             received 0, 1, 3, 5, 6 citations respectively. \n             Since the researcher has 3 papers with at least 3 citations each and the remaining \n             two with no more than 3 citations each, her h-index is 3.\n\nNote:\n\nIf there are several possible values for h, the maximum one is taken as the h-index.\n\nFollow up:\n\nThis is a follow up problem to H-Index, where citations is now guaranteed to be sorted in ascending order.\nCould you solve it in logarithmic time complexity?"},{"index":"278","url":"https://leetcode.com/problems/first-bad-version","title":"First Bad Version","difficulty":"Easy","description":"You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.\n\nSuppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\n\nYou are given an API bool isBadVersion(version) which returns whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\n\n \n\nExample 1:\n\nInput: n = 5, bad = 4\nOutput: 4\nExplanation:\ncall isBadVersion(3) -> false\ncall isBadVersion(5) -> true\ncall isBadVersion(4) -> true\nThen 4 is the first bad version.\n\n\nExample 2:\n\nInput: n = 1, bad = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= bad <= n <= 231 - 1"},{"index":"279","url":"https://leetcode.com/problems/perfect-squares","title":"Perfect Squares","difficulty":"Medium","description":"Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.\n\nExample 1:\n\nInput: n = 12\nOutput: 3 \nExplanation: 12 = 4 + 4 + 4.\n\nExample 2:\n\nInput: n = 13\nOutput: 2\nExplanation: 13 = 4 + 9."},{"index":"282","url":"https://leetcode.com/problems/expression-add-operators","title":"Expression Add Operators","difficulty":"Hard","description":"Given a string that contains only digits 0-9 and a target value, return all possibilities to add binary operators (not unary) +, -, or * between the digits so they evaluate to the target value.\n\nExample 1:\n\nInput: num = \"123\", target = 6\nOutput: [\"1+2+3\", \"1*2*3\"] \n\n\nExample 2:\n\nInput: num = \"232\", target = 8\nOutput: [\"2*3+2\", \"2+3*2\"]\n\nExample 3:\n\nInput: num = \"105\", target = 5\nOutput: [\"1*0+5\",\"10-5\"]\n\nExample 4:\n\nInput: num = \"00\", target = 0\nOutput: [\"0+0\", \"0-0\", \"0*0\"]\n\n\nExample 5:\n\nInput: num = \"3456237490\", target = 9191\nOutput: []\n\n\n \n\nConstraints:\n\n0 <= num.length <= 10\nnum only contain digits."},{"index":"283","url":"https://leetcode.com/problems/move-zeroes","title":"Move Zeroes","difficulty":"Easy","description":"Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\n\nExample:\n\nInput: [0,1,0,3,12]\nOutput: [1,3,12,0,0]\n\nNote:\n\nYou must do this in-place without making a copy of the array.\nMinimize the total number of operations."},{"index":"284","url":"https://leetcode.com/problems/peeking-iterator","title":"Peeking Iterator","difficulty":"Medium","description":"Given an Iterator class interface with methods: next() and hasNext(), design and implement a PeekingIterator that support the peek() operation -- it essentially peek() at the element that will be returned by the next call to next().\n\nExample:\n\nAssume that the iterator is initialized to the beginning of the list: [1,2,3].\n\nCall next() gets you 1, the first element in the list.\nNow you call peek() and it returns 2, the next element. Calling next() after that still return 2. \nYou call next() the final time and it returns 3, the last element. \nCalling hasNext() after that should return false.\n\n\nFollow up: How would you extend your design to be generic and work with all types, not just integer?"},{"index":"287","url":"https://leetcode.com/problems/find-the-duplicate-number","title":"Find the Duplicate Number","difficulty":"Medium","description":"Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.\n\nThere is only one duplicate number in nums, return this duplicate number.\n\nFollow-ups:\n\nHow can we prove that at least one duplicate number must exist in nums? \nCan you solve the problem without modifying the array nums?\nCan you solve the problem using only constant, O(1) extra space?\nCan you solve the problem with runtime complexity less than O(n2)?\n\n \n\nExample 1:\n\nInput: nums = [1,3,4,2,2]\nOutput: 2\n\n\nExample 2:\n\nInput: nums = [3,1,3,4,2]\nOutput: 3\n\n\nExample 3:\n\nInput: nums = [1,1]\nOutput: 1\n\n\nExample 4:\n\nInput: nums = [1,1,2]\nOutput: 1\n\n\n \n\nConstraints:\n\n2 <= n <= 3 * 104\nnums.length == n + 1\n1 <= nums[i] <= n\nAll the integers in nums appear only once except for precisely one integer which appears two or more times."},{"index":"289","url":"https://leetcode.com/problems/game-of-life","title":"Game of Life","difficulty":"Medium","description":"According to the Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\n\nGiven a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\n\nAny live cell with fewer than two live neighbors dies, as if caused by under-population.\nAny live cell with two or three live neighbors lives on to the next generation.\nAny live cell with more than three live neighbors dies, as if by over-population..\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n\nWrite a function to compute the next state (after one update) of the board given its current state. The next state is created by applying the above rules simultaneously to every cell in the current state, where births and deaths occur simultaneously.\n\nExample:\n\nInput: \n[\n  [0,1,0],\n  [0,0,1],\n  [1,1,1],\n  [0,0,0]\n]\nOutput: \n[\n  [0,0,0],\n  [1,0,1],\n  [0,1,1],\n  [0,1,0]\n]\n\n\nFollow up:\n\nCould you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.\nIn this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?"},{"index":"290","url":"https://leetcode.com/problems/word-pattern","title":"Word Pattern","difficulty":"Easy","description":"Given a pattern and a string s, find if s follows the same pattern.\n\nHere follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.\n\n \n\nExample 1:\n\nInput: pattern = \"abba\", s = \"dog cat cat dog\"\nOutput: true\n\n\nExample 2:\n\nInput: pattern = \"abba\", s = \"dog cat cat fish\"\nOutput: false\n\n\nExample 3:\n\nInput: pattern = \"aaaa\", s = \"dog cat cat dog\"\nOutput: false\n\n\nExample 4:\n\nInput: pattern = \"abba\", s = \"dog dog dog dog\"\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= pattern.length <= 300\npattern contains only lower-case English letters.\n1 <= s.length <= 3000\ns contains only lower-case English letters and spaces ' '.\ns does not contain any leading or trailing spaces.\nAll the words in s are separated by a single space."},{"index":"292","url":"https://leetcode.com/problems/nim-game","title":"Nim Game","difficulty":"Easy","description":"You are playing the following Nim Game with your friend:\n\nInitially, there is a heap of stones on the table.\nYou and your friend will alternate taking turns, and you go first.\nOn each turn, the person whose turn it is will remove 1 to 3 stones from the heap.\nThe one who removes the last stone is the winner.\n\nGiven n, the number of stones in the heap, return true if you can win the game assuming both you and your friend play optimally, otherwise return false.\n\n \n\nExample 1:\n\nInput: n = 4\nOutput: false\nExplanation: These are the possible outcomes:\n1. You remove 1 stone. Your friend removes 3 stones, including the last stone. Your friend wins.\n2. You remove 2 stones. Your friend removes 2 stones, including the last stone. Your friend wins.\n3. You remove 3 stones. Your friend removes the last stone. Your friend wins.\nIn all outcomes, your friend wins.\n\n\nExample 2:\n\nInput: n = 1\nOutput: true\n\n\nExample 3:\n\nInput: n = 2\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= n <= 231 - 1"},{"index":"295","url":"https://leetcode.com/problems/find-median-from-data-stream","title":"Find Median from Data Stream","difficulty":"Hard","description":"Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.\n\nFor example,\n\n[2,3,4], the median is 3\n\n[2,3], the median is (2 + 3) / 2 = 2.5\n\nDesign a data structure that supports the following two operations:\n\nvoid addNum(int num) - Add a integer number from the data stream to the data structure.\ndouble findMedian() - Return the median of all elements so far.\n\n \n\nExample:\n\naddNum(1)\naddNum(2)\nfindMedian() -> 1.5\naddNum(3) \nfindMedian() -> 2\n\n\n \n\nFollow up:\n\nIf all integer numbers from the stream are between 0 and 100, how would you optimize it?\nIf 99% of all integer numbers from the stream are between 0 and 100, how would you optimize it?"},{"index":"297","url":"https://leetcode.com/problems/serialize-and-deserialize-binary-tree","title":"Serialize and Deserialize Binary Tree","difficulty":"Hard","description":"Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.\n\nDesign an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.\n\nClarification: The input/output format is the same as how LeetCode serializes a binary tree. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,null,null,4,5]\nOutput: [1,2,3,null,null,4,5]\n\n\nExample 2:\n\nInput: root = []\nOutput: []\n\n\nExample 3:\n\nInput: root = [1]\nOutput: [1]\n\n\nExample 4:\n\nInput: root = [1,2]\nOutput: [1,2]\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-1000 <= Node.val <= 1000"},{"index":"299","url":"https://leetcode.com/problems/bulls-and-cows","title":"Bulls and Cows","difficulty":"Medium","description":"You are playing the Bulls and Cows game with your friend.\n\nYou write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:\n\nThe number of \"bulls\", which are digits in the guess that are in the correct position.\nThe number of \"cows\", which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.\n\nGiven the secret number secret and your friend's guess guess, return the hint for your friend's guess.\n\nThe hint should be formatted as \"xAyB\", where x is the number of bulls and y is the number of cows. Note that both secret and guess may contain duplicate digits.\n\n \n\nExample 1:\n\nInput: secret = \"1807\", guess = \"7810\"\nOutput: \"1A3B\"\nExplanation: Bulls are connected with a '|' and cows are underlined:\n\"1807\"\n  |\n\"7810\"\n\nExample 2:\n\nInput: secret = \"1123\", guess = \"0111\"\nOutput: \"1A1B\"\nExplanation: Bulls are connected with a '|' and cows are underlined:\n\"1123\"        \"1123\"\n  |      or     |\n\"0111\"        \"0111\"\nNote that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.\n\n\nExample 3:\n\nInput: secret = \"1\", guess = \"0\"\nOutput: \"0A0B\"\n\n\nExample 4:\n\nInput: secret = \"1\", guess = \"1\"\nOutput: \"1A0B\"\n\n\n \n\nConstraints:\n\n1 <= secret.length, guess.length <= 1000\nsecret.length == guess.length\nsecret and guess consist of digits only."},{"index":"300","url":"https://leetcode.com/problems/longest-increasing-subsequence","title":"Longest Increasing Subsequence","difficulty":"Medium","description":"Given an integer array nums, return the length of the longest strictly increasing subsequence.\n\nA subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].\n\n \n\nExample 1:\n\nInput: nums = [10,9,2,5,3,7,101,18]\nOutput: 4\nExplanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.\n\n\nExample 2:\n\nInput: nums = [0,1,0,3,2,3]\nOutput: 4\n\n\nExample 3:\n\nInput: nums = [7,7,7,7,7,7,7]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 2500\n-104 <= nums[i] <= 104\n\n \n\nFollow up:\n\nCould you come up with the O(n2) solution?\nCould you improve it to O(n log(n)) time complexity?"},{"index":"301","url":"https://leetcode.com/problems/remove-invalid-parentheses","title":"Remove Invalid Parentheses","difficulty":"Hard","description":"Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.\n\nNote: The input string may contain letters other than the parentheses ( and ).\n\nExample 1:\n\nInput: \"()())()\"\nOutput: [\"()()()\", \"(())()\"]\n\n\nExample 2:\n\nInput: \"(a)())()\"\nOutput: [\"(a)()()\", \"(a())()\"]\n\n\nExample 3:\n\nInput: \")(\"\nOutput: [\"\"]\n"},{"index":"303","url":"https://leetcode.com/problems/range-sum-query-immutable","title":"Range Sum Query - Immutable","difficulty":"Easy","description":"Given an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive.\n\nImplement the NumArray class:\n\nNumArray(int[] nums) Initializes the object with the integer array nums.\nint sumRange(int i, int j) Return the sum of the elements of the nums array in the range [i, j] inclusive (i.e., sum(nums[i], nums[i + 1], ... , nums[j]))\n\n \n\nExample 1:\n\nInput\n[\"NumArray\", \"sumRange\", \"sumRange\", \"sumRange\"]\n[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]\nOutput\n[null, 1, -1, -3]\n\nExplanation\nNumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);\nnumArray.sumRange(0, 2); // return 1 ((-2) + 0 + 3)\nnumArray.sumRange(2, 5); // return -1 (3 + (-5) + 2 + (-1)) \nnumArray.sumRange(0, 5); // return -3 ((-2) + 0 + 3 + (-5) + 2 + (-1))\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 104\n-105 <= nums[i] <= 105\n0 <= i <= j < nums.length\nAt most 104 calls will be made to sumRange."},{"index":"304","url":"https://leetcode.com/problems/range-sum-query-2d-immutable","title":"Range Sum Query 2D - Immutable","difficulty":"Medium","description":"Given a 2D matrix matrix, find the sum of the elements inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\n\n\nThe above rectangle (with the red border) is defined by (row1, col1) = (2, 1) and (row2, col2) = (4, 3), which contains sum = 8.\n\nExample:\n\n\nGiven matrix = [\n  [3, 0, 1, 4, 2],\n  [5, 6, 3, 2, 1],\n  [1, 2, 0, 1, 5],\n  [4, 1, 0, 1, 7],\n  [1, 0, 3, 0, 5]\n]\n\nsumRegion(2, 1, 4, 3) -> 8\nsumRegion(1, 1, 2, 2) -> 11\nsumRegion(1, 2, 2, 4) -> 12\n\n\nNote:\n\n\nYou may assume that the matrix does not change.\nThere are many calls to sumRegion function.\nYou may assume that row1 ≤ row2 and col1 ≤ col2."},{"index":"306","url":"https://leetcode.com/problems/additive-number","title":"Additive Number","difficulty":"Medium","description":"Additive number is a string whose digits can form additive sequence.\n\nA valid additive sequence should contain at least three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.\n\nGiven a string containing only digits '0'-'9', write a function to determine if it's an additive number.\n\nNote: Numbers in the additive sequence cannot have leading zeros, so sequence 1, 2, 03 or 1, 02, 3 is invalid.\n\n \n\nExample 1:\n\nInput: \"112358\"\nOutput: true\nExplanation: The digits can form an additive sequence: 1, 1, 2, 3, 5, 8. \n             1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n\n\nExample 2:\n\nInput: \"199100199\"\nOutput: true\nExplanation: The additive sequence is: 1, 99, 100, 199. \n             1 + 99 = 100, 99 + 100 = 199\n\n\n \n\nConstraints:\n\nnum consists only of digits '0'-'9'.\n1 <= num.length <= 35\n\nFollow up:\nHow would you handle overflow for very large input integers?"},{"index":"307","url":"https://leetcode.com/problems/range-sum-query-mutable","title":"Range Sum Query - Mutable","difficulty":"Medium","description":"Given an integer array nums, find the sum of the elements between indices i and j (i ≤ j), inclusive.\n\nThe update(i, val) function modifies nums by updating the element at index i to val.\n\nExample:\n\nGiven nums = [1, 3, 5]\n\nsumRange(0, 2) -> 9\nupdate(1, 2)\nsumRange(0, 2) -> 8\n\n\n \n\nConstraints:\n\nThe array is only modifiable by the update function.\nYou may assume the number of calls to update and sumRange function is distributed evenly.\n0 <= i <= j <= nums.length - 1"},{"index":"309","url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","title":"Best Time to Buy and Sell Stock with Cooldown","difficulty":"Medium","description":"Say you have an array for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times) with the following restrictions:\n\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\nAfter you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)\n\nExample:\n\nInput: [1,2,3,0,2]\nOutput: 3 \nExplanation: transactions = [buy, sell, cooldown, buy, sell]\n"},{"index":"310","url":"https://leetcode.com/problems/minimum-height-trees","title":"Minimum Height Trees","difficulty":"Medium","description":"A tree is an undirected graph in which any two vertices are connected by exactly one path. In other words, any connected graph without simple cycles is a tree.\n\nGiven a tree of n nodes labelled from 0 to n - 1, and an array of n - 1 edges where edges[i] = [ai, bi] indicates that there is an undirected edge between the two nodes ai and bi in the tree, you can choose any node of the tree as the root. When you select a node x as the root, the result tree has height h. Among all possible rooted trees, those with minimum height (i.e. min(h))  are called minimum height trees (MHTs).\n\nReturn a list of all MHTs' root labels. You can return the answer in any order.\n\nThe height of a rooted tree is the number of edges on the longest downward path between the root and a leaf.\n\n \n\nExample 1:\n\nInput: n = 4, edges = [[1,0],[1,2],[1,3]]\nOutput: [1]\nExplanation: As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.\n\n\nExample 2:\n\nInput: n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]\nOutput: [3,4]\n\n\nExample 3:\n\nInput: n = 1, edges = []\nOutput: [0]\n\n\nExample 4:\n\nInput: n = 2, edges = [[0,1]]\nOutput: [0,1]\n\n\n \n\nConstraints:\n\n1 <= n <= 2 * 104\nedges.length == n - 1\n0 <= ai, bi < n\nai != bi\nAll the pairs (ai, bi) are distinct.\nThe given input is guaranteed to be a tree and there will be no repeated edges."},{"index":"312","url":"https://leetcode.com/problems/burst-balloons","title":"Burst Balloons","difficulty":"Hard","description":"Given n balloons, indexed from 0 to n-1. Each balloon is painted with a number on it represented by array nums. You are asked to burst all the balloons. If the you burst balloon i you will get nums[left] * nums[i] * nums[right] coins. Here left and right are adjacent indices of i. After the burst, the left and right then becomes adjacent.\n\nFind the maximum coins you can collect by bursting the balloons wisely.\n\nNote:\n\nYou may imagine nums[-1] = nums[n] = 1. They are not real therefore you can not burst them.\n0 ≤ n ≤ 500, 0 ≤ nums[i] ≤ 100\n\nExample:\n\nInput: [3,1,5,8]\nOutput: 167 \nExplanation: nums = [3,1,5,8] --> [3,5,8] -->   [3,8]   -->  [8]  --> []\n             coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\n"},{"index":"313","url":"https://leetcode.com/problems/super-ugly-number","title":"Super Ugly Number","difficulty":"Medium","description":"Write a program to find the nth super ugly number.\n\nSuper ugly numbers are positive numbers whose all prime factors are in the given prime list primes of size k.\n\nExample:\n\nInput: n = 12, primes = [2,7,13,19]\nOutput: 32 \nExplanation: [1,2,4,7,8,13,14,16,19,26,28,32] is the sequence of the first 12 \n             super ugly numbers given primes = [2,7,13,19] of size 4.\n\nNote:\n\n1 is a super ugly number for any given primes.\nThe given numbers in primes are in ascending order.\n0 < k ≤ 100, 0 < n ≤ 106, 0 < primes[i] < 1000.\nThe nth super ugly number is guaranteed to fit in a 32-bit signed integer."},{"index":"315","url":"https://leetcode.com/problems/count-of-smaller-numbers-after-self","title":"Count of Smaller Numbers After Self","difficulty":"Hard","description":"You are given an integer array nums and you have to return a new counts array. The counts array has the property where counts[i] is the number of smaller elements to the right of nums[i].\n\n \n\nExample 1:\n\nInput: nums = [5,2,6,1]\nOutput: [2,1,1,0]\nExplanation:\nTo the right of 5 there are 2 smaller elements (2 and 1).\nTo the right of 2 there is only 1 smaller element (1).\nTo the right of 6 there is 1 smaller element (1).\nTo the right of 1 there is 0 smaller element.\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 10^5\n-10^4 <= nums[i] <= 10^4"},{"index":"316","url":"https://leetcode.com/problems/remove-duplicate-letters","title":"Remove Duplicate Letters","difficulty":"Medium","description":"Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.\n\nNote: This question is the same as 1081: https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\n\n \n\nExample 1:\n\nInput: s = \"bcabc\"\nOutput: \"abc\"\n\n\nExample 2:\n\nInput: s = \"cbacdcbc\"\nOutput: \"acdb\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 104\ns consists of lowercase English letters."},{"index":"318","url":"https://leetcode.com/problems/maximum-product-of-word-lengths","title":"Maximum Product of Word Lengths","difficulty":"Medium","description":"Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. You may assume that each word will contain only lower case letters. If no such two words exist, return 0.\n\nExample 1:\n\nInput: [\"abcw\",\"baz\",\"foo\",\"bar\",\"xtfn\",\"abcdef\"]\nOutput: 16 \nExplanation: The two words can be \"abcw\", \"xtfn\".\n\nExample 2:\n\nInput: [\"a\",\"ab\",\"abc\",\"d\",\"cd\",\"bcd\",\"abcd\"]\nOutput: 4 \nExplanation: The two words can be \"ab\", \"cd\".\n\nExample 3:\n\nInput: [\"a\",\"aa\",\"aaa\",\"aaaa\"]\nOutput: 0 \nExplanation: No such pair of words.\n\n\n \n\nConstraints:\n\n0 <= words.length <= 10^3\n0 <= words[i].length <= 10^3\nwords[i] consists only of lowercase English letters."},{"index":"319","url":"https://leetcode.com/problems/bulb-switcher","title":"Bulb Switcher","difficulty":"Medium","description":"There are n bulbs that are initially off. You first turn on all the bulbs, then you turn off every second bulb.\n\nOn the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb.\n\nReturn the number of bulbs that are on after n rounds.\n\n \n\nExample 1:\n\nInput: n = 3\nOutput: 1\nExplanation: At first, the three bulbs are [off, off, off].\nAfter the first round, the three bulbs are [on, on, on].\nAfter the second round, the three bulbs are [on, off, on].\nAfter the third round, the three bulbs are [on, off, off]. \nSo you should return 1 because there is only one bulb is on.\n\nExample 2:\n\nInput: n = 0\nOutput: 0\n\n\nExample 3:\n\nInput: n = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n0 <= n <= 109"},{"index":"321","url":"https://leetcode.com/problems/create-maximum-number","title":"Create Maximum Number","difficulty":"Hard","description":"Given two arrays of length m and n with digits 0-9 representing two numbers. Create the maximum number of length k <= m + n from digits of the two. The relative order of the digits from the same array must be preserved. Return an array of the k digits.\n\nNote: You should try to optimize your time and space complexity.\n\nExample 1:\n\nInput:\nnums1 = [3, 4, 6, 5]\nnums2 = [9, 1, 2, 5, 8, 3]\nk = 5\nOutput:\n[9, 8, 6, 5, 3]\n\nExample 2:\n\nInput:\nnums1 = [6, 7]\nnums2 = [6, 0, 4]\nk = 5\nOutput:\n[6, 7, 6, 0, 4]\n\nExample 3:\n\nInput:\nnums1 = [3, 9]\nnums2 = [8, 9]\nk = 3\nOutput:\n[9, 8, 9]\n"},{"index":"322","url":"https://leetcode.com/problems/coin-change","title":"Coin Change","difficulty":"Medium","description":"You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.\n\nYou may assume that you have an infinite number of each kind of coin.\n\n \n\nExample 1:\n\nInput: coins = [1,2,5], amount = 11\nOutput: 3\nExplanation: 11 = 5 + 5 + 1\n\n\nExample 2:\n\nInput: coins = [2], amount = 3\nOutput: -1\n\n\nExample 3:\n\nInput: coins = [1], amount = 0\nOutput: 0\n\n\nExample 4:\n\nInput: coins = [1], amount = 1\nOutput: 1\n\n\nExample 5:\n\nInput: coins = [1], amount = 2\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= coins.length <= 12\n1 <= coins[i] <= 231 - 1\n0 <= amount <= 104"},{"index":"324","url":"https://leetcode.com/problems/wiggle-sort-ii","title":"Wiggle Sort II","difficulty":"Medium","description":"Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....\n\nExample 1:\n\nInput: nums = [1, 5, 1, 1, 6, 4]\nOutput: One possible answer is [1, 4, 1, 5, 1, 6].\n\nExample 2:\n\nInput: nums = [1, 3, 2, 2, 3, 1]\nOutput: One possible answer is [2, 3, 1, 3, 1, 2].\n\nNote:\nYou may assume all input has valid answer.\n\nFollow Up:\nCan you do it in O(n) time and/or in-place with O(1) extra space?"},{"index":"326","url":"https://leetcode.com/problems/power-of-three","title":"Power of Three","difficulty":"Easy","description":"Given an integer n, return true if it is a power of three. Otherwise, return false.\n\nAn integer n is a power of three, if there exists an integer x such that n == 3x.\n\n \n\nExample 1:\n\nInput: n = 27\nOutput: true\n\n\nExample 2:\n\nInput: n = 0\nOutput: false\n\n\nExample 3:\n\nInput: n = 9\nOutput: true\n\n\nExample 4:\n\nInput: n = 45\nOutput: false\n\n\n \n\nConstraints:\n\n-231 <= n <= 231 - 1\n\n \n\nFollow up: Could you do it without using any loop / recursion?"},{"index":"327","url":"https://leetcode.com/problems/count-of-range-sum","title":"Count of Range Sum","difficulty":"Hard","description":"Given an integer array nums, return the number of range sums that lie in [lower, upper] inclusive.\nRange sum S(i, j) is defined as the sum of the elements in nums between indices i and j (i ≤ j), inclusive.\n\nNote:\nA naive algorithm of O(n2) is trivial. You MUST do better than that.\n\nExample:\n\nInput: nums = [-2,5,-1], lower = -2, upper = 2,\nOutput: 3 \nExplanation: The three ranges are : [0,0], [2,2], [0,2] and their respective sums are: -2, -1, 2.\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 10^4"},{"index":"328","url":"https://leetcode.com/problems/odd-even-linked-list","title":"Odd Even Linked List","difficulty":"Medium","description":"Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.\n\nYou should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.\n\nExample 1:\n\nInput: 1->2->3->4->5->NULL\nOutput: 1->3->5->2->4->NULL\n\n\nExample 2:\n\nInput: 2->1->3->5->6->4->7->NULL\nOutput: 2->3->6->7->1->5->4->NULL\n\n\n \n\nConstraints:\n\nThe relative order inside both the even and odd groups should remain as it was in the input.\nThe first node is considered odd, the second node even and so on ...\nThe length of the linked list is between [0, 10^4]."},{"index":"329","url":"https://leetcode.com/problems/longest-increasing-path-in-a-matrix","title":"Longest Increasing Path in a Matrix","difficulty":"Hard","description":"Given an integer matrix, find the length of the longest increasing path.\n\nFrom each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).\n\nExample 1:\n\nInput: nums = \n[\n  [9,9,4],\n  [6,6,8],\n  [2,1,1]\n] \nOutput: 4 \nExplanation: The longest increasing path is [1, 2, 6, 9].\n\n\nExample 2:\n\nInput: nums = \n[\n  [3,4,5],\n  [3,2,6],\n  [2,2,1]\n] \nOutput: 4 \nExplanation: The longest increasing path is [3, 4, 5, 6]. Moving diagonally is not allowed.\n"},{"index":"330","url":"https://leetcode.com/problems/patching-array","title":"Patching Array","difficulty":"Hard","description":"Given a sorted positive integer array nums and an integer n, add/patch elements to the array such that any number in range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.\n\nExample 1:\n\nInput: nums = [1,3], n = 6\nOutput: 1 \nExplanation:\nCombinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.\nNow if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3].\nPossible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].\nSo we only need 1 patch.\n\nExample 2:\n\nInput: nums = [1,5,10], n = 20\nOutput: 2\nExplanation: The two patches can be [2, 4].\n\n\nExample 3:\n\nInput: nums = [1,2,2], n = 5\nOutput: 0\n"},{"index":"331","url":"https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree","title":"Verify Preorder Serialization of a Binary Tree","difficulty":"Medium","description":"One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as #.\n\n     _9_\n    /   \\\n   3     2\n  / \\   / \\\n 4   1  #  6\n/ \\ / \\   / \\\n# # # #   # #\n\n\nFor example, the above binary tree can be serialized to the string \"9,3,4,#,#,1,#,#,2,#,6,#,#\", where # represents a null node.\n\nGiven a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.\n\nEach comma separated value in the string must be either an integer or a character '#' representing null pointer.\n\nYou may assume that the input format is always valid, for example it could never contain two consecutive commas such as \"1,,3\".\n\nExample 1:\n\nInput: \"9,3,4,#,#,1,#,#,2,#,6,#,#\"\nOutput: true\n\nExample 2:\n\nInput: \"1,#\"\nOutput: false\n\n\nExample 3:\n\nInput: \"9,#,#,1\"\nOutput: false"},{"index":"332","url":"https://leetcode.com/problems/reconstruct-itinerary","title":"Reconstruct Itinerary","difficulty":"Medium","description":"Given a list of airline tickets represented by pairs of departure and arrival airports [from, to], reconstruct the itinerary in order. All of the tickets belong to a man who departs from JFK. Thus, the itinerary must begin with JFK.\n\nNote:\n\nIf there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary [\"JFK\", \"LGA\"] has a smaller lexical order than [\"JFK\", \"LGB\"].\nAll airports are represented by three capital letters (IATA code).\nYou may assume all tickets form at least one valid itinerary.\nOne must use all the tickets once and only once.\n\nExample 1:\n\nInput: [[\"MUC\", \"LHR\"], [\"JFK\", \"MUC\"], [\"SFO\", \"SJC\"], [\"LHR\", \"SFO\"]]\nOutput: [\"JFK\", \"MUC\", \"LHR\", \"SFO\", \"SJC\"]\n\n\nExample 2:\n\nInput: [[\"JFK\",\"SFO\"],[\"JFK\",\"ATL\"],[\"SFO\",\"ATL\"],[\"ATL\",\"JFK\"],[\"ATL\",\"SFO\"]]\nOutput: [\"JFK\",\"ATL\",\"JFK\",\"SFO\",\"ATL\",\"SFO\"]\nExplanation: Another possible reconstruction is [\"JFK\",\"SFO\",\"ATL\",\"JFK\",\"ATL\",\"SFO\"].\n             But it is larger in lexical order.\n"},{"index":"334","url":"https://leetcode.com/problems/increasing-triplet-subsequence","title":"Increasing Triplet Subsequence","difficulty":"Medium","description":"Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\n\nFormally the function should:\n\nReturn true if there exists i, j, k\nsuch that arr[i] < arr[j] < arr[k] given 0 ≤ i < j < k ≤ n-1 else return false.\n\nNote: Your algorithm should run in O(n) time complexity and O(1) space complexity.\n\nExample 1:\n\nInput: [1,2,3,4,5]\nOutput: true\n\n\nExample 2:\n\nInput: [5,4,3,2,1]\nOutput: false\n"},{"index":"335","url":"https://leetcode.com/problems/self-crossing","title":"Self Crossing","difficulty":"Hard","description":"You are given an array x of n positive numbers. You start at point (0,0) and moves x[0] metres to the north, then x[1] metres to the west, x[2] metres to the south, x[3] metres to the east and so on. In other words, after each move your direction changes counter-clockwise.\n\nWrite a one-pass algorithm with O(1) extra space to determine, if your path crosses itself, or not.\n\n \n\nExample 1:\n\n┌───┐\n│   │\n└───┼──>\n    │\n\nInput: [2,1,1,2]\nOutput: true\n\n\nExample 2:\n\n┌──────┐\n│      │\n│\n│\n└────────────>\n\nInput: [1,2,3,4]\nOutput: false \n\n\nExample 3:\n\n┌───┐\n│   │\n└───┼>\n\nInput: [1,1,1,1]\nOutput: true \n"},{"index":"336","url":"https://leetcode.com/problems/palindrome-pairs","title":"Palindrome Pairs","difficulty":"Hard","description":"Given a list of unique words, return all the pairs of the distinct indices (i, j) in the given list, so that the concatenation of the two words words[i] + words[j] is a palindrome.\n\n \n\nExample 1:\n\nInput: words = [\"abcd\",\"dcba\",\"lls\",\"s\",\"sssll\"]\nOutput: [[0,1],[1,0],[3,2],[2,4]]\nExplanation: The palindromes are [\"dcbaabcd\",\"abcddcba\",\"slls\",\"llssssll\"]\n\n\nExample 2:\n\nInput: words = [\"bat\",\"tab\",\"cat\"]\nOutput: [[0,1],[1,0]]\nExplanation: The palindromes are [\"battab\",\"tabbat\"]\n\n\nExample 3:\n\nInput: words = [\"a\",\"\"]\nOutput: [[0,1],[1,0]]\n\n\n \n\nConstraints:\n\n1 <= words.length <= 5000\n0 <= words[i].length <= 300\nwords[i] consists of lower-case English letters."},{"index":"337","url":"https://leetcode.com/problems/house-robber-iii","title":"House Robber III","difficulty":"Medium","description":"The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the \"root.\" Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that \"all houses in this place forms a binary tree\". It will automatically contact the police if two directly-linked houses were broken into on the same night.\n\nDetermine the maximum amount of money the thief can rob tonight without alerting the police.\n\nExample 1:\n\nInput: [3,2,3,null,3,null,1]\n\n     3\n    / \\\n   2   3\n    \\   \\ \n     3   1\n\nOutput: 7 \nExplanation: Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.\n\nExample 2:\n\nInput: [3,4,5,1,3,null,1]\n\n     3\n    / \\\n   4   5\n  / \\   \\ \n 1   3   1\n\nOutput: 9\nExplanation: Maximum amount of money the thief can rob = 4 + 5 = 9.\n"},{"index":"338","url":"https://leetcode.com/problems/counting-bits","title":"Counting Bits","difficulty":"Medium","description":"Given a non negative integer number num. For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1's in their binary representation and return them as an array.\n\nExample 1:\n\nInput: 2\nOutput: [0,1,1]\n\nExample 2:\n\nInput: 5\nOutput: [0,1,1,2,1,2]\n\n\nFollow up:\n\nIt is very easy to come up with a solution with run time O(n*sizeof(integer)). But can you do it in linear time O(n) /possibly in a single pass?\nSpace complexity should be O(n).\nCan you do it like a boss? Do it without using any builtin function like __builtin_popcount in c++ or in any other language."},{"index":"341","url":"https://leetcode.com/problems/flatten-nested-list-iterator","title":"Flatten Nested List Iterator","difficulty":"Medium","description":"Given a nested list of integers, implement an iterator to flatten it.\n\nEach element is either an integer, or a list -- whose elements may also be integers or other lists.\n\nExample 1:\n\nInput: [[1,1],2,[1,1]]\nOutput: [1,1,2,1,1]\nExplanation: By calling next repeatedly until hasNext returns false, \n             the order of elements returned by next should be: [1,1,2,1,1].\n\nExample 2:\n\nInput: [1,[4,[6]]]\nOutput: [1,4,6]\nExplanation: By calling next repeatedly until hasNext returns false, \n             the order of elements returned by next should be: [1,4,6].\n"},{"index":"342","url":"https://leetcode.com/problems/power-of-four","title":"Power of Four","difficulty":"Easy","description":"Given an integer n, return true if it is a power of four. Otherwise, return false.\n\nAn integer n is a power of four, if there exists an integer x such that n == 4x.\n\n \n\nExample 1:\n\nInput: n = 16\nOutput: true\n\n\nExample 2:\n\nInput: n = 5\nOutput: false\n\n\nExample 3:\n\nInput: n = 1\nOutput: true\n\n\n \n\nConstraints:\n\n-231 <= n <= 231 - 1\n\n \n\nFollow up: Could you solve it without loops/recursion?"},{"index":"343","url":"https://leetcode.com/problems/integer-break","title":"Integer Break","difficulty":"Medium","description":"Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. Return the maximum product you can get.\n\nExample 1:\n\nInput: 2\nOutput: 1\nExplanation: 2 = 1 + 1, 1 × 1 = 1.\n\nExample 2:\n\nInput: 10\nOutput: 36\nExplanation: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36.\n\nNote: You may assume that n is not less than 2 and not larger than 58."},{"index":"344","url":"https://leetcode.com/problems/reverse-string","title":"Reverse String","difficulty":"Easy","description":"Write a function that reverses a string. The input string is given as an array of characters char[].\n\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\n\nYou may assume all the characters consist of printable ascii characters.\n\n \n\nExample 1:\n\nInput: [\"h\",\"e\",\"l\",\"l\",\"o\"]\nOutput: [\"o\",\"l\",\"l\",\"e\",\"h\"]\n\n\nExample 2:\n\nInput: [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]\nOutput: [\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]\n"},{"index":"345","url":"https://leetcode.com/problems/reverse-vowels-of-a-string","title":"Reverse Vowels of a String","difficulty":"Easy","description":"Write a function that takes a string as input and reverse only the vowels of a string.\n\nExample 1:\n\nInput: \"hello\"\nOutput: \"holle\"\n\n\nExample 2:\n\nInput: \"leetcode\"\nOutput: \"leotcede\"\n\nNote:\nThe vowels does not include the letter \"y\".\n\n "},{"index":"347","url":"https://leetcode.com/problems/top-k-frequent-elements","title":"Top K Frequent Elements","difficulty":"Medium","description":"Given a non-empty array of integers, return the k most frequent elements.\n\nExample 1:\n\nInput: nums = [1,1,1,2,2,3], k = 2\nOutput: [1,2]\n\n\nExample 2:\n\nInput: nums = [1], k = 1\nOutput: [1]\n\nNote:\n\nYou may assume k is always valid, 1 ≤ k ≤ number of unique elements.\nYour algorithm's time complexity must be better than O(n log n), where n is the array's size.\nIt's guaranteed that the answer is unique, in other words the set of the top k frequent elements is unique.\nYou can return the answer in any order."},{"index":"349","url":"https://leetcode.com/problems/intersection-of-two-arrays","title":"Intersection of Two Arrays","difficulty":"Easy","description":"Given two arrays, write a function to compute their intersection.\n\nExample 1:\n\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\nOutput: [2]\n\n\nExample 2:\n\nInput: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\nOutput: [9,4]\n\nNote:\n\nEach element in the result must be unique.\nThe result can be in any order.\n\n "},{"index":"350","url":"https://leetcode.com/problems/intersection-of-two-arrays-ii","title":"Intersection of Two Arrays II","difficulty":"Easy","description":"Given two arrays, write a function to compute their intersection.\n\nExample 1:\n\nInput: nums1 = [1,2,2,1], nums2 = [2,2]\nOutput: [2,2]\n\n\nExample 2:\n\nInput: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\nOutput: [4,9]\n\nNote:\n\nEach element in the result should appear as many times as it shows in both arrays.\nThe result can be in any order.\n\nFollow up:\n\nWhat if the given array is already sorted? How would you optimize your algorithm?\nWhat if nums1's size is small compared to nums2's size? Which algorithm is better?\nWhat if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?"},{"index":"352","url":"https://leetcode.com/problems/data-stream-as-disjoint-intervals","title":"Data Stream as Disjoint Intervals","difficulty":"Hard","description":"Given a data stream input of non-negative integers a1, a2, ..., an, ..., summarize the numbers seen so far as a list of disjoint intervals.\n\nFor example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:\n\n[1, 1]\n[1, 1], [3, 3]\n[1, 1], [3, 3], [7, 7]\n[1, 3], [7, 7]\n[1, 3], [6, 7]\n\n\n \n\nFollow up:\n\nWhat if there are lots of merges and the number of disjoint intervals are small compared to the data stream's size?"},{"index":"354","url":"https://leetcode.com/problems/russian-doll-envelopes","title":"Russian Doll Envelopes","difficulty":"Hard","description":"You have a number of envelopes with widths and heights given as a pair of integers (w, h). One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.\n\nWhat is the maximum number of envelopes can you Russian doll? (put one inside other)\n\nNote:\nRotation is not allowed.\n\nExample:\n\nInput: [[5,4],[6,4],[6,7],[2,3]]\nOutput: 3 \nExplanation: The maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] => [6,7]).\n"},{"index":"355","url":"https://leetcode.com/problems/design-twitter","title":"Design Twitter","difficulty":"Medium","description":"Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user's news feed. Your design should support the following methods:\n\npostTweet(userId, tweetId): Compose a new tweet.\ngetNewsFeed(userId): Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.\nfollow(followerId, followeeId): Follower follows a followee.\nunfollow(followerId, followeeId): Follower unfollows a followee.\n\nExample:\n\nTwitter twitter = new Twitter();\n\n// User 1 posts a new tweet (id = 5).\ntwitter.postTweet(1, 5);\n\n// User 1's news feed should return a list with 1 tweet id -> [5].\ntwitter.getNewsFeed(1);\n\n// User 1 follows user 2.\ntwitter.follow(1, 2);\n\n// User 2 posts a new tweet (id = 6).\ntwitter.postTweet(2, 6);\n\n// User 1's news feed should return a list with 2 tweet ids -> [6, 5].\n// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\ntwitter.getNewsFeed(1);\n\n// User 1 unfollows user 2.\ntwitter.unfollow(1, 2);\n\n// User 1's news feed should return a list with 1 tweet id -> [5],\n// since user 1 is no longer following user 2.\ntwitter.getNewsFeed(1);\n"},{"index":"357","url":"https://leetcode.com/problems/count-numbers-with-unique-digits","title":"Count Numbers with Unique Digits","difficulty":"Medium","description":"Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x < 10n.\n\nExample:\n\nInput: 2\nOutput: 91 \nExplanation: The answer should be the total numbers in the range of 0 ≤ x < 100, \n             excluding 11,22,33,44,55,66,77,88,99\n\n\n \n\nConstraints:\n\n0 <= n <= 8"},{"index":"363","url":"https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k","title":"Max Sum of Rectangle No Larger Than K","difficulty":"Hard","description":"Given a non-empty 2D matrix matrix and an integer k, find the max sum of a rectangle in the matrix such that its sum is no larger than k.\n\nExample:\n\nInput: matrix = [[1,0,1],[0,-2,3]], k = 2\nOutput: 2 \nExplanation: Because the sum of rectangle [[0, 1], [-2, 3]] is 2,\n             and 2 is the max number no larger than k (k = 2).\n\nNote:\n\nThe rectangle inside the matrix must have an area > 0.\nWhat if the number of rows is much larger than the number of columns?"},{"index":"365","url":"https://leetcode.com/problems/water-and-jug-problem","title":"Water and Jug Problem","difficulty":"Medium","description":"You are given two jugs with capacities x and y litres. There is an infinite amount of water supply available. You need to determine whether it is possible to measure exactly z litres using these two jugs.\n\nIf z liters of water is measurable, you must have z liters of water contained within one or both buckets by the end.\n\nOperations allowed:\n\nFill any of the jugs completely with water.\nEmpty any of the jugs.\nPour water from one jug into another till the other jug is completely full or the first jug itself is empty.\n\nExample 1: (From the famous \"Die Hard\" example)\n\nInput: x = 3, y = 5, z = 4\nOutput: True\n\n\nExample 2:\n\nInput: x = 2, y = 6, z = 5\nOutput: False\n\n\n \n\nConstraints:\n\n0 <= x <= 10^6\n0 <= y <= 10^6\n0 <= z <= 10^6"},{"index":"367","url":"https://leetcode.com/problems/valid-perfect-square","title":"Valid Perfect Square","difficulty":"Easy","description":"Given a positive integer num, write a function which returns True if num is a perfect square else False.\n\nFollow up: Do not use any built-in library function such as sqrt.\n\n \n\nExample 1:\n\nInput: num = 16\nOutput: true\n\n\nExample 2:\n\nInput: num = 14\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= num <= 2^31 - 1"},{"index":"368","url":"https://leetcode.com/problems/largest-divisible-subset","title":"Largest Divisible Subset","difficulty":"Medium","description":"Given a set of distinct positive integers, find the largest subset such that every pair (Si, Sj) of elements in this subset satisfies:\n\nSi % Sj = 0 or Sj % Si = 0.\n\nIf there are multiple solutions, return any subset is fine.\n\nExample 1:\n\nInput: [1,2,3]\nOutput: [1,2] (of course, [1,3] will also be ok)\n\n\nExample 2:\n\nInput: [1,2,4,8]\nOutput: [1,2,4,8]\n"},{"index":"371","url":"https://leetcode.com/problems/sum-of-two-integers","title":"Sum of Two Integers","difficulty":"Medium","description":"Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -.\n\nExample 1:\n\nInput: a = 1, b = 2\nOutput: 3\n\n\nExample 2:\n\nInput: a = -2, b = 3\nOutput: 1\n"},{"index":"372","url":"https://leetcode.com/problems/super-pow","title":"Super Pow","difficulty":"Medium","description":"Your task is to calculate ab mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.\n\n \n\nExample 1:\n\nInput: a = 2, b = [3]\nOutput: 8\n\n\nExample 2:\n\nInput: a = 2, b = [1,0]\nOutput: 1024\n\n\nExample 3:\n\nInput: a = 1, b = [4,3,3,8,5,2]\nOutput: 1\n\n\nExample 4:\n\nInput: a = 2147483647, b = [2,0,0]\nOutput: 1198\n\n\n \n\nConstraints:\n\n1 <= a <= 231 - 1\n1 <= b.length <= 2000\n0 <= b[i] <= 9\nb doesn't contain leading zeros."},{"index":"373","url":"https://leetcode.com/problems/find-k-pairs-with-smallest-sums","title":"Find K Pairs with Smallest Sums","difficulty":"Medium","description":"You are given two integer arrays nums1 and nums2 sorted in ascending order and an integer k.\n\nDefine a pair (u,v) which consists of one element from the first array and one element from the second array.\n\nFind the k pairs (u1,v1),(u2,v2) ...(uk,vk) with the smallest sums.\n\nExample 1:\n\nInput: nums1 = [1,7,11], nums2 = [2,4,6], k = 3\nOutput: [[1,2],[1,4],[1,6]] \nExplanation: The first 3 pairs are returned from the sequence: \n             [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n\nExample 2:\n\nInput: nums1 = [1,1,2], nums2 = [1,2,3], k = 2\nOutput: [1,1],[1,1]\nExplanation: The first 2 pairs are returned from the sequence: \n             [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n\nExample 3:\n\nInput: nums1 = [1,2], nums2 = [3], k = 3\nOutput: [1,3],[2,3]\nExplanation: All possible pairs are returned from the sequence: [1,3],[2,3]\n"},{"index":"374","url":"https://leetcode.com/problems/guess-number-higher-or-lower","title":"Guess Number Higher or Lower","difficulty":"Easy","description":"We are playing the Guess Game. The game is as follows:\n\nI pick a number from 1 to n. You have to guess which number I picked.\n\nEvery time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess.\n\nYou call a pre-defined API int guess(int num), which returns 3 possible results:\n\n-1: The number I picked is lower than your guess (i.e. pick < num).\n1: The number I picked is higher than your guess (i.e. pick > num).\n0: The number I picked is equal to your guess (i.e. pick == num).\n\nReturn the number that I picked.\n\n \n\nExample 1:\n\nInput: n = 10, pick = 6\nOutput: 6\n\n\nExample 2:\n\nInput: n = 1, pick = 1\nOutput: 1\n\n\nExample 3:\n\nInput: n = 2, pick = 1\nOutput: 1\n\n\nExample 4:\n\nInput: n = 2, pick = 2\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= n <= 231 - 1\n1 <= pick <= n"},{"index":"375","url":"https://leetcode.com/problems/guess-number-higher-or-lower-ii","title":"Guess Number Higher or Lower II","difficulty":"Medium","description":"We are playing the Guessing Game. The game will work as follows:\n\nI pick a number between 1 and n.\nYou guess a number.\nIf you guess the right number, you win the game.\nIf you guess the wrong number, then I will tell you whether the number I picked is higher or lower, and you will continue guessing.\nEvery time you guess a wrong number x, you will pay x dollars. If you run out of money, you lose the game.\n\nGiven a particular n, return the minimum amount of money you need to guarantee a win regardless of what number I pick.\n\n \n\nExample 1:\n\nInput: n = 10\nOutput: 16\nExplanation: The winning strategy is as follows:\n- The range is [1,10]. Guess 7.\n    - If this is my number, your total is $0. Otherwise, you pay $7.\n    - If my number is higher, the range is [8,10]. Guess 9.\n        - If this is my number, your total is $7. Otherwise, you pay $9.\n        - If my number is higher, it must be 10. Guess 10. Your total is $7 + $9 = $16.\n        - If my number is lower, it must be 8. Guess 8. Your total is $7 + $9 = $16.\n    - If my number is lower, the range is [1,6]. Guess 3.\n        - If this is my number, your total is $7. Otherwise, you pay $3.\n        - If my number is higher, the range is [4,6]. Guess 5.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $5.\n            - If my number is higher, it must be 6. Guess 6. Your total is $7 + $3 + $5 = $15.\n            - If my number is lower, it must be 4. Guess 4. Your total is $7 + $3 + $5 = $15.\n        - If my number is lower, the range is [1,2]. Guess 1.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $1.\n            - If my number is higher, it must be 2. Guess 2. Your total is $7 + $3 + $1 = $11.\nThe worst case in all these scenarios is that you pay $16. Hence, you only need $16 to guarantee a win.\n\n\nExample 2:\n\nInput: n = 1\nOutput: 0\nExplanation: There is only one possible number, so you can guess 1 and not have to pay anything.\n\n\nExample 3:\n\nInput: n = 2\nOutput: 1\nExplanation: There are two possible numbers, 1 and 2.\n- Guess 1.\n    - If this is my number, your total is $0. Otherwise, you pay $1.\n    - If my number is higher, it must be 2. Guess 2. Your total is $1.\nThe worst case is that you pay $1.\n\n\n \n\nConstraints:\n\n1 <= n <= 200"},{"index":"376","url":"https://leetcode.com/problems/wiggle-subsequence","title":"Wiggle Subsequence","difficulty":"Medium","description":"A sequence of numbers is called a wiggle sequence if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence.\n\nFor example, [1,7,4,9,2,5] is a wiggle sequence because the differences (6,-3,5,-7,3) are alternately positive and negative. In contrast, [1,4,7,2,5] and [1,7,4,5,5] are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.\n\nGiven a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.\n\nExample 1:\n\nInput: [1,7,4,9,2,5]\nOutput: 6\nExplanation: The entire sequence is a wiggle sequence.\n\nExample 2:\n\nInput: [1,17,5,10,13,15,10,5,16,8]\nOutput: 7\nExplanation: There are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].\n\nExample 3:\n\nInput: [1,2,3,4,5,6,7,8,9]\nOutput: 2\n\nFollow up:\nCan you do it in O(n) time?"},{"index":"377","url":"https://leetcode.com/problems/combination-sum-iv","title":"Combination Sum IV","difficulty":"Medium","description":"Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.\n\nExample:\n\nnums = [1, 2, 3]\ntarget = 4\n\nThe possible combination ways are:\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\n\nNote that different sequences are counted as different combinations.\n\nTherefore the output is 7.\n\n\n \n\nFollow up:\nWhat if negative numbers are allowed in the given array?\nHow does it change the problem?\nWhat limitation we need to add to the question to allow negative numbers?\n\nCredits:\nSpecial thanks to @pbrother for adding this problem and creating all test cases."},{"index":"378","url":"https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix","title":"Kth Smallest Element in a Sorted Matrix","difficulty":"Medium","description":"Given a n x n matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.\n\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\n\nExample:\n\nmatrix = [\n   [ 1,  5,  9],\n   [10, 11, 13],\n   [12, 13, 15]\n],\nk = 8,\n\nreturn 13.\n\n\nNote:\nYou may assume k is always valid, 1 ≤ k ≤ n2."},{"index":"380","url":"https://leetcode.com/problems/insert-delete-getrandom-o1","title":"Insert Delete GetRandom O(1)","difficulty":"Medium","description":"Implement the RandomizedSet class:\n\nbool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise.\nbool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise.\nint getRandom() Returns a random element from the current set of elements (it's guaranteed that at least one element exists when this method is called). Each element must have the same probability of being returned.\n\nFollow up: Could you implement the functions of the class with each function works in average O(1) time?\n\n \n\nExample 1:\n\nInput\n[\"RandomizedSet\", \"insert\", \"remove\", \"insert\", \"getRandom\", \"remove\", \"insert\", \"getRandom\"]\n[[], [1], [2], [2], [], [1], [2], []]\nOutput\n[null, true, false, true, 2, true, false, 2]\n\nExplanation\nRandomizedSet randomizedSet = new RandomizedSet();\nrandomizedSet.insert(1); // Inserts 1 to the set. Returns true as 1 was inserted successfully.\nrandomizedSet.remove(2); // Returns false as 2 does not exist in the set.\nrandomizedSet.insert(2); // Inserts 2 to the set, returns true. Set now contains [1,2].\nrandomizedSet.getRandom(); // getRandom() should return either 1 or 2 randomly.\nrandomizedSet.remove(1); // Removes 1 from the set, returns true. Set now contains [2].\nrandomizedSet.insert(2); // 2 was already in the set, so return false.\nrandomizedSet.getRandom(); // Since 2 is the only number in the set, getRandom() will always return 2.\n\n\n \n\nConstraints:\n\n-231 <= val <= 231 - 1\nAt most 105 calls will be made to insert, remove, and getRandom.\nThere will be at least one element in the data structure when getRandom is called."},{"index":"381","url":"https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed","title":"Insert Delete GetRandom O(1) - Duplicates allowed","difficulty":"Hard","description":"Design a data structure that supports all following operations in average O(1) time.\n\nNote: Duplicate elements are allowed.\n\ninsert(val): Inserts an item val to the collection.\nremove(val): Removes an item val from the collection if present.\ngetRandom: Returns a random element from current collection of elements. The probability of each element being returned is linearly related to the number of same value the collection contains.\n\nExample:\n\n// Init an empty collection.\nRandomizedCollection collection = new RandomizedCollection();\n\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\ncollection.insert(1);\n\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\ncollection.insert(1);\n\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\ncollection.insert(2);\n\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\ncollection.getRandom();\n\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\ncollection.remove(1);\n\n// getRandom should return 1 and 2 both equally likely.\ncollection.getRandom();\n"},{"index":"382","url":"https://leetcode.com/problems/linked-list-random-node","title":"Linked List Random Node","difficulty":"Medium","description":"Given a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen.\n\nFollow up:\nWhat if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?\n\nExample:\n\n// Init a singly linked list [1,2,3].\nListNode head = new ListNode(1);\nhead.next = new ListNode(2);\nhead.next.next = new ListNode(3);\nSolution solution = new Solution(head);\n\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\nsolution.getRandom();\n"},{"index":"383","url":"https://leetcode.com/problems/ransom-note","title":"Ransom Note","difficulty":"Easy","description":"Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.\n\nEach letter in the magazine string can only be used once in your ransom note.\n\n \n\nExample 1:\n\nInput: ransomNote = \"a\", magazine = \"b\"\nOutput: false\n\n\nExample 2:\n\nInput: ransomNote = \"aa\", magazine = \"ab\"\nOutput: false\n\n\nExample 3:\n\nInput: ransomNote = \"aa\", magazine = \"aab\"\nOutput: true\n\n\n \n\nConstraints:\n\nYou may assume that both strings contain only lowercase letters."},{"index":"384","url":"https://leetcode.com/problems/shuffle-an-array","title":"Shuffle an Array","difficulty":"Medium","description":"Given an integer array nums, design an algorithm to randomly shuffle the array.\n\nImplement the Solution class:\n\nSolution(int[] nums) Initializes the object with the integer array nums.\nint[] reset() Resets the array to its original configuration and returns it.\nint[] shuffle() Returns a random shuffling of the array.\n\n \n\nExample 1:\n\nInput\n[\"Solution\", \"shuffle\", \"reset\", \"shuffle\"]\n[[[1, 2, 3]], [], [], []]\nOutput\n[null, [3, 1, 2], [1, 2, 3], [1, 3, 2]]\n\nExplanation\nSolution solution = new Solution([1, 2, 3]);\nsolution.shuffle();    // Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must be equally likely to be returned. Example: return [3, 1, 2]\nsolution.reset();      // Resets the array back to its original configuration [1,2,3]. Return [1, 2, 3]\nsolution.shuffle();    // Returns the random shuffling of array [1,2,3]. Example: return [1, 3, 2]\n\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 200\n-106 <= nums[i] <= 106\nAll the elements of nums are unique.\nAt most 5 * 104 calls will be made to reset and shuffle."},{"index":"385","url":"https://leetcode.com/problems/mini-parser","title":"Mini Parser","difficulty":"Medium","description":"Given a nested list of integers represented as a string, implement a parser to deserialize it.\n\nEach element is either an integer, or a list -- whose elements may also be integers or other lists.\n\nNote: You may assume that the string is well-formed:\n\nString is non-empty.\nString does not contain white spaces.\nString contains only digits 0-9, [, - ,, ].\n\n \n\nExample 1:\n\nGiven s = \"324\",\n\nYou should return a NestedInteger object which contains a single integer 324.\n\n\n \n\nExample 2:\n\nGiven s = \"[123,[456,[789]]]\",\n\nReturn a NestedInteger object containing a nested list with 2 elements:\n\n1. An integer containing value 123.\n2. A nested list containing two elements:\n    i.  An integer containing value 456.\n    ii. A nested list with one element:\n         a. An integer containing value 789.\n\n\n "},{"index":"386","url":"https://leetcode.com/problems/lexicographical-numbers","title":"Lexicographical Numbers","difficulty":"Medium","description":"Given an integer n, return 1 - n in lexicographical order.\n\nFor example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].\n\nPlease optimize your algorithm to use less time and space. The input size may be as large as 5,000,000."},{"index":"387","url":"https://leetcode.com/problems/first-unique-character-in-a-string","title":"First Unique Character in a String","difficulty":"Easy","description":"Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1.\n\nExamples:\n\ns = \"leetcode\"\nreturn 0.\n\ns = \"loveleetcode\"\nreturn 2.\n\n\n \n\nNote: You may assume the string contains only lowercase English letters."},{"index":"388","url":"https://leetcode.com/problems/longest-absolute-file-path","title":"Longest Absolute File Path","difficulty":"Medium","description":"Suppose we have a file system that stores both files and directories. An example of one system is represented in the following picture:\n\nHere, we have dir as the only directory in the root. dir contains two subdirectories, subdir1 and subdir2. subdir1 contains a file file1.ext and subdirectory subsubdir1. subdir2 contains a subdirectory subsubdir2, which contains a file file2.ext.\n\nIn text form, it looks like this (with ⟶ representing the tab character):\n\ndir\n⟶ subdir1\n⟶ ⟶ file1.ext\n⟶ ⟶ subsubdir1\n⟶ subdir2\n⟶ ⟶ subsubdir2\n⟶ ⟶ ⟶ file2.ext\n\n\nIf we were to write this representation in code, it will look like this: \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\". Note that the '\\n' and '\\t' are the new-line and tab characters.\n\nEvery file and directory has a unique absolute path in the file system, which is the order of directories that must be opened to reach the file/directory itself, all concatenated by '/'s. Using the above example, the absolute path to file2.ext is \"dir/subdir2/subsubdir2/file2.ext\". Each directory name consists of letters, digits, and/or spaces. Each file name is of the form name.extension, where name and extension consist of letters, digits, and/or spaces.\n\nGiven a string input representing the file system in the explained format, return the length of the longest absolute path to a file in the abstracted file system. If there is no file in the system, return 0.\n\n \n\nExample 1:\n\nInput: input = \"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\"\nOutput: 20\nExplanation: We have only one file, and the absolute path is \"dir/subdir2/file.ext\" of length 20.\n\n\nExample 2:\n\nInput: input = \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"\nOutput: 32\nExplanation: We have two files:\n\"dir/subdir1/file1.ext\" of length 21\n\"dir/subdir2/subsubdir2/file2.ext\" of length 32.\nWe return 32 since it is the longest absolute path to a file.\n\n\nExample 3:\n\nInput: input = \"a\"\nOutput: 0\nExplanation: We do not have any files, just a single directory named \"a\".\n\n\nExample 4:\n\nInput: input = \"file1.txt\\nfile2.txt\\nlongfile.txt\"\nOutput: 12\nExplanation: There are 3 files at the root directory.\nSince the absolute path for anything at the root directory is just the name itself, the answer is \"longfile.txt\" with length 12.\n\n\n \n\nConstraints:\n\n1 <= input.length <= 104\ninput may contain lowercase or uppercase English letters, a new line character '\\n', a tab character '\\t', a dot '.', a space ' ', and digits."},{"index":"389","url":"https://leetcode.com/problems/find-the-difference","title":"Find the Difference","difficulty":"Easy","description":"You are given two strings s and t.\n\nString t is generated by random shuffling string s and then add one more letter at a random position.\n\nReturn the letter that was added to t.\n\n \n\nExample 1:\n\nInput: s = \"abcd\", t = \"abcde\"\nOutput: \"e\"\nExplanation: 'e' is the letter that was added.\n\n\nExample 2:\n\nInput: s = \"\", t = \"y\"\nOutput: \"y\"\n\n\nExample 3:\n\nInput: s = \"a\", t = \"aa\"\nOutput: \"a\"\n\n\nExample 4:\n\nInput: s = \"ae\", t = \"aea\"\nOutput: \"a\"\n\n\n \n\nConstraints:\n\n0 <= s.length <= 1000\nt.length == s.length + 1\ns and t consist of lower-case English letters."},{"index":"390","url":"https://leetcode.com/problems/elimination-game","title":"Elimination Game","difficulty":"Medium","description":"There is a list of sorted integers from 1 to n. Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.\n\nRepeat the previous step again, but this time from right to left, remove the right most number and every other number from the remaining numbers.\n\nWe keep repeating the steps again, alternating left to right and right to left, until a single number remains.\n\nFind the last number that remains starting with a list of length n.\n\nExample:\n\nInput:\nn = 9,\n1 2 3 4 5 6 7 8 9\n2 4 6 8\n2 6\n6\n\nOutput:\n6\n"},{"index":"391","url":"https://leetcode.com/problems/perfect-rectangle","title":"Perfect Rectangle","difficulty":"Hard","description":"Given N axis-aligned rectangles where N > 0, determine if they all together form an exact cover of a rectangular region.\n\nEach rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).\n\nExample 1:\n\nrectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [3,2,4,4],\n  [1,3,2,4],\n  [2,3,3,4]\n]\n\nReturn true. All 5 rectangles together form an exact cover of a rectangular region.\n\n\n \n\n \n\nExample 2:\n\nrectangles = [\n  [1,1,2,3],\n  [1,3,2,4],\n  [3,1,4,2],\n  [3,2,4,4]\n]\n\nReturn false. Because there is a gap between the two rectangular regions.\n\n\n \n\n \n\nExample 3:\n\nrectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [1,3,2,4],\n  [3,2,4,4]\n]\n\nReturn false. Because there is a gap in the top center.\n\n\n \n\n \n\nExample 4:\n\nrectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [1,3,2,4],\n  [2,2,4,4]\n]\n\nReturn false. Because two of the rectangles overlap with each other.\n\n\n "},{"index":"392","url":"https://leetcode.com/problems/is-subsequence","title":"Is Subsequence","difficulty":"Easy","description":"Given a string s and a string t, check if s is subsequence of t.\n\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\n\nFollow up:\nIf there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?\n\nCredits:\nSpecial thanks to @pbrother for adding this problem and creating all test cases.\n\n \n\nExample 1:\n\nInput: s = \"abc\", t = \"ahbgdc\"\nOutput: true\n\n\nExample 2:\n\nInput: s = \"axc\", t = \"ahbgdc\"\nOutput: false\n\n\n \n\nConstraints:\n\n0 <= s.length <= 100\n0 <= t.length <= 10^4\nBoth strings consists only of lowercase characters."},{"index":"393","url":"https://leetcode.com/problems/utf-8-validation","title":"UTF-8 Validation","difficulty":"Medium","description":"A character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:\n\nFor 1-byte character, the first bit is a 0, followed by its unicode code.\nFor n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.\n\nThis is how the UTF-8 encoding would work:\n\n   Char. number range  |        UTF-8 octet sequence\n      (hexadecimal)    |              (binary)\n   --------------------+---------------------------------------------\n   0000 0000-0000 007F | 0xxxxxxx\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n\n\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\n\nNote:\nThe input is an array of integers. Only the least significant 8 bits of each integer is used to store the data. This means each integer represents only 1 byte of data.\n\nExample 1:\n\ndata = [197, 130, 1], which represents the octet sequence: 11000101 10000010 00000001.\n\nReturn true.\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\n\n\nExample 2:\n\ndata = [235, 140, 4], which represented the octet sequence: 11101011 10001100 00000100.\n\nReturn false.\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\nThe next byte is a continuation byte which starts with 10 and that's correct.\nBut the second continuation byte does not start with 10, so it is invalid.\n"},{"index":"394","url":"https://leetcode.com/problems/decode-string","title":"Decode String","difficulty":"Medium","description":"Given an encoded string, return its decoded string.\n\nThe encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer.\n\nYou may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.\n\nFurthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there won't be input like 3a or 2[4].\n\n \n\nExample 1:\n\nInput: s = \"3[a]2[bc]\"\nOutput: \"aaabcbc\"\n\n\nExample 2:\n\nInput: s = \"3[a2[c]]\"\nOutput: \"accaccacc\"\n\n\nExample 3:\n\nInput: s = \"2[abc]3[cd]ef\"\nOutput: \"abcabccdcdcdef\"\n\n\nExample 4:\n\nInput: s = \"abc3[cd]xyz\"\nOutput: \"abccdcdcdxyz\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 30\ns consists of lowercase English letters, digits, and square brackets '[]'.\ns is guaranteed to be a valid input.\nAll the integers in s are in the range [1, 300]."},{"index":"395","url":"https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters","title":"Longest Substring with At Least K Repeating Characters","difficulty":"Medium","description":"Given a string s and an integer k, return the length of the longest substring of s such that the frequency of each character in this substring is less than or equal to k.\n\n \n\nExample 1:\n\nInput: s = \"aaabb\", k = 3\nOutput: 3\nExplanation: The longest substring is \"aaa\", as 'a' is repeated 3 times.\n\n\nExample 2:\n\nInput: s = \"ababbc\", k = 2\nOutput: 5\nExplanation: The longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 104\ns consists of only lowercase English letters.\n1 <= k <= 105"},{"index":"396","url":"https://leetcode.com/problems/rotate-function","title":"Rotate Function","difficulty":"Medium","description":"Given an array of integers A and let n to be its length.\n\nAssume Bk to be an array obtained by rotating the array A k positions clock-wise, we define a \"rotation function\" F on A as follow:\n\nF(k) = 0 * Bk[0] + 1 * Bk[1] + ... + (n-1) * Bk[n-1].\n\nCalculate the maximum value of F(0), F(1), ..., F(n-1).\n\nNote:\nn is guaranteed to be less than 105.\n\nExample:\n\nA = [4, 3, 2, 6]\n\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\n\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\n"},{"index":"397","url":"https://leetcode.com/problems/integer-replacement","title":"Integer Replacement","difficulty":"Medium","description":"Given a positive integer n, you can apply one of the following operations:\n\nIf n is even, replace n with n / 2.\nIf n is odd, replace n with either n + 1 or n - 1.\n\nReturn the minimum number of operations needed for n to become 1.\n\n \n\nExample 1:\n\nInput: n = 8\nOutput: 3\nExplanation: 8 -> 4 -> 2 -> 1\n\n\nExample 2:\n\nInput: n = 7\nOutput: 4\nExplanation: 7 -> 8 -> 4 -> 2 -> 1\nor 7 -> 6 -> 3 -> 2 -> 1\n\n\nExample 3:\n\nInput: n = 4\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= n <= 231 - 1"},{"index":"398","url":"https://leetcode.com/problems/random-pick-index","title":"Random Pick Index","difficulty":"Medium","description":"Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\n\nNote:\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.\n\nExample:\n\nint[] nums = new int[] {1,2,3,3,3};\nSolution solution = new Solution(nums);\n\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\nsolution.pick(3);\n\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\nsolution.pick(1);\n"},{"index":"399","url":"https://leetcode.com/problems/evaluate-division","title":"Evaluate Division","difficulty":"Medium","description":"You are given an array of variable pairs equations and an array of real numbers values, where equations[i] = [Ai, Bi] and values[i] represent the equation Ai / Bi = values[i]. Each Ai or Bi is a string that represents a single variable.\n\nYou are also given some queries, where queries[j] = [Cj, Dj] represents the jth query where you must find the answer for Cj / Dj = ?.\n\nReturn the answers to all queries. If a single answer cannot be determined, return -1.0.\n\nNote: The input is always valid. You may assume that evaluating the queries will not result in division by zero and that there is no contradiction.\n\n \n\nExample 1:\n\nInput: equations = [[\"a\",\"b\"],[\"b\",\"c\"]], values = [2.0,3.0], queries = [[\"a\",\"c\"],[\"b\",\"a\"],[\"a\",\"e\"],[\"a\",\"a\"],[\"x\",\"x\"]]\nOutput: [6.00000,0.50000,-1.00000,1.00000,-1.00000]\nExplanation: \nGiven: a / b = 2.0, b / c = 3.0\nqueries are: a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ?\nreturn: [6.0, 0.5, -1.0, 1.0, -1.0 ]\n\n\nExample 2:\n\nInput: equations = [[\"a\",\"b\"],[\"b\",\"c\"],[\"bc\",\"cd\"]], values = [1.5,2.5,5.0], queries = [[\"a\",\"c\"],[\"c\",\"b\"],[\"bc\",\"cd\"],[\"cd\",\"bc\"]]\nOutput: [3.75000,0.40000,5.00000,0.20000]\n\n\nExample 3:\n\nInput: equations = [[\"a\",\"b\"]], values = [0.5], queries = [[\"a\",\"b\"],[\"b\",\"a\"],[\"a\",\"c\"],[\"x\",\"y\"]]\nOutput: [0.50000,2.00000,-1.00000,-1.00000]\n\n\n \n\nConstraints:\n\n1 <= equations.length <= 20\nequations[i].length == 2\n1 <= Ai.length, Bi.length <= 5\nvalues.length == equations.length\n0.0 < values[i] <= 20.0\n1 <= queries.length <= 20\nqueries[i].length == 2\n1 <= Cj.length, Dj.length <= 5\nAi, Bi, Cj, Dj consist of lower case English letters and digits."},{"index":"400","url":"https://leetcode.com/problems/nth-digit","title":"Nth Digit","difficulty":"Medium","description":"Find the nth digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...\n\nNote:\nn is positive and will fit within the range of a 32-bit signed integer (n < 231).\n\nExample 1:\n\nInput:\n3\n\nOutput:\n3\n\n\nExample 2:\n\nInput:\n11\n\nOutput:\n0\n\nExplanation:\nThe 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.\n"},{"index":"401","url":"https://leetcode.com/problems/binary-watch","title":"Binary Watch","difficulty":"Easy","description":"A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6 LEDs on the bottom represent the minutes (0-59).\n\nEach LED represents a zero or one, with the least significant bit on the right.\n\nFor example, the above binary watch reads \"3:25\".\n\nGiven a non-negative integer n which represents the number of LEDs that are currently on, return all possible times the watch could represent.\n\nExample:\n\nInput: n = 1\nReturn: [\"1:00\", \"2:00\", \"4:00\", \"8:00\", \"0:01\", \"0:02\", \"0:04\", \"0:08\", \"0:16\", \"0:32\"]\n\nNote:\n\n\nThe order of output does not matter.\nThe hour must not contain a leading zero, for example \"01:00\" is not valid, it should be \"1:00\".\nThe minute must be consist of two digits and may contain a leading zero, for example \"10:2\" is not valid, it should be \"10:02\"."},{"index":"402","url":"https://leetcode.com/problems/remove-k-digits","title":"Remove K Digits","difficulty":"Medium","description":"Given a non-negative integer num represented as a string, remove k digits from the number so that the new number is the smallest possible.\n\nNote:\n\n\nThe length of num is less than 10002 and will be ≥ k.\nThe given num does not contain any leading zero.\n\nExample 1:\n\nInput: num = \"1432219\", k = 3\nOutput: \"1219\"\nExplanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\n\n\nExample 2:\n\nInput: num = \"10200\", k = 1\nOutput: \"200\"\nExplanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\n\n\nExample 3:\n\nInput: num = \"10\", k = 2\nOutput: \"0\"\nExplanation: Remove all the digits from the number and it is left with nothing which is 0.\n"},{"index":"403","url":"https://leetcode.com/problems/frog-jump","title":"Frog Jump","difficulty":"Hard","description":"A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.\n\nGiven a list of stones' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit.\n\nIf the frog's last jump was k units, then its next jump must be either k - 1, k, or k + 1 units. Note that the frog can only jump in the forward direction.\n\nNote:\n\nThe number of stones is ≥ 2 and is < 1,100.\nEach stone's position will be a non-negative integer < 231.\nThe first stone's position is always 0.\n\nExample 1:\n\n[0,1,3,5,6,8,12,17]\n\nThere are a total of 8 stones.\nThe first stone at the 0th unit, second stone at the 1st unit,\nthird stone at the 3rd unit, and so on...\nThe last stone at the 17th unit.\n\nReturn true. The frog can jump to the last stone by jumping \n1 unit to the 2nd stone, then 2 units to the 3rd stone, then \n2 units to the 4th stone, then 3 units to the 6th stone, \n4 units to the 7th stone, and 5 units to the 8th stone.\n\n\nExample 2:\n\n[0,1,2,3,4,8,9,11]\n\nReturn false. There is no way to jump to the last stone as \nthe gap between the 5th and 6th stone is too large.\n"},{"index":"404","url":"https://leetcode.com/problems/sum-of-left-leaves","title":"Sum of Left Leaves","difficulty":"Easy","description":"Find the sum of all left leaves in a given binary tree.\n\nExample:\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nThere are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.\n"},{"index":"405","url":"https://leetcode.com/problems/convert-a-number-to-hexadecimal","title":"Convert a Number to Hexadecimal","difficulty":"Easy","description":"Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, two’s complement method is used.\n\nNote:\n\nAll letters in hexadecimal (a-f) must be in lowercase.\nThe hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.\nThe given number is guaranteed to fit within the range of a 32-bit signed integer.\nYou must not use any method provided by the library which converts/formats the number to hex directly.\n\nExample 1:\n\nInput:\n26\n\nOutput:\n\"1a\"\n\n\nExample 2:\n\nInput:\n-1\n\nOutput:\n\"ffffffff\"\n"},{"index":"406","url":"https://leetcode.com/problems/queue-reconstruction-by-height","title":"Queue Reconstruction by Height","difficulty":"Medium","description":"You are given an array of people, people, which are the attributes of some people in a queue (not necessarily in order). Each people[i] = [hi, ki] represents the ith person of height hi with exactly ki other people in front who have a height greater than or equal to hi.\n\nReconstruct and return the queue that is represented by the input array people. The returned queue should be formatted as an array queue, where queue[j] = [hj, kj] is the attributes of the jth person in the queue (queue[0] is the person at the front of the queue).\n\n \n\nExample 1:\n\nInput: people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\nOutput: [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\nExplanation:\nPerson 0 has height 5 with no other people taller or the same height in front.\nPerson 1 has height 7 with no other people taller or the same height in front.\nPerson 2 has height 5 with one person taller or the same height in front, which is person 1.\nPerson 3 has height 6 with one person taller or the same height in front, which is person 1.\nPerson 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3.\nPerson 5 has height 7 with one person taller or the same height in front, which is person 1.\nHence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue.\n\n\nExample 2:\n\nInput: people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]\nOutput: [[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]\n\n\n \n\nConstraints:\n\n1 <= people.length <= 2000\n0 <= hi <= 106\n0 <= ki < people.length\nIt is guaranteed that the queue can be reconstructed."},{"index":"407","url":"https://leetcode.com/problems/trapping-rain-water-ii","title":"Trapping Rain Water II","difficulty":"Hard","description":"Given an m x n matrix of positive integers representing the height of each unit cell in a 2D elevation map, compute the volume of water it is able to trap after raining.\n\nExample:\n\nGiven the following 3x6 height map:\n[\n  [1,4,3,1,3,2],\n  [3,2,1,3,2,4],\n  [2,3,3,2,3,1]\n]\n\nReturn 4.\n\n\nThe above image represents the elevation map [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]] before the rain.\n\n \n\nAfter the rain, water is trapped between the blocks. The total volume of water trapped is 4.\n\n \n\nConstraints:\n\n1 <= m, n <= 110\n0 <= heightMap[i][j] <= 20000"},{"index":"409","url":"https://leetcode.com/problems/longest-palindrome","title":"Longest Palindrome","difficulty":"Easy","description":"Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.\n\nLetters are case sensitive, for example, \"Aa\" is not considered a palindrome here.\n\n \n\nExample 1:\n\nInput: s = \"abccccdd\"\nOutput: 7\nExplanation:\nOne longest palindrome that can be built is \"dccaccd\", whose length is 7.\n\n\nExample 2:\n\nInput: s = \"a\"\nOutput: 1\n\n\nExample 3:\n\nInput: s = \"bb\"\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= s.length <= 2000\ns consits of lower-case and/or upper-case English letters only."},{"index":"410","url":"https://leetcode.com/problems/split-array-largest-sum","title":"Split Array Largest Sum","difficulty":"Hard","description":"Given an array nums which consists of non-negative integers and an integer m, you can split the array into m non-empty continuous subarrays.\n\nWrite an algorithm to minimize the largest sum among these m subarrays.\n\n \n\nExample 1:\n\nInput: nums = [7,2,5,10,8], m = 2\nOutput: 18\nExplanation:\nThere are four ways to split nums into two subarrays.\nThe best way is to split it into [7,2,5] and [10,8],\nwhere the largest sum among the two subarrays is only 18.\n\n\nExample 2:\n\nInput: nums = [1,2,3,4,5], m = 2\nOutput: 9\n\n\nExample 3:\n\nInput: nums = [1,4,4], m = 3\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 1000\n0 <= nums[i] <= 106\n1 <= m <= min(50, nums.length)"},{"index":"412","url":"https://leetcode.com/problems/fizz-buzz","title":"Fizz Buzz","difficulty":"Easy","description":"Write a program that outputs the string representation of numbers from 1 to n.\n\nBut for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.\n\nExample:\n\nn = 15,\n\nReturn:\n[\n    \"1\",\n    \"2\",\n    \"Fizz\",\n    \"4\",\n    \"Buzz\",\n    \"Fizz\",\n    \"7\",\n    \"8\",\n    \"Fizz\",\n    \"Buzz\",\n    \"11\",\n    \"Fizz\",\n    \"13\",\n    \"14\",\n    \"FizzBuzz\"\n]\n"},{"index":"413","url":"https://leetcode.com/problems/arithmetic-slices","title":"Arithmetic Slices","difficulty":"Medium","description":"A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n\nFor example, these are arithmetic sequences:\n\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9\n\nThe following sequence is not arithmetic.\n\n1, 1, 2, 5, 7\n \n\nA zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 <= P < Q < N.\n\nA slice (P, Q) of the array A is called arithmetic if the sequence:\nA[P], A[P + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 < Q.\n\nThe function should return the number of arithmetic slices in the array A.\n\n \n\nExample:\n\nA = [1, 2, 3, 4]\n\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.\n"},{"index":"414","url":"https://leetcode.com/problems/third-maximum-number","title":"Third Maximum Number","difficulty":"Easy","description":"Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).\n\nExample 1:\n\n\nInput: [3, 2, 1]\n\nOutput: 1\n\nExplanation: The third maximum is 1.\n\n\nExample 2:\n\n\nInput: [1, 2]\n\nOutput: 2\n\nExplanation: The third maximum does not exist, so the maximum (2) is returned instead.\n\n\nExample 3:\n\n\nInput: [2, 2, 3, 1]\n\nOutput: 1\n\nExplanation: Note that the third maximum here means the third maximum distinct number.\nBoth numbers with value 2 are both considered as second maximum.\n"},{"index":"415","url":"https://leetcode.com/problems/add-strings","title":"Add Strings","difficulty":"Easy","description":"Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.\n\nNote:\n\nThe length of both num1 and num2 is < 5100.\nBoth num1 and num2 contains only digits 0-9.\nBoth num1 and num2 does not contain any leading zero.\nYou must not use any built-in BigInteger library or convert the inputs to integer directly."},{"index":"416","url":"https://leetcode.com/problems/partition-equal-subset-sum","title":"Partition Equal Subset Sum","difficulty":"Medium","description":"Given a non-empty array nums containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.\n\n \n\nExample 1:\n\nInput: nums = [1,5,11,5]\nOutput: true\nExplanation: The array can be partitioned as [1, 5, 5] and [11].\n\n\nExample 2:\n\nInput: nums = [1,2,3,5]\nOutput: false\nExplanation: The array cannot be partitioned into equal sum subsets.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 200\n1 <= nums[i] <= 100"},{"index":"417","url":"https://leetcode.com/problems/pacific-atlantic-water-flow","title":"Pacific Atlantic Water Flow","difficulty":"Medium","description":"Given an m x n matrix of non-negative integers representing the height of each unit cell in a continent, the \"Pacific ocean\" touches the left and top edges of the matrix and the \"Atlantic ocean\" touches the right and bottom edges.\n\nWater can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.\n\nFind the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.\n\nNote:\n\nThe order of returned grid coordinates does not matter.\nBoth m and n are less than 150.\n\n \n\nExample:\n\nGiven the following 5x5 matrix:\n\n  Pacific ~   ~   ~   ~   ~ \n       ~  1   2   2   3  (5) *\n       ~  3   2   3  (4) (4) *\n       ~  2   4  (5)  3   1  *\n       ~ (6) (7)  1   4   5  *\n       ~ (5)  1   1   2   4  *\n          *   *   *   *   * Atlantic\n\nReturn:\n\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).\n\n\n "},{"index":"419","url":"https://leetcode.com/problems/battleships-in-a-board","title":"Battleships in a Board","difficulty":"Medium","description":"Given an 2D board, count how many battleships are in it. The battleships are represented with 'X's, empty slots are represented with '.'s. You may assume the following rules:\nYou receive a valid board, made of only battleships or empty slots.\nBattleships can only be placed horizontally or vertically. In other words, they can only be made of the shape 1xN (1 row, N columns) or Nx1 (N rows, 1 column), where N can be of any size.\nAt least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.\n\nExample:\n\n\nX..X\n...X\n...X\n\nIn the above board there are 2 battleships.\n\nInvalid Example:\n\n\n...X\nXXXX\n...X\n\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\n\nFollow up:\nCould you do it in one-pass, using only O(1) extra memory and without modifying the value of the board?"},{"index":"420","url":"https://leetcode.com/problems/strong-password-checker","title":"Strong Password Checker","difficulty":"Hard","description":"A password is considered strong if the below conditions are all met:\n\nIt has at least 6 characters and at most 20 characters.\nIt contains at least one lowercase letter, at least one uppercase letter, and at least one digit.\nIt does not contain three repeating characters in a row (i.e., \"...aaa...\" is weak, but \"...aa...a...\" is strong, assuming other conditions are met).\n\nGiven a string password, return the minimum number of steps required to make password strong. if password is already strong, return 0.\n\nIn one step, you can:\n\nInsert one character to password,\nDelete one character from password, or\nReplace one character of password with another character.\n\n \n\nExample 1:\n\nInput: password = \"a\"\nOutput: 5\n\n\nExample 2:\n\nInput: password = \"aA1\"\nOutput: 3\n\n\nExample 3:\n\nInput: password = \"1337C0d3\"\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= password.length <= 50\npassword consists of letters, digits, dot '.' or exclamation mark '!'."},{"index":"421","url":"https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array","title":"Maximum XOR of Two Numbers in an Array","difficulty":"Medium","description":"Given an integer array nums, return the maximum result of nums[i] XOR nums[j], where 0 ≤ i ≤ j < n.\n\nFollow up: Could you do this in O(n) runtime?\n\n \n\nExample 1:\n\nInput: nums = [3,10,5,25,2,8]\nOutput: 28\nExplanation: The maximum result is 5 XOR 25 = 28.\n\nExample 2:\n\nInput: nums = [0]\nOutput: 0\n\n\nExample 3:\n\nInput: nums = [2,4]\nOutput: 6\n\n\nExample 4:\n\nInput: nums = [8,10,2]\nOutput: 10\n\n\nExample 5:\n\nInput: nums = [14,70,53,83,49,91,36,80,92,51,66,70]\nOutput: 127\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 2 * 104\n0 <= nums[i] <= 231 - 1"},{"index":"423","url":"https://leetcode.com/problems/reconstruct-original-digits-from-english","title":"Reconstruct Original Digits from English","difficulty":"Medium","description":"Given a non-empty string containing an out-of-order English representation of digits 0-9, output the digits in ascending order.\n\nNote:\n\n\nInput contains only lowercase English letters.\nInput is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as \"abc\" or \"zerone\" are not permitted.\nInput length is less than 50,000.\n\nExample 1:\n\n\nInput: \"owoztneoer\"\n\nOutput: \"012\"\n\n\nExample 2:\n\n\nInput: \"fviefuro\"\n\nOutput: \"45\"\n"},{"index":"424","url":"https://leetcode.com/problems/longest-repeating-character-replacement","title":"Longest Repeating Character Replacement","difficulty":"Medium","description":"Given a string s that consists of only uppercase English letters, you can perform at most k operations on that string.\n\nIn one operation, you can choose any character of the string and change it to any other uppercase English character.\n\nFind the length of the longest sub-string containing all repeating letters you can get after performing the above operations.\n\nNote:\nBoth the string's length and k will not exceed 104.\n\nExample 1:\n\nInput:\ns = \"ABAB\", k = 2\n\nOutput:\n4\n\nExplanation:\nReplace the two 'A's with two 'B's or vice versa.\n\n\n \n\nExample 2:\n\nInput:\ns = \"AABABBA\", k = 1\n\nOutput:\n4\n\nExplanation:\nReplace the one 'A' in the middle with 'B' and form \"AABBBBA\".\nThe substring \"BBBB\" has the longest repeating letters, which is 4.\n\n\n "},{"index":"427","url":"https://leetcode.com/problems/construct-quad-tree","title":"Construct Quad Tree","difficulty":"Medium","description":"Given a n * n matrix grid of 0's and 1's only. We want to represent the grid with a Quad-Tree.\n\nReturn the root of the Quad-Tree representing the grid.\n\nNotice that you can assign the value of a node to True or False when isLeaf is False, and both are accepted in the answer.\n\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\n\nval: True if the node represents a grid of 1's or False if the node represents a grid of 0's. \nisLeaf: True if the node is leaf node on the tree or False if the node has the four children.\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\n\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\n\nIf the current grid has the same value (i.e all 1's or all 0's) set isLeaf True and set val to the value of the grid and set the four children to Null and stop.\nIf the current grid has different values, set isLeaf to False and set val to any value and divide the current grid into four sub-grids as shown in the photo.\nRecurse for each of the children with the proper sub-grid.\n\nIf you want to know more about the Quad-Tree, you can refer to the wiki.\n\nQuad-Tree format:\n\nThe output represents the serialized format of a Quad-Tree using level order traversal, where null signifies a path terminator where no node exists below.\n\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list [isLeaf, val].\n\nIf the value of isLeaf or val is True we represent it as 1 in the list [isLeaf, val] and if the value of isLeaf or val is False we represent it as 0.\n\n \n\nExample 1:\n\nInput: grid = [[0,1],[1,0]]\nOutput: [[0,1],[1,0],[1,1],[1,1],[1,0]]\nExplanation: The explanation of this example is shown below:\nNotice that 0 represnts False and 1 represents True in the photo representing the Quad-Tree.\n\n\n\nExample 2:\n\nInput: grid = [[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0]]\nOutput: [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\nExplanation: All values in the grid are not the same. We divide the grid into four sub-grids.\nThe topLeft, bottomLeft and bottomRight each has the same value.\nThe topRight have different values so we divide it into 4 sub-grids where each has the same value.\nExplanation is shown in the photo below:\n\n\n\nExample 3:\n\nInput: grid = [[1,1],[1,1]]\nOutput: [[1,1]]\n\n\nExample 4:\n\nInput: grid = [[0]]\nOutput: [[1,0]]\n\n\nExample 5:\n\nInput: grid = [[1,1,0,0],[1,1,0,0],[0,0,1,1],[0,0,1,1]]\nOutput: [[0,1],[1,1],[1,0],[1,0],[1,1]]\n\n\n \n\nConstraints:\n\nn == grid.length == grid[i].length\nn == 2^x where 0 <= x <= 6"},{"index":"429","url":"https://leetcode.com/problems/n-ary-tree-level-order-traversal","title":"N-ary Tree Level Order Traversal","difficulty":"Medium","description":"Given an n-ary tree, return the level order traversal of its nodes' values.\n\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\n \n\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: [[1],[3,2,4],[5,6]]\n\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: [[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]]\n\n\n \n\nConstraints:\n\nThe height of the n-ary tree is less than or equal to 1000\nThe total number of nodes is between [0, 10^4]"},{"index":"430","url":"https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list","title":"Flatten a Multilevel Doubly Linked List","difficulty":"Medium","description":"You are given a doubly linked list which in addition to the next and previous pointers, it could have a child pointer, which may or may not point to a separate doubly linked list. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure, as shown in the example below.\n\nFlatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head of the first level of the list.\n\n \n\nExample 1:\n\nInput: head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\nOutput: [1,2,3,7,8,11,12,9,10,4,5,6]\nExplanation:\n\nThe multilevel linked list in the input is as follows:\n\n\n\nAfter flattening the multilevel linked list it becomes:\n\n\n\n\nExample 2:\n\nInput: head = [1,2,null,3]\nOutput: [1,3,2]\nExplanation:\n\nThe input multilevel linked list is as follows:\n\n  1---2---NULL\n  |\n  3---NULL\n\n\nExample 3:\n\nInput: head = []\nOutput: []\n\n\n \n\nHow multilevel linked list is represented in test case:\n\nWe use the multilevel linked list from Example 1 above:\n\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL\n\nThe serialization of each level is as follows:\n\n[1,2,3,4,5,6,null]\n[7,8,9,10,null]\n[11,12,null]\n\n\nTo serialize all levels together we will add nulls in each level to signify no node connects to the upper node of the previous level. The serialization becomes:\n\n[1,2,3,4,5,6,null]\n[null,null,7,8,9,10,null]\n[null,11,12,null]\n\n\nMerging the serialization of each level and removing trailing nulls we obtain:\n\n[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\n\n \n\nConstraints:\n\nNumber of Nodes will not exceed 1000.\n1 <= Node.val <= 10^5"},{"index":"432","url":"https://leetcode.com/problems/all-oone-data-structure","title":"All O`one Data Structure","difficulty":"Hard","description":"Implement a data structure supporting the following operations:\n\nInc(Key) - Inserts a new key with value 1. Or increments an existing key by 1. Key is guaranteed to be a non-empty string.\nDec(Key) - If Key's value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a non-empty string.\nGetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string \"\".\nGetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string \"\".\n\nChallenge: Perform all these in O(1) time complexity."},{"index":"433","url":"https://leetcode.com/problems/minimum-genetic-mutation","title":"Minimum Genetic Mutation","difficulty":"Medium","description":"A gene string can be represented by an 8-character long string, with choices from \"A\", \"C\", \"G\", \"T\".\n\nSuppose we need to investigate about a mutation (mutation from \"start\" to \"end\"), where ONE mutation is defined as ONE single character changed in the gene string.\n\nFor example, \"AACCGGTT\" -> \"AACCGGTA\" is 1 mutation.\n\nAlso, there is a given gene \"bank\", which records all the valid gene mutations. A gene must be in the bank to make it a valid gene string.\n\nNow, given 3 things - start, end, bank, your task is to determine what is the minimum number of mutations needed to mutate from \"start\" to \"end\". If there is no such a mutation, return -1.\n\nNote:\n\nStarting point is assumed to be valid, so it might not be included in the bank.\nIf multiple mutations are needed, all mutations during in the sequence must be valid.\nYou may assume start and end string is not the same.\n\n \n\nExample 1:\n\nstart: \"AACCGGTT\"\nend:   \"AACCGGTA\"\nbank: [\"AACCGGTA\"]\n\nreturn: 1\n\n\n \n\nExample 2:\n\nstart: \"AACCGGTT\"\nend:   \"AAACGGTA\"\nbank: [\"AACCGGTA\", \"AACCGCTA\", \"AAACGGTA\"]\n\nreturn: 2\n\n\n \n\nExample 3:\n\nstart: \"AAAAACCC\"\nend:   \"AACCCCCC\"\nbank: [\"AAAACCCC\", \"AAACCCCC\", \"AACCCCCC\"]\n\nreturn: 3\n\n\n "},{"index":"434","url":"https://leetcode.com/problems/number-of-segments-in-a-string","title":"Number of Segments in a String","difficulty":"Easy","description":"You are given a string s, return the number of segments in the string. \n\nA segment is defined to be a contiguous sequence of non-space characters.\n\n \n\nExample 1:\n\nInput: s = \"Hello, my name is John\"\nOutput: 5\nExplanation: The five segments are [\"Hello,\", \"my\", \"name\", \"is\", \"John\"]\n\n\nExample 2:\n\nInput: s = \"Hello\"\nOutput: 1\n\n\nExample 3:\n\nInput: s = \"love live! mu'sic forever\"\nOutput: 4\n\n\nExample 4:\n\nInput: s = \"\"\nOutput: 0\n\n\n \n\nConstraints:\n\n0 <= s.length <= 300\ns consists of lower-case and upper-case English letters, digits or one of the following characters \"!@#$%^&*()_+-=',.:\".\nThe only space character in s is ' '."},{"index":"435","url":"https://leetcode.com/problems/non-overlapping-intervals","title":"Non-overlapping Intervals","difficulty":"Medium","description":"Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\n\n \n\nExample 1:\n\nInput: [[1,2],[2,3],[3,4],[1,3]]\nOutput: 1\nExplanation: [1,3] can be removed and the rest of intervals are non-overlapping.\n\n\nExample 2:\n\nInput: [[1,2],[1,2],[1,2]]\nOutput: 2\nExplanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.\n\n\nExample 3:\n\nInput: [[1,2],[2,3]]\nOutput: 0\nExplanation: You don't need to remove any of the intervals since they're already non-overlapping.\n\n\n \n\nNote:\n\nYou may assume the interval's end point is always bigger than its start point.\nIntervals like [1,2] and [2,3] have borders \"touching\" but they don't overlap each other."},{"index":"436","url":"https://leetcode.com/problems/find-right-interval","title":"Find Right Interval","difficulty":"Medium","description":"You are given an array of intervals, where intervals[i] = [starti, endi] and each starti is unique.\n\nThe right interval for an interval i is an interval j such that startj >= endi and startj is minimized.\n\nReturn an array of right interval indices for each interval i. If no right interval exists for interval i, then put -1 at index i.\n\n \n\nExample 1:\n\nInput: intervals = [[1,2]]\nOutput: [-1]\nExplanation: There is only one interval in the collection, so it outputs -1.\n\n\nExample 2:\n\nInput: intervals = [[3,4],[2,3],[1,2]]\nOutput: [-1,0,1]\nExplanation: There is no right interval for [3,4].\nThe right interval for [2,3] is [3,4] since start0 = 3 is the smallest start that is >= end1 = 3.\nThe right interval for [1,2] is [2,3] since start1 = 2 is the smallest start that is >= end2 = 2.\n\n\nExample 3:\n\nInput: intervals = [[1,4],[2,3],[3,4]]\nOutput: [-1,2,-1]\nExplanation: There is no right interval for [1,4] and [3,4].\nThe right interval for [2,3] is [3,4] since start2 = 3 is the smallest start that is >= end1 = 3.\n\n\n \n\nConstraints:\n\n1 <= intervals.length <= 2 * 104\nintervals[i].length == 2\n-106 <= starti <= endi <= 106\nThe start point of each interval is unique."},{"index":"437","url":"https://leetcode.com/problems/path-sum-iii","title":"Path Sum III","difficulty":"Medium","description":"You are given a binary tree in which each node contains an integer value.\n\nFind the number of paths that sum to a given value.\n\nThe path does not need to start or end at the root or a leaf, but it must go downwards (traveling only from parent nodes to child nodes).\n\nThe tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\n\nExample:\n\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\nReturn 3. The paths that sum to 8 are:\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n"},{"index":"438","url":"https://leetcode.com/problems/find-all-anagrams-in-a-string","title":"Find All Anagrams in a String","difficulty":"Medium","description":"Given a string s and a non-empty string p, find all the start indices of p's anagrams in s.\n\nStrings consists of lowercase English letters only and the length of both strings s and p will not be larger than 20,100.\n\nThe order of output does not matter.\n\nExample 1:\n\nInput:\ns: \"cbaebabacd\" p: \"abc\"\n\nOutput:\n[0, 6]\n\nExplanation:\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\n\n\nExample 2:\n\nInput:\ns: \"abab\" p: \"ab\"\n\nOutput:\n[0, 1, 2]\n\nExplanation:\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".\n"},{"index":"440","url":"https://leetcode.com/problems/k-th-smallest-in-lexicographical-order","title":"K-th Smallest in Lexicographical Order","difficulty":"Hard","description":"Given integers n and k, find the lexicographically k-th smallest integer in the range from 1 to n.\n\nNote: 1 ≤ k ≤ n ≤ 109.\n\nExample:\n\nInput:\nn: 13   k: 2\n\nOutput:\n10\n\nExplanation:\nThe lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.\n"},{"index":"441","url":"https://leetcode.com/problems/arranging-coins","title":"Arranging Coins","difficulty":"Easy","description":"You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.\n\nGiven n, find the total number of full staircase rows that can be formed.\n\nn is a non-negative integer and fits within the range of a 32-bit signed integer.\n\nExample 1:\n\nn = 5\n\nThe coins can form the following rows:\n¤\n¤ ¤\n¤ ¤\n\nBecause the 3rd row is incomplete, we return 2.\n\n\nExample 2:\n\nn = 8\n\nThe coins can form the following rows:\n¤\n¤ ¤\n¤ ¤ ¤\n¤ ¤\n\nBecause the 4th row is incomplete, we return 3.\n"},{"index":"442","url":"https://leetcode.com/problems/find-all-duplicates-in-an-array","title":"Find All Duplicates in an Array","difficulty":"Medium","description":"Given an array of integers, 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.\n\nFind all the elements that appear twice in this array.\n\nCould you do it without extra space and in O(n) runtime?\n\nExample:\n\n\nInput:\n[4,3,2,7,8,2,3,1]\n\nOutput:\n[2,3]\n"},{"index":"443","url":"https://leetcode.com/problems/string-compression","title":"String Compression","difficulty":"Medium","description":"Given an array of characters chars, compress it using the following algorithm:\n\nBegin with an empty string s. For each group of consecutive repeating characters in chars:\n\nIf the group's length is 1, append the character to s.\nOtherwise, append the character followed by the group's length.\n\nThe compressed string s should not be returned separately, but instead be stored in the input character array chars. Note that group lengths that are 10 or longer will be split into multiple characters in chars.\n\nAfter you are done modifying the input array, return the new length of the array.\n\n \n\nFollow up:\nCould you solve it using only O(1) extra space?\n\n \n\nExample 1:\n\nInput: chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\nOutput: Return 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\nExplanation: The groups are \"aa\", \"bb\", and \"ccc\". This compresses to \"a2b2c3\".\n\n\nExample 2:\n\nInput: chars = [\"a\"]\nOutput: Return 1, and the first character of the input array should be: [\"a\"]\nExplanation: The only group is \"a\", which remains uncompressed since it's a single character.\n\n\nExample 3:\n\nInput: chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\nOutput: Return 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].\nExplanation: The groups are \"a\" and \"bbbbbbbbbbbb\". This compresses to \"ab12\".\n\nExample 4:\n\nInput: chars = [\"a\",\"a\",\"a\",\"b\",\"b\",\"a\",\"a\"]\nOutput: Return 6, and the first 6 characters of the input array should be: [\"a\",\"3\",\"b\",\"2\",\"a\",\"2\"].\nExplanation: The groups are \"aaa\", \"bb\", and \"aa\". This compresses to \"a3b2a2\". Note that each group is independent even if two groups have the same character.\n\n\n \n\nConstraints:\n\n1 <= chars.length <= 2000\nchars[i] is a lower-case English letter, upper-case English letter, digit, or symbol."},{"index":"445","url":"https://leetcode.com/problems/add-two-numbers-ii","title":"Add Two Numbers II","difficulty":"Medium","description":"You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\n\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\nFollow up:\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\n\nExample:\n\nInput: (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)\nOutput: 7 -> 8 -> 0 -> 7\n"},{"index":"446","url":"https://leetcode.com/problems/arithmetic-slices-ii-subsequence","title":"Arithmetic Slices II - Subsequence","difficulty":"Hard","description":"A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\n\nFor example, these are arithmetic sequences:\n\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9\n\nThe following sequence is not arithmetic.\n\n1, 1, 2, 5, 7\n \n\nA zero-indexed array A consisting of N numbers is given. A subsequence slice of that array is any sequence of integers (P0, P1, ..., Pk) such that 0 ≤ P0 < P1 < ... < Pk < N.\n\nA subsequence slice (P0, P1, ..., Pk) of array A is called arithmetic if the sequence A[P0], A[P1], ..., A[Pk-1], A[Pk] is arithmetic. In particular, this means that k ≥ 2.\n\nThe function should return the number of arithmetic subsequence slices in the array A.\n\nThe input contains N integers. Every integer is in the range of -231 and 231-1 and 0 ≤ N ≤ 1000. The output is guaranteed to be less than 231-1.\n\n \n\nExample:\n\nInput: [2, 4, 6, 8, 10]\n\nOutput: 7\n\nExplanation:\nAll arithmetic subsequence slices are:\n[2,4,6]\n[4,6,8]\n[6,8,10]\n[2,4,6,8]\n[4,6,8,10]\n[2,4,6,8,10]\n[2,6,10]\n"},{"index":"447","url":"https://leetcode.com/problems/number-of-boomerangs","title":"Number of Boomerangs","difficulty":"Medium","description":"You are given n points in the plane that are all distinct, where points[i] = [xi, yi]. A boomerang is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).\n\nReturn the number of boomerangs.\n\n \n\nExample 1:\n\nInput: points = [[0,0],[1,0],[2,0]]\nOutput: 2\nExplanation: The two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]].\n\n\nExample 2:\n\nInput: points = [[1,1],[2,2],[3,3]]\nOutput: 2\n\n\nExample 3:\n\nInput: points = [[1,1]]\nOutput: 0\n\n\n \n\nConstraints:\n\nn == points.length\n1 <= n <= 500\npoints[i].length == 2\n-104 <= xi, yi <= 104\nAll the points are unique."},{"index":"448","url":"https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array","title":"Find All Numbers Disappeared in an Array","difficulty":"Easy","description":"Given an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.\n\nFind all the elements of [1, n] inclusive that do not appear in this array.\n\nCould you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space.\n\nExample:\n\nInput:\n[4,3,2,7,8,2,3,1]\n\nOutput:\n[5,6]\n"},{"index":"449","url":"https://leetcode.com/problems/serialize-and-deserialize-bst","title":"Serialize and Deserialize BST","difficulty":"Medium","description":"Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.\n\nDesign an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure.\n\nThe encoded string should be as compact as possible.\n\n \n\nExample 1:\n\nInput: root = [2,1,3]\nOutput: [2,1,3]\n\n\nExample 2:\n\nInput: root = []\nOutput: []\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n0 <= Node.val <= 104\nThe input tree is guaranteed to be a binary search tree."},{"index":"450","url":"https://leetcode.com/problems/delete-node-in-a-bst","title":"Delete Node in a BST","difficulty":"Medium","description":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.\n\nBasically, the deletion can be divided into two stages:\n\nSearch for a node to remove.\nIf the node is found, delete the node.\n\nFollow up: Can you solve it with time complexity O(height of tree)?\n\n \n\nExample 1:\n\nInput: root = [5,3,6,2,4,null,7], key = 3\nOutput: [5,4,6,2,null,null,7]\nExplanation: Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it's also accepted.\n\n\n\nExample 2:\n\nInput: root = [5,3,6,2,4,null,7], key = 0\nOutput: [5,3,6,2,4,null,7]\nExplanation: The tree does not contain a node with value = 0.\n\n\nExample 3:\n\nInput: root = [], key = 0\nOutput: []\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-105 <= Node.val <= 105\nEach node has a unique value.\nroot is a valid binary search tree.\n-105 <= key <= 105"},{"index":"451","url":"https://leetcode.com/problems/sort-characters-by-frequency","title":"Sort Characters By Frequency","difficulty":"Medium","description":"Given a string, sort it in decreasing order based on the frequency of characters.\n\nExample 1:\n\nInput:\n\"tree\"\n\nOutput:\n\"eert\"\n\nExplanation:\n'e' appears twice while 'r' and 't' both appear once.\nSo 'e' must appear before both 'r' and 't'. Therefore \"eetr\" is also a valid answer.\n\n\nExample 2:\n\nInput:\n\"cccaaa\"\n\nOutput:\n\"cccaaa\"\n\nExplanation:\nBoth 'c' and 'a' appear three times, so \"aaaccc\" is also a valid answer.\nNote that \"cacaca\" is incorrect, as the same characters must be together.\n\n\nExample 3:\n\nInput:\n\"Aabb\"\n\nOutput:\n\"bbAa\"\n\nExplanation:\n\"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\nNote that 'A' and 'a' are treated as two different characters.\n"},{"index":"452","url":"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons","title":"Minimum Number of Arrows to Burst Balloons","difficulty":"Medium","description":"There are some spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it's horizontal, y-coordinates don't matter, and hence the x-coordinates of start and end of the diameter suffice. The start is always smaller than the end.\n\nAn arrow can be shot up exactly vertically from different points along the x-axis. A balloon with xstart and xend bursts by an arrow shot at x if xstart ≤ x ≤ xend. There is no limit to the number of arrows that can be shot. An arrow once shot keeps traveling up infinitely.\n\nGiven an array points where points[i] = [xstart, xend], return the minimum number of arrows that must be shot to burst all balloons.\n\n \n\nExample 1:\n\nInput: points = [[10,16],[2,8],[1,6],[7,12]]\nOutput: 2\nExplanation: One way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).\n\n\nExample 2:\n\nInput: points = [[1,2],[3,4],[5,6],[7,8]]\nOutput: 4\n\n\nExample 3:\n\nInput: points = [[1,2],[2,3],[3,4],[4,5]]\nOutput: 2\n\n\nExample 4:\n\nInput: points = [[1,2]]\nOutput: 1\n\n\nExample 5:\n\nInput: points = [[2,3],[2,3]]\nOutput: 1\n\n\n \n\nConstraints:\n\n0 <= points.length <= 104\npoints[i].length == 2\n-231 <= xstart < xend <= 231 - 1"},{"index":"453","url":"https://leetcode.com/problems/minimum-moves-to-equal-array-elements","title":"Minimum Moves to Equal Array Elements","difficulty":"Easy","description":"Given a non-empty integer array of size n, find the minimum number of moves required to make all array elements equal, where a move is incrementing n - 1 elements by 1.\n\nExample:\n\nInput:\n[1,2,3]\n\nOutput:\n3\n\nExplanation:\nOnly three moves are needed (remember each move increments two elements):\n\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\n"},{"index":"454","url":"https://leetcode.com/problems/4sum-ii","title":"4Sum II","difficulty":"Medium","description":"Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.\n\nTo make problem a bit easier, all A, B, C, D have same length of N where 0 ≤ N ≤ 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.\n\nExample:\n\nInput:\nA = [ 1, 2]\nB = [-2,-1]\nC = [-1, 2]\nD = [ 0, 2]\n\nOutput:\n2\n\nExplanation:\nThe two tuples are:\n1. (0, 0, 0, 1) -> A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -> A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0\n\n\n "},{"index":"455","url":"https://leetcode.com/problems/assign-cookies","title":"Assign Cookies","difficulty":"Easy","description":"Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.\n\nEach child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s[j]. If s[j] >= g[i], we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\n\n \n\n \n\nExample 1:\n\nInput: g = [1,2,3], s = [1,1]\nOutput: 1\nExplanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\nYou need to output 1.\n\n\nExample 2:\n\nInput: g = [1,2], s = [1,2,3]\nOutput: 2\nExplanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \nYou have 3 cookies and their sizes are big enough to gratify all of the children, \nYou need to output 2.\n\n\n \n\nConstraints:\n\n1 <= g.length <= 3 * 104\n0 <= s.length <= 3 * 104\n1 <= g[i], s[j] <= 231 - 1"},{"index":"456","url":"https://leetcode.com/problems/132-pattern","title":"132 Pattern","difficulty":"Medium","description":"Given an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].\n\nReturn true if there is a 132 pattern in nums, otherwise, return false.\n\nFollow up: The O(n^2) is trivial, could you come up with the O(n logn) or the O(n) solution?\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,4]\nOutput: false\nExplanation: There is no 132 pattern in the sequence.\n\n\nExample 2:\n\nInput: nums = [3,1,4,2]\nOutput: true\nExplanation: There is a 132 pattern in the sequence: [1, 4, 2].\n\n\nExample 3:\n\nInput: nums = [-1,3,2,0]\nOutput: true\nExplanation: There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 104\n-109 <= nums[i] <= 109"},{"index":"457","url":"https://leetcode.com/problems/circular-array-loop","title":"Circular Array Loop","difficulty":"Medium","description":"You are given a circular array nums of positive and negative integers. If a number k at an index is positive, then move forward k steps. Conversely, if it's negative (-k), move backward k steps. Since the array is circular, you may assume that the last element's next element is the first element, and the first element's previous element is the last element.\n\nDetermine if there is a loop (or a cycle) in nums. A cycle must start and end at the same index and the cycle's length > 1. Furthermore, movements in a cycle must all follow a single direction. In other words, a cycle must not consist of both forward and backward movements.\n\n \n\nExample 1:\n\nInput: [2,-1,1,2,2]\nOutput: true\nExplanation: There is a cycle, from index 0 -> 2 -> 3 -> 0. The cycle's length is 3.\n\n\nExample 2:\n\nInput: [-1,2]\nOutput: false\nExplanation: The movement from index 1 -> 1 -> 1 ... is not a cycle, because the cycle's length is 1. By definition the cycle's length must be greater than 1.\n\n\nExample 3:\n\nInput: [-2,1,-1,-2,-2]\nOutput: false\nExplanation: The movement from index 1 -> 2 -> 1 -> ... is not a cycle, because movement from index 1 -> 2 is a forward movement, but movement from index 2 -> 1 is a backward movement. All movements in a cycle must follow a single direction.\n\n \n\nNote:\n\n-1000 ≤ nums[i] ≤ 1000\nnums[i] ≠ 0\n1 ≤ nums.length ≤ 5000\n\n \n\nFollow up:\n\nCould you solve it in O(n) time complexity and O(1) extra space complexity?"},{"index":"458","url":"https://leetcode.com/problems/poor-pigs","title":"Poor Pigs","difficulty":"Hard","description":"There are buckets buckets of liquid, where exactly one of the buckets is poisonous. To figure out which one is poisonous, you feed some number of (poor) pigs the liquid to see whether they will die or not. Unfortunately, you only have minutesToTest minutes to determine which bucket is poisonous.\n\nYou can feed the pigs according to these steps:\n\nChoose some live pigs to feed.\nFor each pig, choose which buckets to feed it. The pig will consume all the chosen buckets simultaneously and will take no time.\nWait for minutesToDie minutes. You may not feed any other pigs during this time.\nAfter minutesToDie minutes have passed, any pigs that have been fed the poisonous bucket will die, and all others will survive.\nRepeat this process until you run out of time.\n\nGiven buckets, minutesToDie, and minutesToTest, return the minimum number of pigs needed to figure out which bucket is poisonous within the allotted time.\n\n \n\nExample 1:\n\nInput: buckets = 1000, minutesToDie = 15, minutesToTest = 60\nOutput: 5\n\n\nExample 2:\n\nInput: buckets = 4, minutesToDie = 15, minutesToTest = 15\nOutput: 2\n\n\nExample 3:\n\nInput: buckets = 4, minutesToDie = 15, minutesToTest = 30\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= buckets <= 1000\n1 <= minutesToDie <= minutesToTest <= 100"},{"index":"459","url":"https://leetcode.com/problems/repeated-substring-pattern","title":"Repeated Substring Pattern","difficulty":"Easy","description":"Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together. You may assume the given string consists of lowercase English letters only and its length will not exceed 10000.\n\n \n\nExample 1:\n\nInput: \"abab\"\nOutput: True\nExplanation: It's the substring \"ab\" twice.\n\n\nExample 2:\n\nInput: \"aba\"\nOutput: False\n\n\nExample 3:\n\nInput: \"abcabcabcabc\"\nOutput: True\nExplanation: It's the substring \"abc\" four times. (And the substring \"abcabc\" twice.)\n"},{"index":"460","url":"https://leetcode.com/problems/lfu-cache","title":"LFU Cache","difficulty":"Hard","description":"Design and implement a data structure for Least Frequently Used (LFU) cache.\n\nImplement the LFUCache class:\n\nLFUCache(int capacity) Initializes the object with the capacity of the data structure.\nint get(int key) Gets the value of the key if the key exists in the cache. Otherwise, returns -1.\nvoid put(int key, int value) Sets or inserts the value if the key is not already present. When the cache reaches its capacity, it should invalidate the least frequently used item before inserting a new item. For this problem, when there is a tie (i.e., two or more keys with the same frequency), the least recently used key would be evicted.\n\nNotice that the number of times an item is used is the number of calls to the get and put functions for that item since it was inserted. This number is set to zero when the item is removed.\n\n \n\nExample 1:\n\nInput\n[\"LFUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [3], [4, 4], [1], [3], [4]]\nOutput\n[null, null, null, 1, null, -1, 3, null, -1, 3, 4]\n\nExplanation\nLFUCache lfu = new LFUCache(2);\nlfu.put(1, 1);\nlfu.put(2, 2);\nlfu.get(1);      // return 1\nlfu.put(3, 3);   // evicts key 2\nlfu.get(2);      // return -1 (not found)\nlfu.get(3);      // return 3\nlfu.put(4, 4);   // evicts key 1.\nlfu.get(1);      // return -1 (not found)\nlfu.get(3);      // return 3\nlfu.get(4);      // return 4\n\n\n \n\nConstraints:\n\n0 <= capacity, key, value <= 104\nAt most 105 calls will be made to get and put.\n\n \n\nFollow up: Could you do both operations in O(1) time complexity?"},{"index":"461","url":"https://leetcode.com/problems/hamming-distance","title":"Hamming Distance","difficulty":"Easy","description":"The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\n\nGiven two integers x and y, calculate the Hamming distance.\n\nNote:\n0 ≤ x, y < 231.\n\nExample:\n\nInput: x = 1, y = 4\n\nOutput: 2\n\nExplanation:\n1   (0 0 0 1)\n4   (0 1 0 0)\n       ↑   ↑\n\nThe above arrows point to positions where the corresponding bits are different.\n"},{"index":"462","url":"https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii","title":"Minimum Moves to Equal Array Elements II","difficulty":"Medium","description":"Given a non-empty integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.\n\nYou may assume the array's length is at most 10,000.\n\nExample:\n\nInput:\n[1,2,3]\n\nOutput:\n2\n\nExplanation:\nOnly two moves are needed (remember each move increments or decrements one element):\n\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]\n"},{"index":"463","url":"https://leetcode.com/problems/island-perimeter","title":"Island Perimeter","difficulty":"Easy","description":"You are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water.\n\nGrid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).\n\nThe island doesn't have \"lakes\", meaning the water inside isn't connected to the water around the island. One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.\n\n \n\nExample 1:\n\nInput: grid = [[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]\nOutput: 16\nExplanation: The perimeter is the 16 yellow stripes in the image above.\n\n\nExample 2:\n\nInput: grid = [[1]]\nOutput: 4\n\n\nExample 3:\n\nInput: grid = [[1,0]]\nOutput: 4\n\n\n \n\nConstraints:\n\nrow == grid.length\ncol == grid[i].length\n1 <= row, col <= 100\ngrid[i][j] is 0 or 1."},{"index":"464","url":"https://leetcode.com/problems/can-i-win","title":"Can I Win","difficulty":"Medium","description":"In the \"100 game\" two players take turns adding, to a running total, any integer from 1 to 10. The player who first causes the running total to reach or exceed 100 wins.\n\nWhat if we change the game so that players cannot re-use integers?\n\nFor example, two players might take turns drawing from a common pool of numbers from 1 to 15 without replacement until they reach a total >= 100.\n\nGiven two integers maxChoosableInteger and desiredTotal, return true if the first player to move can force a win, otherwise return false. Assume both players play optimally.\n\n \n\nExample 1:\n\nInput: maxChoosableInteger = 10, desiredTotal = 11\nOutput: false\nExplanation:\nNo matter which integer the first player choose, the first player will lose.\nThe first player can choose an integer from 1 up to 10.\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\nThe second player will win by choosing 10 and get a total = 11, which is >= desiredTotal.\nSame with other integers chosen by the first player, the second player will always win.\n\n\nExample 2:\n\nInput: maxChoosableInteger = 10, desiredTotal = 0\nOutput: true\n\n\nExample 3:\n\nInput: maxChoosableInteger = 10, desiredTotal = 1\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= maxChoosableInteger <= 20\n0 <= desiredTotal <= 300"},{"index":"466","url":"https://leetcode.com/problems/count-the-repetitions","title":"Count The Repetitions","difficulty":"Hard","description":"Define S = [s,n] as the string S which consists of n connected strings s. For example, [\"abc\", 3] =\"abcabcabc\".\n\nOn the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, “abc” can be obtained from “abdbec” based on our definition, but it can not be obtained from “acbbe”.\n\nYou are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 ≤ n1 ≤ 106 and 1 ≤ n2 ≤ 106. Now consider the strings S1 and S2, where S1=[s1,n1] and S2=[s2,n2]. Find the maximum integer M such that [S2,M] can be obtained from S1.\n\nExample:\n\nInput:\ns1=\"acb\", n1=4\ns2=\"ab\", n2=2\n\nReturn:\n2\n"},{"index":"467","url":"https://leetcode.com/problems/unique-substrings-in-wraparound-string","title":"Unique Substrings in Wraparound String","difficulty":"Medium","description":"Consider the string s to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so s will look like this: \"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\n\nNow we have another string p. Your job is to find out how many unique non-empty substrings of p are present in s. In particular, your input is the string p and you need to output the number of different non-empty substrings of p in the string s.\n\nNote: p consists of only lowercase English letters and the size of p might be over 10000.\n\nExample 1:\n\n\nInput: \"a\"\nOutput: 1\n\nExplanation: Only the substring \"a\" of string \"a\" is in the string \u0010s.\n\n\nExample 2:\n\n\nInput: \"cac\"\nOutput: 2\nExplanation: There are two substrings \"a\", \"c\" of string \"cac\" in the string s.\n\n\nExample 3:\n\n\nInput: \"zab\"\nOutput: 6\nExplanation: There are six substrings \"z\", \"a\", \"b\", \"za\", \"ab\", \"zab\" of string \"zab\" in the string s.\n"},{"index":"468","url":"https://leetcode.com/problems/validate-ip-address","title":"Validate IP Address","difficulty":"Medium","description":"Given a string IP, return \"IPv4\" if IP is a valid IPv4 address, \"IPv6\" if IP is a valid IPv6 address or \"Neither\" if IP is not a correct IP of any type.\n\nA valid IPv4 address is an IP in the form \"x1.x2.x3.x4\" where 0 <= xi <= 255 and xi cannot contain leading zeros. For example, \"192.168.1.1\" and \"192.168.1.0\" are valid IPv4 addresses but \"192.168.01.1\", while \"192.168.1.00\" and \"192.168@1.1\" are invalid IPv4 addresses.\n\nA valid IPv6 address is an IP in the form \"x1:x2:x3:x4:x5:x6:x7:x8\" where:\n\n1 <= xi.length <= 4\nxi is a hexadecimal string which may contain digits, lower-case English letter ('a' to 'f') and upper-case English letters ('A' to 'F').\nLeading zeros are allowed in xi.\n\nFor example, \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\" and \"2001:db8:85a3:0:0:8A2E:0370:7334\" are valid IPv6 addresses, while \"2001:0db8:85a3::8A2E:037j:7334\" and \"02001:0db8:85a3:0000:0000:8a2e:0370:7334\" are invalid IPv6 addresses.\n\n \n\nExample 1:\n\nInput: IP = \"172.16.254.1\"\nOutput: \"IPv4\"\nExplanation: This is a valid IPv4 address, return \"IPv4\".\n\n\nExample 2:\n\nInput: IP = \"2001:0db8:85a3:0:0:8A2E:0370:7334\"\nOutput: \"IPv6\"\nExplanation: This is a valid IPv6 address, return \"IPv6\".\n\n\nExample 3:\n\nInput: IP = \"256.256.256.256\"\nOutput: \"Neither\"\nExplanation: This is neither a IPv4 address nor a IPv6 address.\n\n\nExample 4:\n\nInput: IP = \"2001:0db8:85a3:0:0:8A2E:0370:7334:\"\nOutput: \"Neither\"\n\n\nExample 5:\n\nInput: IP = \"1e1.4.5.6\"\nOutput: \"Neither\"\n\n\n \n\nConstraints:\n\nIP consists only of English letters, digits and the characters '.' and ':'."},{"index":"470","url":"https://leetcode.com/problems/implement-rand10-using-rand7","title":"Implement Rand10() Using Rand7()","difficulty":"Medium","description":"Given the API rand7() that generates a uniform random integer in the range [1, 7], write a function rand10() that generates a uniform random integer in the range [1, 10]. You can only call the API rand7(), and you shouldn't call any other API. Please do not use a language's built-in random API.\n\nEach test case will have one internal argument n, the number of times that your implemented function rand10() will be called while testing. Note that this is not an argument passed to rand10().\n\nFollow up:\n\nWhat is the expected value for the number of calls to rand7() function?\nCould you minimize the number of calls to rand7()?\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: [2]\n\n\nExample 2:\n\nInput: n = 2\nOutput: [2,8]\n\n\nExample 3:\n\nInput: n = 3\nOutput: [3,8,10]\n\n\n \n\nConstraints:\n\n1 <= n <= 105"},{"index":"472","url":"https://leetcode.com/problems/concatenated-words","title":"Concatenated Words","difficulty":"Hard","description":"Given a list of words (without duplicates), please write a program that returns all concatenated words in the given list of words.\n\nA concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.\n\nExample:\n\n\nInput: [\"cat\",\"cats\",\"catsdogcats\",\"dog\",\"dogcatsdog\",\"hippopotamuses\",\"rat\",\"ratcatdogcat\"]\n\nOutput: [\"catsdogcats\",\"dogcatsdog\",\"ratcatdogcat\"]\n\nExplanation: \"catsdogcats\" can be concatenated by \"cats\", \"dog\" and \"cats\"; \n \"dogcatsdog\" can be concatenated by \"dog\", \"cats\" and \"dog\"; \n\"ratcatdogcat\" can be concatenated by \"rat\", \"cat\", \"dog\" and \"cat\".\n\n\nNote:\n\n\nThe number of elements of the given array will not exceed 10,000\nThe length sum of elements in the given array will not exceed 600,000.\nAll the input string will only include lower case letters.\nThe returned elements order does not matter."},{"index":"473","url":"https://leetcode.com/problems/matchsticks-to-square","title":"Matchsticks to Square","difficulty":"Medium","description":"Remember the story of Little Match Girl? By now, you know exactly what matchsticks the little match girl has, please find out a way you can make one square by using up all those matchsticks. You should not break any stick, but you can link them up, and each matchstick must be used exactly one time.\n\nYour input will be several matchsticks the girl has, represented with their stick length. Your output will either be true or false, to represent whether you could make one square using all the matchsticks the little match girl has.\n\nExample 1:\n\n\nInput: [1,1,2,2,2]\nOutput: true\n\nExplanation: You can form a square with length 2, one side of the square came two sticks with length 1.\n\n\nExample 2:\n\n\nInput: [3,3,3,3,4]\nOutput: false\n\nExplanation: You cannot find a way to form a square with all the matchsticks.\n\n\nNote:\n\n\nThe length sum of the given matchsticks is in the range of 0 to 10^9.\nThe length of the given matchstick array will not exceed 15."},{"index":"474","url":"https://leetcode.com/problems/ones-and-zeroes","title":"Ones and Zeroes","difficulty":"Medium","description":"You are given an array of binary strings strs and two integers m and n.\n\nReturn the size of the largest subset of strs such that there are at most m 0's and n 1's in the subset.\n\nA set x is a subset of a set y if all elements of x are also elements of y.\n\n \n\nExample 1:\n\nInput: strs = [\"10\",\"0001\",\"111001\",\"1\",\"0\"], m = 5, n = 3\nOutput: 4\nExplanation: The largest subset with at most 5 0's and 3 1's is {\"10\", \"0001\", \"1\", \"0\"}, so the answer is 4.\nOther valid but smaller subsets include {\"0001\", \"1\"} and {\"10\", \"1\", \"0\"}.\n{\"111001\"} is an invalid subset because it contains 4 1's, greater than the maximum of 3.\n\n\nExample 2:\n\nInput: strs = [\"10\",\"0\",\"1\"], m = 1, n = 1\nOutput: 2\nExplanation: The largest subset is {\"0\", \"1\"}, so the answer is 2.\n\n\n \n\nConstraints:\n\n1 <= strs.length <= 600\n1 <= strs[i].length <= 100\nstrs[i] consists only of digits '0' and '1'.\n1 <= m, n <= 100"},{"index":"475","url":"https://leetcode.com/problems/heaters","title":"Heaters","difficulty":"Medium","description":"Winter is coming! During the contest, your first job is to design a standard heater with a fixed warm radius to warm all the houses.\n\nEvery house can be warmed, as long as the house is within the heater's warm radius range. \n\nGiven the positions of houses and heaters on a horizontal line, return the minimum radius standard of heaters so that those heaters could cover all houses.\n\nNotice that all the heaters follow your radius standard, and the warm radius will the same.\n\n \n\nExample 1:\n\nInput: houses = [1,2,3], heaters = [2]\nOutput: 1\nExplanation: The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\n\n\nExample 2:\n\nInput: houses = [1,2,3,4], heaters = [1,4]\nOutput: 1\nExplanation: The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.\n\n\nExample 3:\n\nInput: houses = [1,5], heaters = [2]\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= houses.length, heaters.length <= 3 * 104\n1 <= houses[i], heaters[i] <= 109"},{"index":"476","url":"https://leetcode.com/problems/number-complement","title":"Number Complement","difficulty":"Easy","description":"Given a positive integer num, output its complement number. The complement strategy is to flip the bits of its binary representation.\n\n \n\nExample 1:\n\nInput: num = 5\nOutput: 2\nExplanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\n\n\nExample 2:\n\nInput: num = 1\nOutput: 0\nExplanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.\n\n\n \n\nConstraints:\n\nThe given integer num is guaranteed to fit within the range of a 32-bit signed integer.\nnum >= 1\nYou could assume no leading zero bit in the integer’s binary representation.\nThis question is the same as 1009: https://leetcode.com/problems/complement-of-base-10-integer/"},{"index":"477","url":"https://leetcode.com/problems/total-hamming-distance","title":"Total Hamming Distance","difficulty":"Medium","description":"The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\n\nNow your job is to find the total Hamming distance between all pairs of the given numbers.\n\nExample:\n\n\nInput: 4, 14, 2\n\nOutput: 6\n\nExplanation: In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\nshowing the four bits relevant in this case). So the answer will be:\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n\n\nNote:\n\n\nElements of the given array are in the range of 0 to 10^9\nLength of the array will not exceed 10^4."},{"index":"478","url":"https://leetcode.com/problems/generate-random-point-in-a-circle","title":"Generate Random Point in a Circle","difficulty":"Medium","description":"Given the radius and x-y positions of the center of a circle, write a function randPoint which generates a uniform random point in the circle.\n\nNote:\n\ninput and output values are in floating-point.\nradius and x-y position of the center of the circle is passed into the class constructor.\na point on the circumference of the circle is considered to be in the circle.\nrandPoint returns a size 2 array containing x-position and y-position of the random point, in that order.\n\nExample 1:\n\nInput: \n[\"Solution\",\"randPoint\",\"randPoint\",\"randPoint\"]\n[[1,0,0],[],[],[]]\nOutput: [null,[-0.72939,-0.65505],[-0.78502,-0.28626],[-0.83119,-0.19803]]\n\n\nExample 2:\n\nInput: \n[\"Solution\",\"randPoint\",\"randPoint\",\"randPoint\"]\n[[10,5,-7.5],[],[],[]]\nOutput: [null,[11.52438,-8.33273],[2.46992,-16.21705],[11.13430,-12.42337]]\n\nExplanation of Input Syntax:\n\nThe input is two lists: the subroutines called and their arguments. Solution's constructor has three arguments, the radius, x-position of the center, and y-position of the center of the circle. randPoint has no arguments. Arguments are always wrapped with a list, even if there aren't any."},{"index":"479","url":"https://leetcode.com/problems/largest-palindrome-product","title":"Largest Palindrome Product","difficulty":"Hard","description":"Find the largest palindrome made from the product of two n-digit numbers.\n\nSince the result could be very large, you should return the largest palindrome mod 1337.\n\n \n\nExample:\n\nInput: 2\n\nOutput: 987\n\nExplanation: 99 x 91 = 9009, 9009 % 1337 = 987\n\n \n\nNote:\n\nThe range of n is [1,8]."},{"index":"480","url":"https://leetcode.com/problems/sliding-window-median","title":"Sliding Window Median","difficulty":"Hard","description":"Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.\n\nExamples:\n\n[2,3,4] , the median is 3\n\n[2,3], the median is (2 + 3) / 2 = 2.5\n\nGiven an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position. Your job is to output the median array for each window in the original array.\n\nFor example,\nGiven nums = [1,3,-1,-3,5,3,6,7], and k = 3.\n\nWindow position                Median\n---------------               -----\n[1  3  -1] -3  5  3  6  7       1\n 1 [3  -1  -3] 5  3  6  7       -1\n 1  3 [-1  -3  5] 3  6  7       -1\n 1  3  -1 [-3  5  3] 6  7       3\n 1  3  -1  -3 [5  3  6] 7       5\n 1  3  -1  -3  5 [3  6  7]      6\n\n\nTherefore, return the median sliding window as [1,-1,-1,3,5,6].\n\nNote:\nYou may assume k is always valid, ie: k is always smaller than input array's size for non-empty array.\nAnswers within 10^-5 of the actual value will be accepted as correct."},{"index":"481","url":"https://leetcode.com/problems/magical-string","title":"Magical String","difficulty":"Medium","description":"A magical string S consists of only '1' and '2' and obeys the following rules:\n\nThe string S is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string S itself.\n\nThe first few elements of string S is the following: S = \"1221121221221121122……\"\n\nIf we group the consecutive '1's and '2's in S, it will be:\n\n1 22 11 2 1 22 1 22 11 2 11 22 ......\n\nand the occurrences of '1's or '2's in each group are:\n\n1 2 2 1 1 2 1 2 2 1 2 2 ......\n\nYou can see that the occurrence sequence above is the S itself.\n\nGiven an integer N as input, return the number of '1's in the first N number in the magical string S.\n\nNote: N will not exceed 100,000.\n\nExample 1:\n\n\nInput: 6\nOutput: 3\nExplanation: The first 6 elements of magical string S is \"12211\" and it contains three 1's, so return 3.\n"},{"index":"482","url":"https://leetcode.com/problems/license-key-formatting","title":"License Key Formatting","difficulty":"Easy","description":"You are given a license key represented as a string S which consists only alphanumeric character and dashes. The string is separated into N+1 groups by N dashes.\n\nGiven a number K, we would want to reformat the strings such that each group contains exactly K characters, except for the first group which could be shorter than K, but still must contain at least one character. Furthermore, there must be a dash inserted between two groups and all lowercase letters should be converted to uppercase.\n\nGiven a non-empty string S and a number K, format the string according to the rules described above.\n\nExample 1:\n\n\nInput: S = \"5F3Z-2e-9-w\", K = 4\n\nOutput: \"5F3Z-2E9W\"\n\nExplanation: The string S has been split into two parts, each part has 4 characters.\nNote that the two extra dashes are not needed and can be removed.\n\n\nExample 2:\n\n\nInput: S = \"2-5g-3-J\", K = 2\n\nOutput: \"2-5G-3J\"\n\nExplanation: The string S has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.\n\n\nNote:\n\n\nThe length of string S will not exceed 12,000, and K is a positive integer.\nString S consists only of alphanumerical characters (a-z and/or A-Z and/or 0-9) and dashes(-).\nString S is non-empty."},{"index":"483","url":"https://leetcode.com/problems/smallest-good-base","title":"Smallest Good Base","difficulty":"Hard","description":"For an integer n, we call k>=2 a good base of n, if all digits of n base k are 1.\n\nNow given a string representing n, you should return the smallest good base of n in string format.\n\nExample 1:\n\nInput: \"13\"\nOutput: \"3\"\nExplanation: 13 base 3 is 111.\n\n\n \n\nExample 2:\n\nInput: \"4681\"\nOutput: \"8\"\nExplanation: 4681 base 8 is 11111.\n\n\n \n\nExample 3:\n\nInput: \"1000000000000000000\"\nOutput: \"999999999999999999\"\nExplanation: 1000000000000000000 base 999999999999999999 is 11.\n\n\n \n\nNote:\n\nThe range of n is [3, 10^18].\nThe string representing n is always valid and will not have leading zeros.\n\n "},{"index":"485","url":"https://leetcode.com/problems/max-consecutive-ones","title":"Max Consecutive Ones","difficulty":"Easy","description":"Given a binary array, find the maximum number of consecutive 1s in this array.\n\nExample 1:\n\n\nInput: [1,1,0,1,1,1]\nOutput: 3\nExplanation: The first two digits or the last three digits are consecutive 1s.\n    The maximum number of consecutive 1s is 3.\n\n\nNote:\n\nThe input array will only contain 0 and 1.\nThe length of input array is a positive integer and will not exceed 10,000"},{"index":"486","url":"https://leetcode.com/problems/predict-the-winner","title":"Predict the Winner","difficulty":"Medium","description":"Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins.\n\nGiven an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score.\n\nExample 1:\n\nInput: [1, 5, 2]\nOutput: False\nExplanation: Initially, player 1 can choose between 1 and 2. \nIf he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). \nSo, final score of player 1 is 1 + 2 = 3, and player 2 is 5. \nHence, player 1 will never be the winner and you need to return False.\n\n\n \n\nExample 2:\n\nInput: [1, 5, 233, 7]\nOutput: True\nExplanation: Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.\nFinally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\n\n\n \n\nConstraints:\n\n1 <= length of the array <= 20.\nAny scores in the given array are non-negative integers and will not exceed 10,000,000.\nIf the scores of both players are equal, then player 1 is still the winner."},{"index":"488","url":"https://leetcode.com/problems/zuma-game","title":"Zuma Game","difficulty":"Hard","description":"Think about Zuma Game. You have a row of balls on the table, colored red(R), yellow(Y), blue(B), green(G), and white(W). You also have several balls in your hand.\n\nEach time, you may choose a ball in your hand, and insert it into the row (including the leftmost place and rightmost place). Then, if there is a group of 3 or more balls in the same color touching, remove these balls. Keep doing this until no more balls can be removed.\n\nFind the minimal balls you have to insert to remove all the balls on the table. If you cannot remove all the balls, output -1.\n\n \n\nExample 1:\n\nInput: board = \"WRRBBW\", hand = \"RB\"\nOutput: -1\nExplanation: WRRBBW -> WRR[R]BBW -> WBBW -> WBB[B]W -> WW\n\n\nExample 2:\n\nInput: board = \"WWRRBBWW\", hand = \"WRBRW\"\nOutput: 2\nExplanation: WWRRBBWW -> WWRR[R]BBWW -> WWBBWW -> WWBB[B]WW -> WWWW -> empty\n\n\nExample 3:\n\nInput: board = \"G\", hand = \"GGGGG\"\nOutput: 2\nExplanation: G -> G[G] -> GG[G] -> empty \n\n\nExample 4:\n\nInput: board = \"RBYYBBRRB\", hand = \"YRBGB\"\nOutput: 3\nExplanation: RBYYBBRRB -> RBYY[Y]BBRRB -> RBBBRRB -> RRRB -> B -> B[B] -> BB[B] -> empty \n\n\n \n\nConstraints:\n\nYou may assume that the initial row of balls on the table won’t have any 3 or more consecutive balls with the same color.\n1 <= board.length <= 16\n1 <= hand.length <= 5\nBoth input strings will be non-empty and only contain characters 'R','Y','B','G','W'."},{"index":"491","url":"https://leetcode.com/problems/increasing-subsequences","title":"Increasing Subsequences","difficulty":"Medium","description":"Given an integer array, your task is to find all the different possible increasing subsequences of the given array, and the length of an increasing subsequence should be at least 2.\n\n \n\nExample:\n\nInput: [4, 6, 7, 7]\nOutput: [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]\n\n\n \n\nConstraints:\n\nThe length of the given array will not exceed 15.\nThe range of integer in the given array is [-100,100].\nThe given array may contain duplicates, and two equal integers should also be considered as a special case of increasing sequence."},{"index":"492","url":"https://leetcode.com/problems/construct-the-rectangle","title":"Construct the Rectangle","difficulty":"Easy","description":"A web developer needs to know how to design a web page's size. So, given a specific rectangular web page’s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:\n\nThe area of the rectangular web page you designed must equal to the given target area.\nThe width W should not be larger than the length L, which means L >= W.\nThe difference between length L and width W should be as small as possible.\n\nReturn an array [L, W] where L and W are the length and width of the web page you designed in sequence.\n\n \n\nExample 1:\n\nInput: area = 4\nOutput: [2,2]\nExplanation: The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\n\n\nExample 2:\n\nInput: area = 37\nOutput: [37,1]\n\n\nExample 3:\n\nInput: area = 122122\nOutput: [427,286]\n\n\n \n\nConstraints:\n\n1 <= area <= 107"},{"index":"493","url":"https://leetcode.com/problems/reverse-pairs","title":"Reverse Pairs","difficulty":"Hard","description":"Given an array nums, we call (i, j) an important reverse pair if i < j and nums[i] > 2*nums[j].\n\nYou need to return the number of important reverse pairs in the given array.\n\nExample1:\n\nInput: [1,3,2,3,1]\nOutput: 2\n\n\nExample2:\n\nInput: [2,4,3,5,1]\nOutput: 3\n\n\nNote:\n\n\nThe length of the given array will not exceed 50,000.\nAll the numbers in the input array are in the range of 32-bit integer."},{"index":"494","url":"https://leetcode.com/problems/target-sum","title":"Target Sum","difficulty":"Medium","description":"You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol.\n\nFind out how many ways to assign symbols to make sum of integers equal to target S.\n\nExample 1:\n\nInput: nums is [1, 1, 1, 1, 1], S is 3. \nOutput: 5\nExplanation: \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\n\n\n \n\nConstraints:\n\nThe length of the given array is positive and will not exceed 20.\nThe sum of elements in the given array will not exceed 1000.\nYour output answer is guaranteed to be fitted in a 32-bit integer."},{"index":"495","url":"https://leetcode.com/problems/teemo-attacking","title":"Teemo Attacking","difficulty":"Medium","description":"In LOL world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo's attacking ascending time series towards Ashe and the poisoning time duration per Teemo's attacking, you need to output the total time that Ashe is in poisoned condition.\n\nYou may assume that Teemo attacks at the very beginning of a specific time point, and makes Ashe be in poisoned condition immediately.\n\nExample 1:\n\nInput: [1,4], 2\nOutput: 4\nExplanation: At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned immediately. \nThis poisoned status will last 2 seconds until the end of time point 2. \nAnd at time point 4, Teemo attacks Ashe again, and causes Ashe to be in poisoned status for another 2 seconds. \nSo you finally need to output 4.\n\n\n \n\nExample 2:\n\nInput: [1,2], 2\nOutput: 3\nExplanation: At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned. \nThis poisoned status will last 2 seconds until the end of time point 2. \nHowever, at the beginning of time point 2, Teemo attacks Ashe again who is already in poisoned status. \nSince the poisoned status won't add up together, though the second poisoning attack will still work at time point 2, it will stop at the end of time point 3. \nSo you finally need to output 3.\n\n\n \n\nNote:\n\nYou may assume the length of given time series array won't exceed 10000.\nYou may assume the numbers in the Teemo's attacking time series and his poisoning time duration per attacking are non-negative integers, which won't exceed 10,000,000.\n\n "},{"index":"496","url":"https://leetcode.com/problems/next-greater-element-i","title":"Next Greater Element I","difficulty":"Easy","description":"You are given two arrays (without duplicates) nums1 and nums2 where nums1’s elements are subset of nums2. Find all the next greater numbers for nums1's elements in the corresponding places of nums2.\n\nThe Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, output -1 for this number.\n\nExample 1:\n\n\nInput: nums1 = [4,1,2], nums2 = [1,3,4,2].\nOutput: [-1,3,-1]\nExplanation:\n    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.\n    For number 1 in the first array, the next greater number for it in the second array is 3.\n    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\n\n\nExample 2:\n\n\nInput: nums1 = [2,4], nums2 = [1,2,3,4].\nOutput: [3,-1]\nExplanation:\n    For number 2 in the first array, the next greater number for it in the second array is 3.\n    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.\n\n\nNote:\n\n\nAll elements in nums1 and nums2 are unique.\nThe length of both nums1 and nums2 would not exceed 1000."},{"index":"497","url":"https://leetcode.com/problems/random-point-in-non-overlapping-rectangles","title":"Random Point in Non-overlapping Rectangles","difficulty":"Medium","description":"Given a list of non-overlapping axis-aligned rectangles rects, write a function pick which randomly and uniformily picks an integer point in the space covered by the rectangles.\n\nNote:\n\nAn integer point is a point that has integer coordinates. \nA point on the perimeter of a rectangle is included in the space covered by the rectangles. \nith rectangle = rects[i] = [x1,y1,x2,y2], where [x1, y1] are the integer coordinates of the bottom-left corner, and [x2, y2] are the integer coordinates of the top-right corner.\nlength and width of each rectangle does not exceed 2000.\n1 <= rects.length <= 100\npick return a point as an array of integer coordinates [p_x, p_y]\npick is called at most 10000 times.\n\nExample 1:\n\nInput: \n[\"Solution\",\"pick\",\"pick\",\"pick\"]\n[[[[1,1,5,5]]],[],[],[]]\nOutput: \n[null,[4,1],[4,1],[3,3]]\n\n\nExample 2:\n\nInput: \n[\"Solution\",\"pick\",\"pick\",\"pick\",\"pick\",\"pick\"]\n[[[[-2,-2,-1,-1],[1,0,3,0]]],[],[],[],[],[]]\nOutput: \n[null,[-1,-2],[2,0],[-2,-1],[3,0],[-2,-2]]\n\nExplanation of Input Syntax:\n\nThe input is two lists: the subroutines called and their arguments. Solution's constructor has one argument, the array of rectangles rects. pick has no arguments. Arguments are always wrapped with a list, even if there aren't any.\n\n "},{"index":"498","url":"https://leetcode.com/problems/diagonal-traverse","title":"Diagonal Traverse","difficulty":"Medium","description":"Given a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image.\n\n \n\nExample:\n\nInput:\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n\nOutput:  [1,2,4,7,5,3,6,8,9]\n\nExplanation:\n\n\n\n \n\nNote:\n\nThe total number of elements of the given matrix will not exceed 10,000."},{"index":"500","url":"https://leetcode.com/problems/keyboard-row","title":"Keyboard Row","difficulty":"Easy","description":"Given a List of words, return the words that can be typed using letters of alphabet on only one row's of American keyboard like the image below.\n\n \n\n \n\nExample:\n\nInput: [\"Hello\", \"Alaska\", \"Dad\", \"Peace\"]\nOutput: [\"Alaska\", \"Dad\"]\n\n\n \n\nNote:\n\nYou may use one character in the keyboard more than once.\nYou may assume the input string will only contain letters of alphabet."},{"index":"501","url":"https://leetcode.com/problems/find-mode-in-binary-search-tree","title":"Find Mode in Binary Search Tree","difficulty":"Easy","description":"Given a binary search tree (BST) with duplicates, find all the mode(s) (the most frequently occurred element) in the given BST.\n\nAssume a BST is defined as follows:\n\nThe left subtree of a node contains only nodes with keys less than or equal to the node's key.\nThe right subtree of a node contains only nodes with keys greater than or equal to the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\n \n\nFor example:\nGiven BST [1,null,2,2],\n\n   1\n    \\\n     2\n    /\n   2\n\n\n \n\nreturn [2].\n\nNote: If a tree has more than one mode, you can return them in any order.\n\nFollow up: Could you do that without using any extra space? (Assume that the implicit stack space incurred due to recursion does not count)."},{"index":"502","url":"https://leetcode.com/problems/ipo","title":"IPO","difficulty":"Hard","description":"Suppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most k distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most k distinct projects.\n\nYou are given several projects. For each project i, it has a pure profit Pi and a minimum capital of Ci is needed to start the corresponding project. Initially, you have W capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\n\nTo sum up, pick a list of at most k distinct projects from given projects to maximize your final capital, and output your final maximized capital.\n\nExample 1:\n\n\nInput: k=2, W=0, Profits=[1,2,3], Capital=[0,1,1].\n\nOutput: 4\n\nExplanation: Since your initial capital is 0, you can only start the project indexed 0.\n             After finishing it you will obtain profit 1 and your capital becomes 1.\n             With capital 1, you can either start the project indexed 1 or the project indexed 2.\n             Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\n             Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\n\n\nNote:\n\n\nYou may assume all numbers in the input are non-negative integers.\nThe length of Profits array and Capital array will not exceed 50,000.\nThe answer is guaranteed to fit in a 32-bit signed integer."},{"index":"503","url":"https://leetcode.com/problems/next-greater-element-ii","title":"Next Greater Element II","difficulty":"Medium","description":"Given a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.\n\nExample 1:\n\n\nInput: [1,2,1]\nOutput: [2,-1,2]\nExplanation: The first 1's next greater number is 2; \nThe number 2 can't find next greater number; \nThe second 1's next greater number needs to search circularly, which is also 2.\n\n\nNote: The length of given array won't exceed 10000."},{"index":"504","url":"https://leetcode.com/problems/base-7","title":"Base 7","difficulty":"Easy","description":"Given an integer, return its base 7 string representation.\n\nExample 1:\n\n\nInput: 100\nOutput: \"202\"\n\n\nExample 2:\n\n\nInput: -7\nOutput: \"-10\"\n\n\nNote: The input will be in range of [-1e7, 1e7]."},{"index":"506","url":"https://leetcode.com/problems/relative-ranks","title":"Relative Ranks","difficulty":"Easy","description":"Given scores of N athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\".\n\nExample 1:\n\n\nInput: [5, 4, 3, 2, 1]\nOutput: [\"Gold Medal\", \"Silver Medal\", \"Bronze Medal\", \"4\", \"5\"]\nExplanation: The first three athletes got the top three highest scores, so they got \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\". \nFor the left two athletes, you just need to output their relative ranks according to their scores.\n\n\nNote:\n\n\nN is a positive integer and won't exceed 10,000.\nAll the scores of athletes are guaranteed to be unique."},{"index":"507","url":"https://leetcode.com/problems/perfect-number","title":"Perfect Number","difficulty":"Easy","description":"A perfect number is a positive integer that is equal to the sum of its positive divisors, excluding the number itself. A divisor of an integer x is an integer that can divide x evenly.\n\nGiven an integer n, return true if n is a perfect number, otherwise return false.\n\n \n\nExample 1:\n\nInput: num = 28\nOutput: true\nExplanation: 28 = 1 + 2 + 4 + 7 + 14\n1, 2, 4, 7, and 14 are all divisors of 28.\n\n\nExample 2:\n\nInput: num = 6\nOutput: true\n\n\nExample 3:\n\nInput: num = 496\nOutput: true\n\n\nExample 4:\n\nInput: num = 8128\nOutput: true\n\n\nExample 5:\n\nInput: num = 2\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= num <= 108"},{"index":"508","url":"https://leetcode.com/problems/most-frequent-subtree-sum","title":"Most Frequent Subtree Sum","difficulty":"Medium","description":"Given the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.\n\nExamples 1\nInput:\n\n  5\n /  \\\n2   -3\n\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\n\nExamples 2\nInput:\n\n  5\n /  \\\n2   -5\n\nreturn [2], since 2 happens twice, however -5 only occur once.\n\nNote: You may assume the sum of values in any subtree is in the range of 32-bit signed integer."},{"index":"509","url":"https://leetcode.com/problems/fibonacci-number","title":"Fibonacci Number","difficulty":"Easy","description":"The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,\n\nF(0) = 0,   F(1) = 1\nF(N) = F(N - 1) + F(N - 2), for N > 1.\n\n\nGiven N, calculate F(N).\n\n \n\nExample 1:\n\nInput: 2\nOutput: 1\nExplanation: F(2) = F(1) + F(0) = 1 + 0 = 1.\n\n\nExample 2:\n\nInput: 3\nOutput: 2\nExplanation: F(3) = F(2) + F(1) = 1 + 1 = 2.\n\n\nExample 3:\n\nInput: 4\nOutput: 3\nExplanation: F(4) = F(3) + F(2) = 2 + 1 = 3.\n\n\n \n\nNote:\n\n0 ≤ N ≤ 30."},{"index":"513","url":"https://leetcode.com/problems/find-bottom-left-tree-value","title":"Find Bottom Left Tree Value","difficulty":"Medium","description":"Given a binary tree, find the leftmost value in the last row of the tree.\n\nExample 1:\n\n\nInput:\n\n    2\n   / \\\n  1   3\n\nOutput:\n1\n\n\nExample 2:\n\n\nInput:\n\n        1\n       / \\\n      2   3\n     /   / \\\n    4   5   6\n       /\n      7\n\nOutput:\n7\n\n\nNote: You may assume the tree (i.e., the given root node) is not NULL."},{"index":"514","url":"https://leetcode.com/problems/freedom-trail","title":"Freedom Trail","difficulty":"Hard","description":"In the video game Fallout 4, the quest \"Road to Freedom\" requires players to reach a metal dial called the \"Freedom Trail Ring\", and use the dial to spell a specific keyword in order to open the door.\n\nGiven a string ring, which represents the code engraved on the outer ring and another string key, which represents the keyword needs to be spelled. You need to find the minimum number of steps in order to spell all the characters in the keyword.\n\nInitially, the first character of the ring is aligned at 12:00 direction. You need to spell all the characters in the string key one by one by rotating the ring clockwise or anticlockwise to make each character of the string key aligned at 12:00 direction and then by pressing the center button.\n\nAt the stage of rotating the ring to spell the key character key[i]:\n\nYou can rotate the ring clockwise or anticlockwise one place, which counts as 1 step. The final purpose of the rotation is to align one of the string ring's characters at the 12:00 direction, where this character must equal to the character key[i].\nIf the character key[i] has been aligned at the 12:00 direction, you need to press the center button to spell, which also counts as 1 step. After the pressing, you could begin to spell the next character in the key (next stage), otherwise, you've finished all the spelling.\n\nExample:\n\n \nInput: ring = \"godding\", key = \"gd\"\nOutput: 4\nExplanation:\nFor the first key character 'g', since it is already in place, we just need 1 step to spell this character. \nFor the second key character 'd', we need to rotate the ring \"godding\" anticlockwise by two steps to make it become \"ddinggo\".\nAlso, we need 1 more step for spelling.\nSo the final output is 4.\n\n\nNote:\n\nLength of both ring and key will be in range 1 to 100.\nThere are only lowercase letters in both strings and might be some duplcate characters in both strings.\nIt's guaranteed that string key could always be spelled by rotating the string ring."},{"index":"515","url":"https://leetcode.com/problems/find-largest-value-in-each-tree-row","title":"Find Largest Value in Each Tree Row","difficulty":"Medium","description":"Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).\n\n \n\n \n\nExample 1:\n\nInput: root = [1,3,2,5,3,null,9]\nOutput: [1,3,9]\n\n\nExample 2:\n\nInput: root = [1,2,3]\nOutput: [1,3]\n\n\nExample 3:\n\nInput: root = [1]\nOutput: [1]\n\n\nExample 4:\n\nInput: root = [1,null,2]\nOutput: [1,2]\n\n\nExample 5:\n\nInput: root = []\nOutput: []\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree will be in the range [0, 104].\n-231 <= Node.val <= 231 - 1"},{"index":"516","url":"https://leetcode.com/problems/longest-palindromic-subsequence","title":"Longest Palindromic Subsequence","difficulty":"Medium","description":"Given a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.\n\nExample 1:\nInput:\n\n\"bbbab\"\n\nOutput:\n4\n\nOne possible longest palindromic subsequence is \"bbbb\".\n\n \n\nExample 2:\nInput:\n\n\"cbbd\"\n\nOutput:\n2\n\nOne possible longest palindromic subsequence is \"bb\".\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns consists only of lowercase English letters."},{"index":"517","url":"https://leetcode.com/problems/super-washing-machines","title":"Super Washing Machines","difficulty":"Hard","description":"You have n super washing machines on a line. Initially, each washing machine has some dresses or is empty.\n\nFor each move, you could choose any m (1 ≤ m ≤ n) washing machines, and pass one dress of each washing machine to one of its adjacent washing machines at the same time .\n\nGiven an integer array representing the number of dresses in each washing machine from left to right on the line, you should find the minimum number of moves to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.\n\nExample1\n\nInput: [1,0,5]\n\nOutput: 3\n\nExplanation: \n1st move:    1     0 <-- 5    =>    1     1     4\n2nd move:    1 <-- 1 <-- 4    =>    2     1     3    \n3rd move:    2     1 <-- 3    =>    2     2     2   \n\n\nExample2\n\nInput: [0,3,0]\n\nOutput: 2\n\nExplanation: \n1st move:    0 <-- 3     0    =>    1     2     0    \n2nd move:    1     2 --> 0    =>    1     1     1     \n\n\nExample3\n\nInput: [0,2,0]\n\nOutput: -1\n\nExplanation: \nIt's impossible to make all the three washing machines have the same number of dresses. \n\n\nNote:\n\n\nThe range of n is [1, 10000].\nThe range of dresses number in a super washing machine is [0, 1e5]."},{"index":"518","url":"https://leetcode.com/problems/coin-change-2","title":"Coin Change 2","difficulty":"Medium","description":"You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.\n\n \n\nExample 1:\n\nInput: amount = 5, coins = [1, 2, 5]\nOutput: 4\nExplanation: there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n\n\nExample 2:\n\nInput: amount = 3, coins = [2]\nOutput: 0\nExplanation: the amount of 3 cannot be made up just with coins of 2.\n\n\nExample 3:\n\nInput: amount = 10, coins = [10] \nOutput: 1\n\n\n \n\nNote:\n\nYou can assume that\n\n0 <= amount <= 5000\n1 <= coin <= 5000\nthe number of coins is less than 500\nthe answer is guaranteed to fit into signed 32-bit integer"},{"index":"519","url":"https://leetcode.com/problems/random-flip-matrix","title":"Random Flip Matrix","difficulty":"Medium","description":"You are given the number of rows n_rows and number of columns n_cols of a 2D binary matrix where all values are initially 0. Write a function flip which chooses a 0 value uniformly at random, changes it to 1, and then returns the position [row.id, col.id] of that value. Also, write a function reset which sets all values back to 0. Try to minimize the number of calls to system's Math.random() and optimize the time and space complexity.\n\nNote:\n\n1 <= n_rows, n_cols <= 10000\n0 <= row.id < n_rows and 0 <= col.id < n_cols\nflip will not be called when the matrix has no 0 values left.\nthe total number of calls to flip and reset will not exceed 1000.\n\nExample 1:\n\nInput: \n[\"Solution\",\"flip\",\"flip\",\"flip\",\"flip\"]\n[[2,3],[],[],[],[]]\nOutput: [null,[0,1],[1,2],[1,0],[1,1]]\n\n\nExample 2:\n\nInput: \n[\"Solution\",\"flip\",\"flip\",\"reset\",\"flip\"]\n[[1,2],[],[],[],[]]\nOutput: [null,[0,0],[0,1],null,[0,0]]\n\nExplanation of Input Syntax:\n\nThe input is two lists: the subroutines called and their arguments. Solution's constructor has two arguments, n_rows and n_cols. flip and reset have no arguments. Arguments are always wrapped with a list, even if there aren't any."},{"index":"520","url":"https://leetcode.com/problems/detect-capital","title":"Detect Capital","difficulty":"Easy","description":"Given a word, you need to judge whether the usage of capitals in it is right or not.\n\nWe define the usage of capitals in a word to be right when one of the following cases holds:\n\nAll letters in this word are capitals, like \"USA\".\nAll letters in this word are not capitals, like \"leetcode\".\nOnly the first letter in this word is capital, like \"Google\".\nOtherwise, we define that this word doesn't use capitals in a right way.\n\n \n\nExample 1:\n\nInput: \"USA\"\nOutput: True\n\n\n \n\nExample 2:\n\nInput: \"FlaG\"\nOutput: False\n\n\n \n\nNote: The input will be a non-empty word consisting of uppercase and lowercase latin letters."},{"index":"521","url":"https://leetcode.com/problems/longest-uncommon-subsequence-i","title":"Longest Uncommon Subsequence I","difficulty":"Easy","description":"Given two strings a and b, find the length of the longest uncommon subsequence between them.\n\nA subsequence of a string s is a string that can be obtained after deleting any number of characters from s. For example, \"abc\" is a subsequence of \"aebdc\" because you can delete the underlined characters in \"aebdc\" to get \"abc\". Other subsequences of \"aebdc\" include \"aebdc\", \"aeb\", and \"\" (empty string).\n\nAn uncommon subsequence between two strings is a string that is a subsequence of one but not the other.\n\nReturn the length of the longest uncommon subsequence between a and b. If the longest uncommon subsequence doesn't exist, return -1.\n\n \n\nExample 1:\n\nInput: a = \"aba\", b = \"cdc\"\nOutput: 3\nExplanation: One longest uncommon subsequence is \"aba\" because \"aba\" is a subsequence of \"aba\" but not \"cdc\".\nNote that \"cdc\" is also a longest uncommon subsequence.\n\n\nExample 2:\n\nInput: a = \"aaa\", b = \"bbb\"\nOutput: 3\nExplanation: The longest uncommon subsequences are \"aaa\" and \"bbb\".\n\n\nExample 3:\n\nInput: a = \"aaa\", b = \"aaa\"\nOutput: -1\nExplanation: Every subsequence of string a is also a subsequence of string b. Similarly, every subsequence of string b is also a subsequence of string a.\n\n\n \n\nConstraints:\n\n1 <= a.length, b.length <= 100\na and b consist of lower-case English letters."},{"index":"522","url":"https://leetcode.com/problems/longest-uncommon-subsequence-ii","title":"Longest Uncommon Subsequence II","difficulty":"Medium","description":"Given a list of strings, you need to find the longest uncommon subsequence among them. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be any subsequence of the other strings.\n\nA subsequence is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\n\nThe input will be a list of strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn't exist, return -1.\n\nExample 1:\n\n\nInput: \"aba\", \"cdc\", \"eae\"\nOutput: 3\n\n\nNote:\n\nAll the given strings' lengths will not exceed 10.\nThe length of the given list will be in the range of [2, 50]."},{"index":"523","url":"https://leetcode.com/problems/continuous-subarray-sum","title":"Continuous Subarray Sum","difficulty":"Medium","description":"Given a list of non-negative numbers and a target integer k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to a multiple of k, that is, sums up to n*k where n is also an integer.\n\n \n\nExample 1:\n\nInput: [23, 2, 4, 6, 7],  k=6\nOutput: True\nExplanation: Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\n\n\nExample 2:\n\nInput: [23, 2, 6, 4, 7],  k=6\nOutput: True\nExplanation: Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.\n\n\n \n\nConstraints:\n\nThe length of the array won't exceed 10,000.\nYou may assume the sum of all the numbers is in the range of a signed 32-bit integer."},{"index":"524","url":"https://leetcode.com/problems/longest-word-in-dictionary-through-deleting","title":"Longest Word in Dictionary through Deleting","difficulty":"Medium","description":"Given a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\n\nExample 1:\n\n\nInput:\ns = \"abpcplea\", d = [\"ale\",\"apple\",\"monkey\",\"plea\"]\n\nOutput: \n\"apple\"\n\n\nExample 2:\n\n\nInput:\ns = \"abpcplea\", d = [\"a\",\"b\",\"c\"]\n\nOutput: \n\"a\"\n\n\nNote:\n\n\nAll the strings in the input will only contain lower-case letters.\nThe size of the dictionary won't exceed 1,000.\nThe length of all the strings in the input won't exceed 1,000."},{"index":"525","url":"https://leetcode.com/problems/contiguous-array","title":"Contiguous Array","difficulty":"Medium","description":"Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.\n\nExample 1:\n\n\nInput: [0,1]\nOutput: 2\nExplanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\n\n\nExample 2:\n\n\nInput: [0,1,0]\nOutput: 2\nExplanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n\n\nNote: The length of the given binary array will not exceed 50,000."},{"index":"526","url":"https://leetcode.com/problems/beautiful-arrangement","title":"Beautiful Arrangement","difficulty":"Medium","description":"Suppose you have N integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these N numbers successfully if one of the following is true for the ith position (1 <= i <= N) in this array:\n\nThe number at the ith position is divisible by i.\ni is divisible by the number at the ith position.\n\n \n\nNow given N, how many beautiful arrangements can you construct?\n\nExample 1:\n\nInput: 2\nOutput: 2\nExplanation: \n\nThe first beautiful arrangement is [1, 2]:\n\nNumber at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).\n\nNumber at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).\n\nThe second beautiful arrangement is [2, 1]:\n\nNumber at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).\n\nNumber at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.\n\n\n \n\nNote:\n\nN is a positive integer and will not exceed 15.\n\n "},{"index":"528","url":"https://leetcode.com/problems/random-pick-with-weight","title":"Random Pick with Weight","difficulty":"Medium","description":"You are given an array of positive integers w where w[i] describes the weight of ith index (0-indexed).\n\nWe need to call the function pickIndex() which randomly returns an integer in the range [0, w.length - 1]. pickIndex() should return the integer proportional to its weight in the w array. For example, for w = [1, 3], the probability of picking the index 0 is 1 / (1 + 3) = 0.25 (i.e 25%) while the probability of picking the index 1 is 3 / (1 + 3) = 0.75 (i.e 75%).\n\nMore formally, the probability of picking index i is w[i] / sum(w).\n\n \n\nExample 1:\n\nInput\n[\"Solution\",\"pickIndex\"]\n[[[1]],[]]\nOutput\n[null,0]\n\nExplanation\nSolution solution = new Solution([1]);\nsolution.pickIndex(); // return 0. Since there is only one single element on the array the only option is to return the first element.\n\n\nExample 2:\n\nInput\n[\"Solution\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\"]\n[[[1,3]],[],[],[],[],[]]\nOutput\n[null,1,1,1,1,0]\n\nExplanation\nSolution solution = new Solution([1, 3]);\nsolution.pickIndex(); // return 1. It's returning the second element (index = 1) that has probability of 3/4.\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 0. It's returning the first element (index = 0) that has probability of 1/4.\n\nSince this is a randomization problem, multiple answers are allowed so the following outputs can be considered correct :\n[null,1,1,1,1,0]\n[null,1,1,1,1,1]\n[null,1,1,1,0,0]\n[null,1,1,1,0,1]\n[null,1,0,1,0,0]\n......\nand so on.\n\n\n \n\nConstraints:\n\n1 <= w.length <= 10000\n1 <= w[i] <= 10^5\npickIndex will be called at most 10000 times."},{"index":"529","url":"https://leetcode.com/problems/minesweeper","title":"Minesweeper","difficulty":"Medium","description":"Let's play the minesweeper game (Wikipedia, online game)!\n\nYou are given a 2D char matrix representing the game board. 'M' represents an unrevealed mine, 'E' represents an unrevealed empty square, 'B' represents a revealed blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, digit ('1' to '8') represents how many mines are adjacent to this revealed square, and finally 'X' represents a revealed mine.\n\nNow given the next click position (row and column indices) among all the unrevealed squares ('M' or 'E'), return the board after revealing this position according to the following rules:\n\nIf a mine ('M') is revealed, then the game is over - change it to 'X'.\nIf an empty square ('E') with no adjacent mines is revealed, then change it to revealed blank ('B') and all of its adjacent unrevealed squares should be revealed recursively.\nIf an empty square ('E') with at least one adjacent mine is revealed, then change it to a digit ('1' to '8') representing the number of adjacent mines.\nReturn the board when no more squares will be revealed.\n\n \n\nExample 1:\n\nInput: \n\n[['E', 'E', 'E', 'E', 'E'],\n ['E', 'E', 'M', 'E', 'E'],\n ['E', 'E', 'E', 'E', 'E'],\n ['E', 'E', 'E', 'E', 'E']]\n\nClick : [3,0]\n\nOutput: \n\n[['B', '1', 'E', '1', 'B'],\n ['B', '1', 'M', '1', 'B'],\n ['B', '1', '1', '1', 'B'],\n ['B', 'B', 'B', 'B', 'B']]\n\nExplanation:\n\n\n\nExample 2:\n\nInput: \n\n[['B', '1', 'E', '1', 'B'],\n ['B', '1', 'M', '1', 'B'],\n ['B', '1', '1', '1', 'B'],\n ['B', 'B', 'B', 'B', 'B']]\n\nClick : [1,2]\n\nOutput: \n\n[['B', '1', 'E', '1', 'B'],\n ['B', '1', 'X', '1', 'B'],\n ['B', '1', '1', '1', 'B'],\n ['B', 'B', 'B', 'B', 'B']]\n\nExplanation:\n\n\n\n \n\nNote:\n\nThe range of the input matrix's height and width is [1,50].\nThe click position will only be an unrevealed square ('M' or 'E'), which also means the input board contains at least one clickable square.\nThe input board won't be a stage when game is over (some mines have been revealed).\nFor simplicity, not mentioned rules should be ignored in this problem. For example, you don't need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares."},{"index":"530","url":"https://leetcode.com/problems/minimum-absolute-difference-in-bst","title":"Minimum Absolute Difference in BST","difficulty":"Easy","description":"Given a binary search tree with non-negative values, find the minimum absolute difference between values of any two nodes.\n\nExample:\n\nInput:\n\n   1\n    \\\n     3\n    /\n   2\n\nOutput:\n1\n\nExplanation:\nThe minimum absolute difference is 1, which is the difference between 2 and 1 (or between 2 and 3).\n\n\n \n\nNote:\n\nThere are at least two nodes in this BST.\nThis question is the same as 783: https://leetcode.com/problems/minimum-distance-between-bst-nodes/"},{"index":"532","url":"https://leetcode.com/problems/k-diff-pairs-in-an-array","title":"K-diff Pairs in an Array","difficulty":"Medium","description":"Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.\n\nA k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:\n\n0 <= i, j < nums.length\ni != j\n|nums[i] - nums[j]| == k\n\nNotice that |val| denotes the absolute value of val.\n\n \n\nExample 1:\n\nInput: nums = [3,1,4,1,5], k = 2\nOutput: 2\nExplanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).\nAlthough we have two 1s in the input, we should only return the number of unique pairs.\n\n\nExample 2:\n\nInput: nums = [1,2,3,4,5], k = 1\nOutput: 4\nExplanation: There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\n\n\nExample 3:\n\nInput: nums = [1,3,1,5,4], k = 0\nOutput: 1\nExplanation: There is one 0-diff pair in the array, (1, 1).\n\n\nExample 4:\n\nInput: nums = [1,2,4,4,3,3,0,9,2,3], k = 3\nOutput: 2\n\n\nExample 5:\n\nInput: nums = [-1,-2,-3], k = 1\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 104\n-107 <= nums[i] <= 107\n0 <= k <= 107"},{"index":"535","url":"https://leetcode.com/problems/encode-and-decode-tinyurl","title":"Encode and Decode TinyURL","difficulty":"Medium","description":"Note: This is a companion problem to the System Design problem: Design TinyURL.\n\nTinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk.\n\nDesign the encode and decode methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL."},{"index":"537","url":"https://leetcode.com/problems/complex-number-multiplication","title":"Complex Number Multiplication","difficulty":"Medium","description":"Given two strings representing two complex numbers.\n\nYou need to return a string representing their multiplication. Note i2 = -1 according to the definition.\n\nExample 1:\n\n\nInput: \"1+1i\", \"1+1i\"\nOutput: \"0+2i\"\nExplanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.\n\n\nExample 2:\n\n\nInput: \"1+-1i\", \"1+-1i\"\nOutput: \"0+-2i\"\nExplanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.\n\n\nNote:\n\nThe input strings will not have extra blank.\nThe input strings will be given in the form of a+bi, where the integer a and b will both belong to the range of [-100, 100]. And the output should be also in this form."},{"index":"538","url":"https://leetcode.com/problems/convert-bst-to-greater-tree","title":"Convert BST to Greater Tree","difficulty":"Medium","description":"Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.\n\nAs a reminder, a binary search tree is a tree that satisfies these constraints:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\nNote: This question is the same as 1038: https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/\n\n \n\nExample 1:\n\nInput: root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\nOutput: [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n\n\nExample 2:\n\nInput: root = [0,null,1]\nOutput: [1,null,1]\n\n\nExample 3:\n\nInput: root = [1,0,2]\nOutput: [3,3,2]\n\n\nExample 4:\n\nInput: root = [3,2,4,1]\nOutput: [7,9,4,10]\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-104 <= Node.val <= 104\nAll the values in the tree are unique.\nroot is guaranteed to be a valid binary search tree."},{"index":"539","url":"https://leetcode.com/problems/minimum-time-difference","title":"Minimum Time Difference","difficulty":"Medium","description":"Given a list of 24-hour clock time points in \"HH:MM\" format, return the minimum minutes difference between any two time-points in the list.\n\n \n\nExample 1:\n\nInput: timePoints = [\"23:59\",\"00:00\"]\nOutput: 1\n\n\nExample 2:\n\nInput: timePoints = [\"00:00\",\"23:59\",\"00:00\"]\nOutput: 0\n\n\n \n\nConstraints:\n\n2 <= timePoints <= 2 * 104\ntimePoints[i] is in the format \"HH:MM\"."},{"index":"540","url":"https://leetcode.com/problems/single-element-in-a-sorted-array","title":"Single Element in a Sorted Array","difficulty":"Medium","description":"You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.\n\nFollow up: Your solution should run in O(log n) time and O(1) space.\n\n \n\nExample 1:\n\nInput: nums = [1,1,2,3,3,4,4,8,8]\nOutput: 2\n\n\nExample 2:\n\nInput: nums = [3,3,7,7,10,11,11]\nOutput: 10\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n0 <= nums[i] <= 10^5"},{"index":"541","url":"https://leetcode.com/problems/reverse-string-ii","title":"Reverse String II","difficulty":"Easy","description":"Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.\n\nExample:\n\n\nInput: s = \"abcdefg\", k = 2\nOutput: \"bacdfeg\"\n\n\nRestrictions:\nThe string consists of lower English letters only.\nLength of the given string and k will in the range [1, 10000]"},{"index":"542","url":"https://leetcode.com/problems/01-matrix","title":"01 Matrix","difficulty":"Medium","description":"Given a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.\n\nThe distance between two adjacent cells is 1.\n\n \n\nExample 1:\n\nInput:\n[[0,0,0],\n [0,1,0],\n [0,0,0]]\n\nOutput:\n[[0,0,0],\n [0,1,0],\n [0,0,0]]\n\n\nExample 2:\n\nInput:\n[[0,0,0],\n [0,1,0],\n [1,1,1]]\n\nOutput:\n[[0,0,0],\n [0,1,0],\n [1,2,1]]\n\n\n \n\nNote:\n\nThe number of elements of the given matrix will not exceed 10,000.\nThere are at least one 0 in the given matrix.\nThe cells are adjacent in only four directions: up, down, left and right."},{"index":"543","url":"https://leetcode.com/problems/diameter-of-binary-tree","title":"Diameter of Binary Tree","difficulty":"Easy","description":"Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.\n\nExample:\nGiven a binary tree\n\n\n          1\n         / \\\n        2   3\n       / \\     \n      4   5    \n\n\nReturn 3, which is the length of the path [4,2,1,3] or [5,2,1,3].\n\nNote: The length of path between two nodes is represented by the number of edges between them."},{"index":"546","url":"https://leetcode.com/problems/remove-boxes","title":"Remove Boxes","difficulty":"Hard","description":"Given several boxes with different colors represented by different positive numbers.\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (composed of k boxes, k >= 1), remove them and get k*k points.\nFind the maximum points you can get.\n\n \n\nExample 1:\n\nInput: boxes = [1,3,2,2,2,3,4,3,1]\nOutput: 23\nExplanation:\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----> [1, 3, 3, 4, 3, 1] (3*3=9 points) \n----> [1, 3, 3, 3, 1] (1*1=1 points) \n----> [1, 1] (3*3=9 points) \n----> [] (2*2=4 points)\n\n\n \n\nConstraints:\n\n1 <= boxes.length <= 100\n1 <= boxes[i] <= 100"},{"index":"547","url":"https://leetcode.com/problems/friend-circles","title":"Friend Circles","difficulty":"Medium","description":"There are N students in a class. Some of them are friends, while some are not. Their friendship is transitive in nature. For example, if A is a direct friend of B, and B is a direct friend of C, then A is an indirect friend of C. And we defined a friend circle is a group of students who are direct or indirect friends.\n\nGiven a N*N matrix M representing the friend relationship between students in the class. If M[i][j] = 1, then the ith and jth students are direct friends with each other, otherwise not. And you have to output the total number of friend circles among all the students.\n\nExample 1:\n\nInput: \n[[1,1,0],\n [1,1,0],\n [0,0,1]]\nOutput: 2\nExplanation:The 0th and 1st students are direct friends, so they are in a friend circle. \nThe 2nd student himself is in a friend circle. So return 2.\n\n\n \n\nExample 2:\n\nInput: \n[[1,1,0],\n [1,1,1],\n [0,1,1]]\nOutput: 1\nExplanation:The 0th and 1st students are direct friends, the 1st and 2nd students are direct friends, \nso the 0th and 2nd students are indirect friends. All of them are in the same friend circle, so return 1.\n\n\n\n \n\nConstraints:\n\n1 <= N <= 200\nM[i][i] == 1\nM[i][j] == M[j][i]"},{"index":"551","url":"https://leetcode.com/problems/student-attendance-record-i","title":"Student Attendance Record I","difficulty":"Easy","description":"You are given a string representing an attendance record for a student. The record only contains the following three characters:\n\n'A' : Absent.\n'L' : Late.\n'P' : Present.\n\nA student could be rewarded if his attendance record doesn't contain more than one 'A' (absent) or more than two continuous 'L' (late).\n\nYou need to return whether the student could be rewarded according to his attendance record.\n\nExample 1:\n\n\nInput: \"PPALLP\"\nOutput: True\n\n\nExample 2:\n\n\nInput: \"PPALLL\"\nOutput: False\n"},{"index":"552","url":"https://leetcode.com/problems/student-attendance-record-ii","title":"Student Attendance Record II","difficulty":"Hard","description":"Given a positive integer n, return the number of all possible attendance records with length n, which will be regarded as rewardable. The answer may be very large, return it after mod 109 + 7.\n\nA student attendance record is a string that only contains the following three characters:\n\n'A' : Absent.\n'L' : Late.\n'P' : Present.\n\nA record is regarded as rewardable if it doesn't contain more than one 'A' (absent) or more than two continuous 'L' (late).\n\nExample 1:\n\n\nInput: n = 2\nOutput: 8 \nExplanation:\nThere are 8 records with length 2 will be regarded as rewardable:\n\"PP\" , \"AP\", \"PA\", \"LP\", \"PL\", \"AL\", \"LA\", \"LL\"\nOnly \"AA\" won't be regarded as rewardable owing to more than one absent times. \n\n\nNote: The value of n won't exceed 100,000."},{"index":"553","url":"https://leetcode.com/problems/optimal-division","title":"Optimal Division","difficulty":"Medium","description":"Given a list of positive integers, the adjacent integers will perform the float division. For example, [2,3,4] -> 2 / 3 / 4.\n\nHowever, you can add any number of parenthesis at any position to change the priority of operations. You should find out how to add parenthesis to get the maximum result, and return the corresponding expression in string format. Your expression should NOT contain redundant parenthesis.\n\nExample:\n\n\nInput: [1000,100,10,2]\nOutput: \"1000/(100/10/2)\"\nExplanation:\n1000/(100/10/2) = 1000/((100/10)/2) = 200\nHowever, the bold parenthesis in \"1000/((100/10)/2)\" are redundant, \nsince they don't influence the operation priority. So you should return \"1000/(100/10/2)\". \n\nOther cases:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n\n\nNote:\n\nThe length of the input array is [1, 10].\nElements in the given array will be in range [2, 1000].\nThere is only one optimal division for each test case."},{"index":"554","url":"https://leetcode.com/problems/brick-wall","title":"Brick Wall","difficulty":"Medium","description":"There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the top to the bottom and cross the least bricks.\n\nThe brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right.\n\nIf your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks.\n\nYou cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks.\n\n \n\nExample:\n\nInput: [[1,2,2,1],\n        [3,1,2],\n        [1,3,2],\n        [2,4],\n        [3,1,2],\n        [1,3,1,1]]\n\nOutput: 2\n\nExplanation: \n\n\n\n \n\nNote:\n\nThe width sum of bricks in different rows are the same and won't exceed INT_MAX.\nThe number of bricks in each row is in range [1,10,000]. The height of wall is in range [1,10,000]. Total number of bricks of the wall won't exceed 20,000."},{"index":"556","url":"https://leetcode.com/problems/next-greater-element-iii","title":"Next Greater Element III","difficulty":"Medium","description":"Given a positive 32-bit integer n, you need to find the smallest 32-bit integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive 32-bit integer exists, you need to return -1.\n\nExample 1:\n\nInput: 12\nOutput: 21\n\n\n \n\nExample 2:\n\nInput: 21\nOutput: -1\n\n\n "},{"index":"557","url":"https://leetcode.com/problems/reverse-words-in-a-string-iii","title":"Reverse Words in a String III","difficulty":"Easy","description":"Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.\n\nExample 1:\n\n\nInput: \"Let's take LeetCode contest\"\nOutput: \"s'teL ekat edoCteeL tsetnoc\"\n\n\nNote: In the string, each word is separated by single space and there will not be any extra space in the string."},{"index":"558","url":"https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees","title":"Logical OR of Two Binary Grids Represented as Quad-Trees","difficulty":"Medium","description":"A Binary Matrix is a matrix in which all the elements are either 0 or 1.\n\nGiven quadTree1 and quadTree2. quadTree1 represents a n * n binary matrix and quadTree2 represents another n * n binary matrix. \n\nReturn a Quad-Tree representing the n * n binary matrix which is the result of logical bitwise OR of the two binary matrixes represented by quadTree1 and quadTree2.\n\nNotice that you can assign the value of a node to True or False when isLeaf is False, and both are accepted in the answer.\n\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\n\nval: True if the node represents a grid of 1's or False if the node represents a grid of 0's. \nisLeaf: True if the node is leaf node on the tree or False if the node has the four children.\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\n\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\n\nIf the current grid has the same value (i.e all 1's or all 0's) set isLeaf True and set val to the value of the grid and set the four children to Null and stop.\nIf the current grid has different values, set isLeaf to False and set val to any value and divide the current grid into four sub-grids as shown in the photo.\nRecurse for each of the children with the proper sub-grid.\n\nIf you want to know more about the Quad-Tree, you can refer to the wiki.\n\nQuad-Tree format:\n\nThe input/output represents the serialized format of a Quad-Tree using level order traversal, where null signifies a path terminator where no node exists below.\n\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list [isLeaf, val].\n\nIf the value of isLeaf or val is True we represent it as 1 in the list [isLeaf, val] and if the value of isLeaf or val is False we represent it as 0.\n\n \n\nExample 1:\n\n \nInput: quadTree1 = [[0,1],[1,1],[1,1],[1,0],[1,0]]\n, quadTree2 = [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\nOutput: [[0,0],[1,1],[1,1],[1,1],[1,0]]\nExplanation: quadTree1 and quadTree2 are shown above. You can see the binary matrix which is represented by each Quad-Tree.\nIf we apply logical bitwise OR on the two binary matrices we get the binary matrix below which is represented by the result Quad-Tree.\nNotice that the binary matrices shown are only for illustration, you don't have to construct the binary matrix to get the result tree.\n\n\n\nExample 2:\n\nInput: quadTree1 = [[1,0]]\n, quadTree2 = [[1,0]]\nOutput: [[1,0]]\nExplanation: Each tree represents a binary matrix of size 1*1. Each matrix contains only zero.\nThe resulting matrix is of size 1*1 with also zero.\n\n\nExample 3:\n\nInput: quadTree1 = [[0,0],[1,0],[1,0],[1,1],[1,1]]\n, quadTree2 = [[0,0],[1,1],[1,1],[1,0],[1,1]]\nOutput: [[1,1]]\n\n\nExample 4:\n\nInput: quadTree1 = [[0,0],[1,1],[1,0],[1,1],[1,1]]\n, quadTree2 = [[0,0],[1,1],[0,1],[1,1],[1,1],null,null,null,null,[1,1],[1,0],[1,0],[1,1]]\nOutput: [[0,0],[1,1],[0,1],[1,1],[1,1],null,null,null,null,[1,1],[1,0],[1,0],[1,1]]\n\n\nExample 5:\n\nInput: quadTree1 = [[0,1],[1,0],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\n, quadTree2 = [[0,1],[0,1],[1,0],[1,1],[1,0],[1,0],[1,0],[1,1],[1,1]]\nOutput: [[0,0],[0,1],[0,1],[1,1],[1,0],[1,0],[1,0],[1,1],[1,1],[1,0],[1,0],[1,1],[1,1]]\n\n\n \n\nConstraints:\n\nquadTree1 and quadTree2 are both valid Quad-Trees each representing a n * n grid.\nn == 2^x where 0 <= x <= 9."},{"index":"559","url":"https://leetcode.com/problems/maximum-depth-of-n-ary-tree","title":"Maximum Depth of N-ary Tree","difficulty":"Easy","description":"Given a n-ary tree, find its maximum depth.\n\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\n\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\n \n\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: 3\n\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: 5\n\n\n \n\nConstraints:\n\nThe depth of the n-ary tree is less than or equal to 1000.\nThe total number of nodes is between [0, 10^4]."},{"index":"560","url":"https://leetcode.com/problems/subarray-sum-equals-k","title":"Subarray Sum Equals K","difficulty":"Medium","description":"Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.\n\n \n\nExample 1:\n\nInput: nums = [1,1,1], k = 2\nOutput: 2\n\n\nExample 2:\n\nInput: nums = [1,2,3], k = 3\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 2 * 104\n-1000 <= nums[i] <= 1000\n-107 <= k <= 107"},{"index":"561","url":"https://leetcode.com/problems/array-partition-i","title":"Array Partition I","difficulty":"Easy","description":"Given an integer array nums of 2n integers, group these integers into n pairs (a1, b1), (a2, b2), ..., (an, bn) such that the sum of min(ai, bi) for all i is maximized. Return the maximized sum.\n\n \n\nExample 1:\n\nInput: nums = [1,4,3,2]\nOutput: 4\nExplanation: All possible pairings (ignoring the ordering of elements) are:\n1. (1, 4), (2, 3) -> min(1, 4) + min(2, 3) = 1 + 2 = 3\n2. (1, 3), (2, 4) -> min(1, 3) + min(2, 4) = 1 + 2 = 3\n3. (1, 2), (3, 4) -> min(1, 2) + min(3, 4) = 1 + 3 = 4\nSo the maximum possible sum is 4.\n\nExample 2:\n\nInput: nums = [6,2,6,5,1,2]\nOutput: 9\nExplanation: The optimal pairing is (2, 1), (2, 5), (6, 6). min(2, 1) + min(2, 5) + min(6, 6) = 1 + 2 + 6 = 9.\n\n\n \n\nConstraints:\n\n1 <= n <= 104\nnums.length == 2 * n\n-104 <= nums[i] <= 104"},{"index":"563","url":"https://leetcode.com/problems/binary-tree-tilt","title":"Binary Tree Tilt","difficulty":"Easy","description":"Given the root of a binary tree, return the sum of every tree node's tilt.\n\nThe tilt of a tree node is the absolute difference between the sum of all left subtree node values and all right subtree node values. If a node does not have a left child, then the sum of the left subtree node values is treated as 0. The rule is similar if there the node does not have a right child.\n\n \n\nExample 1:\n\nInput: root = [1,2,3]\nOutput: 1\nExplanation: \nTilt of node 2 : |0-0| = 0 (no children)\nTilt of node 3 : |0-0| = 0 (no children)\nTile of node 1 : |2-3| = 1 (left subtree is just left child, so sum is 2; right subtree is just right child, so sum is 3)\nSum of every tilt : 0 + 0 + 1 = 1\n\n\nExample 2:\n\nInput: root = [4,2,9,3,5,null,7]\nOutput: 15\nExplanation: \nTilt of node 3 : |0-0| = 0 (no children)\nTilt of node 5 : |0-0| = 0 (no children)\nTilt of node 7 : |0-0| = 0 (no children)\nTilt of node 2 : |3-5| = 2 (left subtree is just left child, so sum is 3; right subtree is just right child, so sum is 5)\nTilt of node 9 : |0-7| = 7 (no left child, so sum is 0; right subtree is just right child, so sum is 7)\nTilt of node 4 : |(3+5+2)-(9+7)| = |10-16| = 6 (left subtree values are 3, 5, and 2, which sums to 10; right subtree values are 9 and 7, which sums to 16)\nSum of every tilt : 0 + 0 + 0 + 2 + 7 + 6 = 15\n\n\nExample 3:\n\nInput: root = [21,7,14,1,1,2,2,3,3]\nOutput: 9\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-1000 <= Node.val <= 1000"},{"index":"564","url":"https://leetcode.com/problems/find-the-closest-palindrome","title":"Find the Closest Palindrome","difficulty":"Hard","description":"Given an integer n, find the closest integer (not including itself), which is a palindrome.\n\nThe 'closest' is defined as absolute difference minimized between two integers.\n\nExample 1:\n\n\nInput: \"123\"\nOutput: \"121\"\n\n\nNote:\n\n\nThe input n is a positive integer represented by string, whose length will not exceed 18.\nIf there is a tie, return the smaller one as answer."},{"index":"565","url":"https://leetcode.com/problems/array-nesting","title":"Array Nesting","difficulty":"Medium","description":"A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.\n\nSuppose the first element in S starts with the selection of element A[i] of index = i, the next element in S should be A[A[i]], and then A[A[A[i]]]… By that analogy, we stop adding right before a duplicate element occurs in S.\n\n \n\nExample 1:\n\nInput: A = [5,4,0,3,1,6,2]\nOutput: 4\nExplanation: \nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.\n\nOne of the longest S[K]:\nS[0] = {A[0], A[5], A[6], A[2]} = {5, 6, 2, 0}\n\n\n \n\nNote:\n\nN is an integer within the range [1, 20,000].\nThe elements of A are all distinct.\nEach element of A is an integer within the range [0, N-1]."},{"index":"566","url":"https://leetcode.com/problems/reshape-the-matrix","title":"Reshape the Matrix","difficulty":"Easy","description":"In MATLAB, there is a very useful function called 'reshape', which can reshape a matrix into a new one with different size but keep its original data.\n\nYou're given a matrix represented by a two-dimensional array, and two positive integers r and c representing the row number and column number of the wanted reshaped matrix, respectively.\n\nThe reshaped matrix need to be filled with all the elements of the original matrix in the same row-traversing order as they were.\n\nIf the 'reshape' operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\n\nExample 1:\n\n\nInput: \nnums = \n[[1,2],\n [3,4]]\nr = 1, c = 4\nOutput: \n[[1,2,3,4]]\nExplanation:\nThe row-traversing of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4 matrix, fill it row by row by using the previous list.\n\n\nExample 2:\n\n\nInput: \nnums = \n[[1,2],\n [3,4]]\nr = 2, c = 4\nOutput: \n[[1,2],\n [3,4]]\nExplanation:\nThere is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So output the original matrix.\n\n\nNote:\n\n\nThe height and width of the given matrix is in range [1, 100].\nThe given r and c are all positive."},{"index":"567","url":"https://leetcode.com/problems/permutation-in-string","title":"Permutation in String","difficulty":"Medium","description":"Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.\n\n \n\nExample 1:\n\nInput: s1 = \"ab\" s2 = \"eidbaooo\"\nOutput: True\nExplanation: s2 contains one permutation of s1 (\"ba\").\n\n\nExample 2:\n\nInput:s1= \"ab\" s2 = \"eidboaoo\"\nOutput: False\n\n\n \n\nConstraints:\n\nThe input strings only contain lower case letters.\nThe length of both given strings is in range [1, 10,000]."},{"index":"572","url":"https://leetcode.com/problems/subtree-of-another-tree","title":"Subtree of Another Tree","difficulty":"Easy","description":"Given two non-empty binary trees s and t, check whether tree t has exactly the same structure and node values with a subtree of s. A subtree of s is a tree consists of a node in s and all of this node's descendants. The tree s could also be considered as a subtree of itself.\n\nExample 1:\nGiven tree s:\n\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n\nGiven tree t:\n   4 \n  / \\\n 1   2\n\nReturn true, because t has the same structure and node values with a subtree of s.\n\n \n\nExample 2:\nGiven tree s:\n\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n\nGiven tree t:\n   4\n  / \\\n 1   2\n\nReturn false.\n\n "},{"index":"575","url":"https://leetcode.com/problems/distribute-candies","title":"Distribute Candies","difficulty":"Easy","description":"Alice has n candies, where the ith candy is of type candyType[i]. Alice noticed that she started to gain weight, that is why she visited a doctor.\n\nThe doctor advised Alice to only eat n / 2 of the candies she has (n is always even). Alice likes her candies very much. She wants to eat the maximum number of different types of candies.\n\nGiven the integer array candyType of length n, return the maximum number of different types of candies she can eat, achieving the doctor's advice.\n\n \n\nExample 1:\n\nInput: candyType = [1,1,2,2,3,3]\nOutput: 3\nExplanation: Alice should eat only 3 candies, she currently has 2 candies of the first type, 2 candies of the second type, and 2 candies of the third type.\nAlice will choose to eat 1 candy of each type. This leads her to eat 3 different types of candies and we return 3.\n\n\nExample 2:\n\nInput: candyType = [1,1,2,3]\nOutput: 2\nExplanation: Alice can eat 2 candies, and she always has the option to eat them different [1,2], [1,3], or [2,3].\n\n\nExample 3:\n\nInput: candyType = [6,6,6,6]\nOutput: 1\nExplanation: Alice has only one type of candies, she will eat only one type i.e., type 6.\n\n\n\n \n\nConstraints:\n\nn == candyType.length\n2 <= n <= 104\nn is even.\n-105 <= candyType[i] <= 105"},{"index":"576","url":"https://leetcode.com/problems/out-of-boundary-paths","title":"Out of Boundary Paths","difficulty":"Medium","description":"There is an m by n grid with a ball. Given the start coordinate (i,j) of the ball, you can move the ball to adjacent cell or cross the grid boundary in four directions (up, down, left, right). However, you can at most move N times. Find out the number of paths to move the ball out of grid boundary. The answer may be very large, return it after mod 109 + 7.\n\n \n\nExample 1:\n\nInput: m = 2, n = 2, N = 2, i = 0, j = 0\nOutput: 6\nExplanation:\n\n\n\nExample 2:\n\nInput: m = 1, n = 3, N = 3, i = 0, j = 1\nOutput: 12\nExplanation:\n\n\n\n \n\nNote:\n\nOnce you move the ball out of boundary, you cannot move it back.\nThe length and height of the grid is in range [1,50].\nN is in range [0,50]."},{"index":"581","url":"https://leetcode.com/problems/shortest-unsorted-continuous-subarray","title":"Shortest Unsorted Continuous Subarray","difficulty":"Medium","description":"Given an integer array nums, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order.\n\nReturn the shortest such subarray and output its length.\n\n \n\nExample 1:\n\nInput: nums = [2,6,4,8,10,9,15]\nOutput: 5\nExplanation: You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n\n\nExample 2:\n\nInput: nums = [1,2,3,4]\nOutput: 0\n\n\nExample 3:\n\nInput: nums = [1]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 104\n-105 <= nums[i] <= 105"},{"index":"583","url":"https://leetcode.com/problems/delete-operation-for-two-strings","title":"Delete Operation for Two Strings","difficulty":"Medium","description":"Given two words word1 and word2, find the minimum number of steps required to make word1 and word2 the same, where in each step you can delete one character in either string.\n\nExample 1:\n\n\nInput: \"sea\", \"eat\"\nOutput: 2\nExplanation: You need one step to make \"sea\" to \"ea\" and another step to make \"eat\" to \"ea\".\n\n\nNote:\n\n\nThe length of given words won't exceed 500.\nCharacters in given words can only be lower-case letters."},{"index":"587","url":"https://leetcode.com/problems/erect-the-fence","title":"Erect the Fence","difficulty":"Hard","description":"There are some trees, where each tree is represented by (x,y) coordinate in a two-dimensional garden. Your job is to fence the entire garden using the minimum length of rope as it is expensive. The garden is well fenced only if all the trees are enclosed. Your task is to help find the coordinates of trees which are exactly located on the fence perimeter.\n\n \n\nExample 1:\n\nInput: [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\nOutput: [[1,1],[2,0],[4,2],[3,3],[2,4]]\nExplanation:\n\n\n\nExample 2:\n\nInput: [[1,2],[2,2],[4,2]]\nOutput: [[1,2],[2,2],[4,2]]\nExplanation:\n\nEven you only have trees in a line, you need to use rope to enclose them. \n\n\n \n\nNote:\n\nAll trees should be enclosed together. You cannot cut the rope to enclose trees that will separate them in more than one group.\nAll input integers will range from 0 to 100.\nThe garden has at least one tree.\nAll coordinates are distinct.\nInput points have NO order. No order required for output.\ninput types have been changed on April 15, 2019. Please reset to default code definition to get new method signature."},{"index":"589","url":"https://leetcode.com/problems/n-ary-tree-preorder-traversal","title":"N-ary Tree Preorder Traversal","difficulty":"Easy","description":"Given an n-ary tree, return the preorder traversal of its nodes' values.\n\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\n \n\nFollow up:\n\nRecursive solution is trivial, could you do it iteratively?\n\n \n\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: [1,3,5,6,2,4]\n\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: [1,2,3,6,7,11,14,4,8,12,5,9,13,10]\n\n\n \n\nConstraints:\n\nThe height of the n-ary tree is less than or equal to 1000\nThe total number of nodes is between [0, 10^4]"},{"index":"590","url":"https://leetcode.com/problems/n-ary-tree-postorder-traversal","title":"N-ary Tree Postorder Traversal","difficulty":"Easy","description":"Given an n-ary tree, return the postorder traversal of its nodes' values.\n\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\n \n\nFollow up:\n\nRecursive solution is trivial, could you do it iteratively?\n\n \n\nExample 1:\n\nInput: root = [1,null,3,2,4,null,5,6]\nOutput: [5,6,3,2,4,1]\n\n\nExample 2:\n\nInput: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\nOutput: [2,6,14,11,7,3,12,8,4,13,9,10,5,1]\n\n\n \n\nConstraints:\n\nThe height of the n-ary tree is less than or equal to 1000\nThe total number of nodes is between [0, 10^4]"},{"index":"591","url":"https://leetcode.com/problems/tag-validator","title":"Tag Validator","difficulty":"Hard","description":"Given a string representing a code snippet, you need to implement a tag validator to parse the code and return whether it is valid. A code snippet is valid if all the following rules hold:\n\nThe code must be wrapped in a valid closed tag. Otherwise, the code is invalid.\nA closed tag (not necessarily valid) has exactly the following format : <TAG_NAME>TAG_CONTENT</TAG_NAME>. Among them, <TAG_NAME> is the start tag, and </TAG_NAME> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is valid if and only if the TAG_NAME and TAG_CONTENT are valid.\nA valid TAG_NAME only contain upper-case letters, and has length in range [1,9]. Otherwise, the TAG_NAME is invalid.\nA valid TAG_CONTENT may contain other valid closed tags, cdata and any characters (see note1) EXCEPT unmatched <, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the TAG_CONTENT is invalid.\nA start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.\nA < is unmatched if you cannot find a subsequent >. And when you find a < or </, all the subsequent characters until the next > should be parsed as TAG_NAME (not necessarily valid).\nThe cdata has the following format : <![CDATA[CDATA_CONTENT]]>. The range of CDATA_CONTENT is defined as the characters between <![CDATA[ and the first subsequent ]]>.\nCDATA_CONTENT may contain any characters. The function of cdata is to forbid the validator to parse CDATA_CONTENT, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as regular characters.\n\nValid Code Examples:\n\n\nInput: \"<DIV>This is the first line <![CDATA[<div>]]></DIV>\"\n\nOutput: True\n\nExplanation: \n\nThe code is wrapped in a closed tag : <DIV> and </DIV>. \n\nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. \n\nAlthough CDATA_CONTENT has unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as tag.\n\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.\n\n\nInput: \"<DIV>>>  ![cdata[]] <![CDATA[<div>]>]]>]]>>]</DIV>\"\n\nOutput: True\n\nExplanation:\n\nWe first separate the code into : start_tag|tag_content|end_tag.\n\nstart_tag -> \"<DIV>\"\n\nend_tag -> \"</DIV>\"\n\ntag_content could also be separated into : text1|cdata|text2.\n\ntext1 -> \">>  ![cdata[]] \"\n\ncdata -> \"<![CDATA[<div>]>]]>\", where the CDATA_CONTENT is \"<div>]>\"\n\ntext2 -> \"]]>>]\"\n\n\nThe reason why start_tag is NOT \"<DIV>>>\" is because of the rule 6.\nThe reason why cdata is NOT \"<![CDATA[<div>]>]]>]]>\" is because of the rule 7.\n\n\nInvalid Code Examples:\n\n\nInput: \"<A>  <B> </A>   </B>\"\nOutput: False\nExplanation: Unbalanced. If \"<A>\" is closed, then \"<B>\" must be unmatched, and vice versa.\n\nInput: \"<DIV>  div tag is not closed  <DIV>\"\nOutput: False\n\nInput: \"<DIV>  unmatched <  </DIV>\"\nOutput: False\n\nInput: \"<DIV> closed tags with invalid tag name  <b>123</b> </DIV>\"\nOutput: False\n\nInput: \"<DIV> unmatched tags with invalid tag name  </1234567890> and <CDATA[[]]>  </DIV>\"\nOutput: False\n\nInput: \"<DIV>  unmatched start tag <B>  and unmatched end tag </C>  </DIV>\"\nOutput: False\n\n\nNote:\n\n\nFor simplicity, you could assume the input code (including the any characters mentioned above) only contain letters, digits, '<','>','/','!','[',']' and ' '."},{"index":"592","url":"https://leetcode.com/problems/fraction-addition-and-subtraction","title":"Fraction Addition and Subtraction","difficulty":"Medium","description":"Given a string representing an expression of fraction addition and subtraction, you need to return the calculation result in string format. The final result should be irreducible fraction. If your final result is an integer, say 2, you need to change it to the format of fraction that has denominator 1. So in this case, 2 should be converted to 2/1.\n\nExample 1:\n\n\nInput:\"-1/2+1/2\"\nOutput: \"0/1\"\n\n\nExample 2:\n\n\nInput:\"-1/2+1/2+1/3\"\nOutput: \"1/3\"\n\n\nExample 3:\n\n\nInput:\"1/3-1/2\"\nOutput: \"-1/6\"\n\n\nExample 4:\n\n\nInput:\"5/3+1/3\"\nOutput: \"2/1\"\n\n\nNote:\n\n\nThe input string only contains '0' to '9', '/', '+' and '-'. So does the output.\nEach fraction (input and output) has format ±numerator/denominator. If the first input fraction or the output is positive, then '+' will be omitted.\nThe input only contains valid irreducible fractions, where the numerator and denominator of each fraction will always be in the range [1,10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above.\nThe number of given fractions will be in the range [1,10].\nThe numerator and denominator of the final result are guaranteed to be valid and in the range of 32-bit int."},{"index":"593","url":"https://leetcode.com/problems/valid-square","title":"Valid Square","difficulty":"Medium","description":"Given the coordinates of four points in 2D space p1, p2, p3 and p4, return true if the four points construct a square.\n\nThe coordinate of a point pi is represented as [xi, yi]. The input is not given in any order.\n\nA valid square has four equal sides with positive length and four equal angles (90-degree angles).\n\n \n\nExample 1:\n\nInput: p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\nOutput: true\n\n\nExample 2:\n\nInput: p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,12]\nOutput: false\n\n\nExample 3:\n\nInput: p1 = [1,0], p2 = [-1,0], p3 = [0,1], p4 = [0,-1]\nOutput: true\n\n\n \n\nConstraints:\n\np1.length == p2.length == p3.length == p4.length == 2\n-104 <= xi, yi <= 104"},{"index":"594","url":"https://leetcode.com/problems/longest-harmonious-subsequence","title":"Longest Harmonious Subsequence","difficulty":"Easy","description":"We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1.\n\nGiven an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences.\n\nA subsequence of array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements.\n\n \n\nExample 1:\n\nInput: nums = [1,3,2,2,5,2,3,7]\nOutput: 5\nExplanation: The longest harmonious subsequence is [3,2,2,2,3].\n\n\nExample 2:\n\nInput: nums = [1,2,3,4]\nOutput: 2\n\n\nExample 3:\n\nInput: nums = [1,1,1,1]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 2 * 104\n-109 <= nums[i] <= 109"},{"index":"595","url":"https://leetcode.com/problems/big-countries","title":"Big Countries","difficulty":"Easy","description":"SQL Schema\n\nThere is a table World\n\n+-----------------+------------+------------+--------------+---------------+\n| name            | continent  | area       | population   | gdp           |\n+-----------------+------------+------------+--------------+---------------+\n| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |\n| Albania         | Europe     | 28748      | 2831741      | 12960000      |\n| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |\n| Andorra         | Europe     | 468        | 78115        | 3712000       |\n| Angola          | Africa     | 1246700    | 20609294     | 100990000     |\n+-----------------+------------+------------+--------------+---------------+\n\n\nA country is big if it has an area of bigger than 3 million square km or a population of more than 25 million.\n\nWrite a SQL solution to output big countries' name, population and area.\n\nFor example, according to the above table, we should output:\n\n+--------------+-------------+--------------+\n| name         | population  | area         |\n+--------------+-------------+--------------+\n| Afghanistan  | 25500100    | 652230       |\n| Algeria      | 37100000    | 2381741      |\n+--------------+-------------+--------------+\n\n\n "},{"index":"596","url":"https://leetcode.com/problems/classes-more-than-5-students","title":"Classes More Than 5 Students","difficulty":"Easy","description":"SQL Schema\n\nThere is a table courses with columns: student and class\n\nPlease list out all classes which have more than or equal to 5 students.\n\nFor example, the table:\n\n+---------+------------+\n| student | class      |\n+---------+------------+\n| A       | Math       |\n| B       | English    |\n| C       | Math       |\n| D       | Biology    |\n| E       | Math       |\n| F       | Computer   |\n| G       | Math       |\n| H       | Math       |\n| I       | Math       |\n+---------+------------+\n\n\nShould output:\n\n+---------+\n| class   |\n+---------+\n| Math    |\n+---------+\n\n\n \n\nNote:\nThe students should not be counted duplicate in each course."},{"index":"598","url":"https://leetcode.com/problems/range-addition-ii","title":"Range Addition II","difficulty":"Easy","description":"You are given an m x n matrix M initialized with all 0's and an array of operations ops, where ops[i] = [ai, bi] means M[x][y] should be incremented by one for all 0 <= x < ai and 0 <= y < bi.\n\nCount and return the number of maximum integers in the matrix after performing all the operations.\n\n \n\nExample 1:\n\nInput: m = 3, n = 3, ops = [[2,2],[3,3]]\nOutput: 4\nExplanation: The maximum integer in M is 2, and there are four of it in M. So return 4.\n\n\nExample 2:\n\nInput: m = 3, n = 3, ops = [[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3]]\nOutput: 4\n\n\nExample 3:\n\nInput: m = 3, n = 3, ops = []\nOutput: 9\n\n\n \n\nConstraints:\n\n1 <= m, n <= 4 * 104\n1 <= ops.length <= 104\nops[i].length == 2\n1 <= ai <= m\n1 <= bi <= n"},{"index":"599","url":"https://leetcode.com/problems/minimum-index-sum-of-two-lists","title":"Minimum Index Sum of Two Lists","difficulty":"Easy","description":"Suppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings.\n\nYou need to help them find out their common interest with the least list index sum. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.\n\n \n\nExample 1:\n\nInput: list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"Piatti\",\"The Grill at Torrey Pines\",\"Hungry Hunter Steakhouse\",\"Shogun\"]\nOutput: [\"Shogun\"]\nExplanation: The only restaurant they both like is \"Shogun\".\n\n\nExample 2:\n\nInput: list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"KFC\",\"Shogun\",\"Burger King\"]\nOutput: [\"Shogun\"]\nExplanation: The restaurant they both like and have the least index sum is \"Shogun\" with index sum 1 (0+1).\n\n\nExample 3:\n\nInput: list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"KFC\",\"Burger King\",\"Tapioca Express\",\"Shogun\"]\nOutput: [\"KFC\",\"Burger King\",\"Tapioca Express\",\"Shogun\"]\n\n\nExample 4:\n\nInput: list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"KNN\",\"KFC\",\"Burger King\",\"Tapioca Express\",\"Shogun\"]\nOutput: [\"KFC\",\"Burger King\",\"Tapioca Express\",\"Shogun\"]\n\n\nExample 5:\n\nInput: list1 = [\"KFC\"], list2 = [\"KFC\"]\nOutput: [\"KFC\"]\n\n\n \n\nConstraints:\n\n1 <= list1.length, list2.length <= 1000\n1 <= list1[i].length, list2[i].length <= 30\nlist1[i] and list2[i] consist of spaces ' ' and English letters.\nAll the stings of list1 are unique.\nAll the stings of list2 are unique."},{"index":"600","url":"https://leetcode.com/problems/non-negative-integers-without-consecutive-ones","title":"Non-negative Integers without Consecutive Ones","difficulty":"Hard","description":"Given a positive integer n, find the number of non-negative integers less than or equal to n, whose binary representations do NOT contain consecutive ones.\n\nExample 1:\n\n\nInput: 5\nOutput: 5\nExplanation: \nHere are the non-negative integers <= 5 with their corresponding binary representations:\n0 : 0\n1 : 1\n2 : 10\n3 : 11\n4 : 100\n5 : 101\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. \n\n\nNote: 1 <= n <= 109"},{"index":"601","url":"https://leetcode.com/problems/human-traffic-of-stadium","title":"Human Traffic of Stadium","difficulty":"Hard","description":"SQL Schema\n\nTable: Stadium\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| visit_date    | date    |\n| people        | int     |\n+---------------+---------+\nvisit_date is the primary key for this table.\nEach row of this table contains the visit date and visit id to the stadium with the number of people during the visit.\nNo two rows will have the same visit_date, and as the id increases, the dates increase as well.\n\n\n \n\nWrite an SQL query to display the records with three or more rows with consecutive id's, and the number of people is greater than or equal to 100 for each.\n\nReturn the result table ordered by visit_date in ascending order.\n\nThe query result format is in the following example.\n\n \n\nStadium table:\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 1    | 2017-01-01 | 10        |\n| 2    | 2017-01-02 | 109       |\n| 3    | 2017-01-03 | 150       |\n| 4    | 2017-01-04 | 99        |\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+\n\nResult table:\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+\nThe four rows with ids 5, 6, 7, and 8 have consecutive ids and each of them has >= 100 people attended. Note that row 8 was included even though the visit_date was not the next day after row 7.\nThe rows with ids 2 and 3 are not included because we need at least three consecutive ids."},{"index":"605","url":"https://leetcode.com/problems/can-place-flowers","title":"Can Place Flowers","difficulty":"Easy","description":"Suppose you have a long flowerbed in which some of the plots are planted and some are not. However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.\n\nGiven a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), and a number n, return if n new flowers can be planted in it without violating the no-adjacent-flowers rule.\n\nExample 1:\n\n\nInput: flowerbed = [1,0,0,0,1], n = 1\nOutput: True\n\n\nExample 2:\n\n\nInput: flowerbed = [1,0,0,0,1], n = 2\nOutput: False\n\n\nNote:\n\n\nThe input array won't violate no-adjacent-flowers rule.\nThe input array size is in the range of [1, 20000].\nn is a non-negative integer which won't exceed the input array size."},{"index":"606","url":"https://leetcode.com/problems/construct-string-from-binary-tree","title":"Construct String from Binary Tree","difficulty":"Easy","description":"You need to construct a string consists of parenthesis and integers from a binary tree with the preorder traversing way.\n\nThe null node needs to be represented by empty parenthesis pair \"()\". And you need to omit all the empty parenthesis pairs that don't affect the one-to-one mapping relationship between the string and the original binary tree.\n\nExample 1:\n\n\nInput: Binary tree: [1,2,3,4]\n       1\n     /   \\\n    2     3\n   /    \n  4     \n\nOutput: \"1(2(4))(3)\"\n\nExplanation: Originallay it needs to be \"1(2(4)())(3()())\", \nbut you need to omit all the unnecessary empty parenthesis pairs. \nAnd it will be \"1(2(4))(3)\".\n\n\nExample 2:\n\n\nInput: Binary tree: [1,2,3,null,4]\n       1\n     /   \\\n    2     3\n     \\  \n      4 \n\nOutput: \"1(2()(4))(3)\"\n\nExplanation: Almost the same as the first example, \nexcept we can't omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.\n"},{"index":"609","url":"https://leetcode.com/problems/find-duplicate-file-in-system","title":"Find Duplicate File in System","difficulty":"Medium","description":"Given a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths.\n\nA group of duplicate files consists of at least two files that have exactly the same content.\n\nA single directory info string in the input list has the following format:\n\n\"root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)\"\n\nIt means there are n files (f1.txt, f2.txt ... fn.txt with content f1_content, f2_content ... fn_content, respectively) in directory root/d1/d2/.../dm. Note that n >= 1 and m >= 0. If m = 0, it means the directory is just the root directory.\n\nThe output is a list of group of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format:\n\n\"directory_path/file_name.txt\"\n\nExample 1:\n\nInput:\n[\"root/a 1.txt(abcd) 2.txt(efgh)\", \"root/c 3.txt(abcd)\", \"root/c/d 4.txt(efgh)\", \"root 4.txt(efgh)\"]\nOutput:  \n[[\"root/a/2.txt\",\"root/c/d/4.txt\",\"root/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]\n\n\n \n\nNote:\n\nNo order is required for the final output.\nYou may assume the directory name, file name and file content only has letters and digits, and the length of file content is in the range of [1,50].\nThe number of files given is in the range of [1,20000].\nYou may assume no files or directories share the same name in the same directory.\nYou may assume each given directory info represents a unique directory. Directory path and file info are separated by a single blank space.\n\n \n\nFollow-up beyond contest:\nImagine you are given a real file system, how will you search files? DFS or BFS?\nIf the file content is very large (GB level), how will you modify your solution?\nIf you can only read the file by 1kb each time, how will you modify your solution?\nWhat is the time complexity of your modified solution? What is the most time-consuming part and memory consuming part of it? How to optimize?\nHow to make sure the duplicated files you find are not false positive?"},{"index":"611","url":"https://leetcode.com/problems/valid-triangle-number","title":"Valid Triangle Number","difficulty":"Medium","description":"Given an array consists of non-negative integers, your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\n\nExample 1:\n\n\nInput: [2,2,3,4]\nOutput: 3\nExplanation:\nValid combinations are: \n2,3,4 (using the first 2)\n2,3,4 (using the second 2)\n2,2,3\n\n\nNote:\n\n\nThe length of the given array won't exceed 1000.\nThe integers in the given array are in the range of [0, 1000]."},{"index":"617","url":"https://leetcode.com/problems/merge-two-binary-trees","title":"Merge Two Binary Trees","difficulty":"Easy","description":"Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not.\n\nYou need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.\n\nExample 1:\n\nInput: \n\tTree 1                     Tree 2                  \n          1                         2                             \n         / \\                       / \\                            \n        3   2                     1   3                        \n       /                           \\   \\                      \n      5                             4   7                  \nOutput: \nMerged tree:\n\t     3\n\t    / \\\n\t   4   5\n\t  / \\   \\ \n\t 5   4   7\n\n\n \n\nNote: The merging process must start from the root nodes of both trees."},{"index":"620","url":"https://leetcode.com/problems/not-boring-movies","title":"Not Boring Movies","difficulty":"Easy","description":"SQL Schema\nX city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies’ ratings and descriptions.\n\nPlease write a SQL query to output movies with an odd numbered ID and a description that is not 'boring'. Order the result by rating.\n\n \n\nFor example, table cinema:\n\n+---------+-----------+--------------+-----------+\n|   id    | movie     |  description |  rating   |\n+---------+-----------+--------------+-----------+\n|   1     | War       |   great 3D   |   8.9     |\n|   2     | Science   |   fiction    |   8.5     |\n|   3     | irish     |   boring     |   6.2     |\n|   4     | Ice song  |   Fantacy    |   8.6     |\n|   5     | House card|   Interesting|   9.1     |\n+---------+-----------+--------------+-----------+\n\nFor the example above, the output should be:\n+---------+-----------+--------------+-----------+\n|   id    | movie     |  description |  rating   |\n+---------+-----------+--------------+-----------+\n|   5     | House card|   Interesting|   9.1     |\n|   1     | War       |   great 3D   |   8.9     |\n+---------+-----------+--------------+-----------+\n\n\n "},{"index":"621","url":"https://leetcode.com/problems/task-scheduler","title":"Task Scheduler","difficulty":"Medium","description":"Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.\n\nHowever, there is a non-negative integer n that represents the cooldown period between two same tasks (the same letter in the array), that is that there must be at least n units of time between any two same tasks.\n\nReturn the least number of units of times that the CPU will take to finish all the given tasks.\n\n \n\nExample 1:\n\nInput: tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2\nOutput: 8\nExplanation: \nA -> B -> idle -> A -> B -> idle -> A -> B\nThere is at least 2 units of time between any two same tasks.\n\n\nExample 2:\n\nInput: tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 0\nOutput: 6\nExplanation: On this case any permutation of size 6 would work since n = 0.\n[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"]\n[\"A\",\"B\",\"A\",\"B\",\"A\",\"B\"]\n[\"B\",\"B\",\"B\",\"A\",\"A\",\"A\"]\n...\nAnd so on.\n\n\nExample 3:\n\nInput: tasks = [\"A\",\"A\",\"A\",\"A\",\"A\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\"], n = 2\nOutput: 16\nExplanation: \nOne possible solution is\nA -> B -> C -> A -> D -> E -> A -> F -> G -> A -> idle -> idle -> A -> idle -> idle -> A\n\n\n \n\nConstraints:\n\n1 <= task.length <= 104\ntasks[i] is upper-case English letter.\nThe integer n is in the range [0, 100]."},{"index":"622","url":"https://leetcode.com/problems/design-circular-queue","title":"Design Circular Queue","difficulty":"Medium","description":"Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the last position is connected back to the first position to make a circle. It is also called \"Ring Buffer\".\n\nOne of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.\n\nYour implementation should support following operations:\n\nMyCircularQueue(k): Constructor, set the size of the queue to be k.\nFront: Get the front item from the queue. If the queue is empty, return -1.\nRear: Get the last item from the queue. If the queue is empty, return -1.\nenQueue(value): Insert an element into the circular queue. Return true if the operation is successful.\ndeQueue(): Delete an element from the circular queue. Return true if the operation is successful.\nisEmpty(): Checks whether the circular queue is empty or not.\nisFull(): Checks whether the circular queue is full or not.\n\n \n\nExample:\n\nMyCircularQueue circularQueue = new MyCircularQueue(3); // set the size to be 3\ncircularQueue.enQueue(1);  // return true\ncircularQueue.enQueue(2);  // return true\ncircularQueue.enQueue(3);  // return true\ncircularQueue.enQueue(4);  // return false, the queue is full\ncircularQueue.Rear();  // return 3\ncircularQueue.isFull();  // return true\ncircularQueue.deQueue();  // return true\ncircularQueue.enQueue(4);  // return true\ncircularQueue.Rear();  // return 4\n\n \n\nNote:\n\nAll values will be in the range of [0, 1000].\nThe number of operations will be in the range of [1, 1000].\nPlease do not use the built-in Queue library."},{"index":"623","url":"https://leetcode.com/problems/add-one-row-to-tree","title":"Add One Row to Tree","difficulty":"Medium","description":"Given the root of a binary tree, then value v and depth d, you need to add a row of nodes with value v at the given depth d. The root node is at depth 1.\n\nThe adding rule is: given a positive integer depth d, for each NOT null tree nodes N in depth d-1, create two tree nodes with value v as N's left subtree root and right subtree root. And N's original left subtree should be the left subtree of the new left subtree root, its original right subtree should be the right subtree of the new right subtree root. If depth d is 1 that means there is no depth d-1 at all, then create a tree node with value v as the new root of the whole original tree, and the original tree is the new root's left subtree.\n\nExample 1:\n\n\nInput: \nA binary tree as following:\n       4\n     /   \\\n    2     6\n   / \\   / \n  3   1 5   \n\nv = 1\n\nd = 2\n\nOutput: \n       4\n      / \\\n     1   1\n    /     \\\n   2       6\n  / \\     / \n 3   1   5   \n\n\n\nExample 2:\n\n\nInput: \nA binary tree as following:\n      4\n     /   \n    2    \n   / \\   \n  3   1    \n\nv = 1\n\nd = 3\n\nOutput: \n      4\n     /   \n    2\n   / \\    \n  1   1\n /     \\  \n3       1\n\n\nNote:\n\n\nThe given d is in range [1, maximum depth of the given tree + 1].\nThe given binary tree has at least one tree node."},{"index":"626","url":"https://leetcode.com/problems/exchange-seats","title":"Exchange Seats","difficulty":"Medium","description":"SQL Schema\n\nMary is a teacher in a middle school and she has a table seat storing students' names and their corresponding seat ids.\n\nThe column id is continuous increment.\n\n \n\nMary wants to change seats for the adjacent students.\n\n \n\nCan you write a SQL query to output the result for Mary?\n\n \n\n+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Abbot   |\n|    2    | Doris   |\n|    3    | Emerson |\n|    4    | Green   |\n|    5    | Jeames  |\n+---------+---------+\n\nFor the sample input, the output is:\n\n \n\n+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Doris   |\n|    2    | Abbot   |\n|    3    | Green   |\n|    4    | Emerson |\n|    5    | Jeames  |\n+---------+---------+\n\n\nNote:\nIf the number of students is odd, there is no need to change the last one's seat."},{"index":"627","url":"https://leetcode.com/problems/swap-salary","title":"Swap Salary","difficulty":"Easy","description":"SQL Schema\n\nGiven a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update statement and no intermediate temp table.\n\nNote that you must write a single update statement, DO NOT write any select statement for this problem.\n\n \n\nExample:\n\n| id | name | sex | salary |\n|----|------|-----|--------|\n| 1  | A    | m   | 2500   |\n| 2  | B    | f   | 1500   |\n| 3  | C    | m   | 5500   |\n| 4  | D    | f   | 500    |\n\nAfter running your update statement, the above salary table should have the following rows:\n| id | name | sex | salary |\n|----|------|-----|--------|\n| 1  | A    | f   | 2500   |\n| 2  | B    | m   | 1500   |\n| 3  | C    | f   | 5500   |\n| 4  | D    | m   | 500    |\n"},{"index":"628","url":"https://leetcode.com/problems/maximum-product-of-three-numbers","title":"Maximum Product of Three Numbers","difficulty":"Easy","description":"Given an integer array nums, find three numbers whose product is maximum and return the maximum product.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3]\nOutput: 6\n\n\nExample 2:\n\nInput: nums = [1,2,3,4]\nOutput: 24\n\n\nExample 3:\n\nInput: nums = [-1,-2,-3]\nOutput: -6\n\n\n \n\nConstraints:\n\n3 <= nums.length <= 104\n-1000 <= nums[i] <= 1000"},{"index":"629","url":"https://leetcode.com/problems/k-inverse-pairs-array","title":"K Inverse Pairs Array","difficulty":"Hard","description":"Given two integers n and k, find how many different arrays consist of numbers from 1 to n such that there are exactly k inverse pairs.\n\nWe define an inverse pair as following: For ith and jth element in the array, if i < j and a[i] > a[j] then it's an inverse pair; Otherwise, it's not.\n\nSince the answer may be very large, the answer should be modulo 109 + 7.\n\nExample 1:\n\nInput: n = 3, k = 0\nOutput: 1\nExplanation: \nOnly the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pair.\n\n\n \n\nExample 2:\n\nInput: n = 3, k = 1\nOutput: 2\nExplanation: \nThe array [1,3,2] and [2,1,3] have exactly 1 inverse pair.\n\n\n \n\nNote:\n\nThe integer n is in the range [1, 1000] and k is in the range [0, 1000].\n\n "},{"index":"630","url":"https://leetcode.com/problems/course-schedule-iii","title":"Course Schedule III","difficulty":"Hard","description":"There are n different online courses numbered from 1 to n. Each course has some duration(course length) t and closed on dth day. A course should be taken continuously for t days and must be finished before or on the dth day. You will start at the 1st day.\n\nGiven n online courses represented by pairs (t,d), your task is to find the maximal number of courses that can be taken.\n\nExample:\n\nInput: [[100, 200], [200, 1300], [1000, 1250], [2000, 3200]]\nOutput: 3\nExplanation: \nThere're totally 4 courses, but you can take 3 courses at most:\nFirst, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.\nSecond, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day. \nThird, take the 2nd course, it costs 200 days so you will finish it on the 1300th day. \nThe 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.\n\n\n \n\nNote:\n\nThe integer 1 <= d, t, n <= 10,000.\nYou can't take two courses simultaneously.\n\n "},{"index":"632","url":"https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists","title":"Smallest Range Covering Elements from K Lists","difficulty":"Hard","description":"You have k lists of sorted integers in non-decreasing order. Find the smallest range that includes at least one number from each of the k lists.\n\nWe define the range [a, b] is smaller than range [c, d] if b - a < d - c or a < c if b - a == d - c.\n\n \n\nExample 1:\n\nInput: nums = [[4,10,15,24,26],[0,9,12,20],[5,18,22,30]]\nOutput: [20,24]\nExplanation: \nList 1: [4, 10, 15, 24,26], 24 is in range [20,24].\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\nList 3: [5, 18, 22, 30], 22 is in range [20,24].\n\n\nExample 2:\n\nInput: nums = [[1,2,3],[1,2,3],[1,2,3]]\nOutput: [1,1]\n\n\nExample 3:\n\nInput: nums = [[10,10],[11,11]]\nOutput: [10,11]\n\n\nExample 4:\n\nInput: nums = [[10],[11]]\nOutput: [10,11]\n\n\nExample 5:\n\nInput: nums = [[1],[2],[3],[4],[5],[6],[7]]\nOutput: [1,7]\n\n\n \n\nConstraints:\n\nnums.length == k\n1 <= k <= 3500\n1 <= nums[i].length <= 50\n-105 <= nums[i][j] <= 105\nnums[i] is sorted in non-decreasing order."},{"index":"633","url":"https://leetcode.com/problems/sum-of-square-numbers","title":"Sum of Square Numbers","difficulty":"Medium","description":"Given a non-negative integer c, decide whether there're two integers a and b such that a2 + b2 = c.\n\n \n\nExample 1:\n\nInput: c = 5\nOutput: true\nExplanation: 1 * 1 + 2 * 2 = 5\n\n\nExample 2:\n\nInput: c = 3\nOutput: false\n\n\nExample 3:\n\nInput: c = 4\nOutput: true\n\n\nExample 4:\n\nInput: c = 2\nOutput: true\n\n\nExample 5:\n\nInput: c = 1\nOutput: true\n\n\n \n\nConstraints:\n\n0 <= c <= 231 - 1"},{"index":"636","url":"https://leetcode.com/problems/exclusive-time-of-functions","title":"Exclusive Time of Functions","difficulty":"Medium","description":"On a single-threaded CPU, we execute a program containing n functions. Each function has a unique ID between 0 and n-1.\n\nFunction calls are stored in a call stack: when a function call starts, its ID is pushed onto the stack, and when a function call ends, its ID is popped off the stack. The function whose ID is at the top of the stack is the current function being executed. Each time a function starts or ends, we write a log with the ID, whether it started or ended, and the timestamp.\n\nYou are given a list logs, where logs[i] represents the ith log message formatted as a string \"{function_id}:{\"start\" | \"end\"}:{timestamp}\". For example, \"0:start:3\" means a function call with function ID 0 started at the beginning of timestamp 3, and \"1:end:2\" means a function call with function ID 1 ended at the end of timestamp 2. Note that a function can be called multiple times, possibly recursively.\n\nA function's exclusive time is the sum of execution times for all function calls in the program. For example, if a function is called twice, one call executing for 2 time units and another call executing for 1 time unit, the exclusive time is 2 + 1 = 3.\n\nReturn the exclusive time of each function in an array, where the value at the ith index represents the exclusive time for the function with ID i.\n\n \n\nExample 1:\n\nInput: n = 2, logs = [\"0:start:0\",\"1:start:2\",\"1:end:5\",\"0:end:6\"]\nOutput: [3,4]\nExplanation:\nFunction 0 starts at the beginning of time 0, then it executes 2 for units of time and reaches the end of time 1.\nFunction 1 starts at the beginning of time 2, executes for 4 units of time, and ends at the end of time 5.\nFunction 0 resumes execution at the beginning of time 6 and executes for 1 unit of time.\nSo function 0 spends 2 + 1 = 3 units of total time executing, and function 1 spends 4 units of total time executing.\n\n\nExample 2:\n\nInput: n = 1, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"0:start:6\",\"0:end:6\",\"0:end:7\"]\nOutput: [8]\nExplanation:\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls itself again.\nFunction 0 (2nd recursive call) starts at the beginning of time 6 and executes for 1 unit of time.\nFunction 0 (initial call) resumes execution at the beginning of time 7 and executes for 1 unit of time.\nSo function 0 spends 2 + 4 + 1 + 1 = 8 units of total time executing.\n\n\nExample 3:\n\nInput: n = 2, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"1:start:6\",\"1:end:6\",\"0:end:7\"]\nOutput: [7,1]\nExplanation:\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls function 1.\nFunction 1 starts at the beginning of time 6, executes 1 units of time, and ends at the end of time 6.\nFunction 0 resumes execution at the beginning of time 6 and executes for 2 units of time.\nSo function 0 spends 2 + 4 + 1 = 7 units of total time executing, and function 1 spends 1 unit of total time executing.\n\n\nExample 4:\n\nInput: n = 2, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"1:start:7\",\"1:end:7\",\"0:end:8\"]\nOutput: [8,1]\n\n\nExample 5:\n\nInput: n = 1, logs = [\"0:start:0\",\"0:end:0\"]\nOutput: [1]\n\n\n \n\nConstraints:\n\n1 <= n <= 100\n1 <= logs.length <= 500\n0 <= function_id < n\n0 <= timestamp <= 109\nNo two start events will happen at the same timestamp.\nNo two end events will happen at the same timestamp.\nEach function has an \"end\" log for each \"start\" log."},{"index":"637","url":"https://leetcode.com/problems/average-of-levels-in-binary-tree","title":"Average of Levels in Binary Tree","difficulty":"Easy","description":"Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.\n\nExample 1:\n\n\nInput:\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\nOutput: [3, 14.5, 11]\nExplanation:\nThe average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].\n\n\nNote:\n\n\nThe range of node's value is in the range of 32-bit signed integer."},{"index":"638","url":"https://leetcode.com/problems/shopping-offers","title":"Shopping Offers","difficulty":"Medium","description":"In LeetCode Store, there are some kinds of items to sell. Each item has a price.\n\nHowever, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\n\nYou are given the each item's price, a set of special offers, and the number we need to buy for each item. The job is to output the lowest price you have to pay for exactly certain items as given, where you could make optimal use of the special offers.\n\nEach special offer is represented in the form of an array, the last number represents the price you need to pay for this special offer, other numbers represents how many specific items you could get if you buy this offer.\n\nYou could use any of special offers as many times as you want.\n\nExample 1:\n\n\nInput: [2,5], [[3,0,5],[1,2,10]], [3,2]\nOutput: 14\nExplanation: \nThere are two kinds of items, A and B. Their prices are $2 and $5 respectively. \nIn special offer 1, you can pay $5 for 3A and 0B\nIn special offer 2, you can pay $10 for 1A and 2B. \nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\n\n\nExample 2:\n\n\nInput: [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\nOutput: 11\nExplanation: \nThe price of A is $2, and $3 for B, $4 for C. \nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \nYou cannot add more items, though only $9 for 2A ,2B and 1C.\n\n\nNote:\n\n\nThere are at most 6 kinds of items, 100 special offers.\nFor each item, you need to buy at most 6 of them.\nYou are not allowed to buy more items than you want, even if that would lower the overall price."},{"index":"639","url":"https://leetcode.com/problems/decode-ways-ii","title":"Decode Ways II","difficulty":"Hard","description":"A message containing letters from A-Z is being encoded to numbers using the following mapping way:\n\n'A' -> 1\n'B' -> 2\n...\n'Z' -> 26\n\n\nBeyond that, now the encoded string can also contain the character '*', which can be treated as one of the numbers from 1 to 9.\n\nGiven the encoded message containing digits and the character '*', return the total number of ways to decode it.\n\nAlso, since the answer may be very large, you should return the output mod 109 + 7.\n\nExample 1:\n\n\nInput: \"*\"\nOutput: 9\nExplanation: The encoded message can be decoded to the string: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\".\n\n\nExample 2:\n\n\nInput: \"1*\"\nOutput: 9 + 9 = 18\n\n\nNote:\n\n\nThe length of the input string will fit in range [1, 105].\nThe input string will only contain the character '*' and digits '0' - '9'."},{"index":"640","url":"https://leetcode.com/problems/solve-the-equation","title":"Solve the Equation","difficulty":"Medium","description":"Solve a given equation and return the value of x in the form of string \"x=#value\". The equation contains only '+', '-' operation, the variable x and its coefficient.\n\nIf there is no solution for the equation, return \"No solution\".\n\nIf there are infinite solutions for the equation, return \"Infinite solutions\".\n\nIf there is exactly one solution for the equation, we ensure that the value of x is an integer.\n\nExample 1:\n\n\nInput: \"x+5-3+x=6+x-2\"\nOutput: \"x=2\"\n\n\nExample 2:\n\n\nInput: \"x=x\"\nOutput: \"Infinite solutions\"\n\n\nExample 3:\n\n\nInput: \"2x=x\"\nOutput: \"x=0\"\n\n\nExample 4:\n\n\nInput: \"2x+3x-6x=x+2\"\nOutput: \"x=-1\"\n\n\nExample 5:\n\n\nInput: \"x=x+2\"\nOutput: \"No solution\"\n"},{"index":"641","url":"https://leetcode.com/problems/design-circular-deque","title":"Design Circular Deque","difficulty":"Medium","description":"Design your implementation of the circular double-ended queue (deque).\n\nYour implementation should support following operations:\n\nMyCircularDeque(k): Constructor, set the size of the deque to be k.\ninsertFront(): Adds an item at the front of Deque. Return true if the operation is successful.\ninsertLast(): Adds an item at the rear of Deque. Return true if the operation is successful.\ndeleteFront(): Deletes an item from the front of Deque. Return true if the operation is successful.\ndeleteLast(): Deletes an item from the rear of Deque. Return true if the operation is successful.\ngetFront(): Gets the front item from the Deque. If the deque is empty, return -1.\ngetRear(): Gets the last item from Deque. If the deque is empty, return -1.\nisEmpty(): Checks whether Deque is empty or not. \nisFull(): Checks whether Deque is full or not.\n\n \n\nExample:\n\nMyCircularDeque circularDeque = new MycircularDeque(3); // set the size to be 3\ncircularDeque.insertLast(1);\t\t\t// return true\ncircularDeque.insertLast(2);\t\t\t// return true\ncircularDeque.insertFront(3);\t\t\t// return true\ncircularDeque.insertFront(4);\t\t\t// return false, the queue is full\ncircularDeque.getRear();  \t\t\t// return 2\ncircularDeque.isFull();\t\t\t\t// return true\ncircularDeque.deleteLast();\t\t\t// return true\ncircularDeque.insertFront(4);\t\t\t// return true\ncircularDeque.getFront();\t\t\t// return 4\n\n\n \n\nNote:\n\nAll values will be in the range of [0, 1000].\nThe number of operations will be in the range of [1, 1000].\nPlease do not use the built-in Deque library."},{"index":"643","url":"https://leetcode.com/problems/maximum-average-subarray-i","title":"Maximum Average Subarray I","difficulty":"Easy","description":"Given an array consisting of n integers, find the contiguous subarray of given length k that has the maximum average value. And you need to output the maximum average value.\n\nExample 1:\n\nInput: [1,12,-5,-6,50,3], k = 4\nOutput: 12.75\nExplanation: Maximum average is (12-5-6+50)/4 = 51/4 = 12.75\n\n\n \n\nNote:\n\n1 <= k <= n <= 30,000.\nElements of the given array will be in the range [-10,000, 10,000].\n\n "},{"index":"645","url":"https://leetcode.com/problems/set-mismatch","title":"Set Mismatch","difficulty":"Easy","description":"The set S originally contains numbers from 1 to n. But unfortunately, due to the data error, one of the numbers in the set got duplicated to another number in the set, which results in repetition of one number and loss of another number.\n\nGiven an array nums representing the data status of this set after the error. Your task is to firstly find the number occurs twice and then find the number that is missing. Return them in the form of an array.\n\nExample 1:\n\n\nInput: nums = [1,2,2,4]\nOutput: [2,3]\n\n\nNote:\n\n\nThe given array size will in the range [2, 10000].\nThe given array's numbers won't have any order."},{"index":"646","url":"https://leetcode.com/problems/maximum-length-of-pair-chain","title":"Maximum Length of Pair Chain","difficulty":"Medium","description":"You are given n pairs of numbers. In every pair, the first number is always smaller than the second number.\n\nNow, we define a pair (c, d) can follow another pair (a, b) if and only if b < c. Chain of pairs can be formed in this fashion.\n\nGiven a set of pairs, find the length longest chain which can be formed. You needn't use up all the given pairs. You can select pairs in any order.\n\nExample 1:\n\n\nInput: [[1,2], [2,3], [3,4]]\nOutput: 2\nExplanation: The longest chain is [1,2] -> [3,4]\n\n\nNote:\n\n\nThe number of given pairs will be in the range [1, 1000]."},{"index":"647","url":"https://leetcode.com/problems/palindromic-substrings","title":"Palindromic Substrings","difficulty":"Medium","description":"Given a string, your task is to count how many palindromic substrings in this string.\n\nThe substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters.\n\nExample 1:\n\nInput: \"abc\"\nOutput: 3\nExplanation: Three palindromic strings: \"a\", \"b\", \"c\".\n\n\n \n\nExample 2:\n\nInput: \"aaa\"\nOutput: 6\nExplanation: Six palindromic strings: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\".\n\n\n \n\nNote:\n\nThe input string length won't exceed 1000.\n\n "},{"index":"648","url":"https://leetcode.com/problems/replace-words","title":"Replace Words","difficulty":"Medium","description":"In English, we have a concept called root, which can be followed by some other word to form another longer word - let's call this word successor. For example, when the root \"an\" is followed by the successor word \"other\", we can form a new word \"another\".\n\nGiven a dictionary consisting of many roots and a sentence consisting of words separated by spaces, replace all the successors in the sentence with the root forming it. If a successor can be replaced by more than one root, replace it with the root that has the shortest length.\n\nReturn the sentence after the replacement.\n\n \n\nExample 1:\n\nInput: dictionary = [\"cat\",\"bat\",\"rat\"], sentence = \"the cattle was rattled by the battery\"\nOutput: \"the cat was rat by the bat\"\n\n\nExample 2:\n\nInput: dictionary = [\"a\",\"b\",\"c\"], sentence = \"aadsfasf absbs bbab cadsfafs\"\nOutput: \"a a b c\"\n\n\nExample 3:\n\nInput: dictionary = [\"a\", \"aa\", \"aaa\", \"aaaa\"], sentence = \"a aa a aaaa aaa aaa aaa aaaaaa bbb baba ababa\"\nOutput: \"a a a a a a a a bbb baba a\"\n\n\nExample 4:\n\nInput: dictionary = [\"catt\",\"cat\",\"bat\",\"rat\"], sentence = \"the cattle was rattled by the battery\"\nOutput: \"the cat was rat by the bat\"\n\n\nExample 5:\n\nInput: dictionary = [\"ac\",\"ab\"], sentence = \"it is abnormal that this solution is accepted\"\nOutput: \"it is ab that this solution is ac\"\n\n\n \n\nConstraints:\n\n1 <= dictionary.length <= 1000\n1 <= dictionary[i].length <= 100\ndictionary[i] consists of only lower-case letters.\n1 <= sentence.length <= 10^6\nsentence consists of only lower-case letters and spaces.\nThe number of words in sentence is in the range [1, 1000]\nThe length of each word in sentence is in the range [1, 1000]\nEach two consecutive words in sentence will be separated by exactly one space.\nsentence does not have leading or trailing spaces."},{"index":"649","url":"https://leetcode.com/problems/dota2-senate","title":"Dota2 Senate","difficulty":"Medium","description":"In the world of Dota2, there are two parties: the Radiant and the Dire.\n\nThe Dota2 senate consists of senators coming from two parties. Now the senate wants to make a decision about a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise one of the two rights:\n\nBan one senator's right:\nA senator can make another senator lose all his rights in this and all the following rounds.\nAnnounce the victory:\nIf this senator found the senators who still have rights to vote are all from the same party, he can announce the victory and make the decision about the change in the game.\n\n \n\nGiven a string representing each senator's party belonging. The character 'R' and 'D' represent the Radiant party and the Dire party respectively. Then if there are n senators, the size of the given string will be n.\n\nThe round-based procedure starts from the first senator to the last senator in the given order. This procedure will last until the end of voting. All the senators who have lost their rights will be skipped during the procedure.\n\nSuppose every senator is smart enough and will play the best strategy for his own party, you need to predict which party will finally announce the victory and make the change in the Dota2 game. The output should be Radiant or Dire.\n\nExample 1:\n\nInput: \"RD\"\nOutput: \"Radiant\"\nExplanation: The first senator comes from Radiant and he can just ban the next senator's right in the round 1. \nAnd the second senator can't exercise any rights any more since his right has been banned. \nAnd in the round 2, the first senator can just announce the victory since he is the only guy in the senate who can vote.\n\n\n \n\nExample 2:\n\nInput: \"RDD\"\nOutput: \"Dire\"\nExplanation: \nThe first senator comes from Radiant and he can just ban the next senator's right in the round 1. \nAnd the second senator can't exercise any rights anymore since his right has been banned. \nAnd the third senator comes from Dire and he can ban the first senator's right in the round 1. \nAnd in the round 2, the third senator can just announce the victory since he is the only guy in the senate who can vote.\n\n\n \n\nNote:\n\nThe length of the given string will in the range [1, 10,000].\n\n "},{"index":"650","url":"https://leetcode.com/problems/2-keys-keyboard","title":"2 Keys Keyboard","difficulty":"Medium","description":"Initially on a notepad only one character 'A' is present. You can perform two operations on this notepad for each step:\n\nCopy All: You can copy all the characters present on the notepad (partial copy is not allowed).\nPaste: You can paste the characters which are copied last time.\n\n \n\nGiven a number n. You have to get exactly n 'A' on the notepad by performing the minimum number of steps permitted. Output the minimum number of steps to get n 'A'.\n\nExample 1:\n\nInput: 3\nOutput: 3\nExplanation:\nIntitally, we have one character 'A'.\nIn step 1, we use Copy All operation.\nIn step 2, we use Paste operation to get 'AA'.\nIn step 3, we use Paste operation to get 'AAA'.\n\n\n \n\nNote:\n\nThe n will be in the range [1, 1000].\n\n "},{"index":"652","url":"https://leetcode.com/problems/find-duplicate-subtrees","title":"Find Duplicate Subtrees","difficulty":"Medium","description":"Given the root of a binary tree, return all duplicate subtrees.\n\nFor each kind of duplicate subtrees, you only need to return the root node of any one of them.\n\nTwo trees are duplicate if they have the same structure with the same node values.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,null,2,4,null,null,4]\nOutput: [[2,4],[4]]\n\n\nExample 2:\n\nInput: root = [2,1,1]\nOutput: [[1]]\n\n\nExample 3:\n\nInput: root = [2,2,2,3,null,3,null]\nOutput: [[2,3],[3]]\n\n\n \n\nConstraints:\n\nThe number of the nodes in the tree will be in the range [1, 10^4]\n-200 <= Node.val <= 200"},{"index":"653","url":"https://leetcode.com/problems/two-sum-iv-input-is-a-bst","title":"Two Sum IV - Input is a BST","difficulty":"Easy","description":"Given the root of a Binary Search Tree and a target number k, return true if there exist two elements in the BST such that their sum is equal to the given target.\n\n \n\nExample 1:\n\nInput: root = [5,3,6,2,4,null,7], k = 9\nOutput: true\n\n\nExample 2:\n\nInput: root = [5,3,6,2,4,null,7], k = 28\nOutput: false\n\n\nExample 3:\n\nInput: root = [2,1,3], k = 4\nOutput: true\n\n\nExample 4:\n\nInput: root = [2,1,3], k = 1\nOutput: false\n\n\nExample 5:\n\nInput: root = [2,1,3], k = 3\nOutput: true\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-104 <= Node.val <= 104\nroot is guaranteed to be a valid binary search tree.\n-105 <= k <= 105"},{"index":"654","url":"https://leetcode.com/problems/maximum-binary-tree","title":"Maximum Binary Tree","difficulty":"Medium","description":"Given an integer array with no duplicates. A maximum tree building on this array is defined as follow:\n\nThe root is the maximum number in the array.\nThe left subtree is the maximum tree constructed from left part subarray divided by the maximum number.\nThe right subtree is the maximum tree constructed from right part subarray divided by the maximum number.\n\nConstruct the maximum tree by the given array and output the root node of this tree.\n\nExample 1:\n\n\nInput: [3,2,1,6,0,5]\nOutput: return the tree root node representing the following tree:\n\n      6\n    /   \\\n   3     5\n    \\    / \n     2  0   \n       \\\n        1\n\n\nNote:\n\n\nThe size of the given array will be in the range [1,1000]."},{"index":"655","url":"https://leetcode.com/problems/print-binary-tree","title":"Print Binary Tree","difficulty":"Medium","description":"Print a binary tree in an m*n 2D string array following these rules:\n\nThe row number m should be equal to the height of the given binary tree.\nThe column number n should always be an odd number.\nThe root node's value (in string format) should be put in the exactly middle of the first row it can be put. The column and the row where the root node belongs will separate the rest space into two parts (left-bottom part and right-bottom part). You should print the left subtree in the left-bottom part and print the right subtree in the right-bottom part. The left-bottom part and the right-bottom part should have the same size. Even if one subtree is none while the other is not, you don't need to print anything for the none subtree but still need to leave the space as large as that for the other subtree. However, if two subtrees are none, then you don't need to leave space for both of them.\nEach unused space should contain an empty string \"\".\nPrint the subtrees following the same rules.\n\nExample 1:\n\n\nInput:\n     1\n    /\n   2\nOutput:\n[[\"\", \"1\", \"\"],\n [\"2\", \"\", \"\"]]\n\n\nExample 2:\n\n\nInput:\n     1\n    / \\\n   2   3\n    \\\n     4\nOutput:\n[[\"\", \"\", \"\", \"1\", \"\", \"\", \"\"],\n [\"\", \"2\", \"\", \"\", \"\", \"3\", \"\"],\n [\"\", \"\", \"4\", \"\", \"\", \"\", \"\"]]\n\n\nExample 3:\n\n\nInput:\n      1\n     / \\\n    2   5\n   / \n  3 \n / \n4 \nOutput:\n\n[[\"\",  \"\",  \"\", \"\",  \"\", \"\", \"\", \"1\", \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\n [\"\",  \"\",  \"\", \"2\", \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"5\", \"\", \"\", \"\"]\n [\"\",  \"3\", \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\n [\"4\", \"\",  \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]]\n\n\nNote: The height of binary tree is in the range of [1, 10]."},{"index":"657","url":"https://leetcode.com/problems/robot-return-to-origin","title":"Robot Return to Origin","difficulty":"Easy","description":"There is a robot starting at position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.\n\nThe move sequence is represented by a string, and the character moves[i] represents its ith move. Valid moves are R (right), L (left), U (up), and D (down). If the robot returns to the origin after it finishes all of its moves, return true. Otherwise, return false.\n\nNote: The way that the robot is \"facing\" is irrelevant. \"R\" will always make the robot move to the right once, \"L\" will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.\n\n \n\nExample 1:\n\nInput: moves = \"UD\"\nOutput: true\nExplanation: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.\n\n\nExample 2:\n\nInput: moves = \"LL\"\nOutput: false\nExplanation: The robot moves left twice. It ends up two \"moves\" to the left of the origin. We return false because it is not at the origin at the end of its moves.\n\n\nExample 3:\n\nInput: moves = \"RRDD\"\nOutput: false\n\n\nExample 4:\n\nInput: moves = \"LDRRLRUULR\"\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= moves.length <= 2 * 104\nmoves only contains the characters 'U', 'D', 'L' and 'R'."},{"index":"658","url":"https://leetcode.com/problems/find-k-closest-elements","title":"Find K Closest Elements","difficulty":"Medium","description":"Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.\n\nAn integer a is closer to x than an integer b if:\n\n|a - x| < |b - x|, or\n|a - x| == |b - x| and a < b\n\n \n\nExample 1:\n\nInput: arr = [1,2,3,4,5], k = 4, x = 3\nOutput: [1,2,3,4]\n\n\nExample 2:\n\nInput: arr = [1,2,3,4,5], k = 4, x = -1\nOutput: [1,2,3,4]\n\n\n \n\nConstraints:\n\n1 <= k <= arr.length\n1 <= arr.length <= 104\nAbsolute value of elements in the array and x will not exceed 104"},{"index":"659","url":"https://leetcode.com/problems/split-array-into-consecutive-subsequences","title":"Split Array into Consecutive Subsequences","difficulty":"Medium","description":"Given an array nums sorted in ascending order, return true if and only if you can split it into 1 or more subsequences such that each subsequence consists of consecutive integers and has length at least 3.\n\n \n\nExample 1:\n\nInput: [1,2,3,3,4,5]\nOutput: True\nExplanation:\nYou can split them into two consecutive subsequences : \n1, 2, 3\n3, 4, 5\n\n\nExample 2:\n\nInput: [1,2,3,3,4,4,5,5]\nOutput: True\nExplanation:\nYou can split them into two consecutive subsequences : \n1, 2, 3, 4, 5\n3, 4, 5\n\n\nExample 3:\n\nInput: [1,2,3,4,4,5]\nOutput: False\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10000\n\n "},{"index":"661","url":"https://leetcode.com/problems/image-smoother","title":"Image Smoother","difficulty":"Easy","description":"Given a 2D integer matrix M representing the gray scale of an image, you need to design a smoother to make the gray scale of each cell becomes the average gray scale (rounding down) of all the 8 surrounding cells and itself. If a cell has less than 8 surrounding cells, then use as many as you can.\n\nExample 1:\n\n\nInput:\n[[1,1,1],\n [1,0,1],\n [1,1,1]]\nOutput:\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\nExplanation:\nFor the point (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0\nFor the point (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0\nFor the point (1,1): floor(8/9) = floor(0.88888889) = 0\n\n\nNote:\n\n\nThe value in the given matrix is in the range of [0, 255].\nThe length and width of the given matrix are in the range of [1, 150]."},{"index":"662","url":"https://leetcode.com/problems/maximum-width-of-binary-tree","title":"Maximum Width of Binary Tree","difficulty":"Medium","description":"Given a binary tree, write a function to get the maximum width of the given tree. The maximum width of a tree is the maximum width among all levels.\n\nThe width of one level is defined as the length between the end-nodes (the leftmost and right most non-null nodes in the level, where the null nodes between the end-nodes are also counted into the length calculation.\n\nIt is guaranteed that the answer will in the range of 32-bit signed integer.\n\nExample 1:\n\nInput: \n\n           1\n         /   \\\n        3     2\n       / \\     \\  \n      5   3     9 \n\nOutput: 4\nExplanation: The maximum width existing in the third level with the length 4 (5,3,null,9).\n\n\nExample 2:\n\nInput: \n\n          1\n         /  \n        3    \n       / \\       \n      5   3     \n\nOutput: 2\nExplanation: The maximum width existing in the third level with the length 2 (5,3).\n\n\nExample 3:\n\nInput: \n\n          1\n         / \\\n        3   2 \n       /        \n      5      \n\nOutput: 2\nExplanation: The maximum width existing in the second level with the length 2 (3,2).\n\n\nExample 4:\n\nInput: \n\n          1\n         / \\\n        3   2\n       /     \\  \n      5       9 \n     /         \\\n    6           7\nOutput: 8\nExplanation:The maximum width existing in the fourth level with the length 8 (6,null,null,null,null,null,null,7).\n\n\n \n\nConstraints:\n\nThe given binary tree will have between 1 and 3000 nodes."},{"index":"664","url":"https://leetcode.com/problems/strange-printer","title":"Strange Printer","difficulty":"Hard","description":"There is a strange printer with the following two special requirements:\n\nThe printer can only print a sequence of the same character each time.\nAt each turn, the printer can print new characters starting from and ending at any places, and will cover the original existing characters.\n\nGiven a string consists of lower English letters only, your job is to count the minimum number of turns the printer needed in order to print it.\n\nExample 1:\n\n\nInput: \"aaabbb\"\nOutput: 2\nExplanation: Print \"aaa\" first and then print \"bbb\".\n\n\nExample 2:\n\n\nInput: \"aba\"\nOutput: 2\nExplanation: Print \"aaa\" first and then print \"b\" from the second place of the string, which will cover the existing character 'a'.\n\n\nHint: Length of the given string will not exceed 100."},{"index":"665","url":"https://leetcode.com/problems/non-decreasing-array","title":"Non-decreasing Array","difficulty":"Easy","description":"Given an array nums with n integers, your task is to check if it could become non-decreasing by modifying at most 1 element.\n\nWe define an array is non-decreasing if nums[i] <= nums[i + 1] holds for every i (0-based) such that (0 <= i <= n - 2).\n\n \n\nExample 1:\n\nInput: nums = [4,2,3]\nOutput: true\nExplanation: You could modify the first 4 to 1 to get a non-decreasing array.\n\n\nExample 2:\n\nInput: nums = [4,2,1]\nOutput: false\nExplanation: You can't get a non-decreasing array by modify at most one element.\n\n\n \n\nConstraints:\n\n1 <= n <= 10 ^ 4\n- 10 ^ 5 <= nums[i] <= 10 ^ 5"},{"index":"667","url":"https://leetcode.com/problems/beautiful-arrangement-ii","title":"Beautiful Arrangement II","difficulty":"Medium","description":"Given two integers n and k, you need to construct a list which contains n different positive integers ranging from 1 to n and obeys the following requirement:\nSuppose this list is [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers.\n\nIf there are multiple answers, print any of them.\n\nExample 1:\n\n\nInput: n = 3, k = 1\nOutput: [1, 2, 3]\nExplanation: The [1, 2, 3] has three different positive integers ranging from 1 to 3, and the [1, 1] has exactly 1 distinct integer: 1.\n\n\nExample 2:\n\n\nInput: n = 3, k = 2\nOutput: [1, 3, 2]\nExplanation: The [1, 3, 2] has three different positive integers ranging from 1 to 3, and the [2, 1] has exactly 2 distinct integers: 1 and 2.\n\n\nNote:\n\n\nThe n and k are in the range 1 <= k < n <= 104."},{"index":"668","url":"https://leetcode.com/problems/kth-smallest-number-in-multiplication-table","title":"Kth Smallest Number in Multiplication Table","difficulty":"Hard","description":"Nearly every one have used the Multiplication Table. But could you find out the k-th smallest number quickly from the multiplication table?\n\nGiven the height m and the length n of a m * n Multiplication Table, and a positive integer k, you need to return the k-th smallest number in this table.\n\nExample 1:\n\n\nInput: m = 3, n = 3, k = 5\nOutput: \nExplanation: \nThe Multiplication Table:\n1\t2\t3\n2\t4\t6\n3\t6\t9\n\nThe 5-th smallest number is 3 (1, 2, 2, 3, 3).\n\n\nExample 2:\n\n\nInput: m = 2, n = 3, k = 6\nOutput: \nExplanation: \nThe Multiplication Table:\n1\t2\t3\n2\t4\t6\n\nThe 6-th smallest number is 6 (1, 2, 2, 3, 4, 6).\n\n\nNote:\n\n\nThe m and n will be in the range [1, 30000].\nThe k will be in the range [1, m * n]"},{"index":"669","url":"https://leetcode.com/problems/trim-a-binary-search-tree","title":"Trim a Binary Search Tree","difficulty":"Easy","description":"Given the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. Trimming the tree should not change the relative structure of the elements that will remain in the tree (i.e., any node's descendant should remain a descendant). It can be proven that there is a unique answer.\n\nReturn the root of the trimmed binary search tree. Note that the root may change depending on the given bounds.\n\n \n\nExample 1:\n\nInput: root = [1,0,2], low = 1, high = 2\nOutput: [1,null,2]\n\n\nExample 2:\n\nInput: root = [3,0,4,null,2,null,null,1], low = 1, high = 3\nOutput: [3,2,null,1]\n\n\nExample 3:\n\nInput: root = [1], low = 1, high = 2\nOutput: [1]\n\n\nExample 4:\n\nInput: root = [1,null,2], low = 1, high = 3\nOutput: [1,null,2]\n\n\nExample 5:\n\nInput: root = [1,null,2], low = 2, high = 4\nOutput: [2]\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree in the range [1, 104].\n0 <= Node.val <= 104\nThe value of each node in the tree is unique.\nroot is guaranteed to be a valid binary search tree.\n0 <= low <= high <= 104"},{"index":"670","url":"https://leetcode.com/problems/maximum-swap","title":"Maximum Swap","difficulty":"Medium","description":"Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.\n\nExample 1:\n\n\nInput: 2736\nOutput: 7236\nExplanation: Swap the number 2 and the number 7.\n\n\nExample 2:\n\n\nInput: 9973\nOutput: 9973\nExplanation: No swap.\n\n\nNote:\n\n\nThe given number is in the range [0, 108]"},{"index":"671","url":"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree","title":"Second Minimum Node In a Binary Tree","difficulty":"Easy","description":"Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. More formally, the property root.val = min(root.left.val, root.right.val) always holds.\n\nGiven such a binary tree, you need to output the second minimum value in the set made of all the nodes' value in the whole tree.\n\nIf no such second minimum value exists, output -1 instead.\n\n \n\n \n\nExample 1:\n\nInput: root = [2,2,5,null,null,5,7]\nOutput: 5\nExplanation: The smallest value is 2, the second smallest value is 5.\n\n\nExample 2:\n\nInput: root = [2,2,2]\nOutput: -1\nExplanation: The smallest value is 2, but there isn't any second smallest value.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 25].\n1 <= Node.val <= 231 - 1\nroot.val == min(root.left.val, root.right.val) for each internal node of the tree."},{"index":"672","url":"https://leetcode.com/problems/bulb-switcher-ii","title":"Bulb Switcher II","difficulty":"Medium","description":"There is a room with n lights which are turned on initially and 4 buttons on the wall. After performing exactly m unknown operations towards buttons, you need to return how many different kinds of status of the n lights could be.\n\nSuppose n lights are labeled as number [1, 2, 3 ..., n], function of these 4 buttons are given below:\n\nFlip all the lights.\nFlip lights with even numbers.\nFlip lights with odd numbers.\nFlip lights with (3k + 1) numbers, k = 0, 1, 2, ...\n\n \n\nExample 1:\n\nInput: n = 1, m = 1.\nOutput: 2\nExplanation: Status can be: [on], [off]\n\n\n \n\nExample 2:\n\nInput: n = 2, m = 1.\nOutput: 3\nExplanation: Status can be: [on, off], [off, on], [off, off]\n\n\n \n\nExample 3:\n\nInput: n = 3, m = 1.\nOutput: 4\nExplanation: Status can be: [off, on, off], [on, off, on], [off, off, off], [off, on, on].\n\n\n \n\nNote: n and m both fit in range [0, 1000]."},{"index":"673","url":"https://leetcode.com/problems/number-of-longest-increasing-subsequence","title":"Number of Longest Increasing Subsequence","difficulty":"Medium","description":"Given an integer array nums, return the number of longest increasing subsequences.\n\nNotice that the sequence has to be strictly increasing.\n\n \n\nExample 1:\n\nInput: nums = [1,3,5,4,7]\nOutput: 2\nExplanation: The two longest increasing subsequences are [1, 3, 4, 7] and [1, 3, 5, 7].\n\n\nExample 2:\n\nInput: nums = [2,2,2,2,2]\nOutput: 5\nExplanation: The length of longest continuous increasing subsequence is 1, and there are 5 subsequences' length is 1, so output 5.\n\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 2000\n-106 <= nums[i] <= 106"},{"index":"674","url":"https://leetcode.com/problems/longest-continuous-increasing-subsequence","title":"Longest Continuous Increasing Subsequence","difficulty":"Easy","description":"Given an unsorted array of integers nums, return the length of the longest continuous increasing subsequence (i.e. subarray). The subsequence must be strictly increasing.\n\nA continuous increasing subsequence is defined by two indices l and r (l < r) such that it is [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] and for each l <= i < r, nums[i] < nums[i + 1].\n\n \n\nExample 1:\n\nInput: nums = [1,3,5,4,7]\nOutput: 3\nExplanation: The longest continuous increasing subsequence is [1,3,5] with length 3.\nEven though [1,3,5,7] is an increasing subsequence, it is not continuous as elements 5 and 7 are separated by element\n4.\n\n\nExample 2:\n\nInput: nums = [2,2,2,2,2]\nOutput: 1\nExplanation: The longest continuous increasing subsequence is [2] with length 1. Note that it must be strictly\nincreasing.\n\n\n \n\nConstraints:\n\n0 <= nums.length <= 104\n-109 <= nums[i] <= 109"},{"index":"675","url":"https://leetcode.com/problems/cut-off-trees-for-golf-event","title":"Cut Off Trees for Golf Event","difficulty":"Hard","description":"You are asked to cut off trees in a forest for a golf event. The forest is represented as a non-negative 2D map, in this map:\n\n0 represents the obstacle can't be reached.\n1 represents the ground can be walked through.\nThe place with number bigger than 1 represents a tree can be walked through, and this positive number represents the tree's height.\n\nIn one step you can walk in any of the four directions top, bottom, left and right also when standing in a point which is a tree you can decide whether or not to cut off the tree.\n\nYou are asked to cut off all the trees in this forest in the order of tree's height - always cut off the tree with lowest height first. And after cutting, the original place has the tree will become a grass (value 1).\n\nYou will start from the point (0, 0) and you should output the minimum steps you need to walk to cut off all the trees. If you can't cut off all the trees, output -1 in that situation.\n\nYou are guaranteed that no two trees have the same height and there is at least one tree needs to be cut off.\n\nExample 1:\n\nInput: \n[\n [1,2,3],\n [0,0,4],\n [7,6,5]\n]\nOutput: 6\n\n\n \n\nExample 2:\n\nInput: \n[\n [1,2,3],\n [0,0,0],\n [7,6,5]\n]\nOutput: -1\n\n\n \n\nExample 3:\n\nInput: \n[\n [2,3,4],\n [0,0,5],\n [8,7,6]\n]\nOutput: 6\nExplanation: You started from the point (0,0) and you can cut off the tree in (0,0) directly without walking.\n\n\n \n\nConstraints:\n\n1 <= forest.length <= 50\n1 <= forest[i].length <= 50\n0 <= forest[i][j] <= 10^9"},{"index":"676","url":"https://leetcode.com/problems/implement-magic-dictionary","title":"Implement Magic Dictionary","difficulty":"Medium","description":"Design a data structure that is initialized with a list of different words. Provided a string, you should determine if you can change exactly one character in this string to match any word in the data structure.\n\nImplement the MagicDictionary class:\n\nMagicDictionary() Initializes the object.\nvoid buildDict(String[] dictionary) Sets the data structure with an array of distinct strings dictionary.\nbool search(String searchWord) Returns true if you can change exactly one character in searchWord to match any string in the data structure, otherwise returns false.\n\n \n\nExample 1:\n\nInput\n[\"MagicDictionary\", \"buildDict\", \"search\", \"search\", \"search\", \"search\"]\n[[], [[\"hello\", \"leetcode\"]], [\"hello\"], [\"hhllo\"], [\"hell\"], [\"leetcoded\"]]\nOutput\n[null, null, false, true, false, false]\n\nExplanation\nMagicDictionary magicDictionary = new MagicDictionary();\nmagicDictionary.buildDict([\"hello\", \"leetcode\"]);\nmagicDictionary.search(\"hello\"); // return False\nmagicDictionary.search(\"hhllo\"); // We can change the second 'h' to 'e' to match \"hello\" so we return True\nmagicDictionary.search(\"hell\"); // return False\nmagicDictionary.search(\"leetcoded\"); // return False\n\n\n \n\nConstraints:\n\n1 <= dictionary.length <= 100\n1 <= dictionary[i].length <= 100\ndictionary[i] consists of only lower-case English letters.\nAll the strings in dictionary are distinct.\n1 <= searchWord.length <= 100\nsearchWord consists of only lower-case English letters.\nbuildDict will be called only once before search.\nAt most 100 calls will be made to search."},{"index":"677","url":"https://leetcode.com/problems/map-sum-pairs","title":"Map Sum Pairs","difficulty":"Medium","description":"Implement the MapSum class:\n\nMapSum() Initializes the MapSum object.\nvoid insert(String key, int val) Inserts the key-val pair into the map. If the key already existed, the original key-value pair will be overridden to the new one.\nint sum(string prefix) Returns the sum of all the pairs' value whose key starts with the prefix.\n\n \n\nExample 1:\n\nInput\n[\"MapSum\", \"insert\", \"sum\", \"insert\", \"sum\"]\n[[], [\"apple\", 3], [\"ap\"], [\"app\", 2], [\"ap\"]]\nOutput\n[null, null, 3, null, 5]\n\nExplanation\nMapSum mapSum = new MapSum();\nmapSum.insert(\"apple\", 3);  \nmapSum.sum(\"ap\");           // return 3 (apple = 3)\nmapSum.insert(\"app\", 2);    \nmapSum.sum(\"ap\");           // return 5 (apple + app = 3 + 2 = 5)\n\n\n \n\nConstraints:\n\n1 <= key.length, prefix.length <= 50\nkey and prefix consist of only lowercase English letters.\n1 <= val <= 1000\nAt most 50 calls will be made to insert and sum."},{"index":"678","url":"https://leetcode.com/problems/valid-parenthesis-string","title":"Valid Parenthesis String","difficulty":"Medium","description":"Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:\n\nAny left parenthesis '(' must have a corresponding right parenthesis ')'.\nAny right parenthesis ')' must have a corresponding left parenthesis '('.\nLeft parenthesis '(' must go before the corresponding right parenthesis ')'.\n'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.\nAn empty string is also valid.\n\nExample 1:\n\n\nInput: \"()\"\nOutput: True\n\n\nExample 2:\n\n\nInput: \"(*)\"\nOutput: True\n\n\nExample 3:\n\n\nInput: \"(*))\"\nOutput: True\n\n\nNote:\n\n\nThe string size will be in the range [1, 100]."},{"index":"679","url":"https://leetcode.com/problems/24-game","title":"24 Game","difficulty":"Hard","description":"You have 4 cards each containing a number from 1 to 9. You need to judge whether they could operated through *, /, +, -, (, ) to get the value of 24.\n\nExample 1:\n\n\nInput: [4, 1, 8, 7]\nOutput: True\nExplanation: (8-4) * (7-1) = 24\n\n\nExample 2:\n\n\nInput: [1, 2, 1, 2]\nOutput: False\n\n\nNote:\n\n\nThe division operator / represents real division, not integer division. For example, 4 / (1 - 2/3) = 12.\nEvery operation done is between two numbers. In particular, we cannot use - as a unary operator. For example, with [1, 1, 1, 1] as input, the expression -1 - 1 - 1 - 1 is not allowed.\nYou cannot concatenate numbers together. For example, if the input is [1, 2, 1, 2], we cannot write this as 12 + 12."},{"index":"680","url":"https://leetcode.com/problems/valid-palindrome-ii","title":"Valid Palindrome II","difficulty":"Easy","description":"Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.\n\nExample 1:\n\n\nInput: \"aba\"\nOutput: True\n\n\nExample 2:\n\n\nInput: \"abca\"\nOutput: True\nExplanation: You could delete the character 'c'.\n\n\nNote:\n\n\nThe string will only contain lowercase characters a-z. The maximum length of the string is 50000."},{"index":"682","url":"https://leetcode.com/problems/baseball-game","title":"Baseball Game","difficulty":"Easy","description":"You are keeping score for a baseball game with strange rules. The game consists of several rounds, where the scores of past rounds may affect future rounds' scores.\n\nAt the beginning of the game, you start with an empty record. You are given a list of strings ops, where ops[i] is the ith operation you must apply to the record and is one of the following:\n\nAn integer x - Record a new score of x.\n\"+\" - Record a new score that is the sum of the previous two scores. It is guaranteed there will always be two previous scores.\n\"D\" - Record a new score that is double the previous score. It is guaranteed there will always be a previous score.\n\"C\" - Invalidate the previous score, removing it from the record. It is guaranteed there will always be a previous score.\n\nReturn the sum of all the scores on the record.\n\n \n\nExample 1:\n\nInput: ops = [\"5\",\"2\",\"C\",\"D\",\"+\"]\nOutput: 30\nExplanation:\n\"5\" - Add 5 to the record, record is now [5].\n\"2\" - Add 2 to the record, record is now [5, 2].\n\"C\" - Invalidate and remove the previous score, record is now [5].\n\"D\" - Add 2 * 5 = 10 to the record, record is now [5, 10].\n\"+\" - Add 5 + 10 = 15 to the record, record is now [5, 10, 15].\nThe total sum is 5 + 10 + 15 = 30.\n\n\nExample 2:\n\nInput: ops = [\"5\",\"-2\",\"4\",\"C\",\"D\",\"9\",\"+\",\"+\"]\nOutput: 27\nExplanation:\n\"5\" - Add 5 to the record, record is now [5].\n\"-2\" - Add -2 to the record, record is now [5, -2].\n\"4\" - Add 4 to the record, record is now [5, -2, 4].\n\"C\" - Invalidate and remove the previous score, record is now [5, -2].\n\"D\" - Add 2 * -2 = -4 to the record, record is now [5, -2, -4].\n\"9\" - Add 9 to the record, record is now [5, -2, -4, 9].\n\"+\" - Add -4 + 9 = 5 to the record, record is now [5, -2, -4, 9, 5].\n\"+\" - Add 9 + 5 = 14 to the record, record is now [5, -2, -4, 9, 5, 14].\nThe total sum is 5 + -2 + -4 + 9 + 5 + 14 = 27.\n\n\nExample 3:\n\nInput: ops = [\"1\"]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= ops.length <= 1000\nops[i] is \"C\", \"D\", \"+\", or a string representing an integer in the range [-3 * 104, 3 * 104].\nFor operation \"+\", there will always be at least two previous scores on the record.\nFor operations \"C\" and \"D\", there will always be at least one previous score on the record."},{"index":"684","url":"https://leetcode.com/problems/redundant-connection","title":"Redundant Connection","difficulty":"Medium","description":"In this problem, a tree is an undirected graph that is connected and has no cycles.\n\nThe given input is a graph that started as a tree with N nodes (with distinct values 1, 2, ..., N), with one additional edge added. The added edge has two different vertices chosen from 1 to N, and was not an edge that already existed.\n\nThe resulting graph is given as a 2D-array of edges. Each element of edges is a pair [u, v] with u < v, that represents an undirected edge connecting nodes u and v.\n\nReturn an edge that can be removed so that the resulting graph is a tree of N nodes. If there are multiple answers, return the answer that occurs last in the given 2D-array. The answer edge [u, v] should be in the same format, with u < v.\n\nExample 1:\n\n\nInput: [[1,2], [1,3], [2,3]]\nOutput: [2,3]\nExplanation: The given undirected graph will be like this:\n  1\n / \\\n2 - 3\n\n\nExample 2:\n\n\nInput: [[1,2], [2,3], [3,4], [1,4], [1,5]]\nOutput: [1,4]\nExplanation: The given undirected graph will be like this:\n5 - 1 - 2\n    |   |\n    4 - 3\n\n\nNote:\n\n\nThe size of the input 2D-array will be between 3 and 1000.\nEvery integer represented in the 2D-array will be between 1 and N, where N is the size of the input array.\n\n\n\n\nUpdate (2017-09-26):\nWe have overhauled the problem description + test cases and specified clearly the graph is an undirected graph. For the directed graph follow up please see Redundant Connection II). We apologize for any inconvenience caused."},{"index":"685","url":"https://leetcode.com/problems/redundant-connection-ii","title":"Redundant Connection II","difficulty":"Hard","description":"In this problem, a rooted tree is a directed graph such that, there is exactly one node (the root) for which all other nodes are descendants of this node, plus every node has exactly one parent, except for the root node which has no parents.\n\nThe given input is a directed graph that started as a rooted tree with N nodes (with distinct values 1, 2, ..., N), with one additional directed edge added. The added edge has two different vertices chosen from 1 to N, and was not an edge that already existed.\n\nThe resulting graph is given as a 2D-array of edges. Each element of edges is a pair [u, v] that represents a directed edge connecting nodes u and v, where u is a parent of child v.\n\nReturn an edge that can be removed so that the resulting graph is a rooted tree of N nodes. If there are multiple answers, return the answer that occurs last in the given 2D-array.\n\nExample 1:\n\n\nInput: [[1,2], [1,3], [2,3]]\nOutput: [2,3]\nExplanation: The given directed graph will be like this:\n  1\n / \\\nv   v\n2-->3\n\n\nExample 2:\n\n\nInput: [[1,2], [2,3], [3,4], [4,1], [1,5]]\nOutput: [4,1]\nExplanation: The given directed graph will be like this:\n5 <- 1 -> 2\n     ^    |\n     |    v\n     4 <- 3\n\n\nNote:\n\n\nThe size of the input 2D-array will be between 3 and 1000.\nEvery integer represented in the 2D-array will be between 1 and N, where N is the size of the input array."},{"index":"686","url":"https://leetcode.com/problems/repeated-string-match","title":"Repeated String Match","difficulty":"Medium","description":"Given two strings a and b, return the minimum number of times you should repeat string a so that string b is a substring of it. If it is impossible for b​​​​​​ to be a substring of a after repeating it, return -1.\n\nNotice: string \"abc\" repeated 0 times is \"\",  repeated 1 time is \"abc\" and repeated 2 times is \"abcabc\".\n\n \n\nExample 1:\n\nInput: a = \"abcd\", b = \"cdabcdab\"\nOutput: 3\nExplanation: We return 3 because by repeating a three times \"abcdabcdabcd\", b is a substring of it.\n\n\nExample 2:\n\nInput: a = \"a\", b = \"aa\"\nOutput: 2\n\n\nExample 3:\n\nInput: a = \"a\", b = \"a\"\nOutput: 1\n\n\nExample 4:\n\nInput: a = \"abc\", b = \"wxyz\"\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= a.length <= 104\n1 <= b.length <= 104\na and b consist of lower-case English letters."},{"index":"687","url":"https://leetcode.com/problems/longest-univalue-path","title":"Longest Univalue Path","difficulty":"Medium","description":"Given the root of a binary tree, return the length of the longest path, where each node in the path has the same value. This path may or may not pass through the root.\n\nThe length of the path between two nodes is represented by the number of edges between them.\n\n \n\nExample 1:\n\nInput: root = [5,4,5,1,1,5]\nOutput: 2\n\n\nExample 2:\n\nInput: root = [1,4,5,4,4,5]\nOutput: 2\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [0, 104].\n-1000 <= Node.val <= 1000\nThe depth of the tree will not exceed 1000."},{"index":"688","url":"https://leetcode.com/problems/knight-probability-in-chessboard","title":"Knight Probability in Chessboard","difficulty":"Medium","description":"On an NxN chessboard, a knight starts at the r-th row and c-th column and attempts to make exactly K moves. The rows and columns are 0 indexed, so the top-left square is (0, 0), and the bottom-right square is (N-1, N-1).\n\nA chess knight has 8 possible moves it can make, as illustrated below. Each move is two squares in a cardinal direction, then one square in an orthogonal direction.\n\n \n\n \n\nEach time the knight is to move, it chooses one of eight possible moves uniformly at random (even if the piece would go off the chessboard) and moves there.\n\nThe knight continues moving until it has made exactly K moves or has moved off the chessboard. Return the probability that the knight remains on the board after it has stopped moving.\n\n \n\nExample:\n\nInput: 3, 2, 0, 0\nOutput: 0.0625\nExplanation: There are two moves (to (1,2), (2,1)) that will keep the knight on the board.\nFrom each of those positions, there are also two moves that will keep the knight on the board.\nThe total probability the knight stays on the board is 0.0625.\n\n\n \n\nNote:\n\nN will be between 1 and 25.\nK will be between 0 and 100.\nThe knight always initially starts on the board."},{"index":"689","url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","title":"Maximum Sum of 3 Non-Overlapping Subarrays","difficulty":"Hard","description":"In a given array nums of positive integers, find three non-overlapping subarrays with maximum sum.\n\nEach subarray will be of size k, and we want to maximize the sum of all 3*k entries.\n\nReturn the result as a list of indices representing the starting position of each interval (0-indexed). If there are multiple answers, return the lexicographically smallest one.\n\nExample:\n\nInput: [1,2,1,2,6,7,5,1], 2\nOutput: [0, 3, 5]\nExplanation: Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.\n\n\n \n\nNote:\n\nnums.length will be between 1 and 20000.\nnums[i] will be between 1 and 65535.\nk will be between 1 and floor(nums.length / 3).\n\n "},{"index":"690","url":"https://leetcode.com/problems/employee-importance","title":"Employee Importance","difficulty":"Easy","description":"You are given a data structure of employee information, which includes the employee's unique id, their importance value and their direct subordinates' id.\n\nFor example, employee 1 is the leader of employee 2, and employee 2 is the leader of employee 3. They have importance value 15, 10 and 5, respectively. Then employee 1 has a data structure like [1, 15, [2]], and employee 2 has [2, 10, [3]], and employee 3 has [3, 5, []]. Note that although employee 3 is also a subordinate of employee 1, the relationship is not direct.\n\nNow given the employee information of a company, and an employee id, you need to return the total importance value of this employee and all their subordinates.\n\nExample 1:\n\nInput: [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\nOutput: 11\nExplanation:\nEmployee 1 has importance value 5, and he has two direct subordinates: employee 2 and employee 3. They both have importance value 3. So the total importance value of employee 1 is 5 + 3 + 3 = 11.\n\n\n \n\nNote:\n\nOne employee has at most one direct leader and may have several subordinates.\nThe maximum number of employees won't exceed 2000."},{"index":"691","url":"https://leetcode.com/problems/stickers-to-spell-word","title":"Stickers to Spell Word","difficulty":"Hard","description":"We are given N different types of stickers. Each sticker has a lowercase English word on it.\n\nYou would like to spell out the given target string by cutting individual letters from your collection of stickers and rearranging them.\n\nYou can use each sticker more than once if you want, and you have infinite quantities of each sticker.\n\nWhat is the minimum number of stickers that you need to spell out the target? If the task is impossible, return -1.\n\nExample 1:\n\nInput:\n\n[\"with\", \"example\", \"science\"], \"thehat\"\n\n\nOutput:\n\n3\n\n\nExplanation:\n\nWe can use 2 \"with\" stickers, and 1 \"example\" sticker.\nAfter cutting and rearrange the letters of those stickers, we can form the target \"thehat\".\nAlso, this is the minimum number of stickers necessary to form the target string.\n\n\nExample 2:\n\nInput:\n\n[\"notice\", \"possible\"], \"basicbasic\"\n\n\nOutput:\n\n-1\n\n\nExplanation:\n\nWe can't form the target \"basicbasic\" from cutting letters from the given stickers.\n\n\nNote:\n\nstickers has length in the range [1, 50].\nstickers consists of lowercase English words (without apostrophes).\ntarget has length in the range [1, 15], and consists of lowercase English letters.\nIn all test cases, all words were chosen randomly from the 1000 most common US English words, and the target was chosen as a concatenation of two random words.\nThe time limit may be more challenging than usual. It is expected that a 50 sticker test case can be solved within 35ms on average."},{"index":"692","url":"https://leetcode.com/problems/top-k-frequent-words","title":"Top K Frequent Words","difficulty":"Medium","description":"Given a non-empty list of words, return the k most frequent elements.\n\nYour answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first.\n\nExample 1:\n\n\nInput: [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2\nOutput: [\"i\", \"love\"]\nExplanation: \"i\" and \"love\" are the two most frequent words.\n    Note that \"i\" comes before \"love\" due to a lower alphabetical order.\n\n\nExample 2:\n\n\nInput: [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4\nOutput: [\"the\", \"is\", \"sunny\", \"day\"]\nExplanation: \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words,\n    with the number of occurrence being 4, 3, 2 and 1 respectively.\n\n\nNote:\n\n\nYou may assume k is always valid, 1 ≤ k ≤ number of unique elements.\nInput words contain only lowercase letters.\n\nFollow up:\n\n\nTry to solve it in O(n log k) time and O(n) extra space."},{"index":"693","url":"https://leetcode.com/problems/binary-number-with-alternating-bits","title":"Binary Number with Alternating Bits","difficulty":"Easy","description":"Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.\n\n \n\nExample 1:\n\nInput: n = 5\nOutput: true\nExplanation: The binary representation of 5 is: 101\n\n\nExample 2:\n\nInput: n = 7\nOutput: false\nExplanation: The binary representation of 7 is: 111.\n\nExample 3:\n\nInput: n = 11\nOutput: false\nExplanation: The binary representation of 11 is: 1011.\n\nExample 4:\n\nInput: n = 10\nOutput: true\nExplanation: The binary representation of 10 is: 1010.\n\nExample 5:\n\nInput: n = 3\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= n <= 231 - 1"},{"index":"695","url":"https://leetcode.com/problems/max-area-of-island","title":"Max Area of Island","difficulty":"Medium","description":"Given a non-empty 2D array grid of 0's and 1's, an island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.\n\nFind the maximum area of an island in the given 2D array. (If there is no island, the maximum area is 0.)\n\nExample 1:\n\n[[0,0,1,0,0,0,0,1,0,0,0,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\n [0,1,0,0,1,1,0,0,1,0,1,0,0],\n [0,1,0,0,1,1,0,0,1,1,1,0,0],\n [0,0,0,0,0,0,0,0,0,0,1,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\n\nGiven the above grid, return 6. Note the answer is not 11, because the island must be connected 4-directionally.\n\nExample 2:\n\n[[0,0,0,0,0,0,0,0]]\nGiven the above grid, return 0.\n\nNote: The length of each dimension in the given grid does not exceed 50."},{"index":"696","url":"https://leetcode.com/problems/count-binary-substrings","title":"Count Binary Substrings","difficulty":"Easy","description":"Give a string s, count the number of non-empty (contiguous) substrings that have the same number of 0's and 1's, and all the 0's and all the 1's in these substrings are grouped consecutively.\n\nSubstrings that occur multiple times are counted the number of times they occur.\n\nExample 1:\n\n\nInput: \"00110011\"\nOutput: 6\nExplanation: There are 6 substrings that have equal number of consecutive 1's and 0's: \"0011\", \"01\", \"1100\", \"10\", \"0011\", and \"01\".\n\nNotice that some of these substrings repeat and are counted the number of times they occur.\n\nAlso, \"00110011\" is not a valid substring because all the 0's (and 1's) are not grouped together.\n\n\nExample 2:\n\n\nInput: \"10101\"\nOutput: 4\nExplanation: There are 4 substrings: \"10\", \"01\", \"10\", \"01\" that have equal number of consecutive 1's and 0's.\n\n\nNote:\n\ns.length will be between 1 and 50,000.\ns will only consist of \"0\" or \"1\" characters."},{"index":"697","url":"https://leetcode.com/problems/degree-of-an-array","title":"Degree of an Array","difficulty":"Easy","description":"Given a non-empty array of non-negative integers nums, the degree of this array is defined as the maximum frequency of any one of its elements.\n\nYour task is to find the smallest possible length of a (contiguous) subarray of nums, that has the same degree as nums.\n\n \n\nExample 1:\n\nInput: nums = [1,2,2,3,1]\nOutput: 2\nExplanation: \nThe input array has a degree of 2 because both elements 1 and 2 appear twice.\nOf the subarrays that have the same degree:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\nThe shortest length is 2. So return 2.\n\n\nExample 2:\n\nInput: nums = [1,2,2,3,1,4,2]\nOutput: 6\nExplanation: \nThe degree is 3 because the element 2 is repeated 3 times.\nSo [2,2,3,1,4,2] is the shortest subarray, therefore returning 6.\n\n\n \n\nConstraints:\n\nnums.length will be between 1 and 50,000.\nnums[i] will be an integer between 0 and 49,999."},{"index":"698","url":"https://leetcode.com/problems/partition-to-k-equal-sum-subsets","title":"Partition to K Equal Sum Subsets","difficulty":"Medium","description":"Given an array of integers nums and a positive integer k, find whether it's possible to divide this array into k non-empty subsets whose sums are all equal.\n\n \n\nExample 1:\n\nInput: nums = [4, 3, 2, 3, 5, 2, 1], k = 4\nOutput: True\nExplanation: It's possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\n\n\n \n\nNote:\n\n1 <= k <= len(nums) <= 16.\n0 < nums[i] < 10000."},{"index":"699","url":"https://leetcode.com/problems/falling-squares","title":"Falling Squares","difficulty":"Hard","description":"On an infinite number line (x-axis), we drop given squares in the order they are given.\n\nThe i-th square dropped (positions[i] = (left, side_length)) is a square with the left-most point being positions[i][0] and sidelength positions[i][1].\n\nThe square is dropped with the bottom edge parallel to the number line, and from a higher height than all currently landed squares. We wait for each square to stick before dropping the next.\n\nThe squares are infinitely sticky on their bottom edge, and will remain fixed to any positive length surface they touch (either the number line or another square). Squares dropped adjacent to each other will not stick together prematurely.\n\n \n\nReturn a list ans of heights. Each height ans[i] represents the current highest height of any square we have dropped, after dropping squares represented by positions[0], positions[1], ..., positions[i].\n\nExample 1:\n\nInput: [[1, 2], [2, 3], [6, 1]]\nOutput: [2, 5, 5]\nExplanation:\n\n\nAfter the first drop of positions[0] = [1, 2]: _aa _aa ------- The maximum height of any square is 2.\n\nAfter the second drop of positions[1] = [2, 3]: __aaa __aaa __aaa _aa__ _aa__ -------------- The maximum height of any square is 5. The larger square stays on top of the smaller square despite where its center of gravity is, because squares are infinitely sticky on their bottom edge.\n\nAfter the third drop of positions[1] = [6, 1]: __aaa __aaa __aaa _aa _aa___a -------------- The maximum height of any square is still 5. Thus, we return an answer of [2, 5, 5].\n\n \n\n \n\nExample 2:\n\nInput: [[100, 100], [200, 100]]\nOutput: [100, 100]\nExplanation: Adjacent squares don't get stuck prematurely - only their bottom edge can stick to surfaces.\n\n\n \n\nNote:\n\n1 <= positions.length <= 1000.\n1 <= positions[i][0] <= 10^8.\n1 <= positions[i][1] <= 10^6.\n\n "},{"index":"700","url":"https://leetcode.com/problems/search-in-a-binary-search-tree","title":"Search in a Binary Search Tree","difficulty":"Easy","description":"Given the root node of a binary search tree (BST) and a value. You need to find the node in the BST that the node's value equals the given value. Return the subtree rooted with that node. If such node doesn't exist, you should return NULL.\n\nFor example, \n\nGiven the tree:\n        4\n       / \\\n      2   7\n     / \\\n    1   3\n\nAnd the value to search: 2\n\n\nYou should return this subtree:\n\n      2     \n     / \\   \n    1   3\n\n\nIn the example above, if we want to search the value 5, since there is no node with value 5, we should return NULL.\n\nNote that an empty tree is represented by NULL, therefore you would see the expected output (serialized tree format) as [], not null."},{"index":"701","url":"https://leetcode.com/problems/insert-into-a-binary-search-tree","title":"Insert into a Binary Search Tree","difficulty":"Medium","description":"You are given the root node of a binary search tree (BST) and a value to insert into the tree. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST.\n\nNotice that there may exist multiple valid ways for the insertion, as long as the tree remains a BST after insertion. You can return any of them.\n\n \n\nExample 1:\n\nInput: root = [4,2,7,1,3], val = 5\nOutput: [4,2,7,1,3,5]\nExplanation: Another accepted tree is:\n\n\n\nExample 2:\n\nInput: root = [40,20,60,10,30,50,70], val = 25\nOutput: [40,20,60,10,30,50,70,null,null,25]\n\n\nExample 3:\n\nInput: root = [4,2,7,1,3,null,null,null,null,null,null], val = 5\nOutput: [4,2,7,1,3,5]\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree will be in the range [0, 104].\n-108 <= Node.val <= 108\nAll the values Node.val are unique.\n-108 <= val <= 108\nIt's guaranteed that val does not exist in the original BST."},{"index":"703","url":"https://leetcode.com/problems/kth-largest-element-in-a-stream","title":"Kth Largest Element in a Stream","difficulty":"Easy","description":"Design a class to find the kth largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element.\n\nImplement KthLargest class:\n\nKthLargest(int k, int[] nums) Initializes the object with the integer k and the stream of integers nums.\nint add(int val) Returns the element representing the kth largest element in the stream.\n\n \n\nExample 1:\n\nInput\n[\"KthLargest\", \"add\", \"add\", \"add\", \"add\", \"add\"]\n[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]\nOutput\n[null, 4, 5, 5, 8, 8]\n\nExplanation\nKthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);\nkthLargest.add(3);   // return 4\nkthLargest.add(5);   // return 5\nkthLargest.add(10);  // return 5\nkthLargest.add(9);   // return 8\nkthLargest.add(4);   // return 8\n\n\n \n\nConstraints:\n\n1 <= k <= 104\n0 <= nums.length <= 104\n-104 <= nums[i] <= 104\n-104 <= val <= 104\nAt most 104 calls will be made to add.\nIt is guaranteed that there will be at least k elements in the array when you search for the kth element."},{"index":"704","url":"https://leetcode.com/problems/binary-search","title":"Binary Search","difficulty":"Easy","description":"Given a sorted (in ascending order) integer array nums of n elements and a target value, write a function to search target in nums. If target exists, then return its index, otherwise return -1.\n\n\nExample 1:\n\nInput: nums = [-1,0,3,5,9,12], target = 9\nOutput: 4\nExplanation: 9 exists in nums and its index is 4\n\n\n\nExample 2:\n\nInput: nums = [-1,0,3,5,9,12], target = 2\nOutput: -1\nExplanation: 2 does not exist in nums so return -1\n\n\n \n\nNote:\n\nYou may assume that all elements in nums are unique.\nn will be in the range [1, 10000].\nThe value of each element in nums will be in the range [-9999, 9999]."},{"index":"705","url":"https://leetcode.com/problems/design-hashset","title":"Design HashSet","difficulty":"Easy","description":"Design a HashSet without using any built-in hash table libraries.\n\nTo be specific, your design should include these functions:\n\nadd(value): Insert a value into the HashSet. \ncontains(value) : Return whether the value exists in the HashSet or not.\nremove(value): Remove a value in the HashSet. If the value does not exist in the HashSet, do nothing.\n\n\nExample:\n\nMyHashSet hashSet = new MyHashSet();\nhashSet.add(1);         \nhashSet.add(2);         \nhashSet.contains(1);    // returns true\nhashSet.contains(3);    // returns false (not found)\nhashSet.add(2);          \nhashSet.contains(2);    // returns true\nhashSet.remove(2);          \nhashSet.contains(2);    // returns false (already removed)\n\n\n\nNote:\n\nAll values will be in the range of [0, 1000000].\nThe number of operations will be in the range of [1, 10000].\nPlease do not use the built-in HashSet library."},{"index":"706","url":"https://leetcode.com/problems/design-hashmap","title":"Design HashMap","difficulty":"Easy","description":"Design a HashMap without using any built-in hash table libraries.\n\nTo be specific, your design should include these functions:\n\nput(key, value) : Insert a (key, value) pair into the HashMap. If the value already exists in the HashMap, update the value.\nget(key): Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.\nremove(key) : Remove the mapping for the value key if this map contains the mapping for the key.\n\n\nExample:\n\nMyHashMap hashMap = new MyHashMap();\nhashMap.put(1, 1);          \nhashMap.put(2, 2);         \nhashMap.get(1);            // returns 1\nhashMap.get(3);            // returns -1 (not found)\nhashMap.put(2, 1);          // update the existing value\nhashMap.get(2);            // returns 1 \nhashMap.remove(2);          // remove the mapping for 2\nhashMap.get(2);            // returns -1 (not found) \n\n\n\nNote:\n\nAll keys and values will be in the range of [0, 1000000].\nThe number of operations will be in the range of [1, 10000].\nPlease do not use the built-in HashMap library."},{"index":"707","url":"https://leetcode.com/problems/design-linked-list","title":"Design Linked List","difficulty":"Medium","description":"Design your implementation of the linked list. You can choose to use a singly or doubly linked list.\nA node in a singly linked list should have two attributes: val and next. val is the value of the current node, and next is a pointer/reference to the next node.\nIf you want to use the doubly linked list, you will need one more attribute prev to indicate the previous node in the linked list. Assume all nodes in the linked list are 0-indexed.\n\nImplement the MyLinkedList class:\n\nMyLinkedList() Initializes the MyLinkedList object.\nint get(int index) Get the value of the indexth node in the linked list. If the index is invalid, return -1.\nvoid addAtHead(int val) Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.\nvoid addAtTail(int val) Append a node of value val as the last element of the linked list.\nvoid addAtIndex(int index, int val) Add a node of value val before the indexth node in the linked list. If index equals the length of the linked list, the node will be appended to the end of the linked list. If index is greater than the length, the node will not be inserted.\nvoid deleteAtIndex(int index) Delete the indexth node in the linked list, if the index is valid.\n\n \n\nExample 1:\n\nInput\n[\"MyLinkedList\", \"addAtHead\", \"addAtTail\", \"addAtIndex\", \"get\", \"deleteAtIndex\", \"get\"]\n[[], [1], [3], [1, 2], [1], [1], [1]]\nOutput\n[null, null, null, null, 2, null, 3]\n\nExplanation\nMyLinkedList myLinkedList = new MyLinkedList();\nmyLinkedList.addAtHead(1);\nmyLinkedList.addAtTail(3);\nmyLinkedList.addAtIndex(1, 2);    // linked list becomes 1->2->3\nmyLinkedList.get(1);              // return 2\nmyLinkedList.deleteAtIndex(1);    // now the linked list is 1->3\nmyLinkedList.get(1);              // return 3\n\n\n \n\nConstraints:\n\n0 <= index, val <= 1000\nPlease do not use the built-in LinkedList library.\nAt most 2000 calls will be made to get, addAtHead, addAtTail,  addAtIndex and deleteAtIndex."},{"index":"709","url":"https://leetcode.com/problems/to-lower-case","title":"To Lower Case","difficulty":"Easy","description":"Implement function ToLowerCase() that has a string parameter str, and returns the same string in lowercase.\n\n \n\nExample 1:\n\nInput: \"Hello\"\nOutput: \"hello\"\n\n\nExample 2:\n\nInput: \"here\"\nOutput: \"here\"\n\n\nExample 3:\n\nInput: \"LOVELY\"\nOutput: \"lovely\"\n"},{"index":"710","url":"https://leetcode.com/problems/random-pick-with-blacklist","title":"Random Pick with Blacklist","difficulty":"Hard","description":"Given a blacklist B containing unique integers from [0, N), write a function to return a uniform random integer from [0, N) which is NOT in B.\n\nOptimize it such that it minimizes the call to system’s Math.random().\n\nNote:\n\n1 <= N <= 1000000000\n0 <= B.length < min(100000, N)\n[0, N) does NOT include N. See interval notation.\n\nExample 1:\n\nInput: \n[\"Solution\",\"pick\",\"pick\",\"pick\"]\n[[1,[]],[],[],[]]\nOutput: [null,0,0,0]\n\n\nExample 2:\n\nInput: \n[\"Solution\",\"pick\",\"pick\",\"pick\"]\n[[2,[]],[],[],[]]\nOutput: [null,1,1,1]\n\n\nExample 3:\n\nInput: \n[\"Solution\",\"pick\",\"pick\",\"pick\"]\n[[3,[1]],[],[],[]]\nOutput: [null,0,0,2]\n\n\nExample 4:\n\nInput: \n[\"Solution\",\"pick\",\"pick\",\"pick\"]\n[[4,[2]],[],[],[]]\nOutput: [null,1,3,1]\n\n\nExplanation of Input Syntax:\n\nThe input is two lists: the subroutines called and their arguments. Solution's constructor has two arguments, N and the blacklist B. pick has no arguments. Arguments are always wrapped with a list, even if there aren't any."},{"index":"712","url":"https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings","title":"Minimum ASCII Delete Sum for Two Strings","difficulty":"Medium","description":"Given two strings s1, s2, find the lowest ASCII sum of deleted characters to make two strings equal.\n\nExample 1:\n\n\nInput: s1 = \"sea\", s2 = \"eat\"\nOutput: 231\nExplanation: Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\nDeleting \"t\" from \"eat\" adds 116 to the sum.\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\n\n\nExample 2:\n\n\nInput: s1 = \"delete\", s2 = \"leet\"\nOutput: 403\nExplanation: Deleting \"dee\" from \"delete\" to turn the string into \"let\",\nadds 100[d]+101[e]+101[e] to the sum.  Deleting \"e\" from \"leet\" adds 101[e] to the sum.\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\n\n\nNote:\n\n0 < s1.length, s2.length <= 1000.\nAll elements of each string will have an ASCII value in [97, 122]."},{"index":"713","url":"https://leetcode.com/problems/subarray-product-less-than-k","title":"Subarray Product Less Than K","difficulty":"Medium","description":"Your are given an array of positive integers nums.\n\nCount and print the number of (contiguous) subarrays where the product of all the elements in the subarray is less than k.\n\nExample 1:\n\n\nInput: nums = [10, 5, 2, 6], k = 100\nOutput: 8\nExplanation: The 8 subarrays that have product less than 100 are: [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6].\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\n\n\nNote:\n\n0 < nums.length <= 50000.\n0 < nums[i] < 1000.\n0 <= k < 10^6."},{"index":"714","url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","title":"Best Time to Buy and Sell Stock with Transaction Fee","difficulty":"Medium","description":"Your are given an array of integers prices, for which the i-th element is the price of a given stock on day i; and a non-negative integer fee representing a transaction fee.\n\nYou may complete as many transactions as you like, but you need to pay the transaction fee for each transaction. You may not buy more than 1 share of a stock at a time (ie. you must sell the stock share before you buy again.)\n\nReturn the maximum profit you can make.\n\nExample 1:\n\n\nInput: prices = [1, 3, 2, 8, 4, 9], fee = 2\nOutput: 8\nExplanation: The maximum profit can be achieved by:\n\nBuying at prices[0] = 1\nSelling at prices[3] = 8\nBuying at prices[4] = 4\nSelling at prices[5] = 9\nThe total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.\n\n\nNote:\n\n0 < prices.length <= 50000.\n0 < prices[i] < 50000.\n0 <= fee < 50000."},{"index":"715","url":"https://leetcode.com/problems/range-module","title":"Range Module","difficulty":"Hard","description":"A Range Module is a module that tracks ranges of numbers. Your task is to design and implement the following interfaces in an efficient manner.\n\naddRange(int left, int right) Adds the half-open interval [left, right), tracking every real number in that interval. Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval [left, right) that are not already tracked.\n\nqueryRange(int left, int right) Returns true if and only if every real number in the interval [left, right) is currently being tracked.\n\nremoveRange(int left, int right) Stops tracking every real number currently being tracked in the interval [left, right).\n\nExample 1:\n\n\naddRange(10, 20): null\nremoveRange(14, 16): null\nqueryRange(10, 14): true (Every number in [10, 14) is being tracked)\nqueryRange(13, 15): false (Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\nqueryRange(16, 17): true (The number 16 in [16, 17) is still being tracked, despite the remove operation)\n\n\nNote:\n\nA half open interval [left, right) denotes all real numbers left <= x < right.\n0 < left < right < 10^9 in all calls to addRange, queryRange, removeRange.\nThe total number of calls to addRange in a single test case is at most 1000.\nThe total number of calls to queryRange in a single test case is at most 5000.\nThe total number of calls to removeRange in a single test case is at most 1000."},{"index":"717","url":"https://leetcode.com/problems/1-bit-and-2-bit-characters","title":"1-bit and 2-bit Characters","difficulty":"Easy","description":"We have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11).\n\nNow given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero.\n\nExample 1:\n\n\nInput: \nbits = [1, 0, 0]\nOutput: True\nExplanation: \nThe only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.\n\n\nExample 2:\n\n\nInput: \nbits = [1, 1, 1, 0]\nOutput: False\nExplanation: \nThe only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.\n\n\nNote:\n\n1 <= len(bits) <= 1000.\nbits[i] is always 0 or 1."},{"index":"718","url":"https://leetcode.com/problems/maximum-length-of-repeated-subarray","title":"Maximum Length of Repeated Subarray","difficulty":"Medium","description":"Given two integer arrays A and B, return the maximum length of an subarray that appears in both arrays.\n\nExample 1:\n\nInput:\nA: [1,2,3,2,1]\nB: [3,2,1,4,7]\nOutput: 3\nExplanation: \nThe repeated subarray with maximum length is [3, 2, 1].\n\n\n \n\nNote:\n\n1 <= len(A), len(B) <= 1000\n0 <= A[i], B[i] < 100\n\n "},{"index":"719","url":"https://leetcode.com/problems/find-k-th-smallest-pair-distance","title":"Find K-th Smallest Pair Distance","difficulty":"Hard","description":"Given an integer array, return the k-th smallest distance among all the pairs. The distance of a pair (A, B) is defined as the absolute difference between A and B.\n\nExample 1:\n\n\nInput:\nnums = [1,3,1]\nk = 1\nOutput: 0 \nExplanation:\nHere are all the pairs:\n(1,3) -> 2\n(1,1) -> 0\n(3,1) -> 2\nThen the 1st smallest distance pair is (1,1), and its distance is 0.\n\n\nNote:\n\n\n2 <= len(nums) <= 10000.\n0 <= nums[i] < 1000000.\n1 <= k <= len(nums) * (len(nums) - 1) / 2."},{"index":"720","url":"https://leetcode.com/problems/longest-word-in-dictionary","title":"Longest Word in Dictionary","difficulty":"Easy","description":"Given a list of strings words representing an English Dictionary, find the longest word in words that can be built one character at a time by other words in words. If there is more than one possible answer, return the longest word with the smallest lexicographical order.\n\nIf there is no answer, return the empty string.\n\nExample 1:\n\n\nInput: \nwords = [\"w\",\"wo\",\"wor\",\"worl\", \"world\"]\nOutput: \"world\"\nExplanation: \nThe word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".\n\n\nExample 2:\n\n\nInput: \nwords = [\"a\", \"banana\", \"app\", \"appl\", \"ap\", \"apply\", \"apple\"]\nOutput: \"apple\"\nExplanation: \nBoth \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".\n\n\nNote:\n\nAll the strings in the input will only contain lowercase letters.\nThe length of words will be in the range [1, 1000].\nThe length of words[i] will be in the range [1, 30]."},{"index":"721","url":"https://leetcode.com/problems/accounts-merge","title":"Accounts Merge","difficulty":"Medium","description":"Given a list accounts, each element accounts[i] is a list of strings, where the first element accounts[i][0] is a name, and the rest of the elements are emails representing emails of the account.\n\nNow, we would like to merge these accounts. Two accounts definitely belong to the same person if there is some email that is common to both accounts. Note that even if two accounts have the same name, they may belong to different people as people could have the same name. A person can have any number of accounts initially, but all of their accounts definitely have the same name.\n\nAfter merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails in sorted order. The accounts themselves can be returned in any order.\n\nExample 1:\n\n\nInput: \naccounts = [[\"John\", \"johnsmith@mail.com\", \"john00@mail.com\"], [\"John\", \"johnnybravo@mail.com\"], [\"John\", \"johnsmith@mail.com\", \"john_newyork@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\nOutput: [[\"John\", 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com'],  [\"John\", \"johnnybravo@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\nExplanation: \nThe first and third John's are the same person as they have the common email \"johnsmith@mail.com\".\nThe second John and Mary are different people as none of their email addresses are used by other accounts.\nWe could return these lists in any order, for example the answer [['Mary', 'mary@mail.com'], ['John', 'johnnybravo@mail.com'], \n['John', 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com']] would still be accepted.\n\n\nNote:\n\nThe length of accounts will be in the range [1, 1000].\nThe length of accounts[i] will be in the range [1, 10].\nThe length of accounts[i][j] will be in the range [1, 30]."},{"index":"722","url":"https://leetcode.com/problems/remove-comments","title":"Remove Comments","difficulty":"Medium","description":"Given a C++ program, remove comments from it. The program source is an array where source[i] is the i-th line of the source code. This represents the result of splitting the original source code string by the newline character \\n.\n\nIn C++, there are two types of comments, line comments, and block comments.\n\nThe string // denotes a line comment, which represents that it and rest of the characters to the right of it in the same line should be ignored.\n\nThe string /* denotes a block comment, which represents that all characters until the next (non-overlapping) occurrence of */ should be ignored. (Here, occurrences happen in reading order: line by line from left to right.) To be clear, the string /*/ does not yet end the block comment, as the ending would be overlapping the beginning.\n\nThe first effective comment takes precedence over others: if the string // occurs in a block comment, it is ignored. Similarly, if the string /* occurs in a line or block comment, it is also ignored.\n\nIf a certain line of code is empty after removing comments, you must not output that line: each string in the answer list will be non-empty.\n\nThere will be no control characters, single quote, or double quote characters. For example, source = \"string s = \"/* Not a comment. */\";\" will not be a test case. (Also, nothing else such as defines or macros will interfere with the comments.)\n\nIt is guaranteed that every open block comment will eventually be closed, so /* outside of a line or block comment always starts a new comment.\n\nFinally, implicit newline characters can be deleted by block comments. Please see the examples below for details.\n\nAfter removing the comments from the source code, return the source code in the same format.\n\nExample 1:\n\n\nInput: \nsource = [\"/*Test program */\", \"int main()\", \"{ \", \"  // variable declaration \", \"int a, b, c;\", \"/* This is a test\", \"   multiline  \", \"   comment for \", \"   testing */\", \"a = b + c;\", \"}\"]\n\nThe line by line code is visualized as below:\n/*Test program */\nint main()\n{ \n  // variable declaration \nint a, b, c;\n/* This is a test\n   multiline  \n   comment for \n   testing */\na = b + c;\n}\n\nOutput: [\"int main()\",\"{ \",\"  \",\"int a, b, c;\",\"a = b + c;\",\"}\"]\n\nThe line by line code is visualized as below:\nint main()\n{ \n  \nint a, b, c;\na = b + c;\n}\n\nExplanation: \nThe string /* denotes a block comment, including line 1 and lines 6-9. The string // denotes line 4 as comments.\n\n\nExample 2:\n\n\nInput: \nsource = [\"a/*comment\", \"line\", \"more_comment*/b\"]\nOutput: [\"ab\"]\nExplanation: The original source string is \"a/*comment\\nline\\nmore_comment*/b\", where we have bolded the newline characters.  After deletion, the implicit newline characters are deleted, leaving the string \"ab\", which when delimited by newline characters becomes [\"ab\"].\n\n\nNote:\n\nThe length of source is in the range [1, 100].\nThe length of source[i] is in the range [0, 80].\nEvery open block comment is eventually closed.\nThere are no single-quote, double-quote, or control characters in the source code."},{"index":"724","url":"https://leetcode.com/problems/find-pivot-index","title":"Find Pivot Index","difficulty":"Easy","description":"Given an array of integers nums, write a method that returns the \"pivot\" index of this array.\n\nWe define the pivot index as the index where the sum of all the numbers to the left of the index is equal to the sum of all the numbers to the right of the index.\n\nIf no such index exists, we should return -1. If there are multiple pivot indexes, you should return the left-most pivot index.\n\n \n\nExample 1:\n\nInput: nums = [1,7,3,6,5,6]\nOutput: 3\nExplanation:\nThe sum of the numbers to the left of index 3 (nums[3] = 6) is equal to the sum of numbers to the right of index 3.\nAlso, 3 is the first index where this occurs.\n\n\nExample 2:\n\nInput: nums = [1,2,3]\nOutput: -1\nExplanation:\nThere is no index that satisfies the conditions in the problem statement.\n\n\n \n\nConstraints:\n\nThe length of nums will be in the range [0, 10000].\nEach element nums[i] will be an integer in the range [-1000, 1000]."},{"index":"725","url":"https://leetcode.com/problems/split-linked-list-in-parts","title":"Split Linked List in Parts","difficulty":"Medium","description":"Given a (singly) linked list with head node root, write a function to split the linked list into k consecutive linked list \"parts\".\n\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than 1. This may lead to some parts being null.\n\nThe parts should be in order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal parts occurring later.\n\nReturn a List of ListNode's representing the linked list parts that are formed.\n\nExamples 1->2->3->4, k = 5 // 5 equal parts [ [1], [2], [3], [4], null ]\n\nExample 1:\n\n\nInput:\nroot = [1, 2, 3], k = 5\nOutput: [[1],[2],[3],[],[]]\nExplanation:\nThe input and each element of the output are ListNodes, not arrays.\nFor example, the input root has root.val = 1, root.next.val = 2, \\root.next.next.val = 3, and root.next.next.next = null.\nThe first element output[0] has output[0].val = 1, output[0].next = null.\nThe last element output[4] is null, but it's string representation as a ListNode is [].\n\n\nExample 2:\n\n\nInput: \nroot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3\nOutput: [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]\nExplanation:\nThe input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.\n\n\nNote:\n\nThe length of root will be in the range [0, 1000].\nEach value of a node in the input will be an integer in the range [0, 999].\nk will be an integer in the range [1, 50]."},{"index":"726","url":"https://leetcode.com/problems/number-of-atoms","title":"Number of Atoms","difficulty":"Hard","description":"Given a chemical formula (given as a string), return the count of each atom.\n\nThe atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.\n\nOne or more digits representing that element's count may follow if the count is greater than 1. If the count is 1, no digits will follow. For example, H2O and H2O2 are possible, but H1O2 is impossible.\n\nTwo formulas concatenated together to produce another formula. For example, H2O2He3Mg4 is also a formula.\n\nA formula placed in parentheses, and a count (optionally added) is also a formula. For example, (H2O2) and (H2O2)3 are formulas.\n\nGiven a formula, return the count of all elements as a string in the following form: the first name (in sorted order), followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.\n\n \n\n \n\nExample 1:\n\nInput: formula = \"H2O\"\nOutput: \"H2O\"\nExplanation: The count of elements are {'H': 2, 'O': 1}.\n\n\nExample 2:\n\nInput: formula = \"Mg(OH)2\"\nOutput: \"H2MgO2\"\nExplanation: The count of elements are {'H': 2, 'Mg': 1, 'O': 2}.\n\n\nExample 3:\n\nInput: formula = \"K4(ON(SO3)2)2\"\nOutput: \"K4N2O14S4\"\nExplanation: The count of elements are {'K': 4, 'N': 2, 'O': 14, 'S': 4}.\n\n\nExample 4:\n\nInput: formula = \"Be32\"\nOutput: \"Be32\"\n\n\n \n\nConstraints:\n\n1 <= formula.length <= 1000\nformula consists of English letters, digits, '(', and ')'.\nformula is always valid."},{"index":"728","url":"https://leetcode.com/problems/self-dividing-numbers","title":"Self Dividing Numbers","difficulty":"Easy","description":"A self-dividing number is a number that is divisible by every digit it contains.\n\nFor example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.\n\nAlso, a self-dividing number is not allowed to contain the digit zero.\n\nGiven a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.\n\nExample 1:\n\n\nInput: \nleft = 1, right = 22\nOutput: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n\n\nNote:\n\nThe boundaries of each input argument are 1 <= left <= right <= 10000."},{"index":"729","url":"https://leetcode.com/problems/my-calendar-i","title":"My Calendar I","difficulty":"Medium","description":"Implement a MyCalendar class to store your events. A new event can be added if adding the event will not cause a double booking.\n\nYour class will have the method, book(int start, int end). Formally, this represents a booking on the half open interval [start, end), the range of real numbers x such that start <= x < end.\n\nA double booking happens when two events have some non-empty intersection (ie., there is some time that is common to both events.)\n\nFor each call to the method MyCalendar.book, return true if the event can be added to the calendar successfully without causing a double booking. Otherwise, return false and do not add the event to the calendar.\n\nYour class will be called like this: MyCalendar cal = new MyCalendar(); MyCalendar.book(start, end)\n\nExample 1:\n\nMyCalendar();\nMyCalendar.book(10, 20); // returns true\nMyCalendar.book(15, 25); // returns false\nMyCalendar.book(20, 30); // returns true\nExplanation: \nThe first event can be booked.  The second can't because time 15 is already booked by another event.\nThe third event can be booked, as the first event takes every time less than 20, but not including 20.\n\n\n \n\nNote:\n\nThe number of calls to MyCalendar.book per test case will be at most 1000.\nIn calls to MyCalendar.book(start, end), start and end are integers in the range [0, 10^9].\n\n "},{"index":"730","url":"https://leetcode.com/problems/count-different-palindromic-subsequences","title":"Count Different Palindromic Subsequences","difficulty":"Hard","description":"Given a string S, find the number of different non-empty palindromic subsequences in S, and return that number modulo 10^9 + 7.\n\nA subsequence of a string S is obtained by deleting 0 or more characters from S.\n\nA sequence is palindromic if it is equal to the sequence reversed.\n\nTwo sequences A_1, A_2, ... and B_1, B_2, ... are different if there is some i for which A_i != B_i.\n\nExample 1:\n\n\nInput: \nS = 'bccb'\nOutput: 6\nExplanation: \nThe 6 different non-empty palindromic subsequences are 'b', 'c', 'bb', 'cc', 'bcb', 'bccb'.\nNote that 'bcb' is counted only once, even though it occurs twice.\n\n\nExample 2:\n\n\nInput: \nS = 'abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba'\nOutput: 104860361\nExplanation: \nThere are 3104860382 different non-empty palindromic subsequences, which is 104860361 modulo 10^9 + 7.\n\n\nNote:\n\nThe length of S will be in the range [1, 1000].\nEach character S[i] will be in the set {'a', 'b', 'c', 'd'}."},{"index":"731","url":"https://leetcode.com/problems/my-calendar-ii","title":"My Calendar II","difficulty":"Medium","description":"Implement a MyCalendarTwo class to store your events. A new event can be added if adding the event will not cause a triple booking.\n\nYour class will have one method, book(int start, int end). Formally, this represents a booking on the half open interval [start, end), the range of real numbers x such that start <= x < end.\n\nA triple booking happens when three events have some non-empty intersection (ie., there is some time that is common to all 3 events.)\n\nFor each call to the method MyCalendar.book, return true if the event can be added to the calendar successfully without causing a triple booking. Otherwise, return false and do not add the event to the calendar.\n\nYour class will be called like this: MyCalendar cal = new MyCalendar(); MyCalendar.book(start, end)\n\nExample 1:\n\nMyCalendar();\nMyCalendar.book(10, 20); // returns true\nMyCalendar.book(50, 60); // returns true\nMyCalendar.book(10, 40); // returns true\nMyCalendar.book(5, 15); // returns false\nMyCalendar.book(5, 10); // returns true\nMyCalendar.book(25, 55); // returns true\nExplanation: \nThe first two events can be booked.  The third event can be double booked.\nThe fourth event (5, 15) can't be booked, because it would result in a triple booking.\nThe fifth event (5, 10) can be booked, as it does not use time 10 which is already double booked.\nThe sixth event (25, 55) can be booked, as the time in [25, 40) will be double booked with the third event;\nthe time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.\n\n\n \n\nNote:\n\nThe number of calls to MyCalendar.book per test case will be at most 1000.\nIn calls to MyCalendar.book(start, end), start and end are integers in the range [0, 10^9].\n\n "},{"index":"732","url":"https://leetcode.com/problems/my-calendar-iii","title":"My Calendar III","difficulty":"Hard","description":"Implement a MyCalendarThree class to store your events. A new event can always be added.\n\nYour class will have one method, book(int start, int end). Formally, this represents a booking on the half open interval [start, end), the range of real numbers x such that start <= x < end.\n\nA K-booking happens when K events have some non-empty intersection (ie., there is some time that is common to all K events.)\n\nFor each call to the method MyCalendar.book, return an integer K representing the largest integer such that there exists a K-booking in the calendar.\n\nYour class will be called like this: MyCalendarThree cal = new MyCalendarThree(); MyCalendarThree.book(start, end)\n\nExample 1:\n\nMyCalendarThree();\nMyCalendarThree.book(10, 20); // returns 1\nMyCalendarThree.book(50, 60); // returns 1\nMyCalendarThree.book(10, 40); // returns 2\nMyCalendarThree.book(5, 15); // returns 3\nMyCalendarThree.book(5, 10); // returns 3\nMyCalendarThree.book(25, 55); // returns 3\nExplanation: \nThe first two events can be booked and are disjoint, so the maximum K-booking is a 1-booking.\nThe third event [10, 40) intersects the first event, and the maximum K-booking is a 2-booking.\nThe remaining events cause the maximum K-booking to be only a 3-booking.\nNote that the last event locally causes a 2-booking, but the answer is still 3 because\neg. [10, 20), [10, 40), and [5, 15) are still triple booked.\n\n\n \n\nNote:\n\nThe number of calls to MyCalendarThree.book per test case will be at most 400.\nIn calls to MyCalendarThree.book(start, end), start and end are integers in the range [0, 10^9].\n\n "},{"index":"733","url":"https://leetcode.com/problems/flood-fill","title":"Flood Fill","difficulty":"Easy","description":"An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\n\nGiven a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, \"flood fill\" the image.\n\nTo perform a \"flood fill\", consider the starting pixel, plus any pixels connected 4-directionally to the starting pixel of the same color as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color as the starting pixel), and so on. Replace the color of all of the aforementioned pixels with the newColor.\n\nAt the end, return the modified image.\n\nExample 1:\n\n\nInput: \nimage = [[1,1,1],[1,1,0],[1,0,1]]\nsr = 1, sc = 1, newColor = 2\nOutput: [[2,2,2],[2,2,0],[2,0,1]]\nExplanation: \nFrom the center of the image (with position (sr, sc) = (1, 1)), all pixels connected \nby a path of the same color as the starting pixel are colored with the new color.\nNote the bottom corner is not colored 2, because it is not 4-directionally connected\nto the starting pixel.\n\n\nNote:\n\nThe length of image and image[0] will be in the range [1, 50].\nThe given starting pixel will satisfy 0 <= sr < image.length and 0 <= sc < image[0].length.\nThe value of each color in image[i][j] and newColor will be an integer in [0, 65535]."},{"index":"735","url":"https://leetcode.com/problems/asteroid-collision","title":"Asteroid Collision","difficulty":"Medium","description":"We are given an array asteroids of integers representing asteroids in a row.\n\nFor each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.\n\nFind out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.\n\n \n\nExample 1:\n\nInput: asteroids = [5,10,-5]\nOutput: [5,10]\nExplanation: The 10 and -5 collide resulting in 10.  The 5 and 10 never collide.\n\n\nExample 2:\n\nInput: asteroids = [8,-8]\nOutput: []\nExplanation: The 8 and -8 collide exploding each other.\n\n\nExample 3:\n\nInput: asteroids = [10,2,-5]\nOutput: [10]\nExplanation: The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.\n\n\nExample 4:\n\nInput: asteroids = [-2,-1,1,2]\nOutput: [-2,-1,1,2]\nExplanation: The -2 and -1 are moving left, while the 1 and 2 are moving right. Asteroids moving the same direction never meet, so no asteroids will meet each other.\n\n\n \n\nConstraints:\n\n1 <= asteroids <= 104\n-1000 <= asteroids[i] <= 1000\nasteroids[i] != 0"},{"index":"736","url":"https://leetcode.com/problems/parse-lisp-expression","title":"Parse Lisp Expression","difficulty":"Hard","description":"You are given a string expression representing a Lisp-like expression to return the integer value of.\n\nThe syntax for these expressions is given as follows.\n\nAn expression is either an integer, a let-expression, an add-expression, a mult-expression, or an assigned variable. Expressions always evaluate to a single integer.\n\n(An integer could be positive or negative.)\n\nA let-expression takes the form (let v1 e1 v2 e2 ... vn en expr), where let is always the string \"let\", then there are 1 or more pairs of alternating variables and expressions, meaning that the first variable v1 is assigned the value of the expression e1, the second variable v2 is assigned the value of the expression e2, and so on sequentially; and then the value of this let-expression is the value of the expression expr.\n\nAn add-expression takes the form (add e1 e2) where add is always the string \"add\", there are always two expressions e1, e2, and this expression evaluates to the addition of the evaluation of e1 and the evaluation of e2.\n\nA mult-expression takes the form (mult e1 e2) where mult is always the string \"mult\", there are always two expressions e1, e2, and this expression evaluates to the multiplication of the evaluation of e1 and the evaluation of e2.\n\nFor the purposes of this question, we will use a smaller subset of variable names. A variable starts with a lowercase letter, then zero or more lowercase letters or digits. Additionally for your convenience, the names \"add\", \"let\", or \"mult\" are protected and will never be used as variable names.\n\nFinally, there is the concept of scope. When an expression of a variable name is evaluated, within the context of that evaluation, the innermost scope (in terms of parentheses) is checked first for the value of that variable, and then outer scopes are checked sequentially. It is guaranteed that every expression is legal. Please see the examples for more details on scope.\n\nEvaluation Examples:\n\n\nInput: (add 1 2)\nOutput: 3\n\nInput: (mult 3 (add 2 3))\nOutput: 15\n\nInput: (let x 2 (mult x 5))\nOutput: 10\n\nInput: (let x 2 (mult x (let x 3 y 4 (add x y))))\nOutput: 14\nExplanation: In the expression (add x y), when checking for the value of the variable x,\nwe check from the innermost scope to the outermost in the context of the variable we are trying to evaluate.\nSince x = 3 is found first, the value of x is 3.\n\nInput: (let x 3 x 2 x)\nOutput: 2\nExplanation: Assignment in let statements is processed sequentially.\n\nInput: (let x 1 y 2 x (add x y) (add x y))\nOutput: 5\nExplanation: The first (add x y) evaluates as 3, and is assigned to x.\nThe second (add x y) evaluates as 3+2 = 5.\n\nInput: (let x 2 (add (let x 3 (let x 4 x)) x))\nOutput: 6\nExplanation: Even though (let x 4 x) has a deeper scope, it is outside the context\nof the final x in the add-expression.  That final x will equal 2.\n\nInput: (let a1 3 b2 (add a1 1) b2) \nOutput 4\nExplanation: Variable names can contain digits after the first character.\n\n\n\nNote:\n\nThe given string expression is well formatted: There are no leading or trailing spaces, there is only a single space separating different components of the string, and no space between adjacent parentheses. The expression is guaranteed to be legal and evaluate to an integer.\nThe length of expression is at most 2000. (It is also non-empty, as that would not be a legal expression.)\nThe answer and all intermediate calculations of that answer are guaranteed to fit in a 32-bit integer."},{"index":"738","url":"https://leetcode.com/problems/monotone-increasing-digits","title":"Monotone Increasing Digits","difficulty":"Medium","description":"Given a non-negative integer N, find the largest number that is less than or equal to N with monotone increasing digits.\n\n(Recall that an integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y.)\n\nExample 1:\n\n\nInput: N = 10\nOutput: 9\n\n\nExample 2:\n\n\nInput: N = 1234\nOutput: 1234\n\n\nExample 3:\n\n\nInput: N = 332\nOutput: 299\n\n\nNote: N is an integer in the range [0, 10^9]."},{"index":"739","url":"https://leetcode.com/problems/daily-temperatures","title":"Daily Temperatures","difficulty":"Medium","description":"Given a list of daily temperatures T, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature. If there is no future day for which this is possible, put 0 instead.\n\nFor example, given the list of temperatures T = [73, 74, 75, 71, 69, 72, 76, 73], your output should be [1, 1, 4, 2, 1, 1, 0, 0].\n\nNote: The length of temperatures will be in the range [1, 30000]. Each temperature will be an integer in the range [30, 100]."},{"index":"740","url":"https://leetcode.com/problems/delete-and-earn","title":"Delete and Earn","difficulty":"Medium","description":"Given an array nums of integers, you can perform operations on the array.\n\nIn each operation, you pick any nums[i] and delete it to earn nums[i] points. After, you must delete every element equal to nums[i] - 1 or nums[i] + 1.\n\nYou start with 0 points. Return the maximum number of points you can earn by applying such operations.\n\nExample 1:\n\nInput: nums = [3, 4, 2]\nOutput: 6\nExplanation: \nDelete 4 to earn 4 points, consequently 3 is also deleted.\nThen, delete 2 to earn 2 points. 6 total points are earned.\n\n\n \n\nExample 2:\n\nInput: nums = [2, 2, 3, 3, 3, 4]\nOutput: 9\nExplanation: \nDelete 3 to earn 3 points, deleting both 2's and the 4.\nThen, delete 3 again to earn 3 points, and 3 again to earn 3 points.\n9 total points are earned.\n\n\n \n\nNote:\n\nThe length of nums is at most 20000.\nEach element nums[i] is an integer in the range [1, 10000].\n\n "},{"index":"741","url":"https://leetcode.com/problems/cherry-pickup","title":"Cherry Pickup","difficulty":"Hard","description":"In a N x N grid representing a field of cherries, each cell is one of three possible integers.\n\n \n\n0 means the cell is empty, so you can pass through;\n1 means the cell contains a cherry, that you can pick up and pass through;\n-1 means the cell contains a thorn that blocks your way.\n\n \n\nYour task is to collect maximum number of cherries possible by following the rules below:\n\n \n\nStarting at the position (0, 0) and reaching (N-1, N-1) by moving right or down through valid path cells (cells with value 0 or 1);\nAfter reaching (N-1, N-1), returning to (0, 0) by moving left or up through valid path cells;\nWhen passing through a path cell containing a cherry, you pick it up and the cell becomes an empty cell (0);\nIf there is no valid path between (0, 0) and (N-1, N-1), then no cherries can be collected.\n\n \n\n \n\nExample 1:\n\nInput: grid =\n[[0, 1, -1],\n [1, 0, -1],\n [1, 1,  1]]\nOutput: 5\nExplanation: \nThe player started at (0, 0) and went down, down, right right to reach (2, 2).\n4 cherries were picked up during this single trip, and the matrix becomes [[0,1,-1],[0,0,-1],[0,0,0]].\nThen, the player went left, up, up, left to return home, picking up one more cherry.\nThe total number of cherries picked up is 5, and this is the maximum possible.\n\n\n \n\nNote:\n\ngrid is an N by N 2D array, with 1 <= N <= 50.\nEach grid[i][j] is an integer in the set {-1, 0, 1}.\nIt is guaranteed that grid[0][0] and grid[N-1][N-1] are not -1.\n\n "},{"index":"743","url":"https://leetcode.com/problems/network-delay-time","title":"Network Delay Time","difficulty":"Medium","description":"There are N network nodes, labelled 1 to N.\n\nGiven times, a list of travel times as directed edges times[i] = (u, v, w), where u is the source node, v is the target node, and w is the time it takes for a signal to travel from source to target.\n\nNow, we send a signal from a certain node K. How long will it take for all nodes to receive the signal? If it is impossible, return -1.\n\n \n\nExample 1:\n\nInput: times = [[2,1,1],[2,3,1],[3,4,1]], N = 4, K = 2\nOutput: 2\n\n\n \n\nNote:\n\nN will be in the range [1, 100].\nK will be in the range [1, N].\nThe length of times will be in the range [1, 6000].\nAll edges times[i] = (u, v, w) will have 1 <= u, v <= N and 0 <= w <= 100."},{"index":"744","url":"https://leetcode.com/problems/find-smallest-letter-greater-than-target","title":"Find Smallest Letter Greater Than Target","difficulty":"Easy","description":"Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.\n\nLetters also wrap around. For example, if the target is target = 'z' and letters = ['a', 'b'], the answer is 'a'.\n\nExamples:\n\n\nInput:\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"a\"\nOutput: \"c\"\n\nInput:\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"c\"\nOutput: \"f\"\n\nInput:\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"d\"\nOutput: \"f\"\n\nInput:\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"g\"\nOutput: \"j\"\n\nInput:\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"j\"\nOutput: \"c\"\n\nInput:\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"k\"\nOutput: \"c\"\n\n\nNote:\n\n\nletters has a length in range [2, 10000].\nletters consists of lowercase letters, and contains at least 2 unique letters.\ntarget is a lowercase letter."},{"index":"745","url":"https://leetcode.com/problems/prefix-and-suffix-search","title":"Prefix and Suffix Search","difficulty":"Hard","description":"Design a special dictionary which has some words and allows you to search the words in it by a prefix and a suffix.\n\nImplement the WordFilter class:\n\nWordFilter(string[] words) Initializes the object with the words in the dictionary.\nf(string prefix, string suffix) Returns the index of the word in the dictionary which has the prefix prefix and the suffix suffix. If there is more than one valid index, return the largest of them. If there is no such word in the dictionary, return -1.\n\n \n\nExample 1:\n\nInput\n[\"WordFilter\", \"f\"]\n[[[\"apple\"]], [\"a\", \"e\"]]\nOutput\n[null, 0]\n\nExplanation\nWordFilter wordFilter = new WordFilter([\"apple\"]);\nwordFilter.f(\"a\", \"e\"); // return 0, because the word at index 0 has prefix = \"a\" and suffix = 'e\".\n\n\n \n\nConstraints:\n\n1 <= words.length <= 15000\n1 <= words[i].length <= 10\n1 <= prefix.length, suffix.length <= 10\nwords[i], prefix and suffix consist of lower-case English letters only.\nAt most 15000 calls will be made to the function f."},{"index":"746","url":"https://leetcode.com/problems/min-cost-climbing-stairs","title":"Min Cost Climbing Stairs","difficulty":"Easy","description":"On a staircase, the i-th step has some non-negative cost cost[i] assigned (0 indexed).\n\nOnce you pay the cost, you can either climb one or two steps. You need to find minimum cost to reach the top of the floor, and you can either start from the step with index 0, or the step with index 1.\n\nExample 1:\n\n\nInput: cost = [10, 15, 20]\nOutput: 15\nExplanation: Cheapest is start on cost[1], pay that cost and go to the top.\n\n\nExample 2:\n\n\nInput: cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]\nOutput: 6\nExplanation: Cheapest is start on cost[0], and only step on 1s, skipping cost[3].\n\n\nNote:\n\n\ncost will have a length in the range [2, 1000].\nEvery cost[i] will be an integer in the range [0, 999]."},{"index":"747","url":"https://leetcode.com/problems/largest-number-at-least-twice-of-others","title":"Largest Number At Least Twice of Others","difficulty":"Easy","description":"In a given integer array nums, there is always exactly one largest element.\n\nFind whether the largest element in the array is at least twice as much as every other number in the array.\n\nIf it is, return the index of the largest element, otherwise return -1.\n\nExample 1:\n\nInput: nums = [3, 6, 1, 0]\nOutput: 1\nExplanation: 6 is the largest integer, and for every other number in the array x,\n6 is more than twice as big as x.  The index of value 6 is 1, so we return 1.\n\n\n \n\nExample 2:\n\nInput: nums = [1, 2, 3, 4]\nOutput: -1\nExplanation: 4 isn't at least as big as twice the value of 3, so we return -1.\n\n\n \n\nNote:\n\nnums will have a length in the range [1, 50].\nEvery nums[i] will be an integer in the range [0, 99].\n\n "},{"index":"748","url":"https://leetcode.com/problems/shortest-completing-word","title":"Shortest Completing Word","difficulty":"Easy","description":"Given a string licensePlate and an array of strings words, find the shortest completing word in words.\n\nA completing word is a word that contains all the letters in licensePlate. Ignore numbers and spaces in licensePlate, and treat letters as case insensitive. If a letter appears more than once in licensePlate, then it must appear in the word the same number of times or more.\n\nFor example, if licensePlate = \"aBc 12c\", then it contains letters 'a', 'b' (ignoring case), and 'c' twice. Possible completing words are \"abccdef\", \"caaacab\", and \"cbca\".\n\nReturn the shortest completing word in words. It is guaranteed an answer exists. If there are multiple shortest completing words, return the first one that occurs in words.\n\n \n\nExample 1:\n\nInput: licensePlate = \"1s3 PSt\", words = [\"step\",\"steps\",\"stripe\",\"stepple\"]\nOutput: \"steps\"\nExplanation: licensePlate contains letters 's', 'p', 's' (ignoring case), and 't'.\n\"step\" contains 't' and 'p', but only contains 1 's'.\n\"steps\" contains 't', 'p', and both 's' characters.\n\"stripe\" is missing an 's'.\n\"stepple\" is missing an 's'.\nSince \"steps\" is the only word containing all the letters, that is the answer.\n\n\nExample 2:\n\nInput: licensePlate = \"1s3 456\", words = [\"looks\",\"pest\",\"stew\",\"show\"]\nOutput: \"pest\"\nExplanation: licensePlate only contains the letter 's'. All the words contain 's', but among these \"pest\", \"stew\", and \"show\" are shortest. The answer is \"pest\" because it is the word that appears earliest of the 3.\n\n\nExample 3:\n\nInput: licensePlate = \"Ah71752\", words = [\"suggest\",\"letter\",\"of\",\"husband\",\"easy\",\"education\",\"drug\",\"prevent\",\"writer\",\"old\"]\nOutput: \"husband\"\n\n\nExample 4:\n\nInput: licensePlate = \"OgEu755\", words = [\"enough\",\"these\",\"play\",\"wide\",\"wonder\",\"box\",\"arrive\",\"money\",\"tax\",\"thus\"]\nOutput: \"enough\"\n\n\nExample 5:\n\nInput: licensePlate = \"iMSlpe4\", words = [\"claim\",\"consumer\",\"student\",\"camera\",\"public\",\"never\",\"wonder\",\"simple\",\"thought\",\"use\"]\nOutput: \"simple\"\n\n\n \n\nConstraints:\n\n1 <= licensePlate.length <= 7\nlicensePlate contains digits, letters (uppercase or lowercase), or space ' '.\n1 <= words.length <= 1000\n1 <= words[i].length <= 15\nwords[i] consists of lower case English letters."},{"index":"749","url":"https://leetcode.com/problems/contain-virus","title":"Contain Virus","difficulty":"Hard","description":"A virus is spreading rapidly, and your task is to quarantine the infected area by installing walls.\n\nThe world is modeled as a 2-D array of cells, where 0 represents uninfected cells, and 1 represents cells contaminated with the virus. A wall (and only one wall) can be installed between any two 4-directionally adjacent cells, on the shared boundary.\n\nEvery night, the virus spreads to all neighboring cells in all four directions unless blocked by a wall. Resources are limited. Each day, you can install walls around only one region -- the affected area (continuous block of infected cells) that threatens the most uninfected cells the following night. There will never be a tie.\n\nCan you save the day? If so, what is the number of walls required? If not, and the world becomes fully infected, return the number of walls used.\n\nExample 1:\n\n\nInput: grid = \n[[0,1,0,0,0,0,0,1],\n [0,1,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,0]]\nOutput: 10\nExplanation:\nThere are 2 contaminated regions.\nOn the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:\n\n[[0,1,0,0,0,0,1,1],\n [0,1,0,0,0,0,1,1],\n [0,0,0,0,0,0,1,1],\n [0,0,0,0,0,0,0,1]]\n\nOn the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.\n\n\nExample 2:\n\n\nInput: grid = \n[[1,1,1],\n [1,0,1],\n [1,1,1]]\nOutput: 4\nExplanation: Even though there is only one cell saved, there are 4 walls built.\nNotice that walls are only built on the shared boundary of two different cells.\n\n\nExample 3:\n\n\nInput: grid = \n[[1,1,1,0,0,0,0,0,0],\n [1,0,1,0,1,1,1,1,1],\n [1,1,1,0,0,0,0,0,0]]\nOutput: 13\nExplanation: The region on the left only builds two new walls.\n\n\nNote:\n\n\nThe number of rows and columns of grid will each be in the range [1, 50].\nEach grid[i][j] will be either 0 or 1.\nThroughout the described process, there is always a contiguous viral region that will infect strictly more uncontaminated squares in the next round."},{"index":"752","url":"https://leetcode.com/problems/open-the-lock","title":"Open the Lock","difficulty":"Medium","description":"You have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'. The wheels can rotate freely and wrap around: for example we can turn '9' to be '0', or '0' to be '9'. Each move consists of turning one wheel one slot.\n\nThe lock initially starts at '0000', a string representing the state of the 4 wheels.\n\nYou are given a list of deadends dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.\n\nGiven a target representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.\n\n \n\nExample 1:\n\nInput: deadends = [\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"], target = \"0202\"\nOutput: 6\nExplanation:\nA sequence of valid moves would be \"0000\" -> \"1000\" -> \"1100\" -> \"1200\" -> \"1201\" -> \"1202\" -> \"0202\".\nNote that a sequence like \"0000\" -> \"0001\" -> \"0002\" -> \"0102\" -> \"0202\" would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end \"0102\".\n\n\nExample 2:\n\nInput: deadends = [\"8888\"], target = \"0009\"\nOutput: 1\nExplanation:\nWe can turn the last wheel in reverse to move from \"0000\" -> \"0009\".\n\n\nExample 3:\n\nInput: deadends = [\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"], target = \"8888\"\nOutput: -1\nExplanation:\nWe can't reach the target without getting stuck.\n\n\nExample 4:\n\nInput: deadends = [\"0000\"], target = \"8888\"\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= deadends.length <= 500\ndeadends[i].length == 4\ntarget.length == 4\ntarget will not be in the list deadends.\ntarget and deadends[i] consist of digits only."},{"index":"753","url":"https://leetcode.com/problems/cracking-the-safe","title":"Cracking the Safe","difficulty":"Hard","description":"There is a box protected by a password. The password is a sequence of n digits where each digit can be one of the first k digits 0, 1, ..., k-1.\n\nWhile entering a password, the last n digits entered will automatically be matched against the correct password.\n\nFor example, assuming the correct password is \"345\", if you type \"012345\", the box will open because the correct password matches the suffix of the entered password.\n\nReturn any password of minimum length that is guaranteed to open the box at some point of entering it.\n\n \n\nExample 1:\n\nInput: n = 1, k = 2\nOutput: \"01\"\nNote: \"10\" will be accepted too.\n\n\nExample 2:\n\nInput: n = 2, k = 2\nOutput: \"00110\"\nNote: \"01100\", \"10011\", \"11001\" will be accepted too.\n\n\n \n\nNote:\n\nn will be in the range [1, 4].\nk will be in the range [1, 10].\nk^n will be at most 4096.\n\n "},{"index":"754","url":"https://leetcode.com/problems/reach-a-number","title":"Reach a Number","difficulty":"Medium","description":"You are standing at position 0 on an infinite number line. There is a goal at position target.\n\nOn each move, you can either go left or right. During the n-th move (starting from 1), you take n steps.\n\nReturn the minimum number of steps required to reach the destination.\n\nExample 1:\n\n\nInput: target = 3\nOutput: 2\nExplanation:\nOn the first move we step from 0 to 1.\nOn the second step we step from 1 to 3.\n\n\nExample 2:\n\n\nInput: target = 2\nOutput: 3\nExplanation:\nOn the first move we step from 0 to 1.\nOn the second move we step  from 1 to -1.\nOn the third move we step from -1 to 2.\n\n\nNote:\n\n\ntarget will be a non-zero integer in the range [-10^9, 10^9]."},{"index":"756","url":"https://leetcode.com/problems/pyramid-transition-matrix","title":"Pyramid Transition Matrix","difficulty":"Medium","description":"We are stacking blocks to form a pyramid. Each block has a color which is a one letter string.\n\nWe are allowed to place any color block C on top of two adjacent blocks of colors A and B, if and only if ABC is an allowed triple.\n\nWe start with a bottom row of bottom, represented as a single string. We also start with a list of allowed triples allowed. Each allowed triple is represented as a string of length 3.\n\nReturn true if we can build the pyramid all the way to the top, otherwise false.\n\nExample 1:\n\nInput: bottom = \"BCD\", allowed = [\"BCG\", \"CDE\", \"GEA\", \"FFF\"]\nOutput: true\nExplanation:\nWe can stack the pyramid like this:\n    A\n   / \\\n  G   E\n / \\ / \\\nB   C   D\n\nWe are allowed to place G on top of B and C because BCG is an allowed triple.  Similarly, we can place E on top of C and D, then A on top of G and E.\n\n \n\nExample 2:\n\nInput: bottom = \"AABA\", allowed = [\"AAA\", \"AAB\", \"ABA\", \"ABB\", \"BAC\"]\nOutput: false\nExplanation:\nWe can't stack the pyramid to the top.\nNote that there could be allowed triples (A, B, C) and (A, B, D) with C != D.\n\n\n \n\nConstraints:\n\nbottom will be a string with length in range [2, 8].\nallowed will have length in range [0, 200].\nLetters in all strings will be chosen from the set {'A', 'B', 'C', 'D', 'E', 'F', 'G'}."},{"index":"757","url":"https://leetcode.com/problems/set-intersection-size-at-least-two","title":"Set Intersection Size At Least Two","difficulty":"Hard","description":"An integer interval [a, b] (for integers a < b) is a set of all consecutive integers from a to b, including a and b.\n\nFind the minimum size of a set S such that for every integer interval A in intervals, the intersection of S with A has size at least 2.\n\nExample 1:\n\n\nInput: intervals = [[1, 3], [1, 4], [2, 5], [3, 5]]\nOutput: 3\nExplanation:\nConsider the set S = {2, 3, 4}.  For each interval, there are at least 2 elements from S in the interval.\nAlso, there isn't a smaller size set that fulfills the above condition.\nThus, we output the size of this set, which is 3.\n\n\nExample 2:\n\n\nInput: intervals = [[1, 2], [2, 3], [2, 4], [4, 5]]\nOutput: 5\nExplanation:\nAn example of a minimum sized set is {1, 2, 3, 4, 5}.\n\n\nNote:\n\n\nintervals will have length in range [1, 3000].\nintervals[i] will have length 2, representing some integer interval.\nintervals[i][j] will be an integer in [0, 10^8]."},{"index":"761","url":"https://leetcode.com/problems/special-binary-string","title":"Special Binary String","difficulty":"Hard","description":"Special binary strings are binary strings with the following two properties:\n\nThe number of 0's is equal to the number of 1's.\nEvery prefix of the binary string has at least as many 1's as 0's.\n\nGiven a special string S, a move consists of choosing two consecutive, non-empty, special substrings of S, and swapping them. (Two strings are consecutive if the last character of the first string is exactly one index before the first character of the second string.)\n\nAt the end of any number of moves, what is the lexicographically largest resulting string possible?\n\nExample 1:\n\n\nInput: S = \"11011000\"\nOutput: \"11100100\"\nExplanation:\nThe strings \"10\" [occuring at S[1]] and \"1100\" [at S[3]] are swapped.\nThis is the lexicographically largest string possible after some number of swaps.\n\n\nNote:\n\nS has length at most 50.\nS is guaranteed to be a special binary string as defined above."},{"index":"762","url":"https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation","title":"Prime Number of Set Bits in Binary Representation","difficulty":"Easy","description":"Given two integers L and R, find the count of numbers in the range [L, R] (inclusive) having a prime number of set bits in their binary representation.\n\n(Recall that the number of set bits an integer has is the number of 1s present when written in binary. For example, 21 written in binary is 10101 which has 3 set bits. Also, 1 is not a prime.)\n\nExample 1:\n\n\nInput: L = 6, R = 10\nOutput: 4\nExplanation:\n6 -> 110 (2 set bits, 2 is prime)\n7 -> 111 (3 set bits, 3 is prime)\n9 -> 1001 (2 set bits , 2 is prime)\n10->1010 (2 set bits , 2 is prime)\n\n\nExample 2:\n\n\nInput: L = 10, R = 15\nOutput: 5\nExplanation:\n10 -> 1010 (2 set bits, 2 is prime)\n11 -> 1011 (3 set bits, 3 is prime)\n12 -> 1100 (2 set bits, 2 is prime)\n13 -> 1101 (3 set bits, 3 is prime)\n14 -> 1110 (3 set bits, 3 is prime)\n15 -> 1111 (4 set bits, 4 is not prime)\n\n\nNote:\n\n\nL, R will be integers L <= R in the range [1, 10^6].\nR - L will be at most 10000."},{"index":"763","url":"https://leetcode.com/problems/partition-labels","title":"Partition Labels","difficulty":"Medium","description":"A string S of lowercase English letters is given. We want to partition this string into as many parts as possible so that each letter appears in at most one part, and return a list of integers representing the size of these parts.\n\n \n\nExample 1:\n\nInput: S = \"ababcbacadefegdehijhklij\"\nOutput: [9,7,8]\nExplanation:\nThe partition is \"ababcbaca\", \"defegde\", \"hijhklij\".\nThis is a partition so that each letter appears in at most one part.\nA partition like \"ababcbacadefegde\", \"hijhklij\" is incorrect, because it splits S into less parts.\n\n\n \n\nNote:\n\nS will have length in range [1, 500].\nS will consist of lowercase English letters ('a' to 'z') only.\n\n "},{"index":"764","url":"https://leetcode.com/problems/largest-plus-sign","title":"Largest Plus Sign","difficulty":"Medium","description":"In a 2D grid from (0, 0) to (N-1, N-1), every cell contains a 1, except those cells in the given list mines which are 0. What is the largest axis-aligned plus sign of 1s contained in the grid? Return the order of the plus sign. If there is none, return 0.\n\nAn \"axis-aligned plus sign of 1s of order k\" has some center grid[x][y] = 1 along with 4 arms of length k-1 going up, down, left, and right, and made of 1s. This is demonstrated in the diagrams below. Note that there could be 0s or 1s beyond the arms of the plus sign, only the relevant area of the plus sign is checked for 1s.\n\nExamples of Axis-Aligned Plus Signs of Order k:\n\n\nOrder 1:\n000\n010\n000\n\nOrder 2:\n00000\n00100\n01110\n00100\n00000\n\nOrder 3:\n0000000\n0001000\n0001000\n0111110\n0001000\n0001000\n0000000\n\n\nExample 1:\n\n\nInput: N = 5, mines = [[4, 2]]\nOutput: 2\nExplanation:\n11111\n11111\n11111\n11111\n11011\nIn the above grid, the largest plus sign can only be order 2.  One of them is marked in bold.\n\n\nExample 2:\n\n\nInput: N = 2, mines = []\nOutput: 1\nExplanation:\nThere is no plus sign of order 2, but there is of order 1.\n\n\nExample 3:\n\n\nInput: N = 1, mines = [[0, 0]]\nOutput: 0\nExplanation:\nThere is no plus sign, so return 0.\n\n\nNote:\n\n\nN will be an integer in the range [1, 500].\nmines will have length at most 5000.\nmines[i] will be length 2 and consist of integers in the range [0, N-1].\n(Additionally, programs submitted in C, C++, or C# will be judged with a slightly smaller time limit.)"},{"index":"765","url":"https://leetcode.com/problems/couples-holding-hands","title":"Couples Holding Hands","difficulty":"Hard","description":"N couples sit in 2N seats arranged in a row and want to hold hands. We want to know the minimum number of swaps so that every couple is sitting side by side. A swap consists of choosing any two people, then they stand up and switch seats.\n\nThe people and seats are represented by an integer from 0 to 2N-1, the couples are numbered in order, the first couple being (0, 1), the second couple being (2, 3), and so on with the last couple being (2N-2, 2N-1).\n\nThe couples' initial seating is given by row[i] being the value of the person who is initially sitting in the i-th seat.\n\nExample 1:\n\n\nInput: row = [0, 2, 1, 3]\nOutput: 1\nExplanation: We only need to swap the second (row[1]) and third (row[2]) person.\n\n\nExample 2:\n\n\nInput: row = [3, 2, 0, 1]\nOutput: 0\nExplanation: All couples are already seated side by side.\n\n\nNote:\n\nlen(row) is even and in the range of [4, 60].\nrow is guaranteed to be a permutation of 0...len(row)-1."},{"index":"766","url":"https://leetcode.com/problems/toeplitz-matrix","title":"Toeplitz Matrix","difficulty":"Easy","description":"Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.\n\nA matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.\n\n \n\nExample 1:\n\nInput: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]\nOutput: true\nExplanation:\nIn the above grid, the diagonals are:\n\"[9]\", \"[5, 5]\", \"[1, 1, 1]\", \"[2, 2, 2]\", \"[3, 3]\", \"[4]\".\nIn each diagonal all elements are the same, so the answer is True.\n\n\nExample 2:\n\nInput: matrix = [[1,2],[2,2]]\nOutput: false\nExplanation:\nThe diagonal \"[1, 2]\" has different elements.\n\n\n \n\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 20\n0 <= matrix[i][j] <= 99\n\n \n\nFollow up:\n\nWhat if the matrix is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?\nWhat if the matrix is so large that you can only load up a partial row into the memory at once?"},{"index":"767","url":"https://leetcode.com/problems/reorganize-string","title":"Reorganize String","difficulty":"Medium","description":"Given a string S, check if the letters can be rearranged so that two characters that are adjacent to each other are not the same.\n\nIf possible, output any possible result.  If not possible, return the empty string.\n\nExample 1:\n\nInput: S = \"aab\"\nOutput: \"aba\"\n\n\nExample 2:\n\nInput: S = \"aaab\"\nOutput: \"\"\n\n\nNote:\n\nS will consist of lowercase letters and have length in range [1, 500].\n\n "},{"index":"768","url":"https://leetcode.com/problems/max-chunks-to-make-sorted-ii","title":"Max Chunks To Make Sorted II","difficulty":"Hard","description":"This question is the same as \"Max Chunks to Make Sorted\" except the integers of the given array are not necessarily distinct, the input array could be up to length 2000, and the elements could be up to 10**8.\n\nGiven an array arr of integers (not necessarily distinct), we split the array into some number of \"chunks\" (partitions), and individually sort each chunk.  After concatenating them, the result equals the sorted array.\n\nWhat is the most number of chunks we could have made?\n\nExample 1:\n\nInput: arr = [5,4,3,2,1]\nOutput: 1\nExplanation:\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [5, 4], [3, 2, 1] will result in [4, 5, 1, 2, 3], which isn't sorted.\n\n\nExample 2:\n\nInput: arr = [2,1,3,4,4]\nOutput: 4\nExplanation:\nWe can split into two chunks, such as [2, 1], [3, 4, 4].\nHowever, splitting into [2, 1], [3], [4], [4] is the highest number of chunks possible.\n\n\nNote:\n\narr will have length in range [1, 2000].\narr[i] will be an integer in range [0, 10**8].\n\n "},{"index":"769","url":"https://leetcode.com/problems/max-chunks-to-make-sorted","title":"Max Chunks To Make Sorted","difficulty":"Medium","description":"Given an array arr that is a permutation of [0, 1, ..., arr.length - 1], we split the array into some number of \"chunks\" (partitions), and individually sort each chunk.  After concatenating them, the result equals the sorted array.\n\nWhat is the most number of chunks we could have made?\n\nExample 1:\n\nInput: arr = [4,3,2,1,0]\nOutput: 1\nExplanation:\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn't sorted.\n\n\nExample 2:\n\nInput: arr = [1,0,2,3,4]\nOutput: 4\nExplanation:\nWe can split into two chunks, such as [1, 0], [2, 3, 4].\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.\n\n\nNote:\n\narr will have length in range [1, 10].\narr[i] will be a permutation of [0, 1, ..., arr.length - 1].\n\n "},{"index":"770","url":"https://leetcode.com/problems/basic-calculator-iv","title":"Basic Calculator IV","difficulty":"Hard","description":"Given an expression such as expression = \"e + 8 - a + 5\" and an evaluation map such as {\"e\": 1} (given in terms of evalvars = [\"e\"] and evalints = [1]), return a list of tokens representing the simplified expression, such as [\"-1*a\",\"14\"]\n\nAn expression alternates chunks and symbols, with a space separating each chunk and symbol.\nA chunk is either an expression in parentheses, a variable, or a non-negative integer.\nA variable is a string of lowercase letters (not including digits.) Note that variables can be multiple letters, and note that variables never have a leading coefficient or unary operator like \"2x\" or \"-x\".\n\nExpressions are evaluated in the usual order: brackets first, then multiplication, then addition and subtraction. For example, expression = \"1 + 2 * 3\" has an answer of [\"7\"].\n\nThe format of the output is as follows:\n\nFor each term of free variables with non-zero coefficient, we write the free variables within a term in sorted order lexicographically. For example, we would never write a term like \"b*a*c\", only \"a*b*c\".\nTerms have degree equal to the number of free variables being multiplied, counting multiplicity. (For example, \"a*a*b*c\" has degree 4.) We write the largest degree terms of our answer first, breaking ties by lexicographic order ignoring the leading coefficient of the term.\nThe leading coefficient of the term is placed directly to the left with an asterisk separating it from the variables (if they exist.)  A leading coefficient of 1 is still printed.\nAn example of a well formatted answer is [\"-2*a*a*a\", \"3*a*a*b\", \"3*b*b\", \"4*a\", \"5*c\", \"-6\"] \nTerms (including constant terms) with coefficient 0 are not included.  For example, an expression of \"0\" has an output of [].\n\nExamples:\n\nInput: expression = \"e + 8 - a + 5\", evalvars = [\"e\"], evalints = [1]\nOutput: [\"-1*a\",\"14\"]\n\nInput: expression = \"e - 8 + temperature - pressure\",\nevalvars = [\"e\", \"temperature\"], evalints = [1, 12]\nOutput: [\"-1*pressure\",\"5\"]\n\nInput: expression = \"(e + 8) * (e - 8)\", evalvars = [], evalints = []\nOutput: [\"1*e*e\",\"-64\"]\n\nInput: expression = \"7 - 7\", evalvars = [], evalints = []\nOutput: []\n\nInput: expression = \"a * b * c + b * a * c * 4\", evalvars = [], evalints = []\nOutput: [\"5*a*b*c\"]\n\nInput: expression = \"((a - b) * (b - c) + (c - a)) * ((a - b) + (b - c) * (c - a))\",\nevalvars = [], evalints = []\nOutput: [\"-1*a*a*b*b\",\"2*a*a*b*c\",\"-1*a*a*c*c\",\"1*a*b*b*b\",\"-1*a*b*b*c\",\"-1*a*b*c*c\",\"1*a*c*c*c\",\"-1*b*b*b*c\",\"2*b*b*c*c\",\"-1*b*c*c*c\",\"2*a*a*b\",\"-2*a*a*c\",\"-2*a*b*b\",\"2*a*c*c\",\"1*b*b*b\",\"-1*b*b*c\",\"1*b*c*c\",\"-1*c*c*c\",\"-1*a*a\",\"1*a*b\",\"1*a*c\",\"-1*b*c\"]\n\n\nNote:\n\nexpression will have length in range [1, 250].\nevalvars, evalints will have equal lengths in range [0, 100]."},{"index":"771","url":"https://leetcode.com/problems/jewels-and-stones","title":"Jewels and Stones","difficulty":"Easy","description":"You're given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.\n\nThe letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so \"a\" is considered a different type of stone from \"A\".\n\nExample 1:\n\nInput: J = \"aA\", S = \"aAAbbbb\"\nOutput: 3\n\n\nExample 2:\n\nInput: J = \"z\", S = \"ZZ\"\nOutput: 0\n\n\nNote:\n\nS and J will consist of letters and have length at most 50.\nThe characters in J are distinct."},{"index":"773","url":"https://leetcode.com/problems/sliding-puzzle","title":"Sliding Puzzle","difficulty":"Hard","description":"On a 2x3 board, there are 5 tiles represented by the integers 1 through 5, and an empty square represented by 0.\n\nA move consists of choosing 0 and a 4-directionally adjacent number and swapping it.\n\nThe state of the board is solved if and only if the board is [[1,2,3],[4,5,0]].\n\nGiven a puzzle board, return the least number of moves required so that the state of the board is solved. If it is impossible for the state of the board to be solved, return -1.\n\nExamples:\n\nInput: board = [[1,2,3],[4,0,5]]\nOutput: 1\nExplanation: Swap the 0 and the 5 in one move.\n\nInput: board = [[1,2,3],[5,4,0]]\nOutput: -1\nExplanation: No number of moves will make the board solved.\n\nInput: board = [[4,1,2],[5,0,3]]\nOutput: 5\nExplanation: 5 is the smallest number of moves that solves the board.\nAn example path:\nAfter move 0: [[4,1,2],[5,0,3]]\nAfter move 1: [[4,1,2],[0,5,3]]\nAfter move 2: [[0,1,2],[4,5,3]]\nAfter move 3: [[1,0,2],[4,5,3]]\nAfter move 4: [[1,2,0],[4,5,3]]\nAfter move 5: [[1,2,3],[4,5,0]]\n\nInput: board = [[3,2,4],[1,5,0]]\nOutput: 14\n\n\nNote:\n\nboard will be a 2 x 3 array as described above.\nboard[i][j] will be a permutation of [0, 1, 2, 3, 4, 5]."},{"index":"775","url":"https://leetcode.com/problems/global-and-local-inversions","title":"Global and Local Inversions","difficulty":"Medium","description":"We have some permutation A of [0, 1, ..., N - 1], where N is the length of A.\n\nThe number of (global) inversions is the number of i < j with 0 <= i < j < N and A[i] > A[j].\n\nThe number of local inversions is the number of i with 0 <= i < N and A[i] > A[i+1].\n\nReturn true if and only if the number of global inversions is equal to the number of local inversions.\n\nExample 1:\n\nInput: A = [1,0,2]\nOutput: true\nExplanation: There is 1 global inversion, and 1 local inversion.\n\n\nExample 2:\n\nInput: A = [1,2,0]\nOutput: false\nExplanation: There are 2 global inversions, and 1 local inversion.\n\n\nNote:\n\nA will be a permutation of [0, 1, ..., A.length - 1].\nA will have length in range [1, 5000].\nThe time limit for this problem has been reduced."},{"index":"777","url":"https://leetcode.com/problems/swap-adjacent-in-lr-string","title":"Swap Adjacent in LR String","difficulty":"Medium","description":"In a string composed of 'L', 'R', and 'X' characters, like \"RXXLRXRXL\", a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\". Given the starting string start and the ending string end, return True if and only if there exists a sequence of moves to transform one string to the other.\n\n \n\nExample 1:\n\nInput: start = \"RXXLRXRXL\", end = \"XRLXXRRLX\"\nOutput: true\nExplanation: We can transform start to end following these steps:\nRXXLRXRXL ->\nXRXLRXRXL ->\nXRLXRXRXL ->\nXRLXXRRXL ->\nXRLXXRRLX\n\n\nExample 2:\n\nInput: start = \"X\", end = \"L\"\nOutput: false\n\n\nExample 3:\n\nInput: start = \"LLR\", end = \"RRL\"\nOutput: false\n\n\nExample 4:\n\nInput: start = \"XL\", end = \"LX\"\nOutput: true\n\n\nExample 5:\n\nInput: start = \"XLLR\", end = \"LXLX\"\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= start.length <= 104\nstart.length == end.length\nBoth start and end will only consist of characters in 'L', 'R', and 'X'."},{"index":"778","url":"https://leetcode.com/problems/swim-in-rising-water","title":"Swim in Rising Water","difficulty":"Hard","description":"On an N x N grid, each square grid[i][j] represents the elevation at that point (i,j).\n\nNow rain starts to fall. At time t, the depth of the water everywhere is t. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are at most t. You can swim infinite distance in zero time. Of course, you must stay within the boundaries of the grid during your swim.\n\nYou start at the top left square (0, 0). What is the least time until you can reach the bottom right square (N-1, N-1)?\n\nExample 1:\n\nInput: [[0,2],[1,3]]\nOutput: 3\nExplanation:\nAt time 0, you are in grid location (0, 0).\nYou cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0.\n\nYou cannot reach point (1, 1) until time 3.\nWhen the depth of water is 3, we can swim anywhere inside the grid.\n\n\nExample 2:\n\nInput: [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\nOutput: 16\nExplanation:\n 0  1  2  3  4\n24 23 22 21  5\n12 13 14 15 16\n11 17 18 19 20\n10  9  8  7  6\n\nThe final route is marked in bold.\nWe need to wait until time 16 so that (0, 0) and (4, 4) are connected.\n\n\nNote:\n\n2 <= N <= 50.\ngrid[i][j] is a permutation of [0, ..., N*N - 1]."},{"index":"779","url":"https://leetcode.com/problems/k-th-symbol-in-grammar","title":"K-th Symbol in Grammar","difficulty":"Medium","description":"On the first row, we write a 0. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.\n\nGiven row N and index K, return the K-th indexed symbol in row N. (The values of K are 1-indexed.) (1 indexed).\n\nExamples:\nInput: N = 1, K = 1\nOutput: 0\n\nInput: N = 2, K = 1\nOutput: 0\n\nInput: N = 2, K = 2\nOutput: 1\n\nInput: N = 4, K = 5\nOutput: 1\n\nExplanation:\nrow 1: 0\nrow 2: 01\nrow 3: 0110\nrow 4: 01101001\n\n\nNote:\n\nN will be an integer in the range [1, 30].\nK will be an integer in the range [1, 2^(N-1)]."},{"index":"780","url":"https://leetcode.com/problems/reaching-points","title":"Reaching Points","difficulty":"Hard","description":"A move consists of taking a point (x, y) and transforming it to either (x, x+y) or (x+y, y).\n\nGiven a starting point (sx, sy) and a target point (tx, ty), return True if and only if a sequence of moves exists to transform the point (sx, sy) to (tx, ty). Otherwise, return False.\n\nExamples:\nInput: sx = 1, sy = 1, tx = 3, ty = 5\nOutput: True\nExplanation:\nOne series of moves that transforms the starting point to the target is:\n(1, 1) -> (1, 2)\n(1, 2) -> (3, 2)\n(3, 2) -> (3, 5)\n\nInput: sx = 1, sy = 1, tx = 2, ty = 2\nOutput: False\n\nInput: sx = 1, sy = 1, tx = 1, ty = 1\nOutput: True\n\n\n\nNote:\n\nsx, sy, tx, ty will all be integers in the range [1, 10^9]."},{"index":"781","url":"https://leetcode.com/problems/rabbits-in-forest","title":"Rabbits in Forest","difficulty":"Medium","description":"In a forest, each rabbit has some color. Some subset of rabbits (possibly all of them) tell you how many other rabbits have the same color as them. Those answers are placed in an array.\n\nReturn the minimum number of rabbits that could be in the forest.\n\nExamples:\nInput: answers = [1, 1, 2]\nOutput: 5\nExplanation:\nThe two rabbits that answered \"1\" could both be the same color, say red.\nThe rabbit than answered \"2\" can't be red or the answers would be inconsistent.\nSay the rabbit that answered \"2\" was blue.\nThen there should be 2 other blue rabbits in the forest that didn't answer into the array.\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn't.\n\nInput: answers = [10, 10, 10]\nOutput: 11\n\nInput: answers = []\nOutput: 0\n\n\nNote:\n\nanswers will have length at most 1000.\nEach answers[i] will be an integer in the range [0, 999]."},{"index":"782","url":"https://leetcode.com/problems/transform-to-chessboard","title":"Transform to Chessboard","difficulty":"Hard","description":"An N x N board contains only 0s and 1s. In each move, you can swap any 2 rows with each other, or any 2 columns with each other.\n\nWhat is the minimum number of moves to transform the board into a \"chessboard\" - a board where no 0s and no 1s are 4-directionally adjacent? If the task is impossible, return -1.\n\nExamples:\nInput: board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]\nOutput: 2\nExplanation:\nOne potential sequence of moves is shown below, from left to right:\n\n0110     1010     1010\n0110 --> 1010 --> 0101\n1001     0101     1010\n1001     0101     0101\n\nThe first move swaps the first and second column.\nThe second move swaps the second and third row.\n\n\nInput: board = [[0, 1], [1, 0]]\nOutput: 0\nExplanation:\nAlso note that the board with 0 in the top left corner,\n01\n10\n\nis also a valid chessboard.\n\nInput: board = [[1, 0], [1, 0]]\nOutput: -1\nExplanation:\nNo matter what sequence of moves you make, you cannot end with a valid chessboard.\n\n\nNote:\n\nboard will have the same number of rows and columns, a number in the range [2, 30].\nboard[i][j] will be only 0s or 1s."},{"index":"783","url":"https://leetcode.com/problems/minimum-distance-between-bst-nodes","title":"Minimum Distance Between BST Nodes","difficulty":"Easy","description":"Given a Binary Search Tree (BST) with the root node root, return the minimum difference between the values of any two different nodes in the tree.\n\nExample :\n\nInput: root = [4,2,6,1,3,null,null]\nOutput: 1\nExplanation:\nNote that root is a TreeNode object, not an array.\n\nThe given tree [4,2,6,1,3,null,null] is represented by the following diagram:\n\n          4\n        /   \\\n      2      6\n     / \\    \n    1   3  \n\nwhile the minimum difference in this tree is 1, it occurs between node 1 and node 2, also between node 3 and node 2.\n\n\nNote:\n\nThe size of the BST will be between 2 and 100.\nThe BST is always valid, each node's value is an integer, and each node's value is different.\nThis question is the same as 530: https://leetcode.com/problems/minimum-absolute-difference-in-bst/"},{"index":"784","url":"https://leetcode.com/problems/letter-case-permutation","title":"Letter Case Permutation","difficulty":"Medium","description":"Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.\n\nReturn a list of all possible strings we could create. You can return the output in any order.\n\n \n\nExample 1:\n\nInput: S = \"a1b2\"\nOutput: [\"a1b2\",\"a1B2\",\"A1b2\",\"A1B2\"]\n\n\nExample 2:\n\nInput: S = \"3z4\"\nOutput: [\"3z4\",\"3Z4\"]\n\n\nExample 3:\n\nInput: S = \"12345\"\nOutput: [\"12345\"]\n\n\nExample 4:\n\nInput: S = \"0\"\nOutput: [\"0\"]\n\n\n \n\nConstraints:\n\nS will be a string with length between 1 and 12.\nS will consist only of letters or digits."},{"index":"785","url":"https://leetcode.com/problems/is-graph-bipartite","title":"Is Graph Bipartite?","difficulty":"Medium","description":"Given an undirected graph, return true if and only if it is bipartite.\n\nRecall that a graph is bipartite if we can split its set of nodes into two independent subsets A and B, such that every edge in the graph has one node in A and another node in B.\n\nThe graph is given in the following form: graph[i] is a list of indexes j for which the edge between nodes i and j exists.  Each node is an integer between 0 and graph.length - 1.  There are no self edges or parallel edges: graph[i] does not contain i, and it doesn't contain any element twice.\n\n \n\nExample 1:\n\nInput: graph = [[1,3],[0,2],[1,3],[0,2]]\nOutput: true\nExplanation: We can divide the vertices into two groups: {0, 2} and {1, 3}.\n\n\n\nExample 2:\n\nInput: graph = [[1,2,3],[0,2],[0,1,3],[0,2]]\nOutput: false\nExplanation: We cannot find a way to divide the set of nodes into two independent subsets.\n\n\n\n \n\nConstraints:\n\n1 <= graph.length <= 100\n0 <= graphp[i].length < 100\n0 <= graph[i][j] <= graph.length - 1\ngraph[i][j] != i\nAll the values of graph[i] are unique.\nThe graph is guaranteed to be undirected. "},{"index":"786","url":"https://leetcode.com/problems/k-th-smallest-prime-fraction","title":"K-th Smallest Prime Fraction","difficulty":"Hard","description":"A sorted list A contains 1, plus some number of primes.  Then, for every p < q in the list, we consider the fraction p/q.\n\nWhat is the K-th smallest fraction considered?  Return your answer as an array of ints, where answer[0] = p and answer[1] = q.\n\nExamples:\nInput: A = [1, 2, 3, 5], K = 3\nOutput: [2, 5]\nExplanation:\nThe fractions to be considered in sorted order are:\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3.\nThe third fraction is 2/5.\n\nInput: A = [1, 7], K = 1\nOutput: [1, 7]\n\n\nNote:\n\nA will have length between 2 and 2000.\nEach A[i] will be between 1 and 30000.\nK will be between 1 and A.length * (A.length - 1) / 2."},{"index":"787","url":"https://leetcode.com/problems/cheapest-flights-within-k-stops","title":"Cheapest Flights Within K Stops","difficulty":"Medium","description":"There are n cities connected by m flights. Each flight starts from city u and arrives at v with a price w.\n\nNow given all the cities and flights, together with starting city src and the destination dst, your task is to find the cheapest price from src to dst with up to k stops. If there is no such route, output -1.\n\nExample 1:\nInput: \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 1\nOutput: 200\nExplanation: \nThe graph looks like this:\n\n\nThe cheapest price from city 0 to city 2 with at most 1 stop costs 200, as marked red in the picture.\nExample 2:\nInput: \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 0\nOutput: 500\nExplanation: \nThe graph looks like this:\n\n\nThe cheapest price from city 0 to city 2 with at most 0 stop costs 500, as marked blue in the picture.\n\n\n \n\nConstraints:\n\nThe number of nodes n will be in range [1, 100], with nodes labeled from 0 to n - 1.\nThe size of flights will be in range [0, n * (n - 1) / 2].\nThe format of each flight will be (src, dst, price).\nThe price of each flight will be in the range [1, 10000].\nk is in the range of [0, n - 1].\nThere will not be any duplicated flights or self cycles."},{"index":"788","url":"https://leetcode.com/problems/rotated-digits","title":"Rotated Digits","difficulty":"Easy","description":"X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.\n\nA number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other (on this case they are rotated in a different direction, in other words 2 or 5 gets mirrored); 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.\n\nNow given a positive number N, how many numbers X from 1 to N are good?\n\nExample:\nInput: 10\nOutput: 4\nExplanation: \nThere are four good numbers in the range [1, 10] : 2, 5, 6, 9.\nNote that 1 and 10 are not good numbers, since they remain unchanged after rotating.\n\n\nNote:\n\nN  will be in range [1, 10000]."},{"index":"789","url":"https://leetcode.com/problems/escape-the-ghosts","title":"Escape The Ghosts","difficulty":"Medium","description":"You are playing a simplified PAC-MAN game on an infinite 2-D grid. You start at the point [0, 0], and you are given a destination point target = [xtarget, ytarget], which you are trying to get to. There are several ghosts on the map with their starting positions given as an array ghosts, where ghosts[i] = [xi, yi] represents the starting position of the ith ghost. All inputs are integral coordinates.\n\nEach turn, you and all the ghosts may independently choose to either move 1 unit in any of the four cardinal directions: north, east, south, or west or stay still. All actions happen simultaneously.\n\nYou escape if and only if you can reach the target before any ghost reaches you. If you reach any square (including the target) at the same time as a ghost, it does not count as an escape.\n\nReturn true if it is possible to escape, otherwise return false.\n\n \n\nExample 1:\n\nInput: ghosts = [[1,0],[0,3]], target = [0,1]\nOutput: true\nExplanation: You can reach the destination (0, 1) after 1 turn, while the ghosts located at (1, 0) and (0, 3) cannot catch up with you.\n\n\nExample 2:\n\nInput: ghosts = [[1,0]], target = [2,0]\nOutput: false\nExplanation: You need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.\n\n\nExample 3:\n\nInput: ghosts = [[2,0]], target = [1,0]\nOutput: false\nExplanation: The ghost can reach the target at the same time as you.\n\n\nExample 4:\n\nInput: ghosts = [[5,0],[-10,-2],[0,-5],[-2,-2],[-7,1]], target = [7,7]\nOutput: false\n\n\nExample 5:\n\nInput: ghosts = [[-1,0],[0,1],[-1,0],[0,1],[-1,0]], target = [0,0]\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= ghosts.length <= 100\nghosts[i].length == 2\n-104 <= xi, yi <= 104\nThere can be multiple ghosts in the same location.\ntarget.length == 2\n-104 <= xtarget, ytarget <= 104"},{"index":"790","url":"https://leetcode.com/problems/domino-and-tromino-tiling","title":"Domino and Tromino Tiling","difficulty":"Medium","description":"We have two types of tiles: a 2x1 domino shape, and an \"L\" tromino shape. These shapes may be rotated.\n\nXX  <- domino\n\nXX  <- \"L\" tromino\nX\n\n\nGiven N, how many ways are there to tile a 2 x N board? Return your answer modulo 10^9 + 7.\n\n(In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.)\n\nExample:\nInput: 3\nOutput: 5\nExplanation: \nThe five different ways are listed below, different letters indicates different tiles:\nXYZ XXZ XYY XXY XYY\nXYZ YYZ XZZ XYY XXY\n\nNote:\n\nN  will be in range [1, 1000].\n\n "},{"index":"791","url":"https://leetcode.com/problems/custom-sort-string","title":"Custom Sort String","difficulty":"Medium","description":"S and T are strings composed of lowercase letters. In S, no letter occurs more than once.\n\nS was sorted in some custom order previously. We want to permute the characters of T so that they match the order that S was sorted. More specifically, if x occurs before y in S, then x should occur before y in the returned string.\n\nReturn any permutation of T (as a string) that satisfies this property.\n\nExample :\nInput: \nS = \"cba\"\nT = \"abcd\"\nOutput: \"cbad\"\nExplanation: \n\"a\", \"b\", \"c\" appear in S, so the order of \"a\", \"b\", \"c\" should be \"c\", \"b\", and \"a\". \nSince \"d\" does not appear in S, it can be at any position in T. \"dcba\", \"cdba\", \"cbda\" are also valid outputs.\n\n\n \n\nNote:\n\nS has length at most 26, and no character is repeated in S.\nT has length at most 200.\nS and T consist of lowercase letters only."},{"index":"792","url":"https://leetcode.com/problems/number-of-matching-subsequences","title":"Number of Matching Subsequences","difficulty":"Medium","description":"Given string S and a dictionary of words words, find the number of words[i] that is a subsequence of S.\n\nExample :\nInput: \nS = \"abcde\"\nwords = [\"a\", \"bb\", \"acd\", \"ace\"]\nOutput: 3\nExplanation: There are three words in words that are a subsequence of S: \"a\", \"acd\", \"ace\".\n\n\nNote:\n\nAll words in words and S will only consists of lowercase letters.\nThe length of S will be in the range of [1, 50000].\nThe length of words will be in the range of [1, 5000].\nThe length of words[i] will be in the range of [1, 50]."},{"index":"793","url":"https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function","title":"Preimage Size of Factorial Zeroes Function","difficulty":"Hard","description":"Let f(x) be the number of zeroes at the end of x!. (Recall that x! = 1 * 2 * 3 * ... * x, and by convention, 0! = 1.)\n\nFor example, f(3) = 0 because 3! = 6 has no zeroes at the end, while f(11) = 2 because 11! = 39916800 has 2 zeroes at the end. Given K, find how many non-negative integers x have the property that f(x) = K.\n\nExample 1:\nInput: K = 0\nOutput: 5\nExplanation: 0!, 1!, 2!, 3!, and 4! end with K = 0 zeroes.\n\nExample 2:\nInput: K = 5\nOutput: 0\nExplanation: There is no x such that x! ends in K = 5 zeroes.\n\n\nNote:\n\nK will be an integer in the range [0, 10^9]."},{"index":"794","url":"https://leetcode.com/problems/valid-tic-tac-toe-state","title":"Valid Tic-Tac-Toe State","difficulty":"Medium","description":"A Tic-Tac-Toe board is given as a string array board. Return True if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.\n\nThe board is a 3 x 3 array, and consists of characters \" \", \"X\", and \"O\".  The \" \" character represents an empty square.\n\nHere are the rules of Tic-Tac-Toe:\n\nPlayers take turns placing characters into empty squares (\" \").\nThe first player always places \"X\" characters, while the second player always places \"O\" characters.\n\"X\" and \"O\" characters are always placed into empty squares, never filled ones.\nThe game ends when there are 3 of the same (non-empty) character filling any row, column, or diagonal.\nThe game also ends if all squares are non-empty.\nNo more moves can be played if the game is over.\nExample 1:\nInput: board = [\"O  \", \"   \", \"   \"]\nOutput: false\nExplanation: The first player always plays \"X\".\n\nExample 2:\nInput: board = [\"XOX\", \" X \", \"   \"]\nOutput: false\nExplanation: Players take turns making moves.\n\nExample 3:\nInput: board = [\"XXX\", \"   \", \"OOO\"]\nOutput: false\n\nExample 4:\nInput: board = [\"XOX\", \"O O\", \"XOX\"]\nOutput: true\n\n\nNote:\n\nboard is a length-3 array of strings, where each string board[i] has length 3.\nEach board[i][j] is a character in the set {\" \", \"X\", \"O\"}."},{"index":"795","url":"https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum","title":"Number of Subarrays with Bounded Maximum","difficulty":"Medium","description":"We are given an array A of positive integers, and two positive integers L and R (L <= R).\n\nReturn the number of (contiguous, non-empty) subarrays such that the value of the maximum array element in that subarray is at least L and at most R.\n\nExample :\nInput: \nA = [2, 1, 4, 3]\nL = 2\nR = 3\nOutput: 3\nExplanation: There are three subarrays that meet the requirements: [2], [2, 1], [3].\n\n\nNote:\n\nL, R  and A[i] will be an integer in the range [0, 10^9].\nThe length of A will be in the range of [1, 50000]."},{"index":"796","url":"https://leetcode.com/problems/rotate-string","title":"Rotate String","difficulty":"Easy","description":"We are given two strings, A and B.\n\nA shift on A consists of taking string A and moving the leftmost character to the rightmost position. For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. Return True if and only if A can become B after some number of shifts on A.\n\nExample 1:\nInput: A = 'abcde', B = 'cdeab'\nOutput: true\n\nExample 2:\nInput: A = 'abcde', B = 'abced'\nOutput: false\n\n\nNote:\n\nA and B will have length at most 100."},{"index":"797","url":"https://leetcode.com/problems/all-paths-from-source-to-target","title":"All Paths From Source to Target","difficulty":"Medium","description":"Given a directed acyclic graph (DAG) of n nodes labeled from 0 to n - 1, find all possible paths from node 0 to node n - 1, and return them in any order.\n\nThe graph is given as follows: graph[i] is a list of all nodes you can visit from node i (i.e., there is a directed edge from node i to node graph[i][j]).\n\n \n\nExample 1:\n\nInput: graph = [[1,2],[3],[3],[]]\nOutput: [[0,1,3],[0,2,3]]\nExplanation: There are two paths: 0 -> 1 -> 3 and 0 -> 2 -> 3.\n\n\nExample 2:\n\nInput: graph = [[4,3,1],[3,2,4],[3],[4],[]]\nOutput: [[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]\n\n\nExample 3:\n\nInput: graph = [[1],[]]\nOutput: [[0,1]]\n\n\nExample 4:\n\nInput: graph = [[1,2,3],[2],[3],[]]\nOutput: [[0,1,2,3],[0,2,3],[0,3]]\n\n\nExample 5:\n\nInput: graph = [[1,3],[2],[3],[]]\nOutput: [[0,1,2,3],[0,3]]\n\n\n \n\nConstraints:\n\nn == graph.length\n2 <= n <= 15\n0 <= graph[i][j] < n\ngraph[i][j] != i (i.e., there will be no self-loops).\nThe input graph is guaranteed to be a DAG."},{"index":"798","url":"https://leetcode.com/problems/smallest-rotation-with-highest-score","title":"Smallest Rotation with Highest Score","difficulty":"Hard","description":" Given an array A, we may rotate it by a non-negative integer K so that the array becomes A[K], A[K+1], A{K+2], ... A[A.length - 1], A[0], A[1], ..., A[K-1].  Afterward, any entries that are less than or equal to their index are worth 1 point. \n\nFor example, if we have [2, 4, 1, 3, 0], and we rotate by K = 2, it becomes [1, 3, 0, 2, 4].  This is worth 3 points because 1 > 0 [no points], 3 > 1 [no points], 0 <= 2 [one point], 2 <= 3 [one point], 4 <= 4 [one point].\n\nOver all possible rotations, return the rotation index K that corresponds to the highest score we could receive.  If there are multiple answers, return the smallest such index K.\n\nExample 1:\nInput: [2, 3, 1, 4, 0]\nOutput: 3\nExplanation:  \nScores for each K are listed below: \nK = 0,  A = [2,3,1,4,0],    score 2\nK = 1,  A = [3,1,4,0,2],    score 3\nK = 2,  A = [1,4,0,2,3],    score 3\nK = 3,  A = [4,0,2,3,1],    score 4\nK = 4,  A = [0,2,3,1,4],    score 3\n\n\nSo we should choose K = 3, which has the highest score.\n\n \n\nExample 2:\nInput: [1, 3, 0, 2, 4]\nOutput: 0\nExplanation:  A will always have 3 points no matter how it shifts.\nSo we will choose the smallest K, which is 0.\n\n\nNote:\n\nA will have length at most 20000.\nA[i] will be in the range [0, A.length]."},{"index":"799","url":"https://leetcode.com/problems/champagne-tower","title":"Champagne Tower","difficulty":"Medium","description":"We stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100th row.  Each glass holds one cup of champagne.\n\nThen, some champagne is poured into the first glass at the top.  When the topmost glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.  When those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.  (A glass at the bottom row has its excess champagne fall on the floor.)\n\nFor example, after one cup of champagne is poured, the top most glass is full.  After two cups of champagne are poured, the two glasses on the second row are half full.  After three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.  After four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.\n\nNow after pouring some non-negative integer cups of champagne, return how full the jth glass in the ith row is (both i and j are 0-indexed.)\n\n \n\nExample 1:\n\nInput: poured = 1, query_row = 1, query_glass = 1\nOutput: 0.00000\nExplanation: We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.\n\n\nExample 2:\n\nInput: poured = 2, query_row = 1, query_glass = 1\nOutput: 0.50000\nExplanation: We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.\n\n\nExample 3:\n\nInput: poured = 100000009, query_row = 33, query_glass = 17\nOutput: 1.00000\n\n\n \n\nConstraints:\n\n0 <= poured <= 109\n0 <= query_glass <= query_row < 100"},{"index":"801","url":"https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing","title":"Minimum Swaps To Make Sequences Increasing","difficulty":"Medium","description":"We have two integer sequences A and B of the same non-zero length.\n\nWe are allowed to swap elements A[i] and B[i].  Note that both elements are in the same index position in their respective sequences.\n\nAt the end of some number of swaps, A and B are both strictly increasing.  (A sequence is strictly increasing if and only if A[0] < A[1] < A[2] < ... < A[A.length - 1].)\n\nGiven A and B, return the minimum number of swaps to make both sequences strictly increasing.  It is guaranteed that the given input always makes it possible.\n\nExample:\nInput: A = [1,3,5,4], B = [1,2,3,7]\nOutput: 1\nExplanation: \nSwap A[3] and B[3].  Then the sequences are:\nA = [1, 3, 5, 7] and B = [1, 2, 3, 4]\nwhich are both strictly increasing.\n\n\nNote:\n\nA, B are arrays with the same length, and that length will be in the range [1, 1000].\nA[i], B[i] are integer values in the range [0, 2000]."},{"index":"802","url":"https://leetcode.com/problems/find-eventual-safe-states","title":"Find Eventual Safe States","difficulty":"Medium","description":"In a directed graph, we start at some node and every turn, walk along a directed edge of the graph.  If we reach a node that is terminal (that is, it has no outgoing directed edges), we stop.\n\nNow, say our starting node is eventually safe if and only if we must eventually walk to a terminal node.  More specifically, there exists a natural number K so that for any choice of where to walk, we must have stopped at a terminal node in less than K steps.\n\nWhich nodes are eventually safe?  Return them as an array in sorted order.\n\nThe directed graph has N nodes with labels 0, 1, ..., N-1, where N is the length of graph.  The graph is given in the following form: graph[i] is a list of labels j such that (i, j) is a directed edge of the graph.\n\nExample:\nInput: graph = [[1,2],[2,3],[5],[0],[5],[],[]]\nOutput: [2,4,5,6]\nHere is a diagram of the above graph.\n\n\n\nNote:\n\ngraph will have length at most 10000.\nThe number of edges in the graph will not exceed 32000.\nEach graph[i] will be a sorted list of different integers, chosen within the range [0, graph.length - 1]."},{"index":"803","url":"https://leetcode.com/problems/bricks-falling-when-hit","title":"Bricks Falling When Hit","difficulty":"Hard","description":"You are given an m x n binary grid, where each 1 represents a brick and 0 represents an empty space. A brick is stable if:\n\nIt is directly connected to the top of the grid, or\nAt least one other brick in its four adjacent cells is stable.\n\nYou are also given an array hits, which is a sequence of erasures we want to apply. Each time we want to erase the brick at the location hits[i] = (rowi, coli). The brick on that location (if it exists) will disappear. Some other bricks may no longer be stable because of that erasure and will fall. Once a brick falls, it is immediately erased from the grid (i.e., it does not land on other stable bricks).\n\nReturn an array result, where each result[i] is the number of bricks that will fall after the ith erasure is applied.\n\nNote that an erasure may refer to a location with no brick, and if it does, no bricks drop.\n\n \n\nExample 1:\n\nInput: grid = [[1,0,0,0],[1,1,1,0]], hits = [[1,0]]\nOutput: [2]\nExplanation: Starting with the grid:\n[[1,0,0,0],\n [1,1,1,0]]\nWe erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,1,1,0]]\nThe two underlined bricks are no longer stable as they are no longer connected to the top nor adjacent to another stable brick, so they will fall. The resulting grid is:\n[[1,0,0,0],\n [0,0,0,0]]\nHence the result is [2].\n\n\nExample 2:\n\nInput: grid = [[1,0,0,0],[1,1,0,0]], hits = [[1,1],[1,0]]\nOutput: [0,0]\nExplanation: Starting with the grid:\n[[1,0,0,0],\n [1,1,0,0]]\nWe erase the underlined brick at (1,1), resulting in the grid:\n[[1,0,0,0],\n [1,0,0,0]]\nAll remaining bricks are still stable, so no bricks fall. The grid remains the same:\n[[1,0,0,0],\n [1,0,0,0]]\nNext, we erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,0,0,0]]\nOnce again, all remaining bricks are still stable, so no bricks fall.\nHence the result is [0,0].\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 200\ngrid[i][j] is 0 or 1.\n1 <= hits.length <= 4 * 104\nhits[i].length == 2\n0 <= xi <= m - 1\n0 <= yi <= n - 1\nAll (xi, yi) are unique."},{"index":"804","url":"https://leetcode.com/problems/unique-morse-code-words","title":"Unique Morse Code Words","difficulty":"Easy","description":"International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: \"a\" maps to \".-\", \"b\" maps to \"-...\", \"c\" maps to \"-.-.\", and so on.\n\nFor convenience, the full table for the 26 letters of the English alphabet is given below:\n\n[\".-\",\"-...\",\"-.-.\",\"-..\",\".\",\"..-.\",\"--.\",\"....\",\"..\",\".---\",\"-.-\",\".-..\",\"--\",\"-.\",\"---\",\".--.\",\"--.-\",\".-.\",\"...\",\"-\",\"..-\",\"...-\",\".--\",\"-..-\",\"-.--\",\"--..\"]\n\nNow, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, \"cab\" can be written as \"-.-..--...\", (which is the concatenation \"-.-.\" + \".-\" + \"-...\"). We'll call such a concatenation, the transformation of a word.\n\nReturn the number of different transformations among all words we have.\n\nExample:\nInput: words = [\"gin\", \"zen\", \"gig\", \"msg\"]\nOutput: 2\nExplanation: \nThe transformation of each word is:\n\"gin\" -> \"--...-.\"\n\"zen\" -> \"--...-.\"\n\"gig\" -> \"--...--.\"\n\"msg\" -> \"--...--.\"\n\nThere are 2 different transformations, \"--...-.\" and \"--...--.\".\n\n\nNote:\n\nThe length of words will be at most 100.\nEach words[i] will have length in range [1, 12].\nwords[i] will only consist of lowercase letters."},{"index":"805","url":"https://leetcode.com/problems/split-array-with-same-average","title":"Split Array With Same Average","difficulty":"Hard","description":"In a given integer array A, we must move every element of A to either list B or list C. (B and C initially start empty.)\n\nReturn true if and only if after such a move, it is possible that the average value of B is equal to the average value of C, and B and C are both non-empty.\n\nExample :\nInput: \n[1,2,3,4,5,6,7,8]\nOutput: true\nExplanation: We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have the average of 4.5.\n\n\nNote:\n\nThe length of A will be in the range [1, 30].\nA[i] will be in the range of [0, 10000].\n\n "},{"index":"806","url":"https://leetcode.com/problems/number-of-lines-to-write-string","title":"Number of Lines To Write String","difficulty":"Easy","description":"We are to write the letters of a given string S, from left to right into lines. Each line has maximum width 100 units, and if writing a letter would cause the width of the line to exceed 100 units, it is written on the next line. We are given an array widths, an array where widths[0] is the width of 'a', widths[1] is the width of 'b', ..., and widths[25] is the width of 'z'.\n\nNow answer two questions: how many lines have at least one character from S, and what is the width used by the last such line? Return your answer as an integer list of length 2.\n\n \n\nExample :\nInput: \nwidths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\nS = \"abcdefghijklmnopqrstuvwxyz\"\nOutput: [3, 60]\nExplanation: \nAll letters have the same length of 10. To write all 26 letters,\nwe need two full lines and one line with 60 units.\n\nExample :\nInput: \nwidths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\nS = \"bbbcccdddaaa\"\nOutput: [2, 4]\nExplanation: \nAll letters except 'a' have the same length of 10, and \n\"bbbcccdddaa\" will cover 9 * 10 + 2 * 4 = 98 units.\nFor the last 'a', it is written on the second line because\nthere is only 2 units left in the first line.\nSo the answer is 2 lines, plus 4 units in the second line.\n\n\n \n\nNote:\n\nThe length of S will be in the range [1, 1000].\nS will only contain lowercase letters.\nwidths is an array of length 26.\nwidths[i] will be in the range of [2, 10]."},{"index":"807","url":"https://leetcode.com/problems/max-increase-to-keep-city-skyline","title":"Max Increase to Keep City Skyline","difficulty":"Medium","description":"In a 2 dimensional array grid, each value grid[i][j] represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts can be different for different buildings). Height 0 is considered to be a building as well. \n\nAt the end, the \"skyline\" when viewed from all four directions of the grid, i.e. top, bottom, left, and right, must be the same as the skyline of the original grid. A city's skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See the following example.\n\nWhat is the maximum total sum that the height of the buildings can be increased?\n\nExample:\nInput: grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\nOutput: 35\nExplanation: \nThe grid is:\n[ [3, 0, 8, 4], \n  [2, 4, 5, 7],\n  [9, 2, 6, 3],\n  [0, 3, 1, 0] ]\n\nThe skyline viewed from top or bottom is: [9, 4, 8, 7]\nThe skyline viewed from left or right is: [8, 7, 9, 3]\n\nThe grid after increasing the height of buildings without affecting skylines is:\n\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]\n\n\n\nNotes:\n\n1 < grid.length = grid[0].length <= 50.\nAll heights grid[i][j] are in the range [0, 100].\nAll buildings in grid[i][j] occupy the entire grid cell: that is, they are a 1 x 1 x grid[i][j] rectangular prism."},{"index":"808","url":"https://leetcode.com/problems/soup-servings","title":"Soup Servings","difficulty":"Medium","description":"There are two types of soup: type A and type B. Initially we have N ml of each type of soup. There are four kinds of operations:\n\nServe 100 ml of soup A and 0 ml of soup B\nServe 75 ml of soup A and 25 ml of soup B\nServe 50 ml of soup A and 50 ml of soup B\nServe 25 ml of soup A and 75 ml of soup B\n\nWhen we serve some soup, we give it to someone and we no longer have it.  Each turn, we will choose from the four operations with equal probability 0.25. If the remaining volume of soup is not enough to complete the operation, we will serve as much as we can.  We stop once we no longer have some quantity of both types of soup.\n\nNote that we do not have the operation where all 100 ml's of soup B are used first.  \n\nReturn the probability that soup A will be empty first, plus half the probability that A and B become empty at the same time.\n\n \n\nExample:\nInput: N = 50\nOutput: 0.625\nExplanation: \nIf we choose the first two operations, A will become empty first. For the third operation, A and B will become empty at the same time. For the fourth operation, B will become empty first. So the total probability of A becoming empty first plus half the probability that A and B become empty at the same time, is 0.25 * (1 + 1 + 0.5 + 0) = 0.625.\n\n\n\nNotes:\n\n0 <= N <= 10^9. \nAnswers within 10^-6 of the true value will be accepted as correct."},{"index":"809","url":"https://leetcode.com/problems/expressive-words","title":"Expressive Words","difficulty":"Medium","description":"Sometimes people repeat letters to represent extra feeling, such as \"hello\" -> \"heeellooo\", \"hi\" -> \"hiiii\".  In these strings like \"heeellooo\", we have groups of adjacent letters that are all the same:  \"h\", \"eee\", \"ll\", \"ooo\".\n\nFor some given string S, a query word is stretchy if it can be made to be equal to S by any number of applications of the following extension operation: choose a group consisting of characters c, and add some number of characters c to the group so that the size of the group is 3 or more.\n\nFor example, starting with \"hello\", we could do an extension on the group \"o\" to get \"hellooo\", but we cannot get \"helloo\" since the group \"oo\" has size less than 3.  Also, we could do another extension like \"ll\" -> \"lllll\" to get \"helllllooo\".  If S = \"helllllooo\", then the query word \"hello\" would be stretchy because of these two extension operations: query = \"hello\" -> \"hellooo\" -> \"helllllooo\" = S.\n\nGiven a list of query words, return the number of words that are stretchy. \n\n \n\nExample:\nInput: \nS = \"heeellooo\"\nwords = [\"hello\", \"hi\", \"helo\"]\nOutput: 1\nExplanation: \nWe can extend \"e\" and \"o\" in the word \"hello\" to get \"heeellooo\".\nWe can't extend \"helo\" to get \"heeellooo\" because the group \"ll\" is not size 3 or more.\n\n\n \n\nConstraints:\n\n0 <= len(S) <= 100.\n0 <= len(words) <= 100.\n0 <= len(words[i]) <= 100.\nS and all words in words consist only of lowercase letters"},{"index":"810","url":"https://leetcode.com/problems/chalkboard-xor-game","title":"Chalkboard XOR Game","difficulty":"Hard","description":"We are given non-negative integers nums[i] which are written on a chalkboard.  Alice and Bob take turns erasing exactly one number from the chalkboard, with Alice starting first.  If erasing a number causes the bitwise XOR of all the elements of the chalkboard to become 0, then that player loses.  (Also, we'll say the bitwise XOR of one element is that element itself, and the bitwise XOR of no elements is 0.)\n\nAlso, if any player starts their turn with the bitwise XOR of all the elements of the chalkboard equal to 0, then that player wins.\n\nReturn True if and only if Alice wins the game, assuming both players play optimally.\n\nExample:\nInput: nums = [1, 1, 2]\nOutput: false\nExplanation: \nAlice has two choices: erase 1 or erase 2. \nIf she erases 1, the nums array becomes [1, 2]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 2 = 3. Now Bob can remove any element he wants, because Alice will be the one to erase the last element and she will lose. \nIf Alice erases 2 first, now nums becomes [1, 1]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 1 = 0. Alice will lose.\n\n\n\nNotes:\n\n1 <= N <= 1000. \n0 <= nums[i] <= 2^16.\n\n "},{"index":"811","url":"https://leetcode.com/problems/subdomain-visit-count","title":"Subdomain Visit Count","difficulty":"Easy","description":"A website domain like \"discuss.leetcode.com\" consists of various subdomains. At the top level, we have \"com\", at the next level, we have \"leetcode.com\", and at the lowest level, \"discuss.leetcode.com\". When we visit a domain like \"discuss.leetcode.com\", we will also visit the parent domains \"leetcode.com\" and \"com\" implicitly.\n\nNow, call a \"count-paired domain\" to be a count (representing the number of visits this domain received), followed by a space, followed by the address. An example of a count-paired domain might be \"9001 discuss.leetcode.com\".\n\nWe are given a list cpdomains of count-paired domains. We would like a list of count-paired domains, (in the same format as the input, and in any order), that explicitly counts the number of visits to each subdomain.\n\nExample 1:\nInput: \n[\"9001 discuss.leetcode.com\"]\nOutput: \n[\"9001 discuss.leetcode.com\", \"9001 leetcode.com\", \"9001 com\"]\nExplanation: \nWe only have one website domain: \"discuss.leetcode.com\". As discussed above, the subdomain \"leetcode.com\" and \"com\" will also be visited. So they will all be visited 9001 times.\n\n\nExample 2:\nInput: \n[\"900 google.mail.com\", \"50 yahoo.com\", \"1 intel.mail.com\", \"5 wiki.org\"]\nOutput: \n[\"901 mail.com\",\"50 yahoo.com\",\"900 google.mail.com\",\"5 wiki.org\",\"5 org\",\"1 intel.mail.com\",\"951 com\"]\nExplanation: \nWe will visit \"google.mail.com\" 900 times, \"yahoo.com\" 50 times, \"intel.mail.com\" once and \"wiki.org\" 5 times. For the subdomains, we will visit \"mail.com\" 900 + 1 = 901 times, \"com\" 900 + 50 + 1 = 951 times, and \"org\" 5 times.\n\n\n\nNotes:\n\nThe length of cpdomains will not exceed 100. \nThe length of each domain name will not exceed 100.\nEach address will have either 1 or 2 \".\" characters.\nThe input count in any count-paired domain will not exceed 10000.\nThe answer output can be returned in any order."},{"index":"812","url":"https://leetcode.com/problems/largest-triangle-area","title":"Largest Triangle Area","difficulty":"Easy","description":"You have a list of points in the plane. Return the area of the largest triangle that can be formed by any 3 of the points.\n\nExample:\nInput: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]\nOutput: 2\nExplanation: \nThe five points are show in the figure below. The red triangle is the largest.\n\n\nNotes:\n\n3 <= points.length <= 50.\nNo points will be duplicated.\n -50 <= points[i][j] <= 50.\nAnswers within 10^-6 of the true value will be accepted as correct.\n\n "},{"index":"813","url":"https://leetcode.com/problems/largest-sum-of-averages","title":"Largest Sum of Averages","difficulty":"Medium","description":"We partition a row of numbers A into at most K adjacent (non-empty) groups, then our score is the sum of the average of each group. What is the largest score we can achieve?\n\nNote that our partition must use every number in A, and that scores are not necessarily integers.\n\nExample:\nInput: \nA = [9,1,2,3,9]\nK = 3\nOutput: 20\nExplanation: \nThe best choice is to partition A into [9], [1, 2, 3], [9]. The answer is 9 + (1 + 2 + 3) / 3 + 9 = 20.\nWe could have also partitioned A into [9, 1], [2], [3, 9], for example.\nThat partition would lead to a score of 5 + 2 + 6 = 13, which is worse.\n\n\n \n\nNote:\n\n1 <= A.length <= 100.\n1 <= A[i] <= 10000.\n1 <= K <= A.length.\nAnswers within 10^-6 of the correct answer will be accepted as correct."},{"index":"814","url":"https://leetcode.com/problems/binary-tree-pruning","title":"Binary Tree Pruning","difficulty":"Medium","description":"We are given the head node root of a binary tree, where additionally every node's value is either a 0 or a 1.\n\nReturn the same tree where every subtree (of the given tree) not containing a 1 has been removed.\n\n(Recall that the subtree of a node X is X, plus every node that is a descendant of X.)\n\nExample 1:\nInput: [1,null,0,0,1]\nOutput: [1,null,0,null,1]\n \nExplanation: \nOnly the red nodes satisfy the property \"every subtree not containing a 1\".\nThe diagram on the right represents the answer.\n\n\n\nExample 2:\nInput: [1,0,1,0,0,0,1]\nOutput: [1,null,1,null,1]\n\n\n\n\nExample 3:\nInput: [1,1,0,1,1,0,1,0]\nOutput: [1,1,0,1,1,null,1]\n\n\n\n\n\nNote:\n\nThe binary tree will have at most 200 nodes.\nThe value of each node will only be 0 or 1."},{"index":"815","url":"https://leetcode.com/problems/bus-routes","title":"Bus Routes","difficulty":"Hard","description":"We have a list of bus routes. Each routes[i] is a bus route that the i-th bus repeats forever. For example if routes[0] = [1, 5, 7], this means that the first bus (0-th indexed) travels in the sequence 1->5->7->1->5->7->1->... forever.\n\nWe start at bus stop S (initially not on a bus), and we want to go to bus stop T. Travelling by buses only, what is the least number of buses we must take to reach our destination? Return -1 if it is not possible.\n\nExample:\nInput: \nroutes = [[1, 2, 7], [3, 6, 7]]\nS = 1\nT = 6\nOutput: 2\nExplanation: \nThe best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.\n\n\n \n\nConstraints:\n\n1 <= routes.length <= 500.\n1 <= routes[i].length <= 10^5.\n0 <= routes[i][j] < 10 ^ 6."},{"index":"816","url":"https://leetcode.com/problems/ambiguous-coordinates","title":"Ambiguous Coordinates","difficulty":"Medium","description":"We had some 2-dimensional coordinates, like \"(1, 3)\" or \"(2, 0.5)\".  Then, we removed all commas, decimal points, and spaces, and ended up with the string S.  Return a list of strings representing all possibilities for what our original coordinates could have been.\n\nOur original representation never had extraneous zeroes, so we never started with numbers like \"00\", \"0.0\", \"0.00\", \"1.0\", \"001\", \"00.01\", or any other number that can be represented with less digits.  Also, a decimal point within a number never occurs without at least one digit occuring before it, so we never started with numbers like \".1\".\n\nThe final answer list can be returned in any order.  Also note that all coordinates in the final answer have exactly one space between them (occurring after the comma.)\n\nExample 1:\nInput: \"(123)\"\nOutput: [\"(1, 23)\", \"(12, 3)\", \"(1.2, 3)\", \"(1, 2.3)\"]\n\nExample 2:\nInput: \"(00011)\"\nOutput:  [\"(0.001, 1)\", \"(0, 0.011)\"]\nExplanation: \n0.0, 00, 0001 or 00.01 are not allowed.\n\nExample 3:\nInput: \"(0123)\"\nOutput: [\"(0, 123)\", \"(0, 12.3)\", \"(0, 1.23)\", \"(0.1, 23)\", \"(0.1, 2.3)\", \"(0.12, 3)\"]\n\nExample 4:\nInput: \"(100)\"\nOutput: [(10, 0)]\nExplanation: \n1.0 is not allowed.\n\n\n \n\nNote:\n\n4 <= S.length <= 12.\nS[0] = \"(\", S[S.length - 1] = \")\", and the other elements in S are digits.\n\n "},{"index":"817","url":"https://leetcode.com/problems/linked-list-components","title":"Linked List Components","difficulty":"Medium","description":"We are given head, the head node of a linked list containing unique integer values.\n\nWe are also given the list G, a subset of the values in the linked list.\n\nReturn the number of connected components in G, where two values are connected if they appear consecutively in the linked list.\n\nExample 1:\n\nInput: \nhead: 0->1->2->3\nG = [0, 1, 3]\nOutput: 2\nExplanation: \n0 and 1 are connected, so [0, 1] and [3] are the two connected components.\n\n\nExample 2:\n\nInput: \nhead: 0->1->2->3->4\nG = [0, 3, 1, 4]\nOutput: 2\nExplanation: \n0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.\n\n\nNote:\n\nIf N is the length of the linked list given by head, 1 <= N <= 10000.\nThe value of each node in the linked list will be in the range [0, N - 1].\n1 <= G.length <= 10000.\nG is a subset of all values in the linked list."},{"index":"818","url":"https://leetcode.com/problems/race-car","title":"Race Car","difficulty":"Hard","description":"Your car starts at position 0 and speed +1 on an infinite number line.  (Your car can go into negative positions.)\n\nYour car drives automatically according to a sequence of instructions A (accelerate) and R (reverse).\n\nWhen you get an instruction \"A\", your car does the following: position += speed, speed *= 2.\n\nWhen you get an instruction \"R\", your car does the following: if your speed is positive then speed = -1 , otherwise speed = 1.  (Your position stays the same.)\n\nFor example, after commands \"AAR\", your car goes to positions 0->1->3->3, and your speed goes to 1->2->4->-1.\n\nNow for some target position, say the length of the shortest sequence of instructions to get there.\n\nExample 1:\nInput: \ntarget = 3\nOutput: 2\nExplanation: \nThe shortest instruction sequence is \"AA\".\nYour position goes from 0->1->3.\n\nExample 2:\nInput: \ntarget = 6\nOutput: 5\nExplanation: \nThe shortest instruction sequence is \"AAARA\".\nYour position goes from 0->1->3->7->7->6.\n\n\n \n\nNote:\n\n1 <= target <= 10000."},{"index":"819","url":"https://leetcode.com/problems/most-common-word","title":"Most Common Word","difficulty":"Easy","description":"Given a paragraph and a list of banned words, return the most frequent word that is not in the list of banned words.  It is guaranteed there is at least one word that isn't banned, and that the answer is unique.\n\nWords in the list of banned words are given in lowercase, and free of punctuation.  Words in the paragraph are not case sensitive.  The answer is in lowercase.\n\n \n\nExample:\n\nInput: \nparagraph = \"Bob hit a ball, the hit BALL flew far after it was hit.\"\nbanned = [\"hit\"]\nOutput: \"ball\"\nExplanation: \n\"hit\" occurs 3 times, but it is a banned word.\n\"ball\" occurs twice (and no other word does), so it is the most frequent non-banned word in the paragraph. \nNote that words in the paragraph are not case sensitive,\nthat punctuation is ignored (even if adjacent to words, such as \"ball,\"), \nand that \"hit\" isn't the answer even though it occurs more because it is banned.\n\n\n \n\nNote:\n\n1 <= paragraph.length <= 1000.\n0 <= banned.length <= 100.\n1 <= banned[i].length <= 10.\nThe answer is unique, and written in lowercase (even if its occurrences in paragraph may have uppercase symbols, and even if it is a proper noun.)\nparagraph only consists of letters, spaces, or the punctuation symbols !?',;.\nThere are no hyphens or hyphenated words.\nWords only consist of letters, never apostrophes or other punctuation symbols."},{"index":"820","url":"https://leetcode.com/problems/short-encoding-of-words","title":"Short Encoding of Words","difficulty":"Medium","description":"Given a list of words, we may encode it by writing a reference string S and a list of indexes A.\n\nFor example, if the list of words is [\"time\", \"me\", \"bell\"], we can write it as S = \"time#bell#\" and indexes = [0, 2, 5].\n\nThen for each index, we will recover the word by reading from the reference string from that index until we reach a \"#\" character.\n\nWhat is the length of the shortest reference string S possible that encodes the given words?\n\nExample:\n\nInput: words = [\"time\", \"me\", \"bell\"]\nOutput: 10\nExplanation: S = \"time#bell#\" and indexes = [0, 2, 5].\n\n\n \n\nNote:\n\n1 <= words.length <= 2000.\n1 <= words[i].length <= 7.\nEach word has only lowercase letters."},{"index":"821","url":"https://leetcode.com/problems/shortest-distance-to-a-character","title":"Shortest Distance to a Character","difficulty":"Easy","description":"Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.\n\nExample 1:\n\nInput: S = \"loveleetcode\", C = 'e'\nOutput: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]\n\n\n \n\nNote:\n\nS string length is in [1, 10000].\nC is a single character, and guaranteed to be in string S.\nAll letters in S and C are lowercase."},{"index":"822","url":"https://leetcode.com/problems/card-flipping-game","title":"Card Flipping Game","difficulty":"Medium","description":"On a table are N cards, with a positive integer printed on the front and back of each card (possibly different).\n\nWe flip any number of cards, and after we choose one card. \n\nIf the number X on the back of the chosen card is not on the front of any card, then this number X is good.\n\nWhat is the smallest number that is good?  If no number is good, output 0.\n\nHere, fronts[i] and backs[i] represent the number on the front and back of card i. \n\nA flip swaps the front and back numbers, so the value on the front is now on the back and vice versa.\n\nExample:\n\nInput: fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\nOutput: 2\nExplanation: If we flip the second card, the fronts are [1,3,4,4,7] and the backs are [1,2,4,1,3].\nWe choose the second card, which has number 2 on the back, and it isn't on the front of any card, so 2 is good.\n\n \n\nNote:\n\n1 <= fronts.length == backs.length <= 1000.\n1 <= fronts[i] <= 2000.\n1 <= backs[i] <= 2000."},{"index":"823","url":"https://leetcode.com/problems/binary-trees-with-factors","title":"Binary Trees With Factors","difficulty":"Medium","description":"Given an array of unique integers, each integer is strictly greater than 1.\n\nWe make a binary tree using these integers and each number may be used for any number of times.\n\nEach non-leaf node's value should be equal to the product of the values of it's children.\n\nHow many binary trees can we make?  Return the answer modulo 10 ** 9 + 7.\n\nExample 1:\n\nInput: A = [2, 4]\nOutput: 3\nExplanation: We can make these trees: [2], [4], [4, 2, 2]\n\nExample 2:\n\nInput: A = [2, 4, 5, 10]\nOutput: 7\nExplanation: We can make these trees: [2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2].\n\n \n\nNote:\n\n1 <= A.length <= 1000.\n2 <= A[i] <= 10 ^ 9."},{"index":"824","url":"https://leetcode.com/problems/goat-latin","title":"Goat Latin","difficulty":"Easy","description":"A sentence S is given, composed of words separated by spaces. Each word consists of lowercase and uppercase letters only.\n\nWe would like to convert the sentence to \"Goat Latin\" (a made-up language similar to Pig Latin.)\n\nThe rules of Goat Latin are as follows:\n\nIf a word begins with a vowel (a, e, i, o, or u), append \"ma\" to the end of the word.\nFor example, the word 'apple' becomes 'applema'.\n \nIf a word begins with a consonant (i.e. not a vowel), remove the first letter and append it to the end, then add \"ma\".\nFor example, the word \"goat\" becomes \"oatgma\".\n \nAdd one letter 'a' to the end of each word per its word index in the sentence, starting with 1.\nFor example, the first word gets \"a\" added to the end, the second word gets \"aa\" added to the end and so on.\n\nReturn the final sentence representing the conversion from S to Goat Latin. \n\n \n\nExample 1:\n\nInput: \"I speak Goat Latin\"\nOutput: \"Imaa peaksmaaa oatGmaaaa atinLmaaaaa\"\n\n\nExample 2:\n\nInput: \"The quick brown fox jumped over the lazy dog\"\nOutput: \"heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa\"\n\n\n \n\nNotes:\n\nS contains only uppercase, lowercase and spaces. Exactly one space between each word.\n1 <= S.length <= 150."},{"index":"825","url":"https://leetcode.com/problems/friends-of-appropriate-ages","title":"Friends Of Appropriate Ages","difficulty":"Medium","description":"Some people will make friend requests. The list of their ages is given and ages[i] is the age of the ith person. \n\nPerson A will NOT friend request person B (B != A) if any of the following conditions are true:\n\nage[B] <= 0.5 * age[A] + 7\nage[B] > age[A]\nage[B] > 100 && age[A] < 100\n\nOtherwise, A will friend request B.\n\nNote that if A requests B, B does not necessarily request A.  Also, people will not friend request themselves.\n\nHow many total friend requests are made?\n\nExample 1:\n\nInput: [16,16]\nOutput: 2\nExplanation: 2 people friend request each other.\n\n\nExample 2:\n\nInput: [16,17,18]\nOutput: 2\nExplanation: Friend requests are made 17 -> 16, 18 -> 17.\n\nExample 3:\n\nInput: [20,30,100,110,120]\nOutput: 3\nExplanation: Friend requests are made 110 -> 100, 120 -> 110, 120 -> 100.\n\n\n \n\nNotes:\n\n1 <= ages.length <= 20000.\n1 <= ages[i] <= 120."},{"index":"826","url":"https://leetcode.com/problems/most-profit-assigning-work","title":"Most Profit Assigning Work","difficulty":"Medium","description":"We have jobs: difficulty[i] is the difficulty of the ith job, and profit[i] is the profit of the ith job. \n\nNow we have some workers. worker[i] is the ability of the ith worker, which means that this worker can only complete a job with difficulty at most worker[i]. \n\nEvery worker can be assigned at most one job, but one job can be completed multiple times.\n\nFor example, if 3 people attempt the same job that pays $1, then the total profit will be $3.  If a worker cannot complete any job, his profit is $0.\n\nWhat is the most profit we can make?\n\nExample 1:\n\nInput: difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\nOutput: 100 \nExplanation: Workers are assigned jobs of difficulty [4,4,6,6] and they get profit of [20,20,30,30] seperately.\n\nNotes:\n\n1 <= difficulty.length = profit.length <= 10000\n1 <= worker.length <= 10000\ndifficulty[i], profit[i], worker[i]  are in range [1, 10^5]"},{"index":"827","url":"https://leetcode.com/problems/making-a-large-island","title":"Making A Large Island","difficulty":"Hard","description":"In a 2D grid of 0s and 1s, we change at most one 0 to a 1.\n\nAfter, what is the size of the largest island? (An island is a 4-directionally connected group of 1s).\n\nExample 1:\n\nInput: [[1, 0], [0, 1]]\nOutput: 3\nExplanation: Change one 0 to 1 and connect two 1s, then we get an island with area = 3.\n\n\nExample 2:\n\nInput: [[1, 1], [1, 0]]\nOutput: 4\nExplanation: Change the 0 to 1 and make the island bigger, only one island with area = 4.\n\nExample 3:\n\nInput: [[1, 1], [1, 1]]\nOutput: 4\nExplanation: Can't change any 0 to 1, only one island with area = 4.\n\n \n\nNotes:\n\n1 <= grid.length = grid[0].length <= 50.\n0 <= grid[i][j] <= 1.\n\n "},{"index":"828","url":"https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string","title":"Count Unique Characters of All Substrings of a Given String","difficulty":"Hard","description":"Let's define a function countUniqueChars(s) that returns the number of unique characters on s, for example if s = \"LEETCODE\" then \"L\", \"T\",\"C\",\"O\",\"D\" are the unique characters since they appear only once in s, therefore countUniqueChars(s) = 5.\n\nOn this problem given a string s we need to return the sum of countUniqueChars(t) where t is a substring of s. Notice that some substrings can be repeated so on this case you have to count the repeated ones too.\n\nSince the answer can be very large, return the answer modulo 10 ^ 9 + 7.\n\n \n\nExample 1:\n\nInput: s = \"ABC\"\nOutput: 10\nExplanation: All possible substrings are: \"A\",\"B\",\"C\",\"AB\",\"BC\" and \"ABC\".\nEvey substring is composed with only unique letters.\nSum of lengths of all substring is 1 + 1 + 1 + 2 + 2 + 3 = 10\n\n\nExample 2:\n\nInput: s = \"ABA\"\nOutput: 8\nExplanation: The same as example 1, except countUniqueChars(\"ABA\") = 1.\n\n\nExample 3:\n\nInput: s = \"LEETCODE\"\nOutput: 92\n\n\n \n\nConstraints:\n\n0 <= s.length <= 10^4\ns contain upper-case English letters only."},{"index":"829","url":"https://leetcode.com/problems/consecutive-numbers-sum","title":"Consecutive Numbers Sum","difficulty":"Hard","description":"Given a positive integer N, how many ways can we write it as a sum of consecutive positive integers?\n\nExample 1:\n\nInput: 5\nOutput: 2\nExplanation: 5 = 5 = 2 + 3\n\nExample 2:\n\nInput: 9\nOutput: 3\nExplanation: 9 = 9 = 4 + 5 = 2 + 3 + 4\n\nExample 3:\n\nInput: 15\nOutput: 4\nExplanation: 15 = 15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5\n\nNote: 1 <= N <= 10 ^ 9."},{"index":"830","url":"https://leetcode.com/problems/positions-of-large-groups","title":"Positions of Large Groups","difficulty":"Easy","description":"In a string s of lowercase letters, these letters form consecutive groups of the same character.\n\nFor example, a string like s = \"abbxxxxzyy\" has the groups \"a\", \"bb\", \"xxxx\", \"z\", and \"yy\".\n\nA group is identified by an interval [start, end], where start and end denote the start and end indices (inclusive) of the group. In the above example, \"xxxx\" has the interval [3,6].\n\nA group is considered large if it has 3 or more characters.\n\nReturn the intervals of every large group sorted in increasing order by start index.\n\n \n\nExample 1:\n\nInput: s = \"abbxxxxzzy\"\nOutput: [[3,6]]\nExplanation: \"xxxx\" is the only large group with start index 3 and end index 6.\n\n\nExample 2:\n\nInput: s = \"abc\"\nOutput: []\nExplanation: We have groups \"a\", \"b\", and \"c\", none of which are large groups.\n\n\nExample 3:\n\nInput: s = \"abcdddeeeeaabbbcd\"\nOutput: [[3,5],[6,9],[12,14]]\nExplanation: The large groups are \"ddd\", \"eeee\", and \"bbb\".\n\n\nExample 4:\n\nInput: s = \"aba\"\nOutput: []\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns contains lower-case English letters only."},{"index":"831","url":"https://leetcode.com/problems/masking-personal-information","title":"Masking Personal Information","difficulty":"Medium","description":"We are given a personal information string S, which may represent either an email address or a phone number.\n\nWe would like to mask this personal information according to the following rules:\n\n\n1. Email address:\n\nWe define a name to be a string of length ≥ 2 consisting of only lowercase letters a-z or uppercase letters A-Z.\n\nAn email address starts with a name, followed by the symbol '@', followed by a name, followed by the dot '.' and followed by a name. \n\nAll email addresses are guaranteed to be valid and in the format of \"name1@name2.name3\".\n\nTo mask an email, all names must be converted to lowercase and all letters between the first and last letter of the first name must be replaced by 5 asterisks '*'.\n\n\n2. Phone number:\n\nA phone number is a string consisting of only the digits 0-9 or the characters from the set {'+', '-', '(', ')', ' '}. You may assume a phone number contains 10 to 13 digits.\n\nThe last 10 digits make up the local number, while the digits before those make up the country code. Note that the country code is optional. We want to expose only the last 4 digits and mask all other digits.\n\nThe local number should be formatted and masked as \"***-***-1111\", where 1 represents the exposed digits.\n\nTo mask a phone number with country code like \"+111 111 111 1111\", we write it in the form \"+***-***-***-1111\".  The '+' sign and the first '-' sign before the local number should only exist if there is a country code.  For example, a 12 digit phone number mask should start with \"+**-\".\n\nNote that extraneous characters like \"(\", \")\", \" \", as well as extra dashes or plus signs not part of the above formatting scheme should be removed.\n\n \n\nReturn the correct \"mask\" of the information provided.\n\n \n\nExample 1:\n\nInput: \"LeetCode@LeetCode.com\"\nOutput: \"l*****e@leetcode.com\"\nExplanation: All names are converted to lowercase, and the letters between the\n             first and last letter of the first name is replaced by 5 asterisks.\n             Therefore, \"leetcode\" -> \"l*****e\".\n\n\nExample 2:\n\nInput: \"AB@qq.com\"\nOutput: \"a*****b@qq.com\"\nExplanation: There must be 5 asterisks between the first and last letter \n             of the first name \"ab\". Therefore, \"ab\" -> \"a*****b\".\n\n\nExample 3:\n\nInput: \"1(234)567-890\"\nOutput: \"***-***-7890\"\nExplanation: 10 digits in the phone number, which means all digits make up the local number.\n\n\nExample 4:\n\nInput: \"86-(10)12345678\"\nOutput: \"+**-***-***-5678\"\nExplanation: 12 digits, 2 digits for country code and 10 digits for local number. \n\n\nNotes:\n\nS.length <= 40.\nEmails have length at least 8.\nPhone numbers have length at least 10."},{"index":"832","url":"https://leetcode.com/problems/flipping-an-image","title":"Flipping an Image","difficulty":"Easy","description":"Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.\n\nTo flip an image horizontally means that each row of the image is reversed.  For example, flipping [1, 1, 0] horizontally results in [0, 1, 1].\n\nTo invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting [0, 1, 1] results in [1, 0, 0].\n\nExample 1:\n\nInput: [[1,1,0],[1,0,1],[0,0,0]]\nOutput: [[1,0,0],[0,1,0],[1,1,1]]\nExplanation: First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].\nThen, invert the image: [[1,0,0],[0,1,0],[1,1,1]]\n\n\nExample 2:\n\nInput: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]\nOutput: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\nExplanation: First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].\nThen invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n\n\nNotes:\n\n1 <= A.length = A[0].length <= 20\n0 <= A[i][j] <= 1"},{"index":"833","url":"https://leetcode.com/problems/find-and-replace-in-string","title":"Find And Replace in String","difficulty":"Medium","description":"To some string S, we will perform some replacement operations that replace groups of letters with new ones (not necessarily the same size).\n\nEach replacement operation has 3 parameters: a starting index i, a source word x and a target word y.  The rule is that if x starts at position i in the original string S, then we will replace that occurrence of x with y.  If not, we do nothing.\n\nFor example, if we have S = \"abcd\" and we have some replacement operation i = 2, x = \"cd\", y = \"ffff\", then because \"cd\" starts at position 2 in the original string S, we will replace it with \"ffff\".\n\nUsing another example on S = \"abcd\", if we have both the replacement operation i = 0, x = \"ab\", y = \"eee\", as well as another replacement operation i = 2, x = \"ec\", y = \"ffff\", this second operation does nothing because in the original string S[2] = 'c', which doesn't match x[0] = 'e'.\n\nAll these operations occur simultaneously.  It's guaranteed that there won't be any overlap in replacement: for example, S = \"abc\", indexes = [0, 1], sources = [\"ab\",\"bc\"] is not a valid test case.\n\n \n\nExample 1:\n\nInput: S = \"abcd\", indexes = [0, 2], sources = [\"a\", \"cd\"], targets = [\"eee\", \"ffff\"]\nOutput: \"eeebffff\"\nExplanation:\n\"a\" starts at index 0 in S, so it's replaced by \"eee\".\n\"cd\" starts at index 2 in S, so it's replaced by \"ffff\".\n\n\nExample 2:\n\nInput: S = \"abcd\", indexes = [0, 2], sources = [\"ab\",\"ec\"], targets = [\"eee\",\"ffff\"]\nOutput: \"eeecd\"\nExplanation:\n\"ab\" starts at index 0 in S, so it's replaced by \"eee\".\n\"ec\" doesn't starts at index 2 in the original S, so we do nothing.\n\n\n \n\nConstraints:\n\n0 <= S.length <= 1000\nS consists of only lowercase English letters.\n0 <= indexes.length <= 100\n0 <= indexes[i] < S.length\nsources.length == indexes.length\ntargets.length == indexes.length\n1 <= sources[i].length, targets[i].length <= 50\nsources[i] and targets[i] consist of only lowercase English letters."},{"index":"834","url":"https://leetcode.com/problems/sum-of-distances-in-tree","title":"Sum of Distances in Tree","difficulty":"Hard","description":"An undirected, connected tree with N nodes labelled 0...N-1 and N-1 edges are given.\n\nThe ith edge connects nodes edges[i][0] and edges[i][1] together.\n\nReturn a list ans, where ans[i] is the sum of the distances between node i and all other nodes.\n\nExample 1:\n\nInput: N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\nOutput: [8,12,6,10,10,10]\nExplanation: \nHere is a diagram of the given tree:\n  0\n / \\\n1   2\n   /|\\\n  3 4 5\nWe can see that dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5)\nequals 1 + 1 + 2 + 2 + 2 = 8.  Hence, answer[0] = 8, and so on.\n\n\nNote: 1 <= N <= 10000"},{"index":"835","url":"https://leetcode.com/problems/image-overlap","title":"Image Overlap","difficulty":"Medium","description":"You are given two images img1 and img2 both of size n x n, represented as binary, square matrices of the same size. (A binary matrix has only 0s and 1s as values.)\n\nWe translate one image however we choose (sliding it left, right, up, or down any number of units), and place it on top of the other image.  After, the overlap of this translation is the number of positions that have a 1 in both images.\n\n(Note also that a translation does not include any kind of rotation.)\n\nWhat is the largest possible overlap?\n\n \n\nExample 1:\n\nInput: img1 = [[1,1,0],[0,1,0],[0,1,0]], img2 = [[0,0,0],[0,1,1],[0,0,1]]\nOutput: 3\nExplanation: We slide img1 to right by 1 unit and down by 1 unit.\n\nThe number of positions that have a 1 in both images is 3. (Shown in red)\n\n\n\nExample 2:\n\nInput: img1 = [[1]], img2 = [[1]]\nOutput: 1\n\n\nExample 3:\n\nInput: img1 = [[0]], img2 = [[0]]\nOutput: 0\n\n\n \n\nConstraints:\n\nn == img1.length\nn == img1[i].length\nn == img2.length\nn == img2[i].length\n1 <= n <= 30\nimg1[i][j] is 0 or 1.\nimg2[i][j] is 0 or 1."},{"index":"836","url":"https://leetcode.com/problems/rectangle-overlap","title":"Rectangle Overlap","difficulty":"Easy","description":"An axis-aligned rectangle is represented as a list [x1, y1, x2, y2], where (x1, y1) is the coordinate of its bottom-left corner, and (x2, y2) is the coordinate of its top-right corner. Its top and bottom edges are parallel to the X-axis, and its left and right edges are parallel to the Y-axis.\n\nTwo rectangles overlap if the area of their intersection is positive. To be clear, two rectangles that only touch at the corner or edges do not overlap.\n\nGiven two axis-aligned rectangles rec1 and rec2, return true if they overlap, otherwise return false.\n\n \n\nExample 1:\n\nInput: rec1 = [0,0,2,2], rec2 = [1,1,3,3]\nOutput: true\n\n\nExample 2:\n\nInput: rec1 = [0,0,1,1], rec2 = [1,0,2,1]\nOutput: false\n\n\nExample 3:\n\nInput: rec1 = [0,0,1,1], rec2 = [2,2,3,3]\nOutput: false\n\n\n \n\nConstraints:\n\nrect1.length == 4\nrect2.length == 4\n-109 <= rec1[i], rec2[i] <= 109\nrec1[0] <= rec1[2] and rec1[1] <= rec1[3]\nrec2[0] <= rec2[2] and rec2[1] <= rec2[3]"},{"index":"837","url":"https://leetcode.com/problems/new-21-game","title":"New 21 Game","difficulty":"Medium","description":"Alice plays the following game, loosely based on the card game \"21\".\n\nAlice starts with 0 points, and draws numbers while she has less than K points.  During each draw, she gains an integer number of points randomly from the range [1, W], where W is an integer.  Each draw is independent and the outcomes have equal probabilities.\n\nAlice stops drawing numbers when she gets K or more points.  What is the probability that she has N or less points?\n\nExample 1:\n\nInput: N = 10, K = 1, W = 10\nOutput: 1.00000\nExplanation:  Alice gets a single card, then stops.\n\n\nExample 2:\n\nInput: N = 6, K = 1, W = 10\nOutput: 0.60000\nExplanation:  Alice gets a single card, then stops.\nIn 6 out of W = 10 possibilities, she is at or below N = 6 points.\n\n\nExample 3:\n\nInput: N = 21, K = 17, W = 10\nOutput: 0.73278\n\nNote:\n\n0 <= K <= N <= 10000\n1 <= W <= 10000\nAnswers will be accepted as correct if they are within 10^-5 of the correct answer.\nThe judging time limit has been reduced for this question."},{"index":"838","url":"https://leetcode.com/problems/push-dominoes","title":"Push Dominoes","difficulty":"Medium","description":"There are N dominoes in a line, and we place each domino vertically upright.\n\nIn the beginning, we simultaneously push some of the dominoes either to the left or to the right.\n\nAfter each second, each domino that is falling to the left pushes the adjacent domino on the left.\n\nSimilarly, the dominoes falling to the right push their adjacent dominoes standing on the right.\n\nWhen a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.\n\nFor the purposes of this question, we will consider that a falling domino expends no additional force to a falling or already fallen domino.\n\nGiven a string \"S\" representing the initial state. S[i] = 'L', if the i-th domino has been pushed to the left; S[i] = 'R', if the i-th domino has been pushed to the right; S[i] = '.', if the i-th domino has not been pushed.\n\nReturn a string representing the final state. \n\nExample 1:\n\nInput: \".L.R...LR..L..\"\nOutput: \"LL.RR.LLRRLL..\"\n\n\nExample 2:\n\nInput: \"RR.L\"\nOutput: \"RR.L\"\nExplanation: The first domino expends no additional force on the second domino.\n\n\nNote:\n\n0 <= N <= 10^5\nString dominoes contains only 'L', 'R' and '.'"},{"index":"839","url":"https://leetcode.com/problems/similar-string-groups","title":"Similar String Groups","difficulty":"Hard","description":"Two strings X and Y are similar if we can swap two letters (in different positions) of X, so that it equals Y. Also two strings X and Y are similar if they are equal.\n\nFor example, \"tars\" and \"rats\" are similar (swapping at positions 0 and 2), and \"rats\" and \"arts\" are similar, but \"star\" is not similar to \"tars\", \"rats\", or \"arts\".\n\nTogether, these form two connected groups by similarity: {\"tars\", \"rats\", \"arts\"} and {\"star\"}.  Notice that \"tars\" and \"arts\" are in the same group even though they are not similar.  Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.\n\nWe are given a list strs of strings where every string in strs is an anagram of every other string in strs. How many groups are there?\n\n \n\nExample 1:\n\nInput: strs = [\"tars\",\"rats\",\"arts\",\"star\"]\nOutput: 2\n\n\nExample 2:\n\nInput: strs = [\"omv\",\"ovm\"]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= strs.length <= 100\n1 <= strs[i].length <= 1000\nsum(strs[i].length) <= 2 * 104\nstrs[i] consists of lowercase letters only.\nAll words in strs have the same length and are anagrams of each other."},{"index":"840","url":"https://leetcode.com/problems/magic-squares-in-grid","title":"Magic Squares In Grid","difficulty":"Medium","description":"A 3 x 3 magic square is a 3 x 3 grid filled with distinct numbers from 1 to 9 such that each row, column, and both diagonals all have the same sum.\n\nGiven a row x col grid of integers, how many 3 x 3 \"magic square\" subgrids are there?  (Each subgrid is contiguous).\n\n \n\nExample 1:\n\nInput: grid = [[4,3,8,4],[9,5,1,9],[2,7,6,2]]\nOutput: 1\nExplanation: \nThe following subgrid is a 3 x 3 magic square:\n\nwhile this one is not:\n\nIn total, there is only one magic square inside the given grid.\n\n\nExample 2:\n\nInput: grid = [[8]]\nOutput: 0\n\n\nExample 3:\n\nInput: grid = [[4,4],[3,3]]\nOutput: 0\n\n\nExample 4:\n\nInput: grid = [[4,7,8],[9,5,1],[2,3,6]]\nOutput: 0\n\n\n \n\nConstraints:\n\nrow == grid.length\ncol == grid[i].length\n1 <= row, col <= 10\n0 <= grid[i][j] <= 15"},{"index":"841","url":"https://leetcode.com/problems/keys-and-rooms","title":"Keys and Rooms","difficulty":"Medium","description":"There are N rooms and you start in room 0.  Each room has a distinct number in 0, 1, 2, ..., N-1, and each room may have some keys to access the next room. \n\nFormally, each room i has a list of keys rooms[i], and each key rooms[i][j] is an integer in [0, 1, ..., N-1] where N = rooms.length.  A key rooms[i][j] = v opens the room with number v.\n\nInitially, all the rooms start locked (except for room 0). \n\nYou can walk back and forth between rooms freely.\n\nReturn true if and only if you can enter every room.\n\nExample 1:\n\nInput: [[1],[2],[3],[]]\nOutput: true\nExplanation:  \nWe start in room 0, and pick up key 1.\nWe then go to room 1, and pick up key 2.\nWe then go to room 2, and pick up key 3.\nWe then go to room 3.  Since we were able to go to every room, we return true.\n\n\nExample 2:\n\nInput: [[1,3],[3,0,1],[2],[0]]\nOutput: false\nExplanation: We can't enter the room with number 2.\n\n\nNote:\n\n1 <= rooms.length <= 1000\n0 <= rooms[i].length <= 1000\nThe number of keys in all rooms combined is at most 3000."},{"index":"842","url":"https://leetcode.com/problems/split-array-into-fibonacci-sequence","title":"Split Array into Fibonacci Sequence","difficulty":"Medium","description":"Given a string S of digits, such as S = \"123456579\", we can split it into a Fibonacci-like sequence [123, 456, 579].\n\nFormally, a Fibonacci-like sequence is a list F of non-negative integers such that:\n\n0 <= F[i] <= 2^31 - 1, (that is, each integer fits a 32-bit signed integer type);\nF.length >= 3;\nand F[i] + F[i+1] = F[i+2] for all 0 <= i < F.length - 2.\n\nAlso, note that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself.\n\nReturn any Fibonacci-like sequence split from S, or return [] if it cannot be done.\n\nExample 1:\n\nInput: \"123456579\"\nOutput: [123,456,579]\n\n\nExample 2:\n\nInput: \"11235813\"\nOutput: [1,1,2,3,5,8,13]\n\n\nExample 3:\n\nInput: \"112358130\"\nOutput: []\nExplanation: The task is impossible.\n\n\nExample 4:\n\nInput: \"0123\"\nOutput: []\nExplanation: Leading zeroes are not allowed, so \"01\", \"2\", \"3\" is not valid.\n\n\nExample 5:\n\nInput: \"1101111\"\nOutput: [110, 1, 111]\nExplanation: The output [11, 0, 11, 11] would also be accepted.\n\n\nNote:\n\n1 <= S.length <= 200\nS contains only digits."},{"index":"843","url":"https://leetcode.com/problems/guess-the-word","title":"Guess the Word","difficulty":"Hard","description":"This problem is an interactive problem new to the LeetCode platform.\n\nWe are given a word list of unique words, each word is 6 letters long, and one word in this list is chosen as secret.\n\nYou may call master.guess(word) to guess a word.  The guessed word should have type string and must be from the original list with 6 lowercase letters.\n\nThis function returns an integer type, representing the number of exact matches (value and position) of your guess to the secret word.  Also, if your guess is not in the given wordlist, it will return -1 instead.\n\nFor each test case, you have 10 guesses to guess the word. At the end of any number of calls, if you have made 10 or less calls to master.guess and at least one of these guesses was the secret, you pass the testcase.\n\nBesides the example test case below, there will be 5 additional test cases, each with 100 words in the word list.  The letters of each word in those testcases were chosen independently at random from 'a' to 'z', such that every word in the given word lists is unique.\n\nExample 1:\nInput: secret = \"acckzz\", wordlist = [\"acckzz\",\"ccbazz\",\"eiowzz\",\"abcczz\"]\n\nExplanation:\n\nmaster.guess(\"aaaaaa\") returns -1, because \"aaaaaa\" is not in wordlist.\nmaster.guess(\"acckzz\") returns 6, because \"acckzz\" is secret and has all 6 matches.\nmaster.guess(\"ccbazz\") returns 3, because \"ccbazz\" has 3 matches.\nmaster.guess(\"eiowzz\") returns 2, because \"eiowzz\" has 2 matches.\nmaster.guess(\"abcczz\") returns 4, because \"abcczz\" has 4 matches.\n\nWe made 5 calls to master.guess and one of them was the secret, so we pass the test case.\n\n\nNote:  Any solutions that attempt to circumvent the judge will result in disqualification."},{"index":"844","url":"https://leetcode.com/problems/backspace-string-compare","title":"Backspace String Compare","difficulty":"Easy","description":"Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.\n\nNote that after backspacing an empty text, the text will continue empty.\n\nExample 1:\n\nInput: S = \"ab#c\", T = \"ad#c\"\nOutput: true\nExplanation: Both S and T become \"ac\".\n\n\nExample 2:\n\nInput: S = \"ab##\", T = \"c#d#\"\nOutput: true\nExplanation: Both S and T become \"\".\n\n\nExample 3:\n\nInput: S = \"a##c\", T = \"#a#c\"\nOutput: true\nExplanation: Both S and T become \"c\".\n\n\nExample 4:\n\nInput: S = \"a#c\", T = \"b\"\nOutput: false\nExplanation: S becomes \"c\" while T becomes \"b\".\n\n\nNote:\n\n1 <= S.length <= 200\n1 <= T.length <= 200\nS and T only contain lowercase letters and '#' characters.\n\nFollow up:\n\nCan you solve it in O(N) time and O(1) space?"},{"index":"845","url":"https://leetcode.com/problems/longest-mountain-in-array","title":"Longest Mountain in Array","difficulty":"Medium","description":"You may recall that an array arr is a mountain array if and only if:\n\narr.length >= 3\nThere exists some index i (0-indexed) with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n\nGiven an integer array arr, return the length of the longest subarray, which is a mountain. Return 0 if there is no mountain subarray.\n\n \n\nExample 1:\n\nInput: arr = [2,1,4,7,3,2,5]\nOutput: 5\nExplanation: The largest mountain is [1,4,7,3,2] which has length 5.\n\n\nExample 2:\n\nInput: arr = [2,2,2]\nOutput: 0\nExplanation: There is no mountain.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 104\n0 <= arr[i] <= 104\n\n \n\nFollow up:\n\nCan you solve it using only one pass?\nCan you solve it in O(1) space?"},{"index":"846","url":"https://leetcode.com/problems/hand-of-straights","title":"Hand of Straights","difficulty":"Medium","description":"Alice has a hand of cards, given as an array of integers.\n\nNow she wants to rearrange the cards into groups so that each group is size W, and consists of W consecutive cards.\n\nReturn true if and only if she can.\n\nNote: This question is the same as 1296: https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/\n\n \n\nExample 1:\n\nInput: hand = [1,2,3,6,2,3,4,7,8], W = 3\nOutput: true\nExplanation: Alice's hand can be rearranged as [1,2,3],[2,3,4],[6,7,8]\n\n\nExample 2:\n\nInput: hand = [1,2,3,4,5], W = 4\nOutput: false\nExplanation: Alice's hand can't be rearranged into groups of 4.\n\n\n\n \n\nConstraints:\n\n1 <= hand.length <= 10000\n0 <= hand[i] <= 10^9\n1 <= W <= hand.length"},{"index":"847","url":"https://leetcode.com/problems/shortest-path-visiting-all-nodes","title":"Shortest Path Visiting All Nodes","difficulty":"Hard","description":"An undirected, connected graph of N nodes (labeled 0, 1, 2, ..., N-1) is given as graph.\n\ngraph.length = N, and j != i is in the list graph[i] exactly once, if and only if nodes i and j are connected.\n\nReturn the length of the shortest path that visits every node. You may start and stop at any node, you may revisit nodes multiple times, and you may reuse edges.\n\n \n\nExample 1:\n\nInput: [[1,2,3],[0],[0],[0]]\nOutput: 4\nExplanation: One possible path is [1,0,2,0,3]\n\nExample 2:\n\nInput: [[1],[0,2,4],[1,3,4],[2],[1,2]]\nOutput: 4\nExplanation: One possible path is [0,1,4,2,3]\n\n\n \n\nNote:\n\n1 <= graph.length <= 12\n0 <= graph[i].length < graph.length"},{"index":"848","url":"https://leetcode.com/problems/shifting-letters","title":"Shifting Letters","difficulty":"Medium","description":"We have a string S of lowercase letters, and an integer array shifts.\n\nCall the shift of a letter, the next letter in the alphabet, (wrapping around so that 'z' becomes 'a'). \n\nFor example, shift('a') = 'b', shift('t') = 'u', and shift('z') = 'a'.\n\nNow for each shifts[i] = x, we want to shift the first i+1 letters of S, x times.\n\nReturn the final string after all such shifts to S are applied.\n\nExample 1:\n\nInput: S = \"abc\", shifts = [3,5,9]\nOutput: \"rpl\"\nExplanation: \nWe start with \"abc\".\nAfter shifting the first 1 letters of S by 3, we have \"dbc\".\nAfter shifting the first 2 letters of S by 5, we have \"igc\".\nAfter shifting the first 3 letters of S by 9, we have \"rpl\", the answer.\n\n\nNote:\n\n1 <= S.length = shifts.length <= 20000\n0 <= shifts[i] <= 10 ^ 9"},{"index":"849","url":"https://leetcode.com/problems/maximize-distance-to-closest-person","title":"Maximize Distance to Closest Person","difficulty":"Medium","description":"You are given an array representing a row of seats where seats[i] = 1 represents a person sitting in the ith seat, and seats[i] = 0 represents that the ith seat is empty (0-indexed).\n\nThere is at least one empty seat, and at least one person sitting.\n\nAlex wants to sit in the seat such that the distance between him and the closest person to him is maximized. \n\nReturn that maximum distance to the closest person.\n\n \n\nExample 1:\n\nInput: seats = [1,0,0,0,1,0,1]\nOutput: 2\nExplanation: \nIf Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.\n\n\nExample 2:\n\nInput: seats = [1,0,0,0]\nOutput: 3\nExplanation: \nIf Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.\n\n\nExample 3:\n\nInput: seats = [0,1]\nOutput: 1\n\n\n \n\nConstraints:\n\n2 <= seats.length <= 2 * 104\nseats[i] is 0 or 1.\nAt least one seat is empty.\nAt least one seat is occupied."},{"index":"850","url":"https://leetcode.com/problems/rectangle-area-ii","title":"Rectangle Area II","difficulty":"Hard","description":"We are given a list of (axis-aligned) rectangles.  Each rectangle[i] = [x1, y1, x2, y2] , where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the ith rectangle.\n\nFind the total area covered by all rectangles in the plane.  Since the answer may be too large, return it modulo 10^9 + 7.\n\nExample 1:\n\nInput: [[0,0,2,2],[1,0,2,3],[1,0,3,1]]\nOutput: 6\nExplanation: As illustrated in the picture.\n\n\nExample 2:\n\nInput: [[0,0,1000000000,1000000000]]\nOutput: 49\nExplanation: The answer is 10^18 modulo (10^9 + 7), which is (10^9)^2 = (-7)^2 = 49.\n\n\nNote:\n\n1 <= rectangles.length <= 200\nrectanges[i].length = 4\n0 <= rectangles[i][j] <= 10^9\nThe total area covered by all rectangles will never exceed 2^63 - 1 and thus will fit in a 64-bit signed integer."},{"index":"851","url":"https://leetcode.com/problems/loud-and-rich","title":"Loud and Rich","difficulty":"Medium","description":"In a group of N people (labelled 0, 1, 2, ..., N-1), each person has different amounts of money, and different levels of quietness.\n\nFor convenience, we'll call the person with label x, simply \"person x\".\n\nWe'll say that richer[i] = [x, y] if person x definitely has more money than person y.  Note that richer may only be a subset of valid observations.\n\nAlso, we'll say quiet[x] = q if person x has quietness q.\n\nNow, return answer, where answer[x] = y if y is the least quiet person (that is, the person y with the smallest value of quiet[y]), among all people who definitely have equal to or more money than person x.\n\n \n\nExample 1:\n\nInput: richer = [[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]], quiet = [3,2,5,4,6,1,7,0]\nOutput: [5,5,2,5,4,5,6,7]\nExplanation: \nanswer[0] = 5.\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\nThe only person who is quieter (has lower quiet[x]) is person 7, but\nit isn't clear if they have more money than person 0.\n\nanswer[7] = 7.\nAmong all people that definitely have equal to or more money than person 7\n(which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x])\nis person 7.\n\nThe other answers can be filled out with similar reasoning.\n\n\nNote:\n\n1 <= quiet.length = N <= 500\n0 <= quiet[i] < N, all quiet[i] are different.\n0 <= richer.length <= N * (N-1) / 2\n0 <= richer[i][j] < N\nricher[i][0] != richer[i][1]\nricher[i]'s are all different.\nThe observations in richer are all logically consistent."},{"index":"852","url":"https://leetcode.com/problems/peak-index-in-a-mountain-array","title":"Peak Index in a Mountain Array","difficulty":"Easy","description":"Let's call an array arr a mountain if the following properties hold:\n\narr.length >= 3\nThere exists some i with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... arr[i-1] < arr[i]\narr[i] > arr[i+1] > ... > arr[arr.length - 1]\n\nGiven an integer array arr that is guaranteed to be a mountain, return any i such that arr[0] < arr[1] < ... arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1].\n\n \n\nExample 1:\n\nInput: arr = [0,1,0]\nOutput: 1\n\n\nExample 2:\n\nInput: arr = [0,2,1,0]\nOutput: 1\n\n\nExample 3:\n\nInput: arr = [0,10,5,2]\nOutput: 1\n\n\nExample 4:\n\nInput: arr = [3,4,5,1]\nOutput: 2\n\n\nExample 5:\n\nInput: arr = [24,69,100,99,79,78,67,36,26,19]\nOutput: 2\n\n\n \n\nConstraints:\n\n3 <= arr.length <= 104\n0 <= arr[i] <= 106\narr is guaranteed to be a mountain array."},{"index":"853","url":"https://leetcode.com/problems/car-fleet","title":"Car Fleet","difficulty":"Medium","description":"N cars are going to the same destination along a one lane road.  The destination is target miles away.\n\nEach car i has a constant speed speed[i] (in miles per hour), and initial position position[i] miles towards the target along the road.\n\nA car can never pass another car ahead of it, but it can catch up to it, and drive bumper to bumper at the same speed.\n\nThe distance between these two cars is ignored - they are assumed to have the same position.\n\nA car fleet is some non-empty set of cars driving at the same position and same speed.  Note that a single car is also a car fleet.\n\nIf a car catches up to a car fleet right at the destination point, it will still be considered as one car fleet.\n\n\nHow many car fleets will arrive at the destination?\n\n \n\nExample 1:\n\nInput: target = 12, position = [10,8,0,5,3], speed = [2,4,1,1,3]\nOutput: 3\nExplanation:\nThe cars starting at 10 and 8 become a fleet, meeting each other at 12.\nThe car starting at 0 doesn't catch up to any other car, so it is a fleet by itself.\nThe cars starting at 5 and 3 become a fleet, meeting each other at 6.\nNote that no other cars meet these fleets before the destination, so the answer is 3.\n\n\n\nNote:\n\n0 <= N <= 10 ^ 4\n0 < target <= 10 ^ 6\n0 < speed[i] <= 10 ^ 6\n0 <= position[i] < target\nAll initial positions are different."},{"index":"854","url":"https://leetcode.com/problems/k-similar-strings","title":"K-Similar Strings","difficulty":"Hard","description":"Strings A and B are K-similar (for some non-negative integer K) if we can swap the positions of two letters in A exactly K times so that the resulting string equals B.\n\nGiven two anagrams A and B, return the smallest K for which A and B are K-similar.\n\nExample 1:\n\nInput: A = \"ab\", B = \"ba\"\nOutput: 1\n\n\nExample 2:\n\nInput: A = \"abc\", B = \"bca\"\nOutput: 2\n\n\nExample 3:\n\nInput: A = \"abac\", B = \"baca\"\nOutput: 2\n\n\nExample 4:\n\nInput: A = \"aabc\", B = \"abca\"\nOutput: 2\n\nNote:\n\n1 <= A.length == B.length <= 20\nA and B contain only lowercase letters from the set {'a', 'b', 'c', 'd', 'e', 'f'}"},{"index":"855","url":"https://leetcode.com/problems/exam-room","title":"Exam Room","difficulty":"Medium","description":"In an exam room, there are N seats in a single row, numbered 0, 1, 2, ..., N-1.\n\nWhen a student enters the room, they must sit in the seat that maximizes the distance to the closest person.  If there are multiple such seats, they sit in the seat with the lowest number.  (Also, if no one is in the room, then the student sits at seat number 0.)\n\nReturn a class ExamRoom(int N) that exposes two functions: ExamRoom.seat() returning an int representing what seat the student sat in, and ExamRoom.leave(int p) representing that the student in seat number p now leaves the room.  It is guaranteed that any calls to ExamRoom.leave(p) have a student sitting in seat p.\n\n \n\nExample 1:\n\nInput: [\"ExamRoom\",\"seat\",\"seat\",\"seat\",\"seat\",\"leave\",\"seat\"], [[10],[],[],[],[],[4],[]]\nOutput: [null,0,9,4,2,null,5]\nExplanation:\nExamRoom(10) -> null\nseat() -> 0, no one is in the room, then the student sits at seat number 0.\nseat() -> 9, the student sits at the last seat number 9.\nseat() -> 4, the student sits at the last seat number 4.\nseat() -> 2, the student sits at the last seat number 2.\nleave(4) -> null\nseat() -> 5, the student sits at the last seat number 5.\n\n\n​​​​​​​\n\nNote:\n\n1 <= N <= 10^9\nExamRoom.seat() and ExamRoom.leave() will be called at most 10^4 times across all test cases.\nCalls to ExamRoom.leave(p) are guaranteed to have a student currently sitting in seat number p."},{"index":"856","url":"https://leetcode.com/problems/score-of-parentheses","title":"Score of Parentheses","difficulty":"Medium","description":"Given a balanced parentheses string S, compute the score of the string based on the following rule:\n\n() has score 1\nAB has score A + B, where A and B are balanced parentheses strings.\n(A) has score 2 * A, where A is a balanced parentheses string.\n\n \n\nExample 1:\n\nInput: \"()\"\nOutput: 1\n\n\nExample 2:\n\nInput: \"(())\"\nOutput: 2\n\n\nExample 3:\n\nInput: \"()()\"\nOutput: 2\n\n\nExample 4:\n\nInput: \"(()(()))\"\nOutput: 6\n\n\n \n\nNote:\n\nS is a balanced parentheses string, containing only ( and ).\n2 <= S.length <= 50"},{"index":"857","url":"https://leetcode.com/problems/minimum-cost-to-hire-k-workers","title":"Minimum Cost to Hire K Workers","difficulty":"Hard","description":"There are N workers.  The i-th worker has a quality[i] and a minimum wage expectation wage[i].\n\nNow we want to hire exactly K workers to form a paid group.  When hiring a group of K workers, we must pay them according to the following rules:\n\nEvery worker in the paid group should be paid in the ratio of their quality compared to other workers in the paid group.\nEvery worker in the paid group must be paid at least their minimum wage expectation.\n\nReturn the least amount of money needed to form a paid group satisfying the above conditions.\n\n \n\nExample 1:\n\nInput: quality = [10,20,5], wage = [70,50,30], K = 2\nOutput: 105.00000\nExplanation: We pay 70 to 0-th worker and 35 to 2-th worker.\n\n\nExample 2:\n\nInput: quality = [3,1,10,10,1], wage = [4,8,2,2,7], K = 3\nOutput: 30.66667\nExplanation: We pay 4 to 0-th worker, 13.33333 to 2-th and 3-th workers seperately. \n\n\n \n\nNote:\n\n1 <= K <= N <= 10000, where N = quality.length = wage.length\n1 <= quality[i] <= 10000\n1 <= wage[i] <= 10000\nAnswers within 10^-5 of the correct answer will be considered correct."},{"index":"858","url":"https://leetcode.com/problems/mirror-reflection","title":"Mirror Reflection","difficulty":"Medium","description":"There is a special square room with mirrors on each of the four walls.  Except for the southwest corner, there are receptors on each of the remaining corners, numbered 0, 1, and 2.\n\nThe square room has walls of length p, and a laser ray from the southwest corner first meets the east wall at a distance q from the 0th receptor.\n\nReturn the number of the receptor that the ray meets first.  (It is guaranteed that the ray will meet a receptor eventually.)\n\n \n\nExample 1:\n\nInput: p = 2, q = 1\nOutput: 2\nExplanation: The ray meets receptor 2 the first time it gets reflected back to the left wall.\n\n\n\nNote:\n\n1 <= p <= 1000\n0 <= q <= p"},{"index":"859","url":"https://leetcode.com/problems/buddy-strings","title":"Buddy Strings","difficulty":"Easy","description":"Given two strings A and B of lowercase letters, return true if you can swap two letters in A so the result is equal to B, otherwise, return false.\n\nSwapping letters is defined as taking two indices i and j (0-indexed) such that i != j and swapping the characters at A[i] and A[j]. For example, swapping at indices 0 and 2 in \"abcd\" results in \"cbad\".\n\n \n\nExample 1:\n\nInput: A = \"ab\", B = \"ba\"\nOutput: true\nExplanation: You can swap A[0] = 'a' and A[1] = 'b' to get \"ba\", which is equal to B.\n\n\nExample 2:\n\nInput: A = \"ab\", B = \"ab\"\nOutput: false\nExplanation: The only letters you can swap are A[0] = 'a' and A[1] = 'b', which results in \"ba\" != B.\n\n\nExample 3:\n\nInput: A = \"aa\", B = \"aa\"\nOutput: true\nExplanation: You can swap A[0] = 'a' and A[1] = 'a' to get \"aa\", which is equal to B.\n\n\nExample 4:\n\nInput: A = \"aaaaaaabc\", B = \"aaaaaaacb\"\nOutput: true\n\n\nExample 5:\n\nInput: A = \"\", B = \"aa\"\nOutput: false\n\n\n \n\nConstraints:\n\n0 <= A.length <= 20000\n0 <= B.length <= 20000\nA and B consist of lowercase letters."},{"index":"860","url":"https://leetcode.com/problems/lemonade-change","title":"Lemonade Change","difficulty":"Easy","description":"At a lemonade stand, each lemonade costs $5. \n\nCustomers are standing in a queue to buy from you, and order one at a time (in the order specified by bills).\n\nEach customer will only buy one lemonade and pay with either a $5, $10, or $20 bill.  You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.\n\nNote that you don't have any change in hand at first.\n\nReturn true if and only if you can provide every customer with correct change.\n\n \n\nExample 1:\n\nInput: [5,5,5,10,20]\nOutput: true\nExplanation: \nFrom the first 3 customers, we collect three $5 bills in order.\nFrom the fourth customer, we collect a $10 bill and give back a $5.\nFrom the fifth customer, we give a $10 bill and a $5 bill.\nSince all customers got correct change, we output true.\n\n\nExample 2:\n\nInput: [5,5,10]\nOutput: true\n\n\nExample 3:\n\nInput: [10,10]\nOutput: false\n\n\nExample 4:\n\nInput: [5,5,10,10,20]\nOutput: false\nExplanation: \nFrom the first two customers in order, we collect two $5 bills.\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\nFor the last customer, we can't give change of $15 back because we only have two $10 bills.\nSince not every customer received correct change, the answer is false.\n\n\n \n\nNote:\n\n0 <= bills.length <= 10000\nbills[i] will be either 5, 10, or 20."},{"index":"861","url":"https://leetcode.com/problems/score-after-flipping-matrix","title":"Score After Flipping Matrix","difficulty":"Medium","description":"We have a two dimensional matrix A where each value is 0 or 1.\n\nA move consists of choosing any row or column, and toggling each value in that row or column: changing all 0s to 1s, and all 1s to 0s.\n\nAfter making any number of moves, every row of this matrix is interpreted as a binary number, and the score of the matrix is the sum of these numbers.\n\nReturn the highest possible score.\n\n \n\nExample 1:\n\nInput: [[0,0,1,1],[1,0,1,0],[1,1,0,0]]\nOutput: 39\nExplanation:\nToggled to [[1,1,1,1],[1,0,0,1],[1,1,1,1]].\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39\n\n \n\nNote:\n\n1 <= A.length <= 20\n1 <= A[0].length <= 20\nA[i][j] is 0 or 1."},{"index":"862","url":"https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k","title":"Shortest Subarray with Sum at Least K","difficulty":"Hard","description":"Return the length of the shortest, non-empty, contiguous subarray of A with sum at least K.\n\nIf there is no non-empty subarray with sum at least K, return -1.\n\n \n\nExample 1:\n\nInput: A = [1], K = 1\nOutput: 1\n\n\nExample 2:\n\nInput: A = [1,2], K = 4\nOutput: -1\n\n\nExample 3:\n\nInput: A = [2,-1,2], K = 3\nOutput: 3\n\n\n \n\nNote:\n\n1 <= A.length <= 50000\n-10 ^ 5 <= A[i] <= 10 ^ 5\n1 <= K <= 10 ^ 9"},{"index":"863","url":"https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree","title":"All Nodes Distance K in Binary Tree","difficulty":"Medium","description":"We are given a binary tree (with root node root), a target node, and an integer value K.\n\nReturn a list of the values of all nodes that have a distance K from the target node.  The answer can be returned in any order.\n\n \n\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4], target = 5, K = 2\n\nOutput: [7,4,1]\n\nExplanation: \nThe nodes that are a distance 2 from the target node (with value 5)\nhave values 7, 4, and 1.\n\n\n\nNote that the inputs \"root\" and \"target\" are actually TreeNodes.\nThe descriptions of the inputs above are just serializations of these objects.\n\n\n \n\nNote:\n\nThe given tree is non-empty.\nEach node in the tree has unique values 0 <= node.val <= 500.\nThe target node is a node in the tree.\n0 <= K <= 1000."},{"index":"864","url":"https://leetcode.com/problems/shortest-path-to-get-all-keys","title":"Shortest Path to Get All Keys","difficulty":"Hard","description":"We are given a 2-dimensional grid. \".\" is an empty cell, \"#\" is a wall, \"@\" is the starting point, (\"a\", \"b\", ...) are keys, and (\"A\", \"B\", ...) are locks.\n\nWe start at the starting point, and one move consists of walking one space in one of the 4 cardinal directions.  We cannot walk outside the grid, or walk into a wall.  If we walk over a key, we pick it up.  We can't walk over a lock unless we have the corresponding key.\n\nFor some 1 <= K <= 6, there is exactly one lowercase and one uppercase letter of the first K letters of the English alphabet in the grid.  This means that there is exactly one key for each lock, and one lock for each key; and also that the letters used to represent the keys and locks were chosen in the same order as the English alphabet.\n\nReturn the lowest number of moves to acquire all keys.  If it's impossible, return -1.\n\n \n\nExample 1:\n\nInput: [\"@.a.#\",\"###.#\",\"b.A.B\"]\nOutput: 8\n\n\nExample 2:\n\nInput: [\"@..aA\",\"..B#.\",\"....b\"]\nOutput: 6\n\n\n \n\nNote:\n\n1 <= grid.length <= 30\n1 <= grid[0].length <= 30\ngrid[i][j] contains only '.', '#', '@', 'a'-'f' and 'A'-'F'\nThe number of keys is in [1, 6].  Each key has a different letter and opens exactly one lock."},{"index":"865","url":"https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes","title":"Smallest Subtree with all the Deepest Nodes","difficulty":"Medium","description":"Given the root of a binary tree, the depth of each node is the shortest distance to the root.\n\nReturn the smallest subtree such that it contains all the deepest nodes in the original tree.\n\nA node is called the deepest if it has the largest depth possible among any node in the entire tree.\n\nThe subtree of a node is tree consisting of that node, plus the set of all descendants of that node.\n\nNote: This question is the same as 1123: https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/\n\n \n\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4]\nOutput: [2,7,4]\nExplanation: We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest nodes of the tree.\nNotice that nodes 5, 3 and 2 contain the deepest nodes in the tree but node 2 is the smallest subtree among them, so we return it.\n\n\nExample 2:\n\nInput: root = [1]\nOutput: [1]\nExplanation: The root is the deepest node in the tree.\n\n\nExample 3:\n\nInput: root = [0,1,3,null,2]\nOutput: [2]\nExplanation: The deepest node in the tree is 2, the valid subtrees are the subtrees of nodes 2, 1 and 0 but the subtree of node 2 is the smallest.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree will be in the range [1, 500].\n0 <= Node.val <= 500\nThe values of the nodes in the tree are unique."},{"index":"866","url":"https://leetcode.com/problems/prime-palindrome","title":"Prime Palindrome","difficulty":"Medium","description":"Find the smallest prime palindrome greater than or equal to N.\n\nRecall that a number is prime if it's only divisors are 1 and itself, and it is greater than 1. \n\nFor example, 2,3,5,7,11 and 13 are primes.\n\nRecall that a number is a palindrome if it reads the same from left to right as it does from right to left. \n\nFor example, 12321 is a palindrome.\n\n \n\nExample 1:\n\nInput: 6\nOutput: 7\n\n\nExample 2:\n\nInput: 8\nOutput: 11\n\n\nExample 3:\n\nInput: 13\nOutput: 101\n\n \n\nNote:\n\n1 <= N <= 10^8\nThe answer is guaranteed to exist and be less than 2 * 10^8."},{"index":"867","url":"https://leetcode.com/problems/transpose-matrix","title":"Transpose Matrix","difficulty":"Easy","description":"Given a matrix A, return the transpose of A.\n\nThe transpose of a matrix is the matrix flipped over it's main diagonal, switching the row and column indices of the matrix.\n\n\n\n\n \n\nExample 1:\n\nInput: [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [[1,4,7],[2,5,8],[3,6,9]]\n\n\nExample 2:\n\nInput: [[1,2,3],[4,5,6]]\nOutput: [[1,4],[2,5],[3,6]]\n\n\n \n\nNote:\n\n1 <= A.length <= 1000\n1 <= A[0].length <= 1000"},{"index":"868","url":"https://leetcode.com/problems/binary-gap","title":"Binary Gap","difficulty":"Easy","description":"Given a positive integer n, find and return the longest distance between any two adjacent 1's in the binary representation of n. If there are no two adjacent 1's, return 0.\n\nTwo 1's are adjacent if there are only 0's separating them (possibly no 0's). The distance between two 1's is the absolute difference between their bit positions. For example, the two 1's in \"1001\" have a distance of 3.\n\n \n\nExample 1:\n\nInput: n = 22\nOutput: 2\nExplanation: 22 in binary is \"10110\".\nThe first adjacent pair of 1's is \"10110\" with a distance of 2.\nThe second adjacent pair of 1's is \"10110\" with a distance of 1.\nThe answer is the largest of these two distances, which is 2.\nNote that \"10110\" is not a valid pair since there is a 1 separating the two 1's underlined.\n\n\nExample 2:\n\nInput: n = 5\nOutput: 2\nExplanation: 5 in binary is \"101\".\n\n\nExample 3:\n\nInput: n = 6\nOutput: 1\nExplanation: 6 in binary is \"110\".\n\n\nExample 4:\n\nInput: n = 8\nOutput: 0\nExplanation: 8 in binary is \"1000\".\nThere aren't any adjacent pairs of 1's in the binary representation of 8, so we return 0.\n\n\nExample 5:\n\nInput: n = 1\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= n <= 109"},{"index":"869","url":"https://leetcode.com/problems/reordered-power-of-2","title":"Reordered Power of 2","difficulty":"Medium","description":"Starting with a positive integer N, we reorder the digits in any order (including the original order) such that the leading digit is not zero.\n\nReturn true if and only if we can do this in a way such that the resulting number is a power of 2.\n\n \n\nExample 1:\n\nInput: 1\nOutput: true\n\n\nExample 2:\n\nInput: 10\nOutput: false\n\n\nExample 3:\n\nInput: 16\nOutput: true\n\n\nExample 4:\n\nInput: 24\nOutput: false\n\n\nExample 5:\n\nInput: 46\nOutput: true\n\n\n \n\nNote:\n\n1 <= N <= 10^9"},{"index":"870","url":"https://leetcode.com/problems/advantage-shuffle","title":"Advantage Shuffle","difficulty":"Medium","description":"Given two arrays A and B of equal size, the advantage of A with respect to B is the number of indices i for which A[i] > B[i].\n\nReturn any permutation of A that maximizes its advantage with respect to B.\n\n \n\nExample 1:\n\nInput: A = [2,7,11,15], B = [1,10,4,11]\nOutput: [2,11,7,15]\n\n\nExample 2:\n\nInput: A = [12,24,8,32], B = [13,25,32,11]\nOutput: [24,32,8,12]\n\n\n \n\nNote:\n\n1 <= A.length = B.length <= 10000\n0 <= A[i] <= 10^9\n0 <= B[i] <= 10^9"},{"index":"871","url":"https://leetcode.com/problems/minimum-number-of-refueling-stops","title":"Minimum Number of Refueling Stops","difficulty":"Hard","description":"A car travels from a starting position to a destination which is target miles east of the starting position.\n\nAlong the way, there are gas stations.  Each station[i] represents a gas station that is station[i][0] miles east of the starting position, and has station[i][1] liters of gas.\n\nThe car starts with an infinite tank of gas, which initially has startFuel liters of fuel in it.  It uses 1 liter of gas per 1 mile that it drives.\n\nWhen the car reaches a gas station, it may stop and refuel, transferring all the gas from the station into the car.\n\nWhat is the least number of refueling stops the car must make in order to reach its destination?  If it cannot reach the destination, return -1.\n\nNote that if the car reaches a gas station with 0 fuel left, the car can still refuel there.  If the car reaches the destination with 0 fuel left, it is still considered to have arrived.\n\n \n\nExample 1:\n\nInput: target = 1, startFuel = 1, stations = []\nOutput: 0\nExplanation: We can reach the target without refueling.\n\n\nExample 2:\n\nInput: target = 100, startFuel = 1, stations = [[10,100]]\nOutput: -1\nExplanation: We can't reach the target (or even the first gas station).\n\n\nExample 3:\n\nInput: target = 100, startFuel = 10, stations = [[10,60],[20,30],[30,30],[60,40]]\nOutput: 2\nExplanation: \nWe start with 10 liters of fuel.\nWe drive to position 10, expending 10 liters of fuel.  We refuel from 0 liters to 60 liters of gas.\nThen, we drive from position 10 to position 60 (expending 50 liters of fuel),\nand refuel from 10 liters to 50 liters of gas.  We then drive to and reach the target.\nWe made 2 refueling stops along the way, so we return 2.\n\n\n \n\nNote:\n\n1 <= target, startFuel, stations[i][1] <= 10^9\n0 <= stations.length <= 500\n0 < stations[0][0] < stations[1][0] < ... < stations[stations.length-1][0] < target"},{"index":"872","url":"https://leetcode.com/problems/leaf-similar-trees","title":"Leaf-Similar Trees","difficulty":"Easy","description":"Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.\n\nFor example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).\n\nTwo binary trees are considered leaf-similar if their leaf value sequence is the same.\n\nReturn true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.\n\n \n\nExample 1:\n\nInput: root1 = [3,5,1,6,2,9,8,null,null,7,4], root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]\nOutput: true\n\n\nExample 2:\n\nInput: root1 = [1], root2 = [1]\nOutput: true\n\n\nExample 3:\n\nInput: root1 = [1], root2 = [2]\nOutput: false\n\n\nExample 4:\n\nInput: root1 = [1,2], root2 = [2,2]\nOutput: true\n\n\nExample 5:\n\nInput: root1 = [1,2,3], root2 = [1,3,2]\nOutput: false\n\n\n \n\nConstraints:\n\nThe number of nodes in each tree will be in the range [1, 200].\nBoth of the given trees will have values in the range [0, 200]."},{"index":"873","url":"https://leetcode.com/problems/length-of-longest-fibonacci-subsequence","title":"Length of Longest Fibonacci Subsequence","difficulty":"Medium","description":"A sequence X_1, X_2, ..., X_n is fibonacci-like if:\n\nn >= 3\nX_i + X_{i+1} = X_{i+2} for all i + 2 <= n\n\nGiven a strictly increasing array A of positive integers forming a sequence, find the length of the longest fibonacci-like subsequence of A.  If one does not exist, return 0.\n\n(Recall that a subsequence is derived from another sequence A by deleting any number of elements (including none) from A, without changing the order of the remaining elements.  For example, [3, 5, 8] is a subsequence of [3, 4, 5, 6, 7, 8].)\n\n \n\nExample 1:\n\nInput: [1,2,3,4,5,6,7,8]\nOutput: 5\nExplanation:\nThe longest subsequence that is fibonacci-like: [1,2,3,5,8].\n\n\nExample 2:\n\nInput: [1,3,7,11,12,14,18]\nOutput: 3\nExplanation:\nThe longest subsequence that is fibonacci-like:\n[1,11,12], [3,11,14] or [7,11,18].\n\n\n \n\nNote:\n\n3 <= A.length <= 1000\n1 <= A[0] < A[1] < ... < A[A.length - 1] <= 10^9\n(The time limit has been reduced by 50% for submissions in Java, C, and C++.)"},{"index":"874","url":"https://leetcode.com/problems/walking-robot-simulation","title":"Walking Robot Simulation","difficulty":"Easy","description":"A robot on an infinite grid starts at point (0, 0) and faces north.  The robot can receive one of three possible types of commands:\n\n-2: turn left 90 degrees\n-1: turn right 90 degrees\n1 <= x <= 9: move forward x units\n\nSome of the grid squares are obstacles. \n\nThe i-th obstacle is at grid point (obstacles[i][0], obstacles[i][1])\n\nIf the robot would try to move onto them, the robot stays on the previous grid square instead (but still continues following the rest of the route.)\n\nReturn the square of the maximum Euclidean distance that the robot will be from the origin.\n\n \n\nExample 1:\n\nInput: commands = [4,-1,3], obstacles = []\nOutput: 25\nExplanation: robot will go to (3, 4)\n\n\nExample 2:\n\nInput: commands = [4,-1,4,-2,4], obstacles = [[2,4]]\nOutput: 65\nExplanation: robot will be stuck at (1, 4) before turning left and going to (1, 8)\n\n\n \n\nNote:\n\n0 <= commands.length <= 10000\n0 <= obstacles.length <= 10000\n-30000 <= obstacle[i][0] <= 30000\n-30000 <= obstacle[i][1] <= 30000\nThe answer is guaranteed to be less than 2 ^ 31."},{"index":"875","url":"https://leetcode.com/problems/koko-eating-bananas","title":"Koko Eating Bananas","difficulty":"Medium","description":"Koko loves to eat bananas.  There are N piles of bananas, the i-th pile has piles[i] bananas.  The guards have gone and will come back in H hours.\n\nKoko can decide her bananas-per-hour eating speed of K.  Each hour, she chooses some pile of bananas, and eats K bananas from that pile.  If the pile has less than K bananas, she eats all of them instead, and won't eat any more bananas during this hour.\n\nKoko likes to eat slowly, but still wants to finish eating all the bananas before the guards come back.\n\nReturn the minimum integer K such that she can eat all the bananas within H hours.\n\n \n\nExample 1:\n\nInput: piles = [3,6,7,11], H = 8\nOutput: 4\n\n\nExample 2:\n\nInput: piles = [30,11,23,4,20], H = 5\nOutput: 30\n\n\nExample 3:\n\nInput: piles = [30,11,23,4,20], H = 6\nOutput: 23\n\n\n \n\nConstraints:\n\n1 <= piles.length <= 10^4\npiles.length <= H <= 10^9\n1 <= piles[i] <= 10^9"},{"index":"876","url":"https://leetcode.com/problems/middle-of-the-linked-list","title":"Middle of the Linked List","difficulty":"Easy","description":"Given a non-empty, singly linked list with head node head, return a middle node of linked list.\n\nIf there are two middle nodes, return the second middle node.\n\n \n\nExample 1:\n\nInput: [1,2,3,4,5]\nOutput: Node 3 from this list (Serialization: [3,4,5])\nThe returned node has value 3.  (The judge's serialization of this node is [3,4,5]).\nNote that we returned a ListNode object ans, such that:\nans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next = NULL.\n\n\nExample 2:\n\nInput: [1,2,3,4,5,6]\nOutput: Node 4 from this list (Serialization: [4,5,6])\nSince the list has two middle nodes with values 3 and 4, we return the second one.\n\n\n \n\nNote:\n\nThe number of nodes in the given list will be between 1 and 100."},{"index":"877","url":"https://leetcode.com/problems/stone-game","title":"Stone Game","difficulty":"Medium","description":"Alex and Lee play a game with piles of stones.  There are an even number of piles arranged in a row, and each pile has a positive integer number of stones piles[i].\n\nThe objective of the game is to end with the most stones.  The total number of stones is odd, so there are no ties.\n\nAlex and Lee take turns, with Alex starting first.  Each turn, a player takes the entire pile of stones from either the beginning or the end of the row.  This continues until there are no more piles left, at which point the person with the most stones wins.\n\nAssuming Alex and Lee play optimally, return True if and only if Alex wins the game.\n\n \n\nExample 1:\n\nInput: piles = [5,3,4,5]\nOutput: true\nExplanation: \nAlex starts first, and can only take the first 5 or the last 5.\nSay he takes the first 5, so that the row becomes [3, 4, 5].\nIf Lee takes 3, then the board is [4, 5], and Alex takes 5 to win with 10 points.\nIf Lee takes the last 5, then the board is [3, 4], and Alex takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alex, so we return true.\n\n\n \n\nConstraints:\n\n2 <= piles.length <= 500\npiles.length is even.\n1 <= piles[i] <= 500\nsum(piles) is odd."},{"index":"878","url":"https://leetcode.com/problems/nth-magical-number","title":"Nth Magical Number","difficulty":"Hard","description":"A positive integer is magical if it is divisible by either A or B.\n\nReturn the N-th magical number.  Since the answer may be very large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: N = 1, A = 2, B = 3\nOutput: 2\n\n\nExample 2:\n\nInput: N = 4, A = 2, B = 3\nOutput: 6\n\n\nExample 3:\n\nInput: N = 5, A = 2, B = 4\nOutput: 10\n\n\nExample 4:\n\nInput: N = 3, A = 6, B = 4\nOutput: 8\n\n\n \n\nNote:\n\n1 <= N <= 10^9\n2 <= A <= 40000\n2 <= B <= 40000"},{"index":"879","url":"https://leetcode.com/problems/profitable-schemes","title":"Profitable Schemes","difficulty":"Hard","description":"There is a group of G members, and a list of various crimes they could commit.\n\nThe ith crime generates a profit[i] and requires group[i] members to participate in it.\n\nIf a member participates in one crime, that member can't participate in another crime.\n\nLet's call a profitable scheme any subset of these crimes that generates at least P profit, and the total number of members participating in that subset of crimes is at most G.\n\nHow many schemes can be chosen?  Since the answer may be very large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: G = 5, P = 3, group = [2,2], profit = [2,3]\nOutput: 2\nExplanation: \nTo make a profit of at least 3, the group could either commit crimes 0 and 1, or just crime 1.\nIn total, there are 2 schemes.\n\n\nExample 2:\n\nInput: G = 10, P = 5, group = [2,3,5], profit = [6,7,8]\nOutput: 7\nExplanation: \nTo make a profit of at least 5, the group could commit any crimes, as long as they commit one.\nThere are 7 possible schemes: (0), (1), (2), (0,1), (0,2), (1,2), and (0,1,2).\n\n\n \n\nNote:\n\n1 <= G <= 100\n0 <= P <= 100\n1 <= group[i] <= 100\n0 <= profit[i] <= 100\n1 <= group.length = profit.length <= 100\n "},{"index":"880","url":"https://leetcode.com/problems/decoded-string-at-index","title":"Decoded String at Index","difficulty":"Medium","description":"An encoded string S is given.  To find and write the decoded string to a tape, the encoded string is read one character at a time and the following steps are taken:\n\nIf the character read is a letter, that letter is written onto the tape.\nIf the character read is a digit (say d), the entire current tape is repeatedly written d-1 more times in total.\n\nNow for some encoded string S, and an index K, find and return the K-th letter (1 indexed) in the decoded string.\n\n \n\nExample 1:\n\nInput: S = \"leet2code3\", K = 10\nOutput: \"o\"\nExplanation: \nThe decoded string is \"leetleetcodeleetleetcodeleetleetcode\".\nThe 10th letter in the string is \"o\".\n\n\nExample 2:\n\nInput: S = \"ha22\", K = 5\nOutput: \"h\"\nExplanation: \nThe decoded string is \"hahahaha\".  The 5th letter is \"h\".\n\n\nExample 3:\n\nInput: S = \"a2345678999999999999999\", K = 1\nOutput: \"a\"\nExplanation: \nThe decoded string is \"a\" repeated 8301530446056247680 times.  The 1st letter is \"a\".\n\n\n \n\nConstraints:\n\n2 <= S.length <= 100\nS will only contain lowercase letters and digits 2 through 9.\nS starts with a letter.\n1 <= K <= 10^9\nIt's guaranteed that K is less than or equal to the length of the decoded string.\nThe decoded string is guaranteed to have less than 2^63 letters."},{"index":"881","url":"https://leetcode.com/problems/boats-to-save-people","title":"Boats to Save People","difficulty":"Medium","description":"The i-th person has weight people[i], and each boat can carry a maximum weight of limit.\n\nEach boat carries at most 2 people at the same time, provided the sum of the weight of those people is at most limit.\n\nReturn the minimum number of boats to carry every given person.  (It is guaranteed each person can be carried by a boat.)\n\n \n\nExample 1:\n\nInput: people = [1,2], limit = 3\nOutput: 1\nExplanation: 1 boat (1, 2)\n\n\nExample 2:\n\nInput: people = [3,2,2,1], limit = 3\nOutput: 3\nExplanation: 3 boats (1, 2), (2) and (3)\n\n\nExample 3:\n\nInput: people = [3,5,3,4], limit = 5\nOutput: 4\nExplanation: 4 boats (3), (3), (4), (5)\n\nNote:\n\n1 <= people.length <= 50000\n1 <= people[i] <= limit <= 30000"},{"index":"882","url":"https://leetcode.com/problems/reachable-nodes-in-subdivided-graph","title":"Reachable Nodes In Subdivided Graph","difficulty":"Hard","description":"Starting with an undirected graph (the \"original graph\") with nodes from 0 to N-1, subdivisions are made to some of the edges.\n\nThe graph is given as follows: edges[k] is a list of integer pairs (i, j, n) such that (i, j) is an edge of the original graph,\n\nand n is the total number of new nodes on that edge. \n\nThen, the edge (i, j) is deleted from the original graph, n new nodes (x_1, x_2, ..., x_n) are added to the original graph,\n\nand n+1 new edges (i, x_1), (x_1, x_2), (x_2, x_3), ..., (x_{n-1}, x_n), (x_n, j) are added to the original graph.\n\nNow, you start at node 0 from the original graph, and in each move, you travel along one edge. \n\nReturn how many nodes you can reach in at most M moves.\n\n \n\nExample 1:\n\nInput: edges = [[0,1,10],[0,2,1],[1,2,2]], M = 6, N = 3\nOutput: 13\nExplanation: \nThe nodes that are reachable in the final graph after M = 6 moves are indicated below.\n\n\n\nExample 2:\n\nInput: edges = [[0,1,4],[1,2,6],[0,2,8],[1,3,1]], M = 10, N = 4\nOutput: 23\n\n \n\nNote:\n\n0 <= edges.length <= 10000\n0 <= edges[i][0] < edges[i][1] < N\nThere does not exist any i != j for which edges[i][0] == edges[j][0] and edges[i][1] == edges[j][1].\nThe original graph has no parallel edges.\n0 <= edges[i][2] <= 10000\n0 <= M <= 10^9\n1 <= N <= 3000\nA reachable node is a node that can be travelled to using at most M moves starting from node 0.\n "},{"index":"883","url":"https://leetcode.com/problems/projection-area-of-3d-shapes","title":"Projection Area of 3D Shapes","difficulty":"Easy","description":"On a N * N grid, we place some 1 * 1 * 1 cubes that are axis-aligned with the x, y, and z axes.\n\nEach value v = grid[i][j] represents a tower of v cubes placed on top of grid cell (i, j).\n\nNow we view the projection of these cubes onto the xy, yz, and zx planes.\n\nA projection is like a shadow, that maps our 3 dimensional figure to a 2 dimensional plane. \n\nHere, we are viewing the \"shadow\" when looking at the cubes from the top, the front, and the side.\n\nReturn the total area of all three projections.\n\n \n\nExample 1:\n\nInput: [[2]]\nOutput: 5\n\n\nExample 2:\n\nInput: [[1,2],[3,4]]\nOutput: 17\nExplanation: \nHere are the three projections (\"shadows\") of the shape made with each axis-aligned plane.\n\n\n\nExample 3:\n\nInput: [[1,0],[0,2]]\nOutput: 8\n\n\nExample 4:\n\nInput: [[1,1,1],[1,0,1],[1,1,1]]\nOutput: 14\n\n\nExample 5:\n\nInput: [[2,2,2],[2,1,2],[2,2,2]]\nOutput: 21\n\n\n \n\nNote:\n\n1 <= grid.length = grid[0].length <= 50\n0 <= grid[i][j] <= 50"},{"index":"884","url":"https://leetcode.com/problems/uncommon-words-from-two-sentences","title":"Uncommon Words from Two Sentences","difficulty":"Easy","description":"We are given two sentences A and B.  (A sentence is a string of space separated words.  Each word consists only of lowercase letters.)\n\nA word is uncommon if it appears exactly once in one of the sentences, and does not appear in the other sentence.\n\nReturn a list of all uncommon words. \n\nYou may return the list in any order.\n\n \n\nExample 1:\n\nInput: A = \"this apple is sweet\", B = \"this apple is sour\"\nOutput: [\"sweet\",\"sour\"]\n\n\nExample 2:\n\nInput: A = \"apple apple\", B = \"banana\"\nOutput: [\"banana\"]\n\n\n \n\nNote:\n\n0 <= A.length <= 200\n0 <= B.length <= 200\nA and B both contain only spaces and lowercase letters."},{"index":"885","url":"https://leetcode.com/problems/spiral-matrix-iii","title":"Spiral Matrix III","difficulty":"Medium","description":"On a 2 dimensional grid with R rows and C columns, we start at (r0, c0) facing east.\n\nHere, the north-west corner of the grid is at the first row and column, and the south-east corner of the grid is at the last row and column.\n\nNow, we walk in a clockwise spiral shape to visit every position in this grid. \n\nWhenever we would move outside the boundary of the grid, we continue our walk outside the grid (but may return to the grid boundary later.) \n\nEventually, we reach all R * C spaces of the grid.\n\nReturn a list of coordinates representing the positions of the grid in the order they were visited.\n\n \n\nExample 1:\n\nInput: R = 1, C = 4, r0 = 0, c0 = 0\nOutput: [[0,0],[0,1],[0,2],[0,3]]\n\n\n\n\n \n\nExample 2:\n\nInput: R = 5, C = 6, r0 = 1, c0 = 4\nOutput: [[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]\n\n\n\n\n \n\nNote:\n\n1 <= R <= 100\n1 <= C <= 100\n0 <= r0 < R\n0 <= c0 < C"},{"index":"886","url":"https://leetcode.com/problems/possible-bipartition","title":"Possible Bipartition","difficulty":"Medium","description":"Given a set of N people (numbered 1, 2, ..., N), we would like to split everyone into two groups of any size.\n\nEach person may dislike some other people, and they should not go into the same group. \n\nFormally, if dislikes[i] = [a, b], it means it is not allowed to put the people numbered a and b into the same group.\n\nReturn true if and only if it is possible to split everyone into two groups in this way.\n\n \n\nExample 1:\n\nInput: N = 4, dislikes = [[1,2],[1,3],[2,4]]\nOutput: true\nExplanation: group1 [1,4], group2 [2,3]\n\n\nExample 2:\n\nInput: N = 3, dislikes = [[1,2],[1,3],[2,3]]\nOutput: false\n\n\nExample 3:\n\nInput: N = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= N <= 2000\n0 <= dislikes.length <= 10000\ndislikes[i].length == 2\n1 <= dislikes[i][j] <= N\ndislikes[i][0] < dislikes[i][1]\nThere does not exist i != j for which dislikes[i] == dislikes[j]."},{"index":"887","url":"https://leetcode.com/problems/super-egg-drop","title":"Super Egg Drop","difficulty":"Hard","description":"You are given K eggs, and you have access to a building with N floors from 1 to N. \n\nEach egg is identical in function, and if an egg breaks, you cannot drop it again.\n\nYou know that there exists a floor F with 0 <= F <= N such that any egg dropped at a floor higher than F will break, and any egg dropped at or below floor F will not break.\n\nEach move, you may take an egg (if you have an unbroken one) and drop it from any floor X (with 1 <= X <= N). \n\nYour goal is to know with certainty what the value of F is.\n\nWhat is the minimum number of moves that you need to know with certainty what F is, regardless of the initial value of F?\n\n \n\nExample 1:\n\nInput: K = 1, N = 2\nOutput: 2\nExplanation: \nDrop the egg from floor 1.  If it breaks, we know with certainty that F = 0.\nOtherwise, drop the egg from floor 2.  If it breaks, we know with certainty that F = 1.\nIf it didn't break, then we know with certainty F = 2.\nHence, we needed 2 moves in the worst case to know what F is with certainty.\n\n\nExample 2:\n\nInput: K = 2, N = 6\nOutput: 3\n\n\nExample 3:\n\nInput: K = 3, N = 14\nOutput: 4\n\n\n \n\nNote:\n\n1 <= K <= 100\n1 <= N <= 10000"},{"index":"888","url":"https://leetcode.com/problems/fair-candy-swap","title":"Fair Candy Swap","difficulty":"Easy","description":"Alice and Bob have candy bars of different sizes: A[i] is the size of the i-th bar of candy that Alice has, and B[j] is the size of the j-th bar of candy that Bob has.\n\nSince they are friends, they would like to exchange one candy bar each so that after the exchange, they both have the same total amount of candy.  (The total amount of candy a person has is the sum of the sizes of candy bars they have.)\n\nReturn an integer array ans where ans[0] is the size of the candy bar that Alice must exchange, and ans[1] is the size of the candy bar that Bob must exchange.\n\nIf there are multiple answers, you may return any one of them.  It is guaranteed an answer exists.\n\n \n\nExample 1:\n\nInput: A = [1,1], B = [2,2]\nOutput: [1,2]\n\n\nExample 2:\n\nInput: A = [1,2], B = [2,3]\nOutput: [1,2]\n\n\nExample 3:\n\nInput: A = [2], B = [1,3]\nOutput: [2,3]\n\n\nExample 4:\n\nInput: A = [1,2,5], B = [2,4]\nOutput: [5,4]\n\n\n \n\nNote:\n\n1 <= A.length <= 10000\n1 <= B.length <= 10000\n1 <= A[i] <= 100000\n1 <= B[i] <= 100000\nIt is guaranteed that Alice and Bob have different total amounts of candy.\nIt is guaranteed there exists an answer."},{"index":"889","url":"https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal","title":"Construct Binary Tree from Preorder and Postorder Traversal","difficulty":"Medium","description":"Return any binary tree that matches the given preorder and postorder traversals.\n\nValues in the traversals pre and post are distinct positive integers.\n\n \n\nExample 1:\n\nInput: pre = [1,2,4,5,3,6,7], post = [4,5,2,6,7,3,1]\nOutput: [1,2,3,4,5,6,7]\n\n\n \n\nNote:\n\n1 <= pre.length == post.length <= 30\npre[] and post[] are both permutations of 1, 2, ..., pre.length.\nIt is guaranteed an answer exists. If there exists multiple answers, you can return any of them."},{"index":"890","url":"https://leetcode.com/problems/find-and-replace-pattern","title":"Find and Replace Pattern","difficulty":"Medium","description":"You have a list of words and a pattern, and you want to know which words in words matches the pattern.\n\nA word matches the pattern if there exists a permutation of letters p so that after replacing every letter x in the pattern with p(x), we get the desired word.\n\n(Recall that a permutation of letters is a bijection from letters to letters: every letter maps to another letter, and no two letters map to the same letter.)\n\nReturn a list of the words in words that match the given pattern. \n\nYou may return the answer in any order.\n\n \n\nExample 1:\n\nInput: words = [\"abc\",\"deq\",\"mee\",\"aqq\",\"dkd\",\"ccc\"], pattern = \"abb\"\nOutput: [\"mee\",\"aqq\"]\nExplanation: \"mee\" matches the pattern because there is a permutation {a -> m, b -> e, ...}. \n\"ccc\" does not match the pattern because {a -> c, b -> c, ...} is not a permutation,\nsince a and b map to the same letter.\n\n \n\nNote:\n\n1 <= words.length <= 50\n1 <= pattern.length = words[i].length <= 20"},{"index":"891","url":"https://leetcode.com/problems/sum-of-subsequence-widths","title":"Sum of Subsequence Widths","difficulty":"Hard","description":"Given an array of integers A, consider all non-empty subsequences of A.\n\nFor any sequence S, let the width of S be the difference between the maximum and minimum element of S.\n\nReturn the sum of the widths of all subsequences of A. \n\nAs the answer may be very large, return the answer modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: [2,1,3]\nOutput: 6\nExplanation:\nSubsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3].\nThe corresponding widths are 0, 0, 0, 1, 1, 2, 2.\nThe sum of these widths is 6.\n\n\n \n\nNote:\n\n1 <= A.length <= 20000\n1 <= A[i] <= 20000"},{"index":"892","url":"https://leetcode.com/problems/surface-area-of-3d-shapes","title":"Surface Area of 3D Shapes","difficulty":"Easy","description":"On a N * N grid, we place some 1 * 1 * 1 cubes.\n\nEach value v = grid[i][j] represents a tower of v cubes placed on top of grid cell (i, j).\n\nReturn the total surface area of the resulting shapes.\n\n \n\nExample 1:\n\nInput: [[2]]\nOutput: 10\n\n\nExample 2:\n\nInput: [[1,2],[3,4]]\nOutput: 34\n\n\nExample 3:\n\nInput: [[1,0],[0,2]]\nOutput: 16\n\n\nExample 4:\n\nInput: [[1,1,1],[1,0,1],[1,1,1]]\nOutput: 32\n\n\nExample 5:\n\nInput: [[2,2,2],[2,1,2],[2,2,2]]\nOutput: 46\n\n\n \n\nNote:\n\n1 <= N <= 50\n0 <= grid[i][j] <= 50"},{"index":"893","url":"https://leetcode.com/problems/groups-of-special-equivalent-strings","title":"Groups of Special-Equivalent Strings","difficulty":"Easy","description":"You are given an array A of strings.\n\nA move onto S consists of swapping any two even indexed characters of S, or any two odd indexed characters of S.\n\nTwo strings S and T are special-equivalent if after any number of moves onto S, S == T.\n\nFor example, S = \"zzxy\" and T = \"xyzz\" are special-equivalent because we may make the moves \"zzxy\" -> \"xzzy\" -> \"xyzz\" that swap S[0] and S[2], then S[1] and S[3].\n\nNow, a group of special-equivalent strings from A is a non-empty subset of A such that:\n\nEvery pair of strings in the group are special equivalent, and;\nThe group is the largest size possible (ie., there isn't a string S not in the group such that S is special equivalent to every string in the group)\n\nReturn the number of groups of special-equivalent strings from A.\n\n \n\nExample 1:\n\nInput: [\"abcd\",\"cdab\",\"cbad\",\"xyzz\",\"zzxy\",\"zzyx\"]\nOutput: 3\nExplanation: \nOne group is [\"abcd\", \"cdab\", \"cbad\"], since they are all pairwise special equivalent, and none of the other strings are all pairwise special equivalent to these.\n\nThe other two groups are [\"xyzz\", \"zzxy\"] and [\"zzyx\"].  Note that in particular, \"zzxy\" is not special equivalent to \"zzyx\".\n\n\nExample 2:\n\nInput: [\"abc\",\"acb\",\"bac\",\"bca\",\"cab\",\"cba\"]\nOutput: 3\n\n \n\nNote:\n\n1 <= A.length <= 1000\n1 <= A[i].length <= 20\nAll A[i] have the same length.\nAll A[i] consist of only lowercase letters."},{"index":"894","url":"https://leetcode.com/problems/all-possible-full-binary-trees","title":"All Possible Full Binary Trees","difficulty":"Medium","description":"A full binary tree is a binary tree where each node has exactly 0 or 2 children.\n\nReturn a list of all possible full binary trees with N nodes.  Each element of the answer is the root node of one possible tree.\n\nEach node of each tree in the answer must have node.val = 0.\n\nYou may return the final list of trees in any order.\n\n \n\nExample 1:\n\nInput: 7\nOutput: [[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]\nExplanation:\n\n\n\n \n\nNote:\n\n1 <= N <= 20"},{"index":"895","url":"https://leetcode.com/problems/maximum-frequency-stack","title":"Maximum Frequency Stack","difficulty":"Hard","description":"Implement FreqStack, a class which simulates the operation of a stack-like data structure.\n\nFreqStack has two functions:\n\npush(int x), which pushes an integer x onto the stack.\npop(), which removes and returns the most frequent element in the stack.\nIf there is a tie for most frequent element, the element closest to the top of the stack is removed and returned.\n\n \n\nExample 1:\n\nInput: \n[\"FreqStack\",\"push\",\"push\",\"push\",\"push\",\"push\",\"push\",\"pop\",\"pop\",\"pop\",\"pop\"],\n[[],[5],[7],[5],[7],[4],[5],[],[],[],[]]\nOutput: [null,null,null,null,null,null,null,5,7,5,4]\nExplanation:\nAfter making six .push operations, the stack is [5,7,5,7,4,5] from bottom to top.  Then:\n\npop() -> returns 5, as 5 is the most frequent.\nThe stack becomes [5,7,5,7,4].\n\npop() -> returns 7, as 5 and 7 is the most frequent, but 7 is closest to the top.\nThe stack becomes [5,7,5,4].\n\npop() -> returns 5.\nThe stack becomes [5,7,4].\n\npop() -> returns 4.\nThe stack becomes [5,7].\n\n\n \n\nNote:\n\nCalls to FreqStack.push(int x) will be such that 0 <= x <= 10^9.\nIt is guaranteed that FreqStack.pop() won't be called if the stack has zero elements.\nThe total number of FreqStack.push calls will not exceed 10000 in a single test case.\nThe total number of FreqStack.pop calls will not exceed 10000 in a single test case.\nThe total number of FreqStack.push and FreqStack.pop calls will not exceed 150000 across all test cases.\n\n "},{"index":"896","url":"https://leetcode.com/problems/monotonic-array","title":"Monotonic Array","difficulty":"Easy","description":"An array is monotonic if it is either monotone increasing or monotone decreasing.\n\nAn array A is monotone increasing if for all i <= j, A[i] <= A[j].  An array A is monotone decreasing if for all i <= j, A[i] >= A[j].\n\nReturn true if and only if the given array A is monotonic.\n\n \n\nExample 1:\n\nInput: [1,2,2,3]\nOutput: true\n\n\nExample 2:\n\nInput: [6,5,4,4]\nOutput: true\n\n\nExample 3:\n\nInput: [1,3,2]\nOutput: false\n\n\nExample 4:\n\nInput: [1,2,4,5]\nOutput: true\n\n\nExample 5:\n\nInput: [1,1,1]\nOutput: true\n\n\n \n\nNote:\n\n1 <= A.length <= 50000\n-100000 <= A[i] <= 100000"},{"index":"897","url":"https://leetcode.com/problems/increasing-order-search-tree","title":"Increasing Order Search Tree","difficulty":"Easy","description":"Given the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only one right child.\n\n \n\nExample 1:\n\nInput: root = [5,3,6,2,4,null,8,1,null,null,null,7,9]\nOutput: [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n\n\nExample 2:\n\nInput: root = [5,1,7]\nOutput: [1,null,5,null,7]\n\n\n \n\nConstraints:\n\nThe number of nodes in the given tree will be in the range [1, 100].\n0 <= Node.val <= 1000"},{"index":"898","url":"https://leetcode.com/problems/bitwise-ors-of-subarrays","title":"Bitwise ORs of Subarrays","difficulty":"Medium","description":"We have an array A of non-negative integers.\n\nFor every (contiguous) subarray B = [A[i], A[i+1], ..., A[j]] (with i <= j), we take the bitwise OR of all the elements in B, obtaining a result A[i] | A[i+1] | ... | A[j].\n\nReturn the number of possible results.  (Results that occur more than once are only counted once in the final answer.)\n\n \n\nExample 1:\n\nInput: [0]\nOutput: 1\nExplanation: \nThere is only one possible result: 0.\n\n\nExample 2:\n\nInput: [1,1,2]\nOutput: 3\nExplanation: \nThe possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\nThese yield the results 1, 1, 2, 1, 3, 3.\nThere are 3 unique values, so the answer is 3.\n\n\nExample 3:\n\nInput: [1,2,4]\nOutput: 6\nExplanation: \nThe possible results are 1, 2, 3, 4, 6, and 7.\n\n\n \n\nNote:\n\n1 <= A.length <= 50000\n0 <= A[i] <= 10^9"},{"index":"899","url":"https://leetcode.com/problems/orderly-queue","title":"Orderly Queue","difficulty":"Hard","description":"A string S of lowercase letters is given.  Then, we may make any number of moves.\n\nIn each move, we choose one of the first K letters (starting from the left), remove it, and place it at the end of the string.\n\nReturn the lexicographically smallest string we could have after any number of moves.\n\n \n\nExample 1:\n\nInput: S = \"cba\", K = 1\nOutput: \"acb\"\nExplanation: \nIn the first move, we move the 1st character (\"c\") to the end, obtaining the string \"bac\".\nIn the second move, we move the 1st character (\"b\") to the end, obtaining the final result \"acb\".\n\n\nExample 2:\n\nInput: S = \"baaca\", K = 3\nOutput: \"aaabc\"\nExplanation: \nIn the first move, we move the 1st character (\"b\") to the end, obtaining the string \"aacab\".\nIn the second move, we move the 3rd character (\"c\") to the end, obtaining the final result \"aaabc\".\n\n\n \n\nNote:\n\n1 <= K <= S.length <= 1000\nS consists of lowercase letters only."},{"index":"900","url":"https://leetcode.com/problems/rle-iterator","title":"RLE Iterator","difficulty":"Medium","description":"Write an iterator that iterates through a run-length encoded sequence.\n\nThe iterator is initialized by RLEIterator(int[] A), where A is a run-length encoding of some sequence.  More specifically, for all even i, A[i] tells us the number of times that the non-negative integer value A[i+1] is repeated in the sequence.\n\nThe iterator supports one function: next(int n), which exhausts the next n elements (n >= 1) and returns the last element exhausted in this way.  If there is no element left to exhaust, next returns -1 instead.\n\nFor example, we start with A = [3,8,0,9,2,5], which is a run-length encoding of the sequence [8,8,8,5,5].  This is because the sequence can be read as \"three eights, zero nines, two fives\".\n\n \n\nExample 1:\n\nInput: [\"RLEIterator\",\"next\",\"next\",\"next\",\"next\"], [[[3,8,0,9,2,5]],[2],[1],[1],[2]]\nOutput: [null,8,8,5,-1]\nExplanation: \nRLEIterator is initialized with RLEIterator([3,8,0,9,2,5]).\nThis maps to the sequence [8,8,8,5,5].\nRLEIterator.next is then called 4 times:\n\n.next(2) exhausts 2 terms of the sequence, returning 8.  The remaining sequence is now [8, 5, 5].\n\n.next(1) exhausts 1 term of the sequence, returning 8.  The remaining sequence is now [5, 5].\n\n.next(1) exhausts 1 term of the sequence, returning 5.  The remaining sequence is now [5].\n\n.next(2) exhausts 2 terms, returning -1.  This is because the first term exhausted was 5,\nbut the second term did not exist.  Since the last term exhausted does not exist, we return -1.\n\n\n\nNote:\n\n0 <= A.length <= 1000\nA.length is an even integer.\n0 <= A[i] <= 10^9\nThere are at most 1000 calls to RLEIterator.next(int n) per test case.\nEach call to RLEIterator.next(int n) will have 1 <= n <= 10^9."},{"index":"901","url":"https://leetcode.com/problems/online-stock-span","title":"Online Stock Span","difficulty":"Medium","description":"Write a class StockSpanner which collects daily price quotes for some stock, and returns the span of that stock's price for the current day.\n\nThe span of the stock's price today is defined as the maximum number of consecutive days (starting from today and going backwards) for which the price of the stock was less than or equal to today's price.\n\nFor example, if the price of a stock over the next 7 days were [100, 80, 60, 70, 60, 75, 85], then the stock spans would be [1, 1, 1, 2, 1, 4, 6].\n\n \n\nExample 1:\n\nInput: [\"StockSpanner\",\"next\",\"next\",\"next\",\"next\",\"next\",\"next\",\"next\"], [[],[100],[80],[60],[70],[60],[75],[85]]\nOutput: [null,1,1,1,2,1,4,6]\nExplanation: \nFirst, S = StockSpanner() is initialized.  Then:\nS.next(100) is called and returns 1,\nS.next(80) is called and returns 1,\nS.next(60) is called and returns 1,\nS.next(70) is called and returns 2,\nS.next(60) is called and returns 1,\nS.next(75) is called and returns 4,\nS.next(85) is called and returns 6.\n\nNote that (for example) S.next(75) returned 4, because the last 4 prices\n(including today's price of 75) were less than or equal to today's price.\n\n\n \n\nNote:\n\nCalls to StockSpanner.next(int price) will have 1 <= price <= 10^5.\nThere will be at most 10000 calls to StockSpanner.next per test case.\nThere will be at most 150000 calls to StockSpanner.next across all test cases.\nThe total time limit for this problem has been reduced by 75% for C++, and 50% for all other languages."},{"index":"902","url":"https://leetcode.com/problems/numbers-at-most-n-given-digit-set","title":"Numbers At Most N Given Digit Set","difficulty":"Hard","description":"Given an array of digits, you can write numbers using each digits[i] as many times as we want.  For example, if digits = ['1','3','5'], we may write numbers such as '13', '551', and '1351315'.\n\nReturn the number of positive integers that can be generated that are less than or equal to a given integer n.\n\n \n\nExample 1:\n\nInput: digits = [\"1\",\"3\",\"5\",\"7\"], n = 100\nOutput: 20\nExplanation: \nThe 20 numbers that can be written are:\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\n\n\nExample 2:\n\nInput: digits = [\"1\",\"4\",\"9\"], n = 1000000000\nOutput: 29523\nExplanation: \nWe can write 3 one digit numbers, 9 two digit numbers, 27 three digit numbers,\n81 four digit numbers, 243 five digit numbers, 729 six digit numbers,\n2187 seven digit numbers, 6561 eight digit numbers, and 19683 nine digit numbers.\nIn total, this is 29523 integers that can be written using the digits array.\n\n\nExample 3:\n\nInput: digits = [\"7\"], n = 8\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= digits.length <= 9\ndigits[i].length == 1\ndigits[i] is a digit from '1' to '9'.\nAll the values in digits are unique.\n1 <= n <= 109"},{"index":"903","url":"https://leetcode.com/problems/valid-permutations-for-di-sequence","title":"Valid Permutations for DI Sequence","difficulty":"Hard","description":"We are given S, a length n string of characters from the set {'D', 'I'}. (These letters stand for \"decreasing\" and \"increasing\".)\n\nA valid permutation is a permutation P[0], P[1], ..., P[n] of integers {0, 1, ..., n}, such that for all i:\n\nIf S[i] == 'D', then P[i] > P[i+1], and;\nIf S[i] == 'I', then P[i] < P[i+1].\n\nHow many valid permutations are there?  Since the answer may be large, return your answer modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: \"DID\"\nOutput: 5\nExplanation: \nThe 5 valid permutations of (0, 1, 2, 3) are:\n(1, 0, 3, 2)\n(2, 0, 3, 1)\n(2, 1, 3, 0)\n(3, 0, 2, 1)\n(3, 1, 2, 0)\n\n\n \n\nNote:\n\n1 <= S.length <= 200\nS consists only of characters from the set {'D', 'I'}.\n\n "},{"index":"904","url":"https://leetcode.com/problems/fruit-into-baskets","title":"Fruit Into Baskets","difficulty":"Medium","description":"In a row of trees, the i-th tree produces fruit with type tree[i].\n\nYou start at any tree of your choice, then repeatedly perform the following steps:\n\nAdd one piece of fruit from this tree to your baskets.  If you cannot, stop.\nMove to the next tree to the right of the current tree.  If there is no tree to the right, stop.\n\nNote that you do not have any choice after the initial choice of starting tree: you must perform step 1, then step 2, then back to step 1, then step 2, and so on until you stop.\n\nYou have two baskets, and each basket can carry any quantity of fruit, but you want each basket to only carry one type of fruit each.\n\nWhat is the total amount of fruit you can collect with this procedure?\n\n \n\nExample 1:\n\nInput: [1,2,1]\nOutput: 3\nExplanation: We can collect [1,2,1].\n\n\nExample 2:\n\nInput: [0,1,2,2]\nOutput: 3\nExplanation: We can collect [1,2,2].\nIf we started at the first tree, we would only collect [0, 1].\n\n\nExample 3:\n\nInput: [1,2,3,2,2]\nOutput: 4\nExplanation: We can collect [2,3,2,2].\nIf we started at the first tree, we would only collect [1, 2].\n\n\nExample 4:\n\nInput: [3,3,3,1,2,1,1,2,3,3,4]\nOutput: 5\nExplanation: We can collect [1,2,1,1,2].\nIf we started at the first tree or the eighth tree, we would only collect 4 fruits.\n\n\n \n\nNote:\n\n1 <= tree.length <= 40000\n0 <= tree[i] < tree.length"},{"index":"905","url":"https://leetcode.com/problems/sort-array-by-parity","title":"Sort Array By Parity","difficulty":"Easy","description":"Given an array A of non-negative integers, return an array consisting of all the even elements of A, followed by all the odd elements of A.\n\nYou may return any answer array that satisfies this condition.\n\n \n\nExample 1:\n\nInput: [3,1,2,4]\nOutput: [2,4,3,1]\nThe outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.\n\n\n \n\nNote:\n\n1 <= A.length <= 5000\n0 <= A[i] <= 5000"},{"index":"906","url":"https://leetcode.com/problems/super-palindromes","title":"Super Palindromes","difficulty":"Hard","description":"Let's say a positive integer is a superpalindrome if it is a palindrome, and it is also the square of a palindrome.\n\nNow, given two positive integers L and R (represented as strings), return the number of superpalindromes in the inclusive range [L, R].\n\n \n\nExample 1:\n\nInput: L = \"4\", R = \"1000\"\nOutput: 4\nExplanation: 4, 9, 121, and 484 are superpalindromes.\nNote that 676 is not a superpalindrome: 26 * 26 = 676, but 26 is not a palindrome.\n\n \n\nNote:\n\n1 <= len(L) <= 18\n1 <= len(R) <= 18\nL and R are strings representing integers in the range [1, 10^18).\nint(L) <= int(R)\n\n "},{"index":"907","url":"https://leetcode.com/problems/sum-of-subarray-minimums","title":"Sum of Subarray Minimums","difficulty":"Medium","description":"Given an array of integers A, find the sum of min(B), where B ranges over every (contiguous) subarray of A.\n\nSince the answer may be large, return the answer modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: [3,1,2,4]\nOutput: 17\nExplanation: Subarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.  Sum is 17.\n\n \n\nNote:\n\n1 <= A.length <= 30000\n1 <= A[i] <= 30000\n\n \n\n \n\nExample 1:\n\nInput: arr = [3,1,2,4]\nOutput: 17\nExplanation: \nSubarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.\nSum is 17.\n\n\nExample 2:\n\nInput: arr = [11,81,94,43,3]\nOutput: 444\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 3 * 104\n1 <= arr[i] <= 3 * 104"},{"index":"908","url":"https://leetcode.com/problems/smallest-range-i","title":"Smallest Range I","difficulty":"Easy","description":"Given an array A of integers, for each integer A[i] we may choose any x with -K <= x <= K, and add x to A[i].\n\nAfter this process, we have some array B.\n\nReturn the smallest possible difference between the maximum value of B and the minimum value of B.\n\n \n\nExample 1:\n\nInput: A = [1], K = 0\nOutput: 0\nExplanation: B = [1]\n\n\nExample 2:\n\nInput: A = [0,10], K = 2\nOutput: 6\nExplanation: B = [2,8]\n\n\nExample 3:\n\nInput: A = [1,3,6], K = 3\nOutput: 0\nExplanation: B = [3,3,3] or B = [4,4,4]\n\n\n \n\nNote:\n\n1 <= A.length <= 10000\n0 <= A[i] <= 10000\n0 <= K <= 10000"},{"index":"909","url":"https://leetcode.com/problems/snakes-and-ladders","title":"Snakes and Ladders","difficulty":"Medium","description":"On an N x N board, the numbers from 1 to N*N are written boustrophedonically starting from the bottom left of the board, and alternating direction each row.  For example, for a 6 x 6 board, the numbers are written as follows:\n\n\n\n\nYou start on square 1 of the board (which is always in the last row and first column).  Each move, starting from square x, consists of the following:\n\nYou choose a destination square S with number x+1, x+2, x+3, x+4, x+5, or x+6, provided this number is <= N*N.\n(This choice simulates the result of a standard 6-sided die roll: ie., there are always at most 6 destinations, regardless of the size of the board.)\nIf S has a snake or ladder, you move to the destination of that snake or ladder.  Otherwise, you move to S.\n\nA board square on row r and column c has a \"snake or ladder\" if board[r][c] != -1.  The destination of that snake or ladder is board[r][c].\n\nNote that you only take a snake or ladder at most once per move: if the destination to a snake or ladder is the start of another snake or ladder, you do not continue moving.  (For example, if the board is `[[4,-1],[-1,3]]`, and on the first move your destination square is `2`, then you finish your first move at `3`, because you do not continue moving to `4`.)\n\nReturn the least number of moves required to reach square N*N.  If it is not possible, return -1.\n\nExample 1:\n\nInput: [\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,35,-1,-1,13,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,15,-1,-1,-1,-1]]\nOutput: 4\nExplanation: \nAt the beginning, you start at square 1 [at row 5, column 0].\nYou decide to move to square 2, and must take the ladder to square 15.\nYou then decide to move to square 17 (row 3, column 5), and must take the snake to square 13.\nYou then decide to move to square 14, and must take the ladder to square 35.\nYou then decide to move to square 36, ending the game.\nIt can be shown that you need at least 4 moves to reach the N*N-th square, so the answer is 4.\n\n\nNote:\n\n2 <= board.length = board[0].length <= 20\nboard[i][j] is between 1 and N*N or is equal to -1.\nThe board square with number 1 has no snake or ladder.\nThe board square with number N*N has no snake or ladder."},{"index":"910","url":"https://leetcode.com/problems/smallest-range-ii","title":"Smallest Range II","difficulty":"Medium","description":"Given an array A of integers, for each integer A[i] we need to choose either x = -K or x = K, and add x to A[i] (only once).\n\nAfter this process, we have some array B.\n\nReturn the smallest possible difference between the maximum value of B and the minimum value of B.\n\n \n\nExample 1:\n\nInput: A = [1], K = 0\nOutput: 0\nExplanation: B = [1]\n\n\nExample 2:\n\nInput: A = [0,10], K = 2\nOutput: 6\nExplanation: B = [2,8]\n\n\nExample 3:\n\nInput: A = [1,3,6], K = 3\nOutput: 3\nExplanation: B = [4,6,3]\n\n\n \n\nNote:\n\n1 <= A.length <= 10000\n0 <= A[i] <= 10000\n0 <= K <= 10000"},{"index":"911","url":"https://leetcode.com/problems/online-election","title":"Online Election","difficulty":"Medium","description":"In an election, the i-th vote was cast for persons[i] at time times[i].\n\nNow, we would like to implement the following query function: TopVotedCandidate.q(int t) will return the number of the person that was leading the election at time t.  \n\nVotes cast at time t will count towards our query.  In the case of a tie, the most recent vote (among tied candidates) wins.\n\n \n\nExample 1:\n\nInput: [\"TopVotedCandidate\",\"q\",\"q\",\"q\",\"q\",\"q\",\"q\"], [[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]\nOutput: [null,0,1,1,0,0,1]\nExplanation: \nAt time 3, the votes are [0], and 0 is leading.\nAt time 12, the votes are [0,1,1], and 1 is leading.\nAt time 25, the votes are [0,1,1,0,0,1], and 1 is leading (as ties go to the most recent vote.)\nThis continues for 3 more queries at time 15, 24, and 8.\n\n\n \n\nNote:\n\n1 <= persons.length = times.length <= 5000\n0 <= persons[i] <= persons.length\ntimes is a strictly increasing array with all elements in [0, 10^9].\nTopVotedCandidate.q is called at most 10000 times per test case.\nTopVotedCandidate.q(int t) is always called with t >= times[0]."},{"index":"912","url":"https://leetcode.com/problems/sort-an-array","title":"Sort an Array","difficulty":"Medium","description":"Given an array of integers nums, sort the array in ascending order.\n\n \n\nExample 1:\n\nInput: nums = [5,2,3,1]\nOutput: [1,2,3,5]\n\n\nExample 2:\n\nInput: nums = [5,1,1,2,0,0]\nOutput: [0,0,1,1,2,5]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 50000\n-50000 <= nums[i] <= 50000"},{"index":"913","url":"https://leetcode.com/problems/cat-and-mouse","title":"Cat and Mouse","difficulty":"Hard","description":"A game on an undirected graph is played by two players, Mouse and Cat, who alternate turns.\n\nThe graph is given as follows: graph[a] is a list of all nodes b such that ab is an edge of the graph.\n\nThe mouse starts at node 1 and goes first, the cat starts at node 2 and goes second, and there is a hole at node 0.\n\nDuring each player's turn, they must travel along one edge of the graph that meets where they are.  For example, if the Mouse is at node 1, it must travel to any node in graph[1].\n\nAdditionally, it is not allowed for the Cat to travel to the Hole (node 0.)\n\nThen, the game can end in three ways:\n\nIf ever the Cat occupies the same node as the Mouse, the Cat wins.\nIf ever the Mouse reaches the Hole, the Mouse wins.\nIf ever a position is repeated (i.e., the players are in the same position as a previous turn, and it is the same player's turn to move), the game is a draw.\n\nGiven a graph, and assuming both players play optimally, return\n\n1 if the mouse wins the game,\n2 if the cat wins the game, or\n0 if the game is a draw.\n\n \n\nExample 1:\n\nInput: graph = [[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]\nOutput: 0\n\n\nExample 2:\n\nInput: graph = [[1,3],[0],[3],[0,2]]\nOutput: 1\n\n\n \n\nConstraints:\n\n3 <= graph.length <= 50\n1 <= graph[i].length < graph.length\n0 <= graph[i][j] < graph.length\ngraph[i][j] != i\ngraph[i] is unique.\nThe mouse and the cat can always move. "},{"index":"914","url":"https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards","title":"X of a Kind in a Deck of Cards","difficulty":"Easy","description":"In a deck of cards, each card has an integer written on it.\n\nReturn true if and only if you can choose X >= 2 such that it is possible to split the entire deck into 1 or more groups of cards, where:\n\nEach group has exactly X cards.\nAll the cards in each group have the same integer.\n\n \n\nExample 1:\n\nInput: deck = [1,2,3,4,4,3,2,1]\nOutput: true\nExplanation: Possible partition [1,1],[2,2],[3,3],[4,4].\n\n\nExample 2:\n\nInput: deck = [1,1,1,2,2,2,3,3]\nOutput: false´\nExplanation: No possible partition.\n\n\nExample 3:\n\nInput: deck = [1]\nOutput: false\nExplanation: No possible partition.\n\n\nExample 4:\n\nInput: deck = [1,1]\nOutput: true\nExplanation: Possible partition [1,1].\n\n\nExample 5:\n\nInput: deck = [1,1,2,2,2,2]\nOutput: true\nExplanation: Possible partition [1,1],[2,2],[2,2].\n\n\n \n\nConstraints:\n\n1 <= deck.length <= 10^4\n0 <= deck[i] < 10^4"},{"index":"915","url":"https://leetcode.com/problems/partition-array-into-disjoint-intervals","title":"Partition Array into Disjoint Intervals","difficulty":"Medium","description":"Given an array A, partition it into two (contiguous) subarrays left and right so that:\n\nEvery element in left is less than or equal to every element in right.\nleft and right are non-empty.\nleft has the smallest possible size.\n\nReturn the length of left after such a partitioning.  It is guaranteed that such a partitioning exists.\n\n \n\nExample 1:\n\nInput: [5,0,3,8,6]\nOutput: 3\nExplanation: left = [5,0,3], right = [8,6]\n\n\nExample 2:\n\nInput: [1,1,1,0,6,12]\nOutput: 4\nExplanation: left = [1,1,1,0], right = [6,12]\n\n\n \n\nNote:\n\n2 <= A.length <= 30000\n0 <= A[i] <= 10^6\nIt is guaranteed there is at least one way to partition A as described.\n "},{"index":"916","url":"https://leetcode.com/problems/word-subsets","title":"Word Subsets","difficulty":"Medium","description":"We are given two arrays A and B of words.  Each word is a string of lowercase letters.\n\nNow, say that word b is a subset of word a if every letter in b occurs in a, including multiplicity.  For example, \"wrr\" is a subset of \"warrior\", but is not a subset of \"world\".\n\nNow say a word a from A is universal if for every b in B, b is a subset of a. \n\nReturn a list of all universal words in A.  You can return the words in any order.\n\n \n\nExample 1:\n\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"e\",\"o\"]\nOutput: [\"facebook\",\"google\",\"leetcode\"]\n\n\nExample 2:\n\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"l\",\"e\"]\nOutput: [\"apple\",\"google\",\"leetcode\"]\n\n\nExample 3:\n\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"e\",\"oo\"]\nOutput: [\"facebook\",\"google\"]\n\n\nExample 4:\n\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"lo\",\"eo\"]\nOutput: [\"google\",\"leetcode\"]\n\n\nExample 5:\n\nInput: A = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], B = [\"ec\",\"oc\",\"ceo\"]\nOutput: [\"facebook\",\"leetcode\"]\n\n\n \n\nNote:\n\n1 <= A.length, B.length <= 10000\n1 <= A[i].length, B[i].length <= 10\nA[i] and B[i] consist only of lowercase letters.\nAll words in A[i] are unique: there isn't i != j with A[i] == A[j]."},{"index":"917","url":"https://leetcode.com/problems/reverse-only-letters","title":"Reverse Only Letters","difficulty":"Easy","description":"Given a string S, return the \"reversed\" string where all characters that are not a letter stay in the same place, and all letters reverse their positions.\n\n \n\nExample 1:\n\nInput: \"ab-cd\"\nOutput: \"dc-ba\"\n\n\nExample 2:\n\nInput: \"a-bC-dEf-ghIj\"\nOutput: \"j-Ih-gfE-dCba\"\n\n\nExample 3:\n\nInput: \"Test1ng-Leet=code-Q!\"\nOutput: \"Qedo1ct-eeLg=ntse-T!\"\n\n\n \n\nNote:\n\nS.length <= 100\n33 <= S[i].ASCIIcode <= 122 \nS doesn't contain \\ or \""},{"index":"918","url":"https://leetcode.com/problems/maximum-sum-circular-subarray","title":"Maximum Sum Circular Subarray","difficulty":"Medium","description":"Given a circular array C of integers represented by A, find the maximum possible sum of a non-empty subarray of C.\n\nHere, a circular array means the end of the array connects to the beginning of the array.  (Formally, C[i] = A[i] when 0 <= i < A.length, and C[i+A.length] = C[i] when i >= 0.)\n\nAlso, a subarray may only include each element of the fixed buffer A at most once.  (Formally, for a subarray C[i], C[i+1], ..., C[j], there does not exist i <= k1, k2 <= j with k1 % A.length = k2 % A.length.)\n\n \n\nExample 1:\n\nInput: [1,-2,3,-2]\nOutput: 3\nExplanation: Subarray [3] has maximum sum 3\n\n\nExample 2:\n\nInput: [5,-3,5]\nOutput: 10\nExplanation: Subarray [5,5] has maximum sum 5 + 5 = 10\n\n\nExample 3:\n\nInput: [3,-1,2,-1]\nOutput: 4\nExplanation: Subarray [2,-1,3] has maximum sum 2 + (-1) + 3 = 4\n\n\nExample 4:\n\nInput: [3,-2,2,-3]\nOutput: 3\nExplanation: Subarray [3] and [3,-2,2] both have maximum sum 3\n\n\nExample 5:\n\nInput: [-2,-3,-1]\nOutput: -1\nExplanation: Subarray [-1] has maximum sum -1\n\n\n \n\nNote:\n\n-30000 <= A[i] <= 30000\n1 <= A.length <= 30000"},{"index":"919","url":"https://leetcode.com/problems/complete-binary-tree-inserter","title":"Complete Binary Tree Inserter","difficulty":"Medium","description":"A complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.\n\nWrite a data structure CBTInserter that is initialized with a complete binary tree and supports the following operations:\n\nCBTInserter(TreeNode root) initializes the data structure on a given tree with head node root;\nCBTInserter.insert(int v) will insert a TreeNode into the tree with value node.val = v so that the tree remains complete, and returns the value of the parent of the inserted TreeNode;\nCBTInserter.get_root() will return the head node of the tree.\n\n \n\nExample 1:\n\nInput: inputs = [\"CBTInserter\",\"insert\",\"get_root\"], inputs = [[[1]],[2],[]]\nOutput: [null,1,[1,2]]\n\n\nExample 2:\n\nInput: inputs = [\"CBTInserter\",\"insert\",\"insert\",\"get_root\"], inputs = [[[1,2,3,4,5,6]],[7],[8],[]]\nOutput: [null,3,4,[1,2,3,4,5,6,7,8]]\n\n \n\nNote:\n\nThe initial given tree is complete and contains between 1 and 1000 nodes.\nCBTInserter.insert is called at most 10000 times per test case.\nEvery value of a given or inserted node is between 0 and 5000.\n\n \n\n "},{"index":"920","url":"https://leetcode.com/problems/number-of-music-playlists","title":"Number of Music Playlists","difficulty":"Hard","description":"Your music player contains N different songs and she wants to listen to L (not necessarily different) songs during your trip.  You create a playlist so that:\n\nEvery song is played at least once\nA song can only be played again only if K other songs have been played\n\nReturn the number of possible playlists.  As the answer can be very large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: N = 3, L = 3, K = 1\nOutput: 6\nExplanation: There are 6 possible playlists. [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].\n\n\nExample 2:\n\nInput: N = 2, L = 3, K = 0\nOutput: 6\nExplanation: There are 6 possible playlists. [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], [1, 2, 2]\n\n\nExample 3:\n\nInput: N = 2, L = 3, K = 1\nOutput: 2\nExplanation: There are 2 possible playlists. [1, 2, 1], [2, 1, 2]\n\n\n \n\nNote:\n\n0 <= K < N <= L <= 100"},{"index":"921","url":"https://leetcode.com/problems/minimum-add-to-make-parentheses-valid","title":"Minimum Add to Make Parentheses Valid","difficulty":"Medium","description":"Given a string S of '(' and ')' parentheses, we add the minimum number of parentheses ( '(' or ')', and in any positions ) so that the resulting parentheses string is valid.\n\nFormally, a parentheses string is valid if and only if:\n\nIt is the empty string, or\nIt can be written as AB (A concatenated with B), where A and B are valid strings, or\nIt can be written as (A), where A is a valid string.\n\nGiven a parentheses string, return the minimum number of parentheses we must add to make the resulting string valid.\n\n \n\nExample 1:\n\nInput: \"())\"\nOutput: 1\n\n\nExample 2:\n\nInput: \"(((\"\nOutput: 3\n\n\nExample 3:\n\nInput: \"()\"\nOutput: 0\n\n\nExample 4:\n\nInput: \"()))((\"\nOutput: 4\n\n \n\nNote:\n\nS.length <= 1000\nS only consists of '(' and ')' characters.\n "},{"index":"922","url":"https://leetcode.com/problems/sort-array-by-parity-ii","title":"Sort Array By Parity II","difficulty":"Easy","description":"Given an array A of non-negative integers, half of the integers in A are odd, and half of the integers are even.\n\nSort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even.\n\nYou may return any answer array that satisfies this condition.\n\n \n\nExample 1:\n\nInput: [4,2,5,7]\nOutput: [4,5,2,7]\nExplanation: [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.\n\n\n \n\nNote:\n\n2 <= A.length <= 20000\nA.length % 2 == 0\n0 <= A[i] <= 1000\n\n "},{"index":"923","url":"https://leetcode.com/problems/3sum-with-multiplicity","title":"3Sum With Multiplicity","difficulty":"Medium","description":"Given an integer array A, and an integer target, return the number of tuples i, j, k  such that i < j < k and A[i] + A[j] + A[k] == target.\n\nAs the answer can be very large, return it modulo 109 + 7.\n\n \n\nExample 1:\n\nInput: A = [1,1,2,2,3,3,4,4,5,5], target = 8\nOutput: 20\nExplanation: \nEnumerating by the values (A[i], A[j], A[k]):\n(1, 2, 5) occurs 8 times;\n(1, 3, 4) occurs 8 times;\n(2, 2, 4) occurs 2 times;\n(2, 3, 3) occurs 2 times.\n\n\nExample 2:\n\nInput: A = [1,1,2,2,2,2], target = 5\nOutput: 12\nExplanation: \nA[i] = 1, A[j] = A[k] = 2 occurs 12 times:\nWe choose one 1 from [1,1] in 2 ways,\nand two 2s from [2,2,2,2] in 6 ways.\n\n\n \n\nConstraints:\n\n3 <= A.length <= 3000\n0 <= A[i] <= 100\n0 <= target <= 300"},{"index":"924","url":"https://leetcode.com/problems/minimize-malware-spread","title":"Minimize Malware Spread","difficulty":"Hard","description":"In a network of nodes, each node i is directly connected to another node j if and only if graph[i][j] = 1.\n\nSome nodes initial are initially infected by malware.  Whenever two nodes are directly connected and at least one of those two nodes is infected by malware, both nodes will be infected by malware.  This spread of malware will continue until no more nodes can be infected in this manner.\n\nSuppose M(initial) is the final number of nodes infected with malware in the entire network, after the spread of malware stops.\n\nWe will remove one node from the initial list.  Return the node that if removed, would minimize M(initial).  If multiple nodes could be removed to minimize M(initial), return such a node with the smallest index.\n\nNote that if a node was removed from the initial list of infected nodes, it may still be infected later as a result of the malware spread.\n\n \n\nExample 1:\n\nInput: graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\nOutput: 0\n\n\nExample 2:\n\nInput: graph = [[1,0,0],[0,1,0],[0,0,1]], initial = [0,2]\nOutput: 0\n\n\nExample 3:\n\nInput: graph = [[1,1,1],[1,1,1],[1,1,1]], initial = [1,2]\nOutput: 1\n\n\n \n\nNote:\n\n1 < graph.length = graph[0].length <= 300\n0 <= graph[i][j] == graph[j][i] <= 1\ngraph[i][i] == 1\n1 <= initial.length <= graph.length\n0 <= initial[i] < graph.length"},{"index":"925","url":"https://leetcode.com/problems/long-pressed-name","title":"Long Pressed Name","difficulty":"Easy","description":"Your friend is typing his name into a keyboard.  Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times.\n\nYou examine the typed characters of the keyboard.  Return True if it is possible that it was your friends name, with some characters (possibly none) being long pressed.\n\n \n\nExample 1:\n\nInput: name = \"alex\", typed = \"aaleex\"\nOutput: true\nExplanation: 'a' and 'e' in 'alex' were long pressed.\n\n\nExample 2:\n\nInput: name = \"saeed\", typed = \"ssaaedd\"\nOutput: false\nExplanation: 'e' must have been pressed twice, but it wasn't in the typed output.\n\n\nExample 3:\n\nInput: name = \"leelee\", typed = \"lleeelee\"\nOutput: true\n\n\nExample 4:\n\nInput: name = \"laiden\", typed = \"laiden\"\nOutput: true\nExplanation: It's not necessary to long press any character.\n\n\n \n\nConstraints:\n\n1 <= name.length <= 1000\n1 <= typed.length <= 1000\nThe characters of name and typed are lowercase letters."},{"index":"926","url":"https://leetcode.com/problems/flip-string-to-monotone-increasing","title":"Flip String to Monotone Increasing","difficulty":"Medium","description":"A string of '0's and '1's is monotone increasing if it consists of some number of '0's (possibly 0), followed by some number of '1's (also possibly 0.)\n\nWe are given a string S of '0's and '1's, and we may flip any '0' to a '1' or a '1' to a '0'.\n\nReturn the minimum number of flips to make S monotone increasing.\n\n \n\nExample 1:\n\nInput: \"00110\"\nOutput: 1\nExplanation: We flip the last digit to get 00111.\n\n\nExample 2:\n\nInput: \"010110\"\nOutput: 2\nExplanation: We flip to get 011111, or alternatively 000111.\n\n\nExample 3:\n\nInput: \"00011000\"\nOutput: 2\nExplanation: We flip to get 00000000.\n\n\n \n\nNote:\n\n1 <= S.length <= 20000\nS only consists of '0' and '1' characters."},{"index":"927","url":"https://leetcode.com/problems/three-equal-parts","title":"Three Equal Parts","difficulty":"Hard","description":"Given an array A of 0s and 1s, divide the array into 3 non-empty parts such that all of these parts represent the same binary value.\n\nIf it is possible, return any [i, j] with i+1 < j, such that:\n\nA[0], A[1], ..., A[i] is the first part;\nA[i+1], A[i+2], ..., A[j-1] is the second part, and\nA[j], A[j+1], ..., A[A.length - 1] is the third part.\nAll three parts have equal binary value.\n\nIf it is not possible, return [-1, -1].\n\nNote that the entire part is used when considering what binary value it represents.  For example, [1,1,0] represents 6 in decimal, not 3.  Also, leading zeros are allowed, so [0,1,1] and [1,1] represent the same value.\n\n \n\nExample 1:\n\nInput: [1,0,1,0,1]\nOutput: [0,3]\n\n\nExample 2:\n\nInput: [1,1,0,1,1]\nOutput: [-1,-1]\n\n \n\nNote:\n\n3 <= A.length <= 30000\nA[i] == 0 or A[i] == 1\n "},{"index":"928","url":"https://leetcode.com/problems/minimize-malware-spread-ii","title":"Minimize Malware Spread II","difficulty":"Hard","description":"(This problem is the same as Minimize Malware Spread, with the differences bolded.)\n\nIn a network of nodes, each node i is directly connected to another node j if and only if graph[i][j] = 1.\n\nSome nodes initial are initially infected by malware.  Whenever two nodes are directly connected and at least one of those two nodes is infected by malware, both nodes will be infected by malware.  This spread of malware will continue until no more nodes can be infected in this manner.\n\nSuppose M(initial) is the final number of nodes infected with malware in the entire network, after the spread of malware stops.\n\nWe will remove one node from the initial list, completely removing it and any connections from this node to any other node.  Return the node that if removed, would minimize M(initial).  If multiple nodes could be removed to minimize M(initial), return such a node with the smallest index.\n\n \n\nExample 1:\n\nInput: graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\nOutput: 0\n\n\nExample 2:\n\nInput: graph = [[1,1,0],[1,1,1],[0,1,1]], initial = [0,1]\nOutput: 1\n\n\nExample 3:\n\nInput: graph = [[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]], initial = [0,1]\nOutput: 1\n\n\n \n\nNote:\n\n1 < graph.length = graph[0].length <= 300\n0 <= graph[i][j] == graph[j][i] <= 1\ngraph[i][i] = 1\n1 <= initial.length < graph.length\n0 <= initial[i] < graph.length"},{"index":"929","url":"https://leetcode.com/problems/unique-email-addresses","title":"Unique Email Addresses","difficulty":"Easy","description":"Every email consists of a local name and a domain name, separated by the @ sign.\n\nFor example, in alice@leetcode.com, alice is the local name, and leetcode.com is the domain name.\n\nBesides lowercase letters, these emails may contain '.'s or '+'s.\n\nIf you add periods ('.') between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name.  For example, \"alice.z@leetcode.com\" and \"alicez@leetcode.com\" forward to the same email address.  (Note that this rule does not apply for domain names.)\n\nIf you add a plus ('+') in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered, for example m.y+name@email.com will be forwarded to my@email.com.  (Again, this rule does not apply for domain names.)\n\nIt is possible to use both of these rules at the same time.\n\nGiven a list of emails, we send one email to each address in the list.  How many different addresses actually receive mails? \n\n \n\nExample 1:\n\nInput: [\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"]\nOutput: 2\nExplanation: \"testemail@leetcode.com\" and \"testemail@lee.tcode.com\" actually receive mails\n\n\n \n\nNote:\n\n1 <= emails[i].length <= 100\n1 <= emails.length <= 100\nEach emails[i] contains exactly one '@' character.\nAll local and domain names are non-empty.\nLocal names do not start with a '+' character."},{"index":"930","url":"https://leetcode.com/problems/binary-subarrays-with-sum","title":"Binary Subarrays With Sum","difficulty":"Medium","description":"In an array A of 0s and 1s, how many non-empty subarrays have sum S?\n\n \n\nExample 1:\n\nInput: A = [1,0,1,0,1], S = 2\nOutput: 4\nExplanation: \nThe 4 subarrays are bolded below:\n[1,0,1,0,1]\n[1,0,1,0,1]\n[1,0,1,0,1]\n[1,0,1,0,1]\n\n\n \n\nNote:\n\nA.length <= 30000\n0 <= S <= A.length\nA[i] is either 0 or 1."},{"index":"931","url":"https://leetcode.com/problems/minimum-falling-path-sum","title":"Minimum Falling Path Sum","difficulty":"Medium","description":"Given a square array of integers A, we want the minimum sum of a falling path through A.\n\nA falling path starts at any element in the first row, and chooses one element from each row.  The next row's choice must be in a column that is different from the previous row's column by at most one.\n\n \n\nExample 1:\n\nInput: [[1,2,3],[4,5,6],[7,8,9]]\nOutput: 12\nExplanation: \nThe possible falling paths are:\n\n[1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]\n[2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]\n[3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]\n\nThe falling path with the smallest sum is [1,4,7], so the answer is 12.\n\n \n\nConstraints:\n\n1 <= A.length == A[0].length <= 100\n-100 <= A[i][j] <= 100"},{"index":"932","url":"https://leetcode.com/problems/beautiful-array","title":"Beautiful Array","difficulty":"Medium","description":"For some fixed N, an array A is beautiful if it is a permutation of the integers 1, 2, ..., N, such that:\n\nFor every i < j, there is no k with i < k < j such that A[k] * 2 = A[i] + A[j].\n\nGiven N, return any beautiful array A.  (It is guaranteed that one exists.)\n\n \n\nExample 1:\n\nInput: 4\nOutput: [2,1,4,3]\n\n\nExample 2:\n\nInput: 5\nOutput: [3,1,2,5,4]\n\n \n\nNote:\n\n1 <= N <= 1000\n "},{"index":"933","url":"https://leetcode.com/problems/number-of-recent-calls","title":"Number of Recent Calls","difficulty":"Easy","description":"You have a RecentCounter class which counts the number of recent requests within a certain time frame.\n\nImplement the RecentCounter class:\n\nRecentCounter() Initializes the counter with zero recent requests.\nint ping(int t) Adds a new request at time t, where t represents some time in milliseconds, and returns the number of requests that has happened in the past 3000 milliseconds (including the new request). Specifically, return the number of requests that have happened in the inclusive range [t - 3000, t].\n\nIt is guaranteed that every call to ping uses a strictly larger value of t than the previous call.\n\n \n\nExample 1:\n\nInput\n[\"RecentCounter\", \"ping\", \"ping\", \"ping\", \"ping\"]\n[[], [1], [100], [3001], [3002]]\nOutput\n[null, 1, 2, 3, 3]\n\nExplanation\nRecentCounter recentCounter = new RecentCounter();\nrecentCounter.ping(1);     // requests = [1], range is [-2999,1], return 1\nrecentCounter.ping(100);   // requests = [1, 100], range is [-2900,100], return 2\nrecentCounter.ping(3001);  // requests = [1, 100, 3001], range is [1,3001], return 3\nrecentCounter.ping(3002);  // requests = [1, 100, 3001, 3002], range is [2,3002], return 3\n\n\n \n\nConstraints:\n\n1 <= t <= 109\nEach test case will call ping with strictly increasing values of t.\nAt most 104 calls will be made to ping."},{"index":"934","url":"https://leetcode.com/problems/shortest-bridge","title":"Shortest Bridge","difficulty":"Medium","description":"In a given 2D binary array A, there are two islands.  (An island is a 4-directionally connected group of 1s not connected to any other 1s.)\n\nNow, we may change 0s to 1s so as to connect the two islands together to form 1 island.\n\nReturn the smallest number of 0s that must be flipped.  (It is guaranteed that the answer is at least 1.)\n\n \n\nExample 1:\n\nInput: A = [[0,1],[1,0]]\nOutput: 1\n\n\nExample 2:\n\nInput: A = [[0,1,0],[0,0,0],[0,0,1]]\nOutput: 2\n\n\nExample 3:\n\nInput: A = [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\nOutput: 1\n\n\n \n\nConstraints:\n\n2 <= A.length == A[0].length <= 100\nA[i][j] == 0 or A[i][j] == 1"},{"index":"935","url":"https://leetcode.com/problems/knight-dialer","title":"Knight Dialer","difficulty":"Medium","description":"The chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an L). The possible movements of chess knight are shown in this diagaram:\n\nA chess knight can move as indicated in the chess diagram below:\n\nWe have a chess knight and a phone pad as shown below, the knight can only stand on a numeric cell (i.e. blue cell).\n\nGiven an integer n, return how many distinct phone numbers of length n we can dial.\n\nYou are allowed to place the knight on any numeric cell initially and then you should perform n - 1 jumps to dial a number of length n. All jumps should be valid knight jumps.\n\nAs the answer may be very large, return the answer modulo 109 + 7.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: 10\nExplanation: We need to dial a number of length 1, so placing the knight over any numeric cell of the 10 cells is sufficient.\n\n\nExample 2:\n\nInput: n = 2\nOutput: 20\nExplanation: All the valid number we can dial are [04, 06, 16, 18, 27, 29, 34, 38, 40, 43, 49, 60, 61, 67, 72, 76, 81, 83, 92, 94]\n\n\nExample 3:\n\nInput: n = 3\nOutput: 46\n\n\nExample 4:\n\nInput: n = 4\nOutput: 104\n\n\nExample 5:\n\nInput: n = 3131\nOutput: 136006598\nExplanation: Please take care of the mod.\n\n\n \n\nConstraints:\n\n1 <= n <= 5000"},{"index":"936","url":"https://leetcode.com/problems/stamping-the-sequence","title":"Stamping The Sequence","difficulty":"Hard","description":"You want to form a target string of lowercase letters.\n\nAt the beginning, your sequence is target.length '?' marks.  You also have a stamp of lowercase letters.\n\nOn each turn, you may place the stamp over the sequence, and replace every letter in the sequence with the corresponding letter from the stamp.  You can make up to 10 * target.length turns.\n\nFor example, if the initial sequence is \"?????\", and your stamp is \"abc\",  then you may make \"abc??\", \"?abc?\", \"??abc\" in the first turn.  (Note that the stamp must be fully contained in the boundaries of the sequence in order to stamp.)\n\nIf the sequence is possible to stamp, then return an array of the index of the left-most letter being stamped at each turn.  If the sequence is not possible to stamp, return an empty array.\n\nFor example, if the sequence is \"ababc\", and the stamp is \"abc\", then we could return the answer [0, 2], corresponding to the moves \"?????\" -> \"abc??\" -> \"ababc\".\n\nAlso, if the sequence is possible to stamp, it is guaranteed it is possible to stamp within 10 * target.length moves.  Any answers specifying more than this number of moves will not be accepted.\n\n \n\nExample 1:\n\nInput: stamp = \"abc\", target = \"ababc\"\nOutput: [0,2]\n([1,0,2] would also be accepted as an answer, as well as some other answers.)\n\n\nExample 2:\n\nInput: stamp = \"abca\", target = \"aabcaca\"\nOutput: [3,0,1]\n\n\n \n\nNote:\n\n1 <= stamp.length <= target.length <= 1000\nstamp and target only contain lowercase letters."},{"index":"937","url":"https://leetcode.com/problems/reorder-data-in-log-files","title":"Reorder Data in Log Files","difficulty":"Easy","description":"You have an array of logs.  Each log is a space delimited string of words.\n\nFor each log, the first word in each log is an alphanumeric identifier.  Then, either:\n\nEach word after the identifier will consist only of lowercase letters, or;\nEach word after the identifier will consist only of digits.\n\nWe will call these two varieties of logs letter-logs and digit-logs.  It is guaranteed that each log has at least one word after its identifier.\n\nReorder the logs so that all of the letter-logs come before any digit-log.  The letter-logs are ordered lexicographically ignoring identifier, with the identifier used in case of ties.  The digit-logs should be put in their original order.\n\nReturn the final order of the logs.\n\n \n\nExample 1:\n\nInput: logs = [\"dig1 8 1 5 1\",\"let1 art can\",\"dig2 3 6\",\"let2 own kit dig\",\"let3 art zero\"]\nOutput: [\"let1 art can\",\"let3 art zero\",\"let2 own kit dig\",\"dig1 8 1 5 1\",\"dig2 3 6\"]\n\n\n \n\nConstraints:\n\n0 <= logs.length <= 100\n3 <= logs[i].length <= 100\nlogs[i] is guaranteed to have an identifier, and a word after the identifier."},{"index":"938","url":"https://leetcode.com/problems/range-sum-of-bst","title":"Range Sum of BST","difficulty":"Easy","description":"Given the root node of a binary search tree, return the sum of values of all nodes with a value in the range [low, high].\n\n \n\nExample 1:\n\nInput: root = [10,5,15,3,7,null,18], low = 7, high = 15\nOutput: 32\n\n\nExample 2:\n\nInput: root = [10,5,15,3,7,13,18,1,null,6], low = 6, high = 10\nOutput: 23\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 2 * 104].\n1 <= Node.val <= 105\n1 <= low <= high <= 105\nAll Node.val are unique."},{"index":"939","url":"https://leetcode.com/problems/minimum-area-rectangle","title":"Minimum Area Rectangle","difficulty":"Medium","description":"Given a set of points in the xy-plane, determine the minimum area of a rectangle formed from these points, with sides parallel to the x and y axes.\n\nIf there isn't any rectangle, return 0.\n\n \n\nExample 1:\n\nInput: [[1,1],[1,3],[3,1],[3,3],[2,2]]\nOutput: 4\n\n\nExample 2:\n\nInput: [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\nOutput: 2\n\n\n \n\nNote:\n\n1 <= points.length <= 500\n0 <= points[i][0] <= 40000\n0 <= points[i][1] <= 40000\nAll points are distinct."},{"index":"940","url":"https://leetcode.com/problems/distinct-subsequences-ii","title":"Distinct Subsequences II","difficulty":"Hard","description":"Given a string S, count the number of distinct, non-empty subsequences of S .\n\nSince the result may be large, return the answer modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: \"abc\"\nOutput: 7\nExplanation: The 7 distinct subsequences are \"a\", \"b\", \"c\", \"ab\", \"ac\", \"bc\", and \"abc\".\n\n\nExample 2:\n\nInput: \"aba\"\nOutput: 6\nExplanation: The 6 distinct subsequences are \"a\", \"b\", \"ab\", \"ba\", \"aa\" and \"aba\".\n\n\nExample 3:\n\nInput: \"aaa\"\nOutput: 3\nExplanation: The 3 distinct subsequences are \"a\", \"aa\" and \"aaa\".\n\n\n \n\n \n\nNote:\n\nS contains only lowercase letters.\n1 <= S.length <= 2000\n\n \n\n "},{"index":"941","url":"https://leetcode.com/problems/valid-mountain-array","title":"Valid Mountain Array","difficulty":"Easy","description":"Given an array of integers arr, return true if and only if it is a valid mountain array.\n\nRecall that arr is a mountain array if and only if:\n\narr.length >= 3\nThere exists some i with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < A[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n\n \n\nExample 1:\n\nInput: arr = [2,1]\nOutput: false\n\n\nExample 2:\n\nInput: arr = [3,5,5]\nOutput: false\n\n\nExample 3:\n\nInput: arr = [0,3,2,1]\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 104\n0 <= arr[i] <= 104"},{"index":"942","url":"https://leetcode.com/problems/di-string-match","title":"DI String Match","difficulty":"Easy","description":"Given a string S that only contains \"I\" (increase) or \"D\" (decrease), let N = S.length.\n\nReturn any permutation A of [0, 1, ..., N] such that for all i = 0, ..., N-1:\n\nIf S[i] == \"I\", then A[i] < A[i+1]\nIf S[i] == \"D\", then A[i] > A[i+1]\n\n \n\nExample 1:\n\nInput: \"IDID\"\nOutput: [0,4,1,3,2]\n\n\nExample 2:\n\nInput: \"III\"\nOutput: [0,1,2,3]\n\n\nExample 3:\n\nInput: \"DDI\"\nOutput: [3,2,0,1]\n\n \n\nNote:\n\n1 <= S.length <= 10000\nS only contains characters \"I\" or \"D\"."},{"index":"943","url":"https://leetcode.com/problems/find-the-shortest-superstring","title":"Find the Shortest Superstring","difficulty":"Hard","description":"Given an array A of strings, find any smallest string that contains each string in A as a substring.\n\nWe may assume that no string in A is substring of another string in A.\n\n \n\nExample 1:\n\nInput: [\"alex\",\"loves\",\"leetcode\"]\nOutput: \"alexlovesleetcode\"\nExplanation: All permutations of \"alex\",\"loves\",\"leetcode\" would also be accepted.\n\n\nExample 2:\n\nInput: [\"catg\",\"ctaagt\",\"gcta\",\"ttca\",\"atgcatc\"]\nOutput: \"gctaagttcatgcatc\"\n\n \n\nNote:\n\n1 <= A.length <= 12\n1 <= A[i].length <= 20\n "},{"index":"944","url":"https://leetcode.com/problems/delete-columns-to-make-sorted","title":"Delete Columns to Make Sorted","difficulty":"Easy","description":"We are given an array A of N lowercase letter strings, all of the same length.\n\nNow, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.\n\nFor example, if we have an array A = [\"abcdef\",\"uvwxyz\"] and deletion indices {0, 2, 3}, then the final array after deletions is [\"bef\", \"vyz\"], and the remaining columns of A are [\"b\",\"v\"], [\"e\",\"y\"], and [\"f\",\"z\"].  (Formally, the c-th column is [A[0][c], A[1][c], ..., A[A.length-1][c]]).\n\nSuppose we chose a set of deletion indices D such that after deletions, each remaining column in A is in non-decreasing sorted order.\n\nReturn the minimum possible value of D.length.\n\n \n\nExample 1:\n\nInput: A = [\"cba\",\"daf\",\"ghi\"]\nOutput: 1\nExplanation: \nAfter choosing D = {1}, each column [\"c\",\"d\",\"g\"] and [\"a\",\"f\",\"i\"] are in non-decreasing sorted order.\nIf we chose D = {}, then a column [\"b\",\"a\",\"h\"] would not be in non-decreasing sorted order.\n\n\nExample 2:\n\nInput: A = [\"a\",\"b\"]\nOutput: 0\nExplanation: D = {}\n\n\nExample 3:\n\nInput: A = [\"zyx\",\"wvu\",\"tsr\"]\nOutput: 3\nExplanation: D = {0, 1, 2}\n\n\n \n\nConstraints:\n\n1 <= A.length <= 100\n1 <= A[i].length <= 1000"},{"index":"945","url":"https://leetcode.com/problems/minimum-increment-to-make-array-unique","title":"Minimum Increment to Make Array Unique","difficulty":"Medium","description":"Given an array of integers A, a move consists of choosing any A[i], and incrementing it by 1.\n\nReturn the least number of moves to make every value in A unique.\n\n \n\nExample 1:\n\nInput: [1,2,2]\nOutput: 1\nExplanation:  After 1 move, the array could be [1, 2, 3].\n\n\nExample 2:\n\nInput: [3,2,1,2,1,7]\nOutput: 6\nExplanation:  After 6 moves, the array could be [3, 4, 1, 2, 5, 7].\nIt can be shown with 5 or less moves that it is impossible for the array to have all unique values.\n\n\n \n\nNote:\n\n0 <= A.length <= 40000\n0 <= A[i] < 40000\n "},{"index":"946","url":"https://leetcode.com/problems/validate-stack-sequences","title":"Validate Stack Sequences","difficulty":"Medium","description":"Given two sequences pushed and popped with distinct values, return true if and only if this could have been the result of a sequence of push and pop operations on an initially empty stack.\n\n \n\nExample 1:\n\nInput: pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\nOutput: true\nExplanation: We might do the following sequence:\npush(1), push(2), push(3), push(4), pop() -> 4,\npush(5), pop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1\n\n\nExample 2:\n\nInput: pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\nOutput: false\nExplanation: 1 cannot be popped before 2.\n\n\n \n\nConstraints:\n\n0 <= pushed.length == popped.length <= 1000\n0 <= pushed[i], popped[i] < 1000\npushed is a permutation of popped.\npushed and popped have distinct values."},{"index":"947","url":"https://leetcode.com/problems/most-stones-removed-with-same-row-or-column","title":"Most Stones Removed with Same Row or Column","difficulty":"Medium","description":"On a 2D plane, we place stones at some integer coordinate points.  Each coordinate point may have at most one stone.\n\nNow, a move consists of removing a stone that shares a column or row with another stone on the grid.\n\nWhat is the largest possible number of moves we can make?\n\n \n\nExample 1:\n\nInput: stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\nOutput: 5\n\n\nExample 2:\n\nInput: stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]\nOutput: 3\n\n\nExample 3:\n\nInput: stones = [[0,0]]\nOutput: 0\n\n\n \n\nNote:\n\n1 <= stones.length <= 1000\n0 <= stones[i][j] < 10000"},{"index":"948","url":"https://leetcode.com/problems/bag-of-tokens","title":"Bag of Tokens","difficulty":"Medium","description":"You have an initial power of P, an initial score of 0, and a bag of tokens where tokens[i] is the value of the ith token (0-indexed).\n\nYour goal is to maximize your total score by potentially playing each token in one of two ways:\n\nIf your current power is at least tokens[i], you may play the ith token face up, losing tokens[i] power and gaining 1 score.\nIf your current score is at least 1, you may play the ith token face down, gaining tokens[i] power and losing 1 score.\n\nEach token may be played at most once and in any order. You do not have to play all the tokens.\n\nReturn the largest possible score you can achieve after playing any number of tokens.\n\n \n\nExample 1:\n\nInput: tokens = [100], P = 50\nOutput: 0\nExplanation: Playing the only token in the bag is impossible because you either have too little power or too little score.\n\n\nExample 2:\n\nInput: tokens = [100,200], P = 150\nOutput: 1\nExplanation: Play the 0th token (100) face up, your power becomes 50 and score becomes 1.\nThere is no need to play the 1st token since you cannot play it face up to add to your score.\n\n\nExample 3:\n\nInput: tokens = [100,200,300,400], P = 200\nOutput: 2\nExplanation: Play the tokens in this order to get a score of 2:\n1. Play the 0th token (100) face up, your power becomes 100 and score becomes 1.\n2. Play the 3rd token (400) face down, your power becomes 500 and score becomes 0.\n3. Play the 1st token (200) face up, your power becomes 300 and score becomes 1.\n4. Play the 2nd token (300) face up, your power becomes 0 and score becomes 2.\n\n\n \n\nConstraints:\n\n0 <= tokens.length <= 1000\n0 <= tokens[i], P < 104"},{"index":"949","url":"https://leetcode.com/problems/largest-time-for-given-digits","title":"Largest Time for Given Digits","difficulty":"Medium","description":"Given an array arr of 4 digits, find the latest 24-hour time that can be made using each digit exactly once.\n\n24-hour times are formatted as \"HH:MM\", where HH is between 00 and 23, and MM is between 00 and 59. The earliest 24-hour time is 00:00, and the latest is 23:59.\n\nReturn the latest 24-hour time in \"HH:MM\" format.  If no valid time can be made, return an empty string.\n\n \n\nExample 1:\n\nInput: A = [1,2,3,4]\nOutput: \"23:41\"\nExplanation: The valid 24-hour times are \"12:34\", \"12:43\", \"13:24\", \"13:42\", \"14:23\", \"14:32\", \"21:34\", \"21:43\", \"23:14\", and \"23:41\". Of these times, \"23:41\" is the latest.\n\n\nExample 2:\n\nInput: A = [5,5,5,5]\nOutput: \"\"\nExplanation: There are no valid 24-hour times as \"55:55\" is not valid.\n\n\nExample 3:\n\nInput: A = [0,0,0,0]\nOutput: \"00:00\"\n\n\nExample 4:\n\nInput: A = [0,0,1,0]\nOutput: \"10:00\"\n\n\n \n\nConstraints:\n\narr.length == 4\n0 <= arr[i] <= 9"},{"index":"950","url":"https://leetcode.com/problems/reveal-cards-in-increasing-order","title":"Reveal Cards In Increasing Order","difficulty":"Medium","description":"In a deck of cards, every card has a unique integer.  You can order the deck in any order you want.\n\nInitially, all the cards start face down (unrevealed) in one deck.\n\nNow, you do the following steps repeatedly, until all cards are revealed:\n\nTake the top card of the deck, reveal it, and take it out of the deck.\nIf there are still cards in the deck, put the next top card of the deck at the bottom of the deck.\nIf there are still unrevealed cards, go back to step 1.  Otherwise, stop.\n\nReturn an ordering of the deck that would reveal the cards in increasing order.\n\nThe first entry in the answer is considered to be the top of the deck.\n\n \n\nExample 1:\n\nInput: [17,13,11,2,3,5,7]\nOutput: [2,13,3,11,5,17,7]\nExplanation: \nWe get the deck in the order [17,13,11,2,3,5,7] (this order doesn't matter), and reorder it.\nAfter reordering, the deck starts as [2,13,3,11,5,17,7], where 2 is the top of the deck.\nWe reveal 2, and move 13 to the bottom.  The deck is now [3,11,5,17,7,13].\nWe reveal 3, and move 11 to the bottom.  The deck is now [5,17,7,13,11].\nWe reveal 5, and move 17 to the bottom.  The deck is now [7,13,11,17].\nWe reveal 7, and move 13 to the bottom.  The deck is now [11,17,13].\nWe reveal 11, and move 17 to the bottom.  The deck is now [13,17].\nWe reveal 13, and move 17 to the bottom.  The deck is now [17].\nWe reveal 17.\nSince all the cards revealed are in increasing order, the answer is correct.\n\n\n \n\nNote:\n\n1 <= A.length <= 1000\n1 <= A[i] <= 10^6\nA[i] != A[j] for all i != j"},{"index":"951","url":"https://leetcode.com/problems/flip-equivalent-binary-trees","title":"Flip Equivalent Binary Trees","difficulty":"Medium","description":"For a binary tree T, we can define a flip operation as follows: choose any node, and swap the left and right child subtrees.\n\nA binary tree X is flip equivalent to a binary tree Y if and only if we can make X equal to Y after some number of flip operations.\n\nGiven the roots of two binary trees root1 and root2, return true if the two trees are flip equivelent or false otherwise.\n\n \n\nExample 1:\n\nInput: root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\nOutput: true\nExplanation: We flipped at nodes with values 1, 3, and 5.\n\n\nExample 2:\n\nInput: root1 = [], root2 = []\nOutput: true\n\n\nExample 3:\n\nInput: root1 = [], root2 = [1]\nOutput: false\n\n\nExample 4:\n\nInput: root1 = [0,null,1], root2 = []\nOutput: false\n\n\nExample 5:\n\nInput: root1 = [0,null,1], root2 = [0,1]\nOutput: true\n\n\n \n\nConstraints:\n\nThe number of nodes in each tree is in the range [0, 100].\nEach tree will have unique node values in the range [0, 99]."},{"index":"952","url":"https://leetcode.com/problems/largest-component-size-by-common-factor","title":"Largest Component Size by Common Factor","difficulty":"Hard","description":"Given a non-empty array of unique positive integers A, consider the following graph:\n\nThere are A.length nodes, labelled A[0] to A[A.length - 1];\nThere is an edge between A[i] and A[j] if and only if A[i] and A[j] share a common factor greater than 1.\n\nReturn the size of the largest connected component in the graph.\n\n \n\nExample 1:\n\nInput: [4,6,15,35]\nOutput: 4\n\n\n\nExample 2:\n\nInput: [20,50,9,63]\nOutput: 2\n\n\n\nExample 3:\n\nInput: [2,3,6,7,4,12,21,39]\nOutput: 8\n\n\n\nNote:\n\n1 <= A.length <= 20000\n1 <= A[i] <= 100000"},{"index":"953","url":"https://leetcode.com/problems/verifying-an-alien-dictionary","title":"Verifying an Alien Dictionary","difficulty":"Easy","description":"In an alien language, surprisingly they also use english lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.\n\nGiven a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographicaly in this alien language.\n\n \n\nExample 1:\n\nInput: words = [\"hello\",\"leetcode\"], order = \"hlabcdefgijkmnopqrstuvwxyz\"\nOutput: true\nExplanation: As 'h' comes before 'l' in this language, then the sequence is sorted.\n\n\nExample 2:\n\nInput: words = [\"word\",\"world\",\"row\"], order = \"worldabcefghijkmnpqstuvxyz\"\nOutput: false\nExplanation: As 'd' comes after 'l' in this language, then words[0] > words[1], hence the sequence is unsorted.\n\n\nExample 3:\n\nInput: words = [\"apple\",\"app\"], order = \"abcdefghijklmnopqrstuvwxyz\"\nOutput: false\nExplanation: The first three characters \"app\" match, and the second string is shorter (in size.) According to lexicographical rules \"apple\" > \"app\", because 'l' > '∅', where '∅' is defined as the blank character which is less than any other character (More info).\n\n\n \n\nConstraints:\n\n1 <= words.length <= 100\n1 <= words[i].length <= 20\norder.length == 26\nAll characters in words[i] and order are English lowercase letters."},{"index":"954","url":"https://leetcode.com/problems/array-of-doubled-pairs","title":"Array of Doubled Pairs","difficulty":"Medium","description":"Given an array of integers A with even length, return true if and only if it is possible to reorder it such that A[2 * i + 1] = 2 * A[2 * i] for every 0 <= i < len(A) / 2.\n\n \n\nExample 1:\n\nInput: A = [3,1,3,6]\nOutput: false\n\n\nExample 2:\n\nInput: A = [2,1,2,6]\nOutput: false\n\n\nExample 3:\n\nInput: A = [4,-2,2,-4]\nOutput: true\nExplanation: We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].\n\n\nExample 4:\n\nInput: A = [1,2,4,16,8,4]\nOutput: false\n\n\n \n\nConstraints:\n\n0 <= A.length <= 3 * 104\nA.length is even.\n-105 <= A[i] <= 105"},{"index":"955","url":"https://leetcode.com/problems/delete-columns-to-make-sorted-ii","title":"Delete Columns to Make Sorted II","difficulty":"Medium","description":"We are given an array A of N lowercase letter strings, all of the same length.\n\nNow, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.\n\nFor example, if we have an array A = [\"abcdef\",\"uvwxyz\"] and deletion indices {0, 2, 3}, then the final array after deletions is [\"bef\",\"vyz\"].\n\nSuppose we chose a set of deletion indices D such that after deletions, the final array has its elements in lexicographic order (A[0] <= A[1] <= A[2] ... <= A[A.length - 1]).\n\nReturn the minimum possible value of D.length.\n\n \n\nExample 1:\n\nInput: [\"ca\",\"bb\",\"ac\"]\nOutput: 1\nExplanation: \nAfter deleting the first column, A = [\"a\", \"b\", \"c\"].\nNow A is in lexicographic order (ie. A[0] <= A[1] <= A[2]).\nWe require at least 1 deletion since initially A was not in lexicographic order, so the answer is 1.\n\n\nExample 2:\n\nInput: [\"xc\",\"yb\",\"za\"]\nOutput: 0\nExplanation: \nA is already in lexicographic order, so we don't need to delete anything.\nNote that the rows of A are not necessarily in lexicographic order:\nie. it is NOT necessarily true that (A[0][0] <= A[0][1] <= ...)\n\n\nExample 3:\n\nInput: [\"zyx\",\"wvu\",\"tsr\"]\nOutput: 3\nExplanation: \nWe have to delete every column.\n\n\n \n\nNote:\n\n1 <= A.length <= 100\n1 <= A[i].length <= 100"},{"index":"956","url":"https://leetcode.com/problems/tallest-billboard","title":"Tallest Billboard","difficulty":"Hard","description":"You are installing a billboard and want it to have the largest height.  The billboard will have two steel supports, one on each side.  Each steel support must be an equal height.\n\nYou have a collection of rods which can be welded together.  For example, if you have rods of lengths 1, 2, and 3, you can weld them together to make a support of length 6.\n\nReturn the largest possible height of your billboard installation.  If you cannot support the billboard, return 0.\n\n \n\nExample 1:\n\nInput: [1,2,3,6]\nOutput: 6\nExplanation: We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.\n\n\nExample 2:\n\nInput: [1,2,3,4,5,6]\nOutput: 10\nExplanation: We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.\n\n\nExample 3:\n\nInput: [1,2]\nOutput: 0\nExplanation: The billboard cannot be supported, so we return 0.\n\n\n \n\nNote:\n\n0 <= rods.length <= 20\n1 <= rods[i] <= 1000\nThe sum of rods is at most 5000."},{"index":"957","url":"https://leetcode.com/problems/prison-cells-after-n-days","title":"Prison Cells After N Days","difficulty":"Medium","description":"There are 8 prison cells in a row, and each cell is either occupied or vacant.\n\nEach day, whether the cell is occupied or vacant changes according to the following rules:\n\nIf a cell has two adjacent neighbors that are both occupied or both vacant, then the cell becomes occupied.\nOtherwise, it becomes vacant.\n\n(Note that because the prison is a row, the first and the last cells in the row can't have two adjacent neighbors.)\n\nWe describe the current state of the prison in the following way: cells[i] == 1 if the i-th cell is occupied, else cells[i] == 0.\n\nGiven the initial state of the prison, return the state of the prison after N days (and N such changes described above.)\n\n \n\nExample 1:\n\nInput: cells = [0,1,0,1,1,0,0,1], N = 7\nOutput: [0,0,1,1,0,0,0,0]\nExplanation: \nThe following table summarizes the state of the prison on each day:\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]\n\n\n\nExample 2:\n\nInput: cells = [1,0,0,1,0,0,1,0], N = 1000000000\nOutput: [0,0,1,1,1,1,1,0]\n\n\n \n\nNote:\n\ncells.length == 8\ncells[i] is in {0, 1}\n1 <= N <= 10^9"},{"index":"958","url":"https://leetcode.com/problems/check-completeness-of-a-binary-tree","title":"Check Completeness of a Binary Tree","difficulty":"Medium","description":"Given the root of a binary tree, determine if it is a complete binary tree.\n\nIn a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,5,6]\nOutput: true\nExplanation: Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\n\n\nExample 2:\n\nInput: root = [1,2,3,4,5,null,7]\nOutput: false\nExplanation: The node with value 7 isn't as far left as possible.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n1 <= Node.val <= 1000"},{"index":"959","url":"https://leetcode.com/problems/regions-cut-by-slashes","title":"Regions Cut By Slashes","difficulty":"Medium","description":"In a N x N grid composed of 1 x 1 squares, each 1 x 1 square consists of a /, \\, or blank space.  These characters divide the square into contiguous regions.\n\n(Note that backslash characters are escaped, so a \\ is represented as \"\\\\\".)\n\nReturn the number of regions.\n\n \n\nExample 1:\n\nInput:\n[\n  \" /\",\n  \"/ \"\n]\nOutput: 2\nExplanation: The 2x2 grid is as follows:\n\n\n\nExample 2:\n\nInput:\n[\n  \" /\",\n  \"  \"\n]\nOutput: 1\nExplanation: The 2x2 grid is as follows:\n\n\n\nExample 3:\n\nInput:\n[\n  \"\\\\/\",\n  \"/\\\\\"\n]\nOutput: 4\nExplanation: (Recall that because \\ characters are escaped, \"\\\\/\" refers to \\/, and \"/\\\\\" refers to /\\.)\nThe 2x2 grid is as follows:\n\n\n\nExample 4:\n\nInput:\n[\n  \"/\\\\\",\n  \"\\\\/\"\n]\nOutput: 5\nExplanation: (Recall that because \\ characters are escaped, \"/\\\\\" refers to /\\, and \"\\\\/\" refers to \\/.)\nThe 2x2 grid is as follows:\n\n\n\nExample 5:\n\nInput:\n[\n  \"//\",\n  \"/ \"\n]\nOutput: 3\nExplanation: The 2x2 grid is as follows:\n\n\n\n \n\nNote:\n\n1 <= grid.length == grid[0].length <= 30\ngrid[i][j] is either '/', '\\', or ' '."},{"index":"960","url":"https://leetcode.com/problems/delete-columns-to-make-sorted-iii","title":"Delete Columns to Make Sorted III","difficulty":"Hard","description":"We are given an array A of N lowercase letter strings, all of the same length.\n\nNow, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.\n\nFor example, if we have an array A = [\"babca\",\"bbazb\"] and deletion indices {0, 1, 4}, then the final array after deletions is [\"bc\",\"az\"].\n\nSuppose we chose a set of deletion indices D such that after deletions, the final array has every element (row) in lexicographic order.\n\nFor clarity, A[0] is in lexicographic order (ie. A[0][0] <= A[0][1] <= ... <= A[0][A[0].length - 1]), A[1] is in lexicographic order (ie. A[1][0] <= A[1][1] <= ... <= A[1][A[1].length - 1]), and so on.\n\nReturn the minimum possible value of D.length.\n\n \n\nExample 1:\n\nInput: [\"babca\",\"bbazb\"]\nOutput: 3\nExplanation: After deleting columns 0, 1, and 4, the final array is A = [\"bc\", \"az\"].\nBoth these rows are individually in lexicographic order (ie. A[0][0] <= A[0][1] and A[1][0] <= A[1][1]).\nNote that A[0] > A[1] - the array A isn't necessarily in lexicographic order.\n\n\nExample 2:\n\nInput: [\"edcba\"]\nOutput: 4\nExplanation: If we delete less than 4 columns, the only row won't be lexicographically sorted.\n\n\nExample 3:\n\nInput: [\"ghi\",\"def\",\"abc\"]\nOutput: 0\nExplanation: All rows are already lexicographically sorted.\n\n\n \n\nNote:\n\n1 <= A.length <= 100\n1 <= A[i].length <= 100"},{"index":"961","url":"https://leetcode.com/problems/n-repeated-element-in-size-2n-array","title":"N-Repeated Element in Size 2N Array","difficulty":"Easy","description":"In a array A of size 2N, there are N+1 unique elements, and exactly one of these elements is repeated N times.\n\nReturn the element repeated N times.\n\n \n\nExample 1:\n\nInput: [1,2,3,3]\nOutput: 3\n\n\nExample 2:\n\nInput: [2,1,2,5,3,2]\nOutput: 2\n\n\nExample 3:\n\nInput: [5,1,5,2,5,3,5,4]\nOutput: 5\n\n\n \n\nNote:\n\n4 <= A.length <= 10000\n0 <= A[i] < 10000\nA.length is even"},{"index":"962","url":"https://leetcode.com/problems/maximum-width-ramp","title":"Maximum Width Ramp","difficulty":"Medium","description":"Given an array A of integers, a ramp is a tuple (i, j) for which i < j and A[i] <= A[j].  The width of such a ramp is j - i.\n\nFind the maximum width of a ramp in A.  If one doesn't exist, return 0.\n\n \n\nExample 1:\n\nInput: [6,0,8,2,1,5]\nOutput: 4\nExplanation: \nThe maximum width ramp is achieved at (i, j) = (1, 5): A[1] = 0 and A[5] = 5.\n\n\nExample 2:\n\nInput: [9,8,1,0,1,9,4,0,4,1]\nOutput: 7\nExplanation: \nThe maximum width ramp is achieved at (i, j) = (2, 9): A[2] = 1 and A[9] = 1.\n\n\n \n\nNote:\n\n2 <= A.length <= 50000\n0 <= A[i] <= 50000\n "},{"index":"963","url":"https://leetcode.com/problems/minimum-area-rectangle-ii","title":"Minimum Area Rectangle II","difficulty":"Medium","description":"Given a set of points in the xy-plane, determine the minimum area of any rectangle formed from these points, with sides not necessarily parallel to the x and y axes.\n\nIf there isn't any rectangle, return 0.\n\n \n\nExample 1:\n\nInput: [[1,2],[2,1],[1,0],[0,1]]\nOutput: 2.00000\nExplanation: The minimum area rectangle occurs at [1,2],[2,1],[1,0],[0,1], with an area of 2.\n\n\nExample 2:\n\nInput: [[0,1],[2,1],[1,1],[1,0],[2,0]]\nOutput: 1.00000\nExplanation: The minimum area rectangle occurs at [1,0],[1,1],[2,1],[2,0], with an area of 1.\n\n\nExample 3:\n\nInput: [[0,3],[1,2],[3,1],[1,3],[2,1]]\nOutput: 0\nExplanation: There is no possible rectangle to form from these points.\n\n\nExample 4:\n\nInput: [[3,1],[1,1],[0,1],[2,1],[3,3],[3,2],[0,2],[2,3]]\nOutput: 2.00000\nExplanation: The minimum area rectangle occurs at [2,1],[2,3],[3,3],[3,1], with an area of 2.\n\n\n \n\nNote:\n\n1 <= points.length <= 50\n0 <= points[i][0] <= 40000\n0 <= points[i][1] <= 40000\nAll points are distinct.\nAnswers within 10^-5 of the actual value will be accepted as correct."},{"index":"964","url":"https://leetcode.com/problems/least-operators-to-express-number","title":"Least Operators to Express Number","difficulty":"Hard","description":"Given a single positive integer x, we will write an expression of the form x (op1) x (op2) x (op3) x ... where each operator op1, op2, etc. is either addition, subtraction, multiplication, or division (+, -, *, or /).  For example, with x = 3, we might write 3 * 3 / 3 + 3 - 3 which is a value of 3.\n\nWhen writing such an expression, we adhere to the following conventions:\n\nThe division operator (/) returns rational numbers.\nThere are no parentheses placed anywhere.\nWe use the usual order of operations: multiplication and division happens before addition and subtraction.\nIt's not allowed to use the unary negation operator (-).  For example, \"x - x\" is a valid expression as it only uses subtraction, but \"-x + x\" is not because it uses negation.\n\nWe would like to write an expression with the least number of operators such that the expression equals the given target.  Return the least number of operators used.\n\n \n\nExample 1:\n\nInput: x = 3, target = 19\nOutput: 5\nExplanation: 3 * 3 + 3 * 3 + 3 / 3.  The expression contains 5 operations.\n\n\nExample 2:\n\nInput: x = 5, target = 501\nOutput: 8\nExplanation: 5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5.  The expression contains 8 operations.\n\n\nExample 3:\n\nInput: x = 100, target = 100000000\nOutput: 3\nExplanation: 100 * 100 * 100 * 100.  The expression contains 3 operations.\n\n \n\nNote:\n\n2 <= x <= 100\n1 <= target <= 2 * 10^8\n "},{"index":"965","url":"https://leetcode.com/problems/univalued-binary-tree","title":"Univalued Binary Tree","difficulty":"Easy","description":"A binary tree is univalued if every node in the tree has the same value.\n\nReturn true if and only if the given tree is univalued.\n\n \n\nExample 1:\n\nInput: [1,1,1,1,1,null,1]\nOutput: true\n\n\nExample 2:\n\nInput: [2,2,2,5,2]\nOutput: false\n\n\n \n\nNote:\n\nThe number of nodes in the given tree will be in the range [1, 100].\nEach node's value will be an integer in the range [0, 99]."},{"index":"966","url":"https://leetcode.com/problems/vowel-spellchecker","title":"Vowel Spellchecker","difficulty":"Medium","description":"Given a wordlist, we want to implement a spellchecker that converts a query word into a correct word.\n\nFor a given query word, the spell checker handles two categories of spelling mistakes:\n\nCapitalization: If the query matches a word in the wordlist (case-insensitive), then the query word is returned with the same case as the case in the wordlist.\nExample: wordlist = [\"yellow\"], query = \"YellOw\": correct = \"yellow\"\nExample: wordlist = [\"Yellow\"], query = \"yellow\": correct = \"Yellow\"\nExample: wordlist = [\"yellow\"], query = \"yellow\": correct = \"yellow\"\nVowel Errors: If after replacing the vowels ('a', 'e', 'i', 'o', 'u') of the query word with any vowel individually, it matches a word in the wordlist (case-insensitive), then the query word is returned with the same case as the match in the wordlist.\nExample: wordlist = [\"YellOw\"], query = \"yollow\": correct = \"YellOw\"\nExample: wordlist = [\"YellOw\"], query = \"yeellow\": correct = \"\" (no match)\nExample: wordlist = [\"YellOw\"], query = \"yllw\": correct = \"\" (no match)\n\nIn addition, the spell checker operates under the following precedence rules:\n\nWhen the query exactly matches a word in the wordlist (case-sensitive), you should return the same word back.\nWhen the query matches a word up to capitlization, you should return the first such match in the wordlist.\nWhen the query matches a word up to vowel errors, you should return the first such match in the wordlist.\nIf the query has no matches in the wordlist, you should return the empty string.\n\nGiven some queries, return a list of words answer, where answer[i] is the correct word for query = queries[i].\n\n \n\nExample 1:\n\nInput: wordlist = [\"KiTe\",\"kite\",\"hare\",\"Hare\"], queries = [\"kite\",\"Kite\",\"KiTe\",\"Hare\",\"HARE\",\"Hear\",\"hear\",\"keti\",\"keet\",\"keto\"]\nOutput: [\"kite\",\"KiTe\",\"KiTe\",\"Hare\",\"hare\",\"\",\"\",\"KiTe\",\"\",\"KiTe\"]\n\n \n\nNote:\n\n1 <= wordlist.length <= 5000\n1 <= queries.length <= 5000\n1 <= wordlist[i].length <= 7\n1 <= queries[i].length <= 7\nAll strings in wordlist and queries consist only of english letters."},{"index":"967","url":"https://leetcode.com/problems/numbers-with-same-consecutive-differences","title":"Numbers With Same Consecutive Differences","difficulty":"Medium","description":"Return all non-negative integers of length n such that the absolute difference between every two consecutive digits is k.\n\nNote that every number in the answer must not have leading zeros except for the number 0 itself. For example, 01 has one leading zero and is invalid, but 0 is valid.\n\nYou may return the answer in any order.\n\n \n\nExample 1:\n\nInput: n = 3, k = 7\nOutput: [181,292,707,818,929]\nExplanation: Note that 070 is not a valid number, because it has leading zeroes.\n\n\nExample 2:\n\nInput: n = 2, k = 1\nOutput: [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n\n\nExample 3:\n\nInput: n = 2, k = 0\nOutput: [11,22,33,44,55,66,77,88,99]\n\n\nExample 4:\n\nInput: n = 2, k = 1\nOutput: [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n\n\nExample 5:\n\nInput: n = 2, k = 2\nOutput: [13,20,24,31,35,42,46,53,57,64,68,75,79,86,97]\n\n\n \n\nConstraints:\n\n2 <= n <= 9\n0 <= k <= 9"},{"index":"968","url":"https://leetcode.com/problems/binary-tree-cameras","title":"Binary Tree Cameras","difficulty":"Hard","description":"Given a binary tree, we install cameras on the nodes of the tree. \n\nEach camera at a node can monitor its parent, itself, and its immediate children.\n\nCalculate the minimum number of cameras needed to monitor all nodes of the tree.\n\n \n\nExample 1:\n\nInput: [0,0,null,0,0]\nOutput: 1\nExplanation: One camera is enough to monitor all nodes if placed as shown.\n\n\nExample 2:\n\nInput: [0,0,null,0,null,0,null,null,0]\nOutput: 2\nExplanation: At least two cameras are needed to monitor all nodes of the tree. The above image shows one of the valid configurations of camera placement.\n\n\n\nNote:\n\nThe number of nodes in the given tree will be in the range [1, 1000].\nEvery node has value 0."},{"index":"969","url":"https://leetcode.com/problems/pancake-sorting","title":"Pancake Sorting","difficulty":"Medium","description":"Given an array of integers arr, sort the array by performing a series of pancake flips.\n\nIn one pancake flip we do the following steps:\n\nChoose an integer k where 1 <= k <= arr.length.\nReverse the sub-array arr[1...k].\n\nFor example, if arr = [3,2,1,4] and we performed a pancake flip choosing k = 3, we reverse the sub-array [3,2,1], so arr = [1,2,3,4] after the pancake flip at k = 3.\n\nReturn the k-values corresponding to a sequence of pancake flips that sort arr. Any valid answer that sorts the array within 10 * arr.length flips will be judged as correct.\n\n \n\nExample 1:\n\nInput: arr = [3,2,4,1]\nOutput: [4,2,4,3]\nExplanation: \nWe perform 4 pancake flips, with k values 4, 2, 4, and 3.\nStarting state: arr = [3, 2, 4, 1]\nAfter 1st flip (k = 4): arr = [1, 4, 2, 3]\nAfter 2nd flip (k = 2): arr = [4, 1, 2, 3]\nAfter 3rd flip (k = 4): arr = [3, 2, 1, 4]\nAfter 4th flip (k = 3): arr = [1, 2, 3, 4], which is sorted.\nNotice that we return an array of the chosen k values of the pancake flips.\n\n\nExample 2:\n\nInput: arr = [1,2,3]\nOutput: []\nExplanation: The input is already sorted, so there is no need to flip anything.\nNote that other answers, such as [3, 3], would also be accepted.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 100\n1 <= arr[i] <= arr.length\nAll integers in arr are unique (i.e. arr is a permutation of the integers from 1 to arr.length)."},{"index":"970","url":"https://leetcode.com/problems/powerful-integers","title":"Powerful Integers","difficulty":"Easy","description":"Given two positive integers x and y, an integer is powerful if it is equal to x^i + y^j for some integers i >= 0 and j >= 0.\n\nReturn a list of all powerful integers that have value less than or equal to bound.\n\nYou may return the answer in any order.  In your answer, each value should occur at most once.\n\n \n\nExample 1:\n\nInput: x = 2, y = 3, bound = 10\nOutput: [2,3,4,5,7,9,10]\nExplanation: \n2 = 2^0 + 3^0\n3 = 2^1 + 3^0\n4 = 2^0 + 3^1\n5 = 2^1 + 3^1\n7 = 2^2 + 3^1\n9 = 2^3 + 3^0\n10 = 2^0 + 3^2\n\n\nExample 2:\n\nInput: x = 3, y = 5, bound = 15\nOutput: [2,4,6,8,10,14]\n\n\n \n\nNote:\n\n1 <= x <= 100\n1 <= y <= 100\n0 <= bound <= 10^6"},{"index":"971","url":"https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal","title":"Flip Binary Tree To Match Preorder Traversal","difficulty":"Medium","description":"Given a binary tree with N nodes, each node has a different value from {1, ..., N}.\n\nA node in this binary tree can be flipped by swapping the left child and the right child of that node.\n\nConsider the sequence of N values reported by a preorder traversal starting from the root.  Call such a sequence of N values the voyage of the tree.\n\n(Recall that a preorder traversal of a node means we report the current node's value, then preorder-traverse the left child, then preorder-traverse the right child.)\n\nOur goal is to flip the least number of nodes in the tree so that the voyage of the tree matches the voyage we are given.\n\nIf we can do so, then return a list of the values of all nodes flipped.  You may return the answer in any order.\n\nIf we cannot do so, then return the list [-1].\n\n \n\nExample 1:\n\nInput: root = [1,2], voyage = [2,1]\nOutput: [-1]\n\n\nExample 2:\n\nInput: root = [1,2,3], voyage = [1,3,2]\nOutput: [1]\n\n\nExample 3:\n\nInput: root = [1,2,3], voyage = [1,2,3]\nOutput: []\n\n\n \n\nNote:\n\n1 <= N <= 100"},{"index":"972","url":"https://leetcode.com/problems/equal-rational-numbers","title":"Equal Rational Numbers","difficulty":"Hard","description":"Given two strings S and T, each of which represents a non-negative rational number, return True if and only if they represent the same number. The strings may use parentheses to denote the repeating part of the rational number.\n\nIn general a rational number can be represented using up to three parts: an integer part, a non-repeating part, and a repeating part. The number will be represented in one of the following three ways:\n\n<IntegerPart> (e.g. 0, 12, 123)\n<IntegerPart><.><NonRepeatingPart>  (e.g. 0.5, 1., 2.12, 2.0001)\n<IntegerPart><.><NonRepeatingPart><(><RepeatingPart><)> (e.g. 0.1(6), 0.9(9), 0.00(1212))\n\nThe repeating portion of a decimal expansion is conventionally denoted within a pair of round brackets.  For example:\n\n1 / 6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66)\n\nBoth 0.1(6) or 0.1666(6) or 0.166(66) are correct representations of 1 / 6.\n\n \n\nExample 1:\n\nInput: S = \"0.(52)\", T = \"0.5(25)\"\nOutput: true\nExplanation:\nBecause \"0.(52)\" represents 0.52525252..., and \"0.5(25)\" represents 0.52525252525..... , the strings represent the same number.\n\n\nExample 2:\n\nInput: S = \"0.1666(6)\", T = \"0.166(66)\"\nOutput: true\n\n\nExample 3:\n\nInput: S = \"0.9(9)\", T = \"1.\"\nOutput: true\nExplanation: \n\"0.9(9)\" represents 0.999999999... repeated forever, which equals 1.  [See this link for an explanation.]\n\"1.\" represents the number 1, which is formed correctly: (IntegerPart) = \"1\" and (NonRepeatingPart) = \"\".\n\n \n\nNote:\n\nEach part consists only of digits.\nThe <IntegerPart> will not begin with 2 or more zeros.  (There is no other restriction on the digits of each part.)\n1 <= <IntegerPart>.length <= 4\n0 <= <NonRepeatingPart>.length <= 4\n1 <= <RepeatingPart>.length <= 4"},{"index":"973","url":"https://leetcode.com/problems/k-closest-points-to-origin","title":"K Closest Points to Origin","difficulty":"Medium","description":"We have a list of points on the plane.  Find the K closest points to the origin (0, 0).\n\n(Here, the distance between two points on a plane is the Euclidean distance.)\n\nYou may return the answer in any order.  The answer is guaranteed to be unique (except for the order that it is in.)\n\n \n\nExample 1:\n\nInput: points = [[1,3],[-2,2]], K = 1\nOutput: [[-2,2]]\nExplanation: \nThe distance between (1, 3) and the origin is sqrt(10).\nThe distance between (-2, 2) and the origin is sqrt(8).\nSince sqrt(8) < sqrt(10), (-2, 2) is closer to the origin.\nWe only want the closest K = 1 points from the origin, so the answer is just [[-2,2]].\n\n\nExample 2:\n\nInput: points = [[3,3],[5,-1],[-2,4]], K = 2\nOutput: [[3,3],[-2,4]]\n(The answer [[-2,4],[3,3]] would also be accepted.)\n\n\n \n\nNote:\n\n1 <= K <= points.length <= 10000\n-10000 < points[i][0] < 10000\n-10000 < points[i][1] < 10000"},{"index":"974","url":"https://leetcode.com/problems/subarray-sums-divisible-by-k","title":"Subarray Sums Divisible by K","difficulty":"Medium","description":"Given an array A of integers, return the number of (contiguous, non-empty) subarrays that have a sum divisible by K.\n\n \n\nExample 1:\n\nInput: A = [4,5,0,-2,-3,1], K = 5\nOutput: 7\nExplanation: There are 7 subarrays with a sum divisible by K = 5:\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n\n\n \n\nNote:\n\n1 <= A.length <= 30000\n-10000 <= A[i] <= 10000\n2 <= K <= 10000"},{"index":"975","url":"https://leetcode.com/problems/odd-even-jump","title":"Odd Even Jump","difficulty":"Hard","description":"You are given an integer array A. From some starting index, you can make a series of jumps. The (1st, 3rd, 5th, ...) jumps in the series are called odd-numbered jumps, and the (2nd, 4th, 6th, ...) jumps in the series are called even-numbered jumps. Note that the jumps are numbered, not the indices.\n\nYou may jump forward from index i to index j (with i < j) in the following way:\n\nDuring odd-numbered jumps (i.e., jumps 1, 3, 5, ...), you jump to the index j such that A[i] <= A[j] and A[j] is the smallest possible value. If there are multiple such indices j, you can only jump to the smallest such index j.\nDuring even-numbered jumps (i.e., jumps 2, 4, 6, ...), you jump to the index j such that A[i] >= A[j] and A[j] is the largest possible value. If there are multiple such indices j, you can only jump to the smallest such index j.\nIt may be the case that for some index i, there are no legal jumps.\n\nA starting index is good if, starting from that index, you can reach the end of the array (index A.length - 1) by jumping some number of times (possibly 0 or more than once).\n\nReturn the number of good starting indices.\n\n \n\nExample 1:\n\nInput: A = [10,13,12,14,15]\nOutput: 2\nExplanation: \nFrom starting index i = 0, we can make our 1st jump to i = 2 (since A[2] is the smallest among A[1], A[2], A[3],\nA[4] that is greater or equal to A[0]), then we cannot jump any more.\nFrom starting index i = 1 and i = 2, we can make our 1st jump to i = 3, then we cannot jump any more.\nFrom starting index i = 3, we can make our 1st jump to i = 4, so we have reached the end.\nFrom starting index i = 4, we have reached the end already.\nIn total, there are 2 different starting indices i = 3 and i = 4, where we can reach the end with some number of\njumps.\n\n\nExample 2:\n\nInput: A = [2,3,1,1,4]\nOutput: 3\nExplanation: \nFrom starting index i = 0, we make jumps to i = 1, i = 2, i = 3:\n\nDuring our 1st jump (odd-numbered), we first jump to i = 1 because A[1] is the smallest value in [A[1], A[2],\nA[3], A[4]] that is greater than or equal to A[0].\n\nDuring our 2nd jump (even-numbered), we jump from i = 1 to i = 2 because A[2] is the largest value in [A[2], A[3],\nA[4]] that is less than or equal to A[1]. A[3] is also the largest value, but 2 is a smaller index, so we can\nonly jump to i = 2 and not i = 3\n\nDuring our 3rd jump (odd-numbered), we jump from i = 2 to i = 3 because A[3] is the smallest value in [A[3], A[4]]\nthat is greater than or equal to A[2].\n\nWe can't jump from i = 3 to i = 4, so the starting index i = 0 is not good.\n\nIn a similar manner, we can deduce that:\nFrom starting index i = 1, we jump to i = 4, so we reach the end.\nFrom starting index i = 2, we jump to i = 3, and then we can't jump anymore.\nFrom starting index i = 3, we jump to i = 4, so we reach the end.\nFrom starting index i = 4, we are already at the end.\nIn total, there are 3 different starting indices i = 1, i = 3, and i = 4, where we can reach the end with some\nnumber of jumps.\n\n\nExample 3:\n\nInput: A = [5,1,3,4,2]\nOutput: 3\nExplanation: \nWe can reach the end from starting indices 1, 2, and 4.\n\n\n \n\nConstraints:\n\n1 <= A.length <= 2 * 104\n0 <= A[i] < 105"},{"index":"976","url":"https://leetcode.com/problems/largest-perimeter-triangle","title":"Largest Perimeter Triangle","difficulty":"Easy","description":"Given an array A of positive lengths, return the largest perimeter of a triangle with non-zero area, formed from 3 of these lengths.\n\nIf it is impossible to form any triangle of non-zero area, return 0.\n\n \n\nExample 1:\n\nInput: [2,1,2]\nOutput: 5\n\n\nExample 2:\n\nInput: [1,2,1]\nOutput: 0\n\n\nExample 3:\n\nInput: [3,2,3,4]\nOutput: 10\n\n\nExample 4:\n\nInput: [3,6,2,3]\nOutput: 8\n\n\n \n\nNote:\n\n3 <= A.length <= 10000\n1 <= A[i] <= 10^6"},{"index":"977","url":"https://leetcode.com/problems/squares-of-a-sorted-array","title":"Squares of a Sorted Array","difficulty":"Easy","description":"Given an array of integers A sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order.\n\n \n\nExample 1:\n\nInput: [-4,-1,0,3,10]\nOutput: [0,1,9,16,100]\n\n\nExample 2:\n\nInput: [-7,-3,2,3,11]\nOutput: [4,9,9,49,121]\n\n\n \n\nNote:\n\n1 <= A.length <= 10000\n-10000 <= A[i] <= 10000\nA is sorted in non-decreasing order."},{"index":"978","url":"https://leetcode.com/problems/longest-turbulent-subarray","title":"Longest Turbulent Subarray","difficulty":"Medium","description":"Given an integer array arr, return the length of a maximum size turbulent subarray of arr.\n\nA subarray is turbulent if the comparison sign flips between each adjacent pair of elements in the subarray.\n\nMore formally, a subarray [arr[i], arr[i + 1], ..., arr[j]] of arr is said to be turbulent if and only if:\n\nFor i <= k < j:\narr[k] > arr[k + 1] when k is odd, and\narr[k] < arr[k + 1] when k is even.\nOr, for i <= k < j:\narr[k] > arr[k + 1] when k is even, and\narr[k] < arr[k + 1] when k is odd.\n\n \n\nExample 1:\n\nInput: arr = [9,4,2,10,7,8,8,1,9]\nOutput: 5\nExplanation: arr[1] > arr[2] < arr[3] > arr[4] < arr[5]\n\n\nExample 2:\n\nInput: arr = [4,8,12,16]\nOutput: 2\n\n\nExample 3:\n\nInput: arr = [100]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 4 * 104\n0 <= arr[i] <= 109"},{"index":"979","url":"https://leetcode.com/problems/distribute-coins-in-binary-tree","title":"Distribute Coins in Binary Tree","difficulty":"Medium","description":"Given the root of a binary tree with N nodes, each node in the tree has node.val coins, and there are N coins total.\n\nIn one move, we may choose two adjacent nodes and move one coin from one node to another.  (The move may be from parent to child, or from child to parent.)\n\nReturn the number of moves required to make every node have exactly one coin.\n\n \n\nExample 1:\n\nInput: [3,0,0]\nOutput: 2\nExplanation: From the root of the tree, we move one coin to its left child, and one coin to its right child.\n\n\nExample 2:\n\nInput: [0,3,0]\nOutput: 3\nExplanation: From the left child of the root, we move two coins to the root [taking two moves].  Then, we move one coin from the root of the tree to the right child.\n\n\nExample 3:\n\nInput: [1,0,2]\nOutput: 2\n\n\nExample 4:\n\nInput: [1,0,0,null,3]\nOutput: 4\n\n\n \n\nNote:\n\n1<= N <= 100\n0 <= node.val <= N"},{"index":"980","url":"https://leetcode.com/problems/unique-paths-iii","title":"Unique Paths III","difficulty":"Hard","description":"On a 2-dimensional grid, there are 4 types of squares:\n\n1 represents the starting square.  There is exactly one starting square.\n2 represents the ending square.  There is exactly one ending square.\n0 represents empty squares we can walk over.\n-1 represents obstacles that we cannot walk over.\n\nReturn the number of 4-directional walks from the starting square to the ending square, that walk over every non-obstacle square exactly once.\n\n \n\nExample 1:\n\nInput: [[1,0,0,0],[0,0,0,0],[0,0,2,-1]]\nOutput: 2\nExplanation: We have the following two paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\n2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)\n\nExample 2:\n\nInput: [[1,0,0,0],[0,0,0,0],[0,0,0,2]]\nOutput: 4\nExplanation: We have the following four paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\n2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\n3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\n4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)\n\nExample 3:\n\nInput: [[0,1],[2,0]]\nOutput: 0\nExplanation: \nThere is no path that walks over every empty square exactly once.\nNote that the starting and ending square can be anywhere in the grid.\n\n\n \n\nNote:\n\n1 <= grid.length * grid[0].length <= 20"},{"index":"981","url":"https://leetcode.com/problems/time-based-key-value-store","title":"Time Based Key-Value Store","difficulty":"Medium","description":"Create a timebased key-value store class TimeMap, that supports two operations.\n\n1. set(string key, string value, int timestamp)\n\nStores the key and value, along with the given timestamp.\n\n2. get(string key, int timestamp)\n\nReturns a value such that set(key, value, timestamp_prev) was called previously, with timestamp_prev <= timestamp.\nIf there are multiple such values, it returns the one with the largest timestamp_prev.\nIf there are no values, it returns the empty string (\"\").\n\n \n\nExample 1:\n\nInput: inputs = [\"TimeMap\",\"set\",\"get\",\"get\",\"set\",\"get\",\"get\"], inputs = [[],[\"foo\",\"bar\",1],[\"foo\",1],[\"foo\",3],[\"foo\",\"bar2\",4],[\"foo\",4],[\"foo\",5]]\nOutput: [null,null,\"bar\",\"bar\",null,\"bar2\",\"bar2\"]\nExplanation:   \nTimeMap kv;   \nkv.set(\"foo\", \"bar\", 1); // store the key \"foo\" and value \"bar\" along with timestamp = 1   \nkv.get(\"foo\", 1);  // output \"bar\"   \nkv.get(\"foo\", 3); // output \"bar\" since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 ie \"bar\"   \nkv.set(\"foo\", \"bar2\", 4);   \nkv.get(\"foo\", 4); // output \"bar2\"   \nkv.get(\"foo\", 5); //output \"bar2\"   \n\n\n\nExample 2:\n\nInput: inputs = [\"TimeMap\",\"set\",\"set\",\"get\",\"get\",\"get\",\"get\",\"get\"], inputs = [[],[\"love\",\"high\",10],[\"love\",\"low\",20],[\"love\",5],[\"love\",10],[\"love\",15],[\"love\",20],[\"love\",25]]\nOutput: [null,null,null,\"\",\"high\",\"high\",\"low\",\"low\"]\n\n\n \n\nNote:\n\nAll key/value strings are lowercase.\nAll key/value strings have length in the range [1, 100]\nThe timestamps for all TimeMap.set operations are strictly increasing.\n1 <= timestamp <= 10^7\nTimeMap.set and TimeMap.get functions will be called a total of 120000 times (combined) per test case."},{"index":"982","url":"https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero","title":"Triples with Bitwise AND Equal To Zero","difficulty":"Hard","description":"Given an array of integers A, find the number of triples of indices (i, j, k) such that:\n\n0 <= i < A.length\n0 <= j < A.length\n0 <= k < A.length\nA[i] & A[j] & A[k] == 0, where & represents the bitwise-AND operator.\n\n \n\nExample 1:\n\nInput: [2,1,3]\nOutput: 12\nExplanation: We could choose the following i, j, k triples:\n(i=0, j=0, k=1) : 2 & 2 & 1\n(i=0, j=1, k=0) : 2 & 1 & 2\n(i=0, j=1, k=1) : 2 & 1 & 1\n(i=0, j=1, k=2) : 2 & 1 & 3\n(i=0, j=2, k=1) : 2 & 3 & 1\n(i=1, j=0, k=0) : 1 & 2 & 2\n(i=1, j=0, k=1) : 1 & 2 & 1\n(i=1, j=0, k=2) : 1 & 2 & 3\n(i=1, j=1, k=0) : 1 & 1 & 2\n(i=1, j=2, k=0) : 1 & 3 & 2\n(i=2, j=0, k=1) : 3 & 2 & 1\n(i=2, j=1, k=0) : 3 & 1 & 2\n\n\n \n\nNote:\n\n1 <= A.length <= 1000\n0 <= A[i] < 2^16"},{"index":"983","url":"https://leetcode.com/problems/minimum-cost-for-tickets","title":"Minimum Cost For Tickets","difficulty":"Medium","description":"In a country popular for train travel, you have planned some train travelling one year in advance.  The days of the year that you will travel is given as an array days.  Each day is an integer from 1 to 365.\n\nTrain tickets are sold in 3 different ways:\n\na 1-day pass is sold for costs[0] dollars;\na 7-day pass is sold for costs[1] dollars;\na 30-day pass is sold for costs[2] dollars.\n\nThe passes allow that many days of consecutive travel.  For example, if we get a 7-day pass on day 2, then we can travel for 7 days: day 2, 3, 4, 5, 6, 7, and 8.\n\nReturn the minimum number of dollars you need to travel every day in the given list of days.\n\n \n\nExample 1:\n\nInput: days = [1,4,6,7,8,20], costs = [2,7,15]\nOutput: 11\nExplanation: \nFor example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\nOn day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\nOn day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\nIn total you spent $11 and covered all the days of your travel.\n\n\nExample 2:\n\nInput: days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]\nOutput: 17\nExplanation: \nFor example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\nOn day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\nIn total you spent $17 and covered all the days of your travel.\n\n\n \n\nNote:\n\n1 <= days.length <= 365\n1 <= days[i] <= 365\ndays is in strictly increasing order.\ncosts.length == 3\n1 <= costs[i] <= 1000"},{"index":"984","url":"https://leetcode.com/problems/string-without-aaa-or-bbb","title":"String Without AAA or BBB","difficulty":"Medium","description":"Given two integers A and B, return any string S such that:\n\nS has length A + B and contains exactly A 'a' letters, and exactly B 'b' letters;\nThe substring 'aaa' does not occur in S;\nThe substring 'bbb' does not occur in S.\n\n \n\nExample 1:\n\nInput: A = 1, B = 2\nOutput: \"abb\"\nExplanation: \"abb\", \"bab\" and \"bba\" are all correct answers.\n\n\nExample 2:\n\nInput: A = 4, B = 1\nOutput: \"aabaa\"\n\n \n\nNote:\n\n0 <= A <= 100\n0 <= B <= 100\nIt is guaranteed such an S exists for the given A and B."},{"index":"985","url":"https://leetcode.com/problems/sum-of-even-numbers-after-queries","title":"Sum of Even Numbers After Queries","difficulty":"Easy","description":"We have an array A of integers, and an array queries of queries.\n\nFor the i-th query val = queries[i][0], index = queries[i][1], we add val to A[index].  Then, the answer to the i-th query is the sum of the even values of A.\n\n(Here, the given index = queries[i][1] is a 0-based index, and each query permanently modifies the array A.)\n\nReturn the answer to all queries.  Your answer array should have answer[i] as the answer to the i-th query.\n\n \n\nExample 1:\n\nInput: A = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]\nOutput: [8,6,2,4]\nExplanation: \nAt the beginning, the array is [1,2,3,4].\nAfter adding 1 to A[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.\nAfter adding -3 to A[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.\nAfter adding -4 to A[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.\nAfter adding 2 to A[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.\n\n\n \n\nNote:\n\n1 <= A.length <= 10000\n-10000 <= A[i] <= 10000\n1 <= queries.length <= 10000\n-10000 <= queries[i][0] <= 10000\n0 <= queries[i][1] < A.length"},{"index":"986","url":"https://leetcode.com/problems/interval-list-intersections","title":"Interval List Intersections","difficulty":"Medium","description":"Given two lists of closed intervals, each list of intervals is pairwise disjoint and in sorted order.\n\nReturn the intersection of these two interval lists.\n\n(Formally, a closed interval [a, b] (with a <= b) denotes the set of real numbers x with a <= x <= b.  The intersection of two closed intervals is a set of real numbers that is either empty, or can be represented as a closed interval.  For example, the intersection of [1, 3] and [2, 4] is [2, 3].)\n\n \n\nExample 1:\n\nInput: A = [[0,2],[5,10],[13,23],[24,25]], B = [[1,5],[8,12],[15,24],[25,26]]\nOutput: [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]\n\n\n \n\nNote:\n\n0 <= A.length < 1000\n0 <= B.length < 1000\n0 <= A[i].start, A[i].end, B[i].start, B[i].end < 10^9"},{"index":"987","url":"https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree","title":"Vertical Order Traversal of a Binary Tree","difficulty":"Medium","description":"Given a binary tree, return the vertical order traversal of its nodes values.\n\nFor each node at position (X, Y), its left and right children respectively will be at positions (X-1, Y-1) and (X+1, Y-1).\n\nRunning a vertical line from X = -infinity to X = +infinity, whenever the vertical line touches some nodes, we report the values of the nodes in order from top to bottom (decreasing Y coordinates).\n\nIf two nodes have the same position, then the value of the node that is reported first is the value that is smaller.\n\nReturn an list of non-empty reports in order of X coordinate.  Every report will have a list of values of nodes.\n\n \n\nExample 1:\n\nInput: [3,9,20,null,null,15,7]\nOutput: [[9],[3,15],[20],[7]]\nExplanation: \nWithout loss of generality, we can assume the root node is at position (0, 0):\nThen, the node with value 9 occurs at position (-1, -1);\nThe nodes with values 3 and 15 occur at positions (0, 0) and (0, -2);\nThe node with value 20 occurs at position (1, -1);\nThe node with value 7 occurs at position (2, -2).\n\n\nExample 2:\n\nInput: [1,2,3,4,5,6,7]\nOutput: [[4],[2],[1,5,6],[3],[7]]\nExplanation: \nThe node with value 5 and the node with value 6 have the same position according to the given scheme.\nHowever, in the report \"[1,5,6]\", the node value of 5 comes first since 5 is smaller than 6.\n\n\n \n\nNote:\n\nThe tree will have between 1 and 1000 nodes.\nEach node's value will be between 0 and 1000.\n "},{"index":"988","url":"https://leetcode.com/problems/smallest-string-starting-from-leaf","title":"Smallest String Starting From Leaf","difficulty":"Medium","description":"Given the root of a binary tree, each node has a value from 0 to 25 representing the letters 'a' to 'z': a value of 0 represents 'a', a value of 1 represents 'b', and so on.\n\nFind the lexicographically smallest string that starts at a leaf of this tree and ends at the root.\n\n(As a reminder, any shorter prefix of a string is lexicographically smaller: for example, \"ab\" is lexicographically smaller than \"aba\".  A leaf of a node is a node that has no children.)\n\n \n\nExample 1:\n\nInput: [0,1,2,3,4,3,4]\nOutput: \"dba\"\n\n\nExample 2:\n\nInput: [25,1,3,1,3,0,2]\nOutput: \"adz\"\n\n\nExample 3:\n\nInput: [2,2,1,null,1,0,null,0]\nOutput: \"abc\"\n\n\n \n\nNote:\n\nThe number of nodes in the given tree will be between 1 and 8500.\nEach node in the tree will have a value between 0 and 25."},{"index":"989","url":"https://leetcode.com/problems/add-to-array-form-of-integer","title":"Add to Array-Form of Integer","difficulty":"Easy","description":"For a non-negative integer X, the array-form of X is an array of its digits in left to right order.  For example, if X = 1231, then the array form is [1,2,3,1].\n\nGiven the array-form A of a non-negative integer X, return the array-form of the integer X+K.\n\n \n\nExample 1:\n\nInput: A = [1,2,0,0], K = 34\nOutput: [1,2,3,4]\nExplanation: 1200 + 34 = 1234\n\n\nExample 2:\n\nInput: A = [2,7,4], K = 181\nOutput: [4,5,5]\nExplanation: 274 + 181 = 455\n\n\nExample 3:\n\nInput: A = [2,1,5], K = 806\nOutput: [1,0,2,1]\nExplanation: 215 + 806 = 1021\n\n\nExample 4:\n\nInput: A = [9,9,9,9,9,9,9,9,9,9], K = 1\nOutput: [1,0,0,0,0,0,0,0,0,0,0]\nExplanation: 9999999999 + 1 = 10000000000\n\n\n \n\nNote：\n\n1 <= A.length <= 10000\n0 <= A[i] <= 9\n0 <= K <= 10000\nIf A.length > 1, then A[0] != 0"},{"index":"990","url":"https://leetcode.com/problems/satisfiability-of-equality-equations","title":"Satisfiability of Equality Equations","difficulty":"Medium","description":"Given an array equations of strings that represent relationships between variables, each string equations[i] has length 4 and takes one of two different forms: \"a==b\" or \"a!=b\".  Here, a and b are lowercase letters (not necessarily different) that represent one-letter variable names.\n\nReturn true if and only if it is possible to assign integers to variable names so as to satisfy all the given equations.\n\n \n\nExample 1:\n\nInput: [\"a==b\",\"b!=a\"]\nOutput: false\nExplanation: If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.  There is no way to assign the variables to satisfy both equations.\n\n\nExample 2:\n\nInput: [\"b==a\",\"a==b\"]\nOutput: true\nExplanation: We could assign a = 1 and b = 1 to satisfy both equations.\n\n\nExample 3:\n\nInput: [\"a==b\",\"b==c\",\"a==c\"]\nOutput: true\n\n\nExample 4:\n\nInput: [\"a==b\",\"b!=c\",\"c==a\"]\nOutput: false\n\n\nExample 5:\n\nInput: [\"c==c\",\"b==d\",\"x!=z\"]\nOutput: true\n\n\n \n\nNote:\n\n1 <= equations.length <= 500\nequations[i].length == 4\nequations[i][0] and equations[i][3] are lowercase letters\nequations[i][1] is either '=' or '!'\nequations[i][2] is '='"},{"index":"991","url":"https://leetcode.com/problems/broken-calculator","title":"Broken Calculator","difficulty":"Medium","description":"On a broken calculator that has a number showing on its display, we can perform two operations:\n\nDouble: Multiply the number on the display by 2, or;\nDecrement: Subtract 1 from the number on the display.\n\nInitially, the calculator is displaying the number X.\n\nReturn the minimum number of operations needed to display the number Y.\n\n \n\nExample 1:\n\nInput: X = 2, Y = 3\nOutput: 2\nExplanation: Use double operation and then decrement operation {2 -> 4 -> 3}.\n\n\nExample 2:\n\nInput: X = 5, Y = 8\nOutput: 2\nExplanation: Use decrement and then double {5 -> 4 -> 8}.\n\n\nExample 3:\n\nInput: X = 3, Y = 10\nOutput: 3\nExplanation:  Use double, decrement and double {3 -> 6 -> 5 -> 10}.\n\n\nExample 4:\n\nInput: X = 1024, Y = 1\nOutput: 1023\nExplanation: Use decrement operations 1023 times.\n\n\n \n\nNote:\n\n1 <= X <= 10^9\n1 <= Y <= 10^9"},{"index":"992","url":"https://leetcode.com/problems/subarrays-with-k-different-integers","title":"Subarrays with K Different Integers","difficulty":"Hard","description":"Given an array A of positive integers, call a (contiguous, not necessarily distinct) subarray of A good if the number of different integers in that subarray is exactly K.\n\n(For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.)\n\nReturn the number of good subarrays of A.\n\n \n\nExample 1:\n\nInput: A = [1,2,1,2,3], K = 2\nOutput: 7\nExplanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\n\n\nExample 2:\n\nInput: A = [1,2,1,3,4], K = 3\nOutput: 3\nExplanation: Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].\n\n\n \n\nNote:\n\n1 <= A.length <= 20000\n1 <= A[i] <= A.length\n1 <= K <= A.length"},{"index":"993","url":"https://leetcode.com/problems/cousins-in-binary-tree","title":"Cousins in Binary Tree","difficulty":"Easy","description":"In a binary tree, the root node is at depth 0, and children of each depth k node are at depth k+1.\n\nTwo nodes of a binary tree are cousins if they have the same depth, but have different parents.\n\nWe are given the root of a binary tree with unique values, and the values x and y of two different nodes in the tree.\n\nReturn true if and only if the nodes corresponding to the values x and y are cousins.\n\n \n\nExample 1:\n\n\nInput: root = [1,2,3,4], x = 4, y = 3\nOutput: false\n\n\nExample 2:\n\n\nInput: root = [1,2,3,null,4,null,5], x = 5, y = 4\nOutput: true\n\n\nExample 3:\n\nInput: root = [1,2,3,null,4], x = 2, y = 3\nOutput: false\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree will be between 2 and 100.\nEach node has a unique integer value from 1 to 100."},{"index":"994","url":"https://leetcode.com/problems/rotting-oranges","title":"Rotting Oranges","difficulty":"Medium","description":"In a given grid, each cell can have one of three values:\n\nthe value 0 representing an empty cell;\nthe value 1 representing a fresh orange;\nthe value 2 representing a rotten orange.\n\nEvery minute, any fresh orange that is adjacent (4-directionally) to a rotten orange becomes rotten.\n\nReturn the minimum number of minutes that must elapse until no cell has a fresh orange.  If this is impossible, return -1 instead.\n\n \n\nExample 1:\n\nInput: [[2,1,1],[1,1,0],[0,1,1]]\nOutput: 4\n\n\nExample 2:\n\nInput: [[2,1,1],[0,1,1],[1,0,1]]\nOutput: -1\nExplanation:  The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\n\n\nExample 3:\n\nInput: [[0,2]]\nOutput: 0\nExplanation:  Since there are already no fresh oranges at minute 0, the answer is just 0.\n\n\n \n\nNote:\n\n1 <= grid.length <= 10\n1 <= grid[0].length <= 10\ngrid[i][j] is only 0, 1, or 2."},{"index":"995","url":"https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips","title":"Minimum Number of K Consecutive Bit Flips","difficulty":"Hard","description":"In an array A containing only 0s and 1s, a K-bit flip consists of choosing a (contiguous) subarray of length K and simultaneously changing every 0 in the subarray to 1, and every 1 in the subarray to 0.\n\nReturn the minimum number of K-bit flips required so that there is no 0 in the array.  If it is not possible, return -1.\n\n \n\nExample 1:\n\nInput: A = [0,1,0], K = 1\nOutput: 2\nExplanation: Flip A[0], then flip A[2].\n\n\nExample 2:\n\nInput: A = [1,1,0], K = 2\nOutput: -1\nExplanation: No matter how we flip subarrays of size 2, we can't make the array become [1,1,1].\n\n\nExample 3:\n\nInput: A = [0,0,0,1,0,1,1,0], K = 3\nOutput: 3\nExplanation:\nFlip A[0],A[1],A[2]: A becomes [1,1,1,1,0,1,1,0]\nFlip A[4],A[5],A[6]: A becomes [1,1,1,1,1,0,0,0]\nFlip A[5],A[6],A[7]: A becomes [1,1,1,1,1,1,1,1]\n\n\n \n\nNote:\n\n1 <= A.length <= 30000\n1 <= K <= A.length"},{"index":"996","url":"https://leetcode.com/problems/number-of-squareful-arrays","title":"Number of Squareful Arrays","difficulty":"Hard","description":"Given an array A of non-negative integers, the array is squareful if for every pair of adjacent elements, their sum is a perfect square.\n\nReturn the number of permutations of A that are squareful.  Two permutations A1 and A2 differ if and only if there is some index i such that A1[i] != A2[i].\n\n \n\nExample 1:\n\nInput: [1,17,8]\nOutput: 2\nExplanation: \n[1,8,17] and [17,8,1] are the valid permutations.\n\n\nExample 2:\n\nInput: [2,2,2]\nOutput: 1\n\n\n \n\nNote:\n\n1 <= A.length <= 12\n0 <= A[i] <= 1e9"},{"index":"997","url":"https://leetcode.com/problems/find-the-town-judge","title":"Find the Town Judge","difficulty":"Easy","description":"In a town, there are N people labelled from 1 to N.  There is a rumor that one of these people is secretly the town judge.\n\nIf the town judge exists, then:\n\nThe town judge trusts nobody.\nEverybody (except for the town judge) trusts the town judge.\nThere is exactly one person that satisfies properties 1 and 2.\n\nYou are given trust, an array of pairs trust[i] = [a, b] representing that the person labelled a trusts the person labelled b.\n\nIf the town judge exists and can be identified, return the label of the town judge.  Otherwise, return -1.\n\n \n\nExample 1:\n\nInput: N = 2, trust = [[1,2]]\nOutput: 2\n\n\nExample 2:\n\nInput: N = 3, trust = [[1,3],[2,3]]\nOutput: 3\n\n\nExample 3:\n\nInput: N = 3, trust = [[1,3],[2,3],[3,1]]\nOutput: -1\n\n\nExample 4:\n\nInput: N = 3, trust = [[1,2],[2,3]]\nOutput: -1\n\n\nExample 5:\n\nInput: N = 4, trust = [[1,3],[1,4],[2,3],[2,4],[4,3]]\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= N <= 1000\n0 <= trust.length <= 10^4\ntrust[i].length == 2\ntrust[i] are all different\ntrust[i][0] != trust[i][1]\n1 <= trust[i][0], trust[i][1] <= N"},{"index":"998","url":"https://leetcode.com/problems/maximum-binary-tree-ii","title":"Maximum Binary Tree II","difficulty":"Medium","description":"We are given the root node of a maximum tree: a tree where every node has a value greater than any other value in its subtree.\n\nJust as in the previous problem, the given tree was constructed from an list A (root = Construct(A)) recursively with the following Construct(A) routine:\n\nIf A is empty, return null.\nOtherwise, let A[i] be the largest element of A.  Create a root node with value A[i].\nThe left child of root will be Construct([A[0], A[1], ..., A[i-1]])\nThe right child of root will be Construct([A[i+1], A[i+2], ..., A[A.length - 1]])\nReturn root.\n\nNote that we were not given A directly, only a root node root = Construct(A).\n\nSuppose B is a copy of A with the value val appended to it.  It is guaranteed that B has unique values.\n\nReturn Construct(B).\n\n \n\nExample 1:\n\nInput: root = [4,1,3,null,null,2], val = 5\nOutput: [5,4,null,1,3,null,null,2]\nExplanation: A = [1,4,2,3], B = [1,4,2,3,5]\n\n\nExample 2:\n\nInput: root = [5,2,4,null,1], val = 3\nOutput: [5,2,4,null,1,null,3]\nExplanation: A = [2,1,5,4], B = [2,1,5,4,3]\n\n\nExample 3:\n\nInput: root = [5,2,3,null,1], val = 4\nOutput: [5,2,4,null,1,3]\nExplanation: A = [2,1,5,3], B = [2,1,5,3,4]\n\n\n \n\nConstraints:\n\n1 <= B.length <= 100"},{"index":"999","url":"https://leetcode.com/problems/available-captures-for-rook","title":"Available Captures for Rook","difficulty":"Easy","description":"On an 8 x 8 chessboard, there is one white rook.  There also may be empty squares, white bishops, and black pawns.  These are given as characters 'R', '.', 'B', and 'p' respectively. Uppercase characters represent white pieces, and lowercase characters represent black pieces.\n\nThe rook moves as in the rules of Chess: it chooses one of four cardinal directions (north, east, west, and south), then moves in that direction until it chooses to stop, reaches the edge of the board, or captures an opposite colored pawn by moving to the same square it occupies.  Also, rooks cannot move into the same square as other friendly bishops.\n\nReturn the number of pawns the rook can capture in one move.\n\n \n\nExample 1:\n\nInput: [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"R\",\".\",\".\",\".\",\"p\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 3\nExplanation: \nIn this example the rook is able to capture all the pawns.\n\n\nExample 2:\n\nInput: [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"B\",\"R\",\"B\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 0\nExplanation: \nBishops are blocking the rook to capture any pawn.\n\n\nExample 3:\n\nInput: [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\"p\",\"p\",\".\",\"R\",\".\",\"p\",\"B\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]\nOutput: 3\nExplanation: \nThe rook can capture the pawns at positions b5, d6 and f5.\n\n\n \n\nNote:\n\nboard.length == board[i].length == 8\nboard[i][j] is either 'R', '.', 'B', or 'p'\nThere is exactly one cell with board[i][j] == 'R'"},{"index":"1000","url":"https://leetcode.com/problems/minimum-cost-to-merge-stones","title":"Minimum Cost to Merge Stones","difficulty":"Hard","description":"There are N piles of stones arranged in a row.  The i-th pile has stones[i] stones.\n\nA move consists of merging exactly K consecutive piles into one pile, and the cost of this move is equal to the total number of stones in these K piles.\n\nFind the minimum cost to merge all piles of stones into one pile.  If it is impossible, return -1.\n\n \n\nExample 1:\n\nInput: stones = [3,2,4,1], K = 2\nOutput: 20\nExplanation: \nWe start with [3, 2, 4, 1].\nWe merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].\nWe merge [4, 1] for a cost of 5, and we are left with [5, 5].\nWe merge [5, 5] for a cost of 10, and we are left with [10].\nThe total cost was 20, and this is the minimum possible.\n\n\nExample 2:\n\nInput: stones = [3,2,4,1], K = 3\nOutput: -1\nExplanation: After any merge operation, there are 2 piles left, and we can't merge anymore.  So the task is impossible.\n\n\nExample 3:\n\nInput: stones = [3,5,1,2,6], K = 3\nOutput: 25\nExplanation: \nWe start with [3, 5, 1, 2, 6].\nWe merge [5, 1, 2] for a cost of 8, and we are left with [3, 8, 6].\nWe merge [3, 8, 6] for a cost of 17, and we are left with [17].\nThe total cost was 25, and this is the minimum possible.\n\n\n \n\nNote:\n\n1 <= stones.length <= 30\n2 <= K <= 30\n1 <= stones[i] <= 100"},{"index":"1001","url":"https://leetcode.com/problems/grid-illumination","title":"Grid Illumination","difficulty":"Hard","description":"You are given a grid of size N x N, and each cell of this grid has a lamp that is initially turned off.\n\nYou are also given an array of lamp positions lamps, where lamps[i] = [rowi, coli] indicates that the lamp at grid[rowi][coli] is turned on. When a lamp is turned on, it illuminates its cell and all other cells in the same row, column, or diagonal.\n\nFinally, you are given a query array queries, where queries[i] = [rowi, coli]. For the ith query, determine whether grid[rowi][coli] is illuminated or not. After answering the ith query, turn off the lamp at grid[rowi][coli] and its 8 adjacent lamps if they exist. A lamp is adjacent if its cell shares either a side or corner with grid[rowi][coli].\n\nReturn an array of integers ans, where ans[i] should be 1 if the lamp in the ith query was illuminated, or 0 if the lamp was not.\n\n \n\nExample 1:\n\nInput: N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]\nOutput: [1,0]\nExplanation: We have the initial grid with all lamps turned off. In the above picture we see the grid after turning on the lamp at grid[0][0] then turning on the lamp at grid[4][4].\nThe 0th query asks if the lamp at grid[1][1] is illuminated or not (the blue square). It is illuminated, so set ans[0] = 1. Then, we turn off all lamps in the red square.\n\nThe 1st query asks if the lamp at grid[1][0] is illuminated or not (the blue square). It is not illuminated, so set ans[1] = 1. Then, we turn off all lamps in the red rectangle.\n\n\n\nExample 2:\n\nInput: N = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,1]]\nOutput: [1,1]\n\n\nExample 3:\n\nInput: N = 5, lamps = [[0,0],[0,4]], queries = [[0,4],[0,1],[1,4]]\nOutput: [1,1,0]\n\n\n \n\nConstraints:\n\n1 <= N <= 109\n0 <= lamps.length <= 20000\nlamps[i].length == 2\n0 <= lamps[i][j] < N\n0 <= queries.length <= 20000\nqueries[i].length == 2\n0 <= queries[i][j] < N"},{"index":"1002","url":"https://leetcode.com/problems/find-common-characters","title":"Find Common Characters","difficulty":"Easy","description":"Given an array A of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list (including duplicates).  For example, if a character occurs 3 times in all strings but not 4 times, you need to include that character three times in the final answer.\n\nYou may return the answer in any order.\n\n \n\nExample 1:\n\nInput: [\"bella\",\"label\",\"roller\"]\nOutput: [\"e\",\"l\",\"l\"]\n\n\nExample 2:\n\nInput: [\"cool\",\"lock\",\"cook\"]\nOutput: [\"c\",\"o\"]\n\n\n \n\nNote:\n\n1 <= A.length <= 100\n1 <= A[i].length <= 100\nA[i][j] is a lowercase letter"},{"index":"1003","url":"https://leetcode.com/problems/check-if-word-is-valid-after-substitutions","title":"Check If Word Is Valid After Substitutions","difficulty":"Medium","description":"Given a string s, determine if it is valid.\n\nA string s is valid if, starting with an empty string t = \"\", you can transform t into s after performing the following operation any number of times:\n\nInsert string \"abc\" into any position in t. More formally, t becomes tleft + \"abc\" + tright, where t == tleft + tright. Note that tleft and tright may be empty.\n\nReturn true if s is a valid string, otherwise, return false.\n\n \n\nExample 1:\n\nInput: s = \"aabcbc\"\nOutput: true\nExplanation:\n\"\" -> \"abc\" -> \"aabcbc\"\nThus, \"aabcbc\" is valid.\n\nExample 2:\n\nInput: s = \"abcabcababcc\"\nOutput: true\nExplanation:\n\"\" -> \"abc\" -> \"abcabc\" -> \"abcabcabc\" -> \"abcabcababcc\"\nThus, \"abcabcababcc\" is valid.\n\n\nExample 3:\n\nInput: s = \"abccba\"\nOutput: false\nExplanation: It is impossible to get \"abccba\" using the operation.\n\n\nExample 4:\n\nInput: s = \"cababc\"\nOutput: false\nExplanation: It is impossible to get \"cababc\" using the operation.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 2 * 104\ns consists of letters 'a', 'b', and 'c'"},{"index":"1004","url":"https://leetcode.com/problems/max-consecutive-ones-iii","title":"Max Consecutive Ones III","difficulty":"Medium","description":"Given an array A of 0s and 1s, we may change up to K values from 0 to 1.\n\nReturn the length of the longest (contiguous) subarray that contains only 1s. \n\n \n\nExample 1:\n\nInput: A = [1,1,1,0,0,0,1,1,1,1,0], K = 2\nOutput: 6\nExplanation: \n[1,1,1,0,0,1,1,1,1,1,1]\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\n\nExample 2:\n\nInput: A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3\nOutput: 10\nExplanation: \n[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\n\n\n \n\nNote:\n\n1 <= A.length <= 20000\n0 <= K <= A.length\nA[i] is 0 or 1 "},{"index":"1005","url":"https://leetcode.com/problems/maximize-sum-of-array-after-k-negations","title":"Maximize Sum Of Array After K Negations","difficulty":"Easy","description":"Given an array A of integers, we must modify the array in the following way: we choose an i and replace A[i] with -A[i], and we repeat this process K times in total.  (We may choose the same index i multiple times.)\n\nReturn the largest possible sum of the array after modifying it in this way.\n\n \n\nExample 1:\n\nInput: A = [4,2,3], K = 1\nOutput: 5\nExplanation: Choose indices (1,) and A becomes [4,-2,3].\n\n\nExample 2:\n\nInput: A = [3,-1,0,2], K = 3\nOutput: 6\nExplanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].\n\n\nExample 3:\n\nInput: A = [2,-3,-1,5,-4], K = 2\nOutput: 13\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\n\n\n \n\nNote:\n\n1 <= A.length <= 10000\n1 <= K <= 10000\n-100 <= A[i] <= 100"},{"index":"1006","url":"https://leetcode.com/problems/clumsy-factorial","title":"Clumsy Factorial","difficulty":"Medium","description":"Normally, the factorial of a positive integer n is the product of all positive integers less than or equal to n.  For example, factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1.\n\nWe instead make a clumsy factorial: using the integers in decreasing order, we swap out the multiply operations for a fixed rotation of operations: multiply (*), divide (/), add (+) and subtract (-) in this order.\n\nFor example, clumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1.  However, these operations are still applied using the usual order of operations of arithmetic: we do all multiplication and division steps before any addition or subtraction steps, and multiplication and division steps are processed left to right.\n\nAdditionally, the division that we use is floor division such that 10 * 9 / 8 equals 11.  This guarantees the result is an integer.\n\nImplement the clumsy function as defined above: given an integer N, it returns the clumsy factorial of N.\n\n \n\nExample 1:\n\nInput: 4\nOutput: 7\nExplanation: 7 = 4 * 3 / 2 + 1\n\n\nExample 2:\n\nInput: 10\nOutput: 12\nExplanation: 12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n\n\n \n\nNote:\n\n1 <= N <= 10000\n-2^31 <= answer <= 2^31 - 1  (The answer is guaranteed to fit within a 32-bit integer.)"},{"index":"1007","url":"https://leetcode.com/problems/minimum-domino-rotations-for-equal-row","title":"Minimum Domino Rotations For Equal Row","difficulty":"Medium","description":"In a row of dominoes, A[i] and B[i] represent the top and bottom halves of the ith domino.  (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)\n\nWe may rotate the ith domino, so that A[i] and B[i] swap values.\n\nReturn the minimum number of rotations so that all the values in A are the same, or all the values in B are the same.\n\nIf it cannot be done, return -1.\n\n \n\nExample 1:\n\nInput: A = [2,1,2,4,2,2], B = [5,2,6,2,3,2]\nOutput: 2\nExplanation: \nThe first figure represents the dominoes as given by A and B: before we do any rotations.\nIf we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.\n\n\nExample 2:\n\nInput: A = [3,5,1,2,3], B = [3,6,3,3,4]\nOutput: -1\nExplanation: \nIn this case, it is not possible to rotate the dominoes to make one row of values equal.\n\n\n \n\nConstraints:\n\n2 <= A.length == B.length <= 2 * 104\n1 <= A[i], B[i] <= 6"},{"index":"1008","url":"https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal","title":"Construct Binary Search Tree from Preorder Traversal","difficulty":"Medium","description":"Return the root node of a binary search tree that matches the given preorder traversal.\n\n(Recall that a binary search tree is a binary tree where for every node, any descendant of node.left has a value < node.val, and any descendant of node.right has a value > node.val.  Also recall that a preorder traversal displays the value of the node first, then traverses node.left, then traverses node.right.)\n\nIt's guaranteed that for the given test cases there is always possible to find a binary search tree with the given requirements.\n\nExample 1:\n\nInput: [8,5,1,7,10,12]\nOutput: [8,5,10,1,7,null,12]\n\n\n\n \n\nConstraints:\n\n1 <= preorder.length <= 100\n1 <= preorder[i] <= 10^8\nThe values of preorder are distinct."},{"index":"1009","url":"https://leetcode.com/problems/complement-of-base-10-integer","title":"Complement of Base 10 Integer","difficulty":"Easy","description":"Every non-negative integer N has a binary representation.  For example, 5 can be represented as \"101\" in binary, 11 as \"1011\" in binary, and so on.  Note that except for N = 0, there are no leading zeroes in any binary representation.\n\nThe complement of a binary representation is the number in binary you get when changing every 1 to a 0 and 0 to a 1.  For example, the complement of \"101\" in binary is \"010\" in binary.\n\nFor a given number N in base-10, return the complement of it's binary representation as a base-10 integer.\n\n \n\nExample 1:\n\nInput: 5\nOutput: 2\nExplanation: 5 is \"101\" in binary, with complement \"010\" in binary, which is 2 in base-10.\n\n\nExample 2:\n\nInput: 7\nOutput: 0\nExplanation: 7 is \"111\" in binary, with complement \"000\" in binary, which is 0 in base-10.\n\n\nExample 3:\n\nInput: 10\nOutput: 5\nExplanation: 10 is \"1010\" in binary, with complement \"0101\" in binary, which is 5 in base-10.\n\n\n \n\nNote:\n\n0 <= N < 10^9\nThis question is the same as 476: https://leetcode.com/problems/number-complement/"},{"index":"1010","url":"https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60","title":"Pairs of Songs With Total Durations Divisible by 60","difficulty":"Easy","description":"In a list of songs, the i-th song has a duration of time[i] seconds. \n\nReturn the number of pairs of songs for which their total duration in seconds is divisible by 60.  Formally, we want the number of indices i, j such that i < j with (time[i] + time[j]) % 60 == 0.\n\n \n\nExample 1:\n\nInput: [30,20,150,100,40]\nOutput: 3\nExplanation: Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n\n\nExample 2:\n\nInput: [60,60,60]\nOutput: 3\nExplanation: All three pairs have a total duration of 120, which is divisible by 60.\n\n\n \n\nNote:\n\n1 <= time.length <= 60000\n1 <= time[i] <= 500"},{"index":"1011","url":"https://leetcode.com/problems/capacity-to-ship-packages-within-d-days","title":"Capacity To Ship Packages Within D Days","difficulty":"Medium","description":"A conveyor belt has packages that must be shipped from one port to another within D days.\n\nThe i-th package on the conveyor belt has a weight of weights[i].  Each day, we load the ship with packages on the conveyor belt (in the order given by weights). We may not load more weight than the maximum weight capacity of the ship.\n\nReturn the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within D days.\n\n \n\nExample 1:\n\nInput: weights = [1,2,3,4,5,6,7,8,9,10], D = 5\nOutput: 15\nExplanation: \nA ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\n\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed. \n\n\nExample 2:\n\nInput: weights = [3,2,2,4,1,4], D = 3\nOutput: 6\nExplanation: \nA ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4\n\n\nExample 3:\n\nInput: weights = [1,2,3,1,1], D = 4\nOutput: 3\nExplanation: \n1st day: 1\n2nd day: 2\n3rd day: 3\n4th day: 1, 1\n\n\n \n\nConstraints:\n\n1 <= D <= weights.length <= 50000\n1 <= weights[i] <= 500"},{"index":"1012","url":"https://leetcode.com/problems/numbers-with-repeated-digits","title":"Numbers With Repeated Digits","difficulty":"Hard","description":"Given a positive integer N, return the number of positive integers less than or equal to N that have at least 1 repeated digit.\n\n \n\nExample 1:\n\nInput: 20\nOutput: 1\nExplanation: The only positive number (<= 20) with at least 1 repeated digit is 11.\n\n\nExample 2:\n\nInput: 100\nOutput: 10\nExplanation: The positive numbers (<= 100) with atleast 1 repeated digit are 11, 22, 33, 44, 55, 66, 77, 88, 99, and 100.\n\n\nExample 3:\n\nInput: 1000\nOutput: 262\n\n\n \n\nNote:\n\n1 <= N <= 10^9"},{"index":"1013","url":"https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum","title":"Partition Array Into Three Parts With Equal Sum","difficulty":"Easy","description":"Given an array A of integers, return true if and only if we can partition the array into three non-empty parts with equal sums.\n\nFormally, we can partition the array if we can find indexes i+1 < j with (A[0] + A[1] + ... + A[i] == A[i+1] + A[i+2] + ... + A[j-1] == A[j] + A[j-1] + ... + A[A.length - 1])\n\n \n\nExample 1:\n\nInput: A = [0,2,1,-6,6,-7,9,1,2,0,1]\nOutput: true\nExplanation: 0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1\n\n\nExample 2:\n\nInput: A = [0,2,1,-6,6,7,9,-1,2,0,1]\nOutput: false\n\n\nExample 3:\n\nInput: A = [3,3,6,5,-2,2,5,1,-9,4]\nOutput: true\nExplanation: 3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4\n\n\n \n\nConstraints:\n\n3 <= A.length <= 50000\n-10^4 <= A[i] <= 10^4"},{"index":"1014","url":"https://leetcode.com/problems/best-sightseeing-pair","title":"Best Sightseeing Pair","difficulty":"Medium","description":"Given an array A of positive integers, A[i] represents the value of the i-th sightseeing spot, and two sightseeing spots i and j have distance j - i between them.\n\nThe score of a pair (i < j) of sightseeing spots is (A[i] + A[j] + i - j) : the sum of the values of the sightseeing spots, minus the distance between them.\n\nReturn the maximum score of a pair of sightseeing spots.\n\n \n\nExample 1:\n\nInput: [8,1,5,2,6]\nOutput: 11\nExplanation: i = 0, j = 2, A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11\n\n\n \n\nNote:\n\n2 <= A.length <= 50000\n1 <= A[i] <= 1000"},{"index":"1015","url":"https://leetcode.com/problems/smallest-integer-divisible-by-k","title":"Smallest Integer Divisible by K","difficulty":"Medium","description":"Given a positive integer K, you need to find the length of the smallest positive integer N such that N is divisible by K, and N only contains the digit 1.\n\nReturn the length of N. If there is no such N, return -1.\n\nNote: N may not fit in a 64-bit signed integer.\n\n \n\nExample 1:\n\nInput: K = 1\nOutput: 1\nExplanation: The smallest answer is N = 1, which has length 1.\n\n\nExample 2:\n\nInput: K = 2\nOutput: -1\nExplanation: There is no such positive integer N divisible by 2.\n\n\nExample 3:\n\nInput: K = 3\nOutput: 3\nExplanation: The smallest answer is N = 111, which has length 3.\n\n\n \n\nConstraints:\n\n1 <= K <= 105"},{"index":"1016","url":"https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n","title":"Binary String With Substrings Representing 1 To N","difficulty":"Medium","description":"Given a binary string S (a string consisting only of '0' and '1's) and a positive integer N, return true if and only if for every integer X from 1 to N, the binary representation of X is a substring of S.\n\n \n\nExample 1:\n\nInput: S = \"0110\", N = 3\nOutput: true\n\n\nExample 2:\n\nInput: S = \"0110\", N = 4\nOutput: false\n\n\n \n\nNote:\n\n1 <= S.length <= 1000\n1 <= N <= 10^9"},{"index":"1017","url":"https://leetcode.com/problems/convert-to-base-2","title":"Convert to Base -2","difficulty":"Medium","description":"Given a number N, return a string consisting of \"0\"s and \"1\"s that represents its value in base -2 (negative two).\n\nThe returned string must have no leading zeroes, unless the string is \"0\".\n\n \n\nExample 1:\n\nInput: 2\nOutput: \"110\"\nExplantion: (-2) ^ 2 + (-2) ^ 1 = 2\n\n\nExample 2:\n\nInput: 3\nOutput: \"111\"\nExplantion: (-2) ^ 2 + (-2) ^ 1 + (-2) ^ 0 = 3\n\n\nExample 3:\n\nInput: 4\nOutput: \"100\"\nExplantion: (-2) ^ 2 = 4\n\n\n \n\nNote:\n\n0 <= N <= 10^9"},{"index":"1018","url":"https://leetcode.com/problems/binary-prefix-divisible-by-5","title":"Binary Prefix Divisible By 5","difficulty":"Easy","description":"Given an array A of 0s and 1s, consider N_i: the i-th subarray from A[0] to A[i] interpreted as a binary number (from most-significant-bit to least-significant-bit.)\n\nReturn a list of booleans answer, where answer[i] is true if and only if N_i is divisible by 5.\n\nExample 1:\n\nInput: [0,1,1]\nOutput: [true,false,false]\nExplanation: \nThe input numbers in binary are 0, 01, 011; which are 0, 1, and 3 in base-10.  Only the first number is divisible by 5, so answer[0] is true.\n\n\nExample 2:\n\nInput: [1,1,1]\nOutput: [false,false,false]\n\n\nExample 3:\n\nInput: [0,1,1,1,1,1]\nOutput: [true,false,false,false,true,false]\n\n\nExample 4:\n\nInput: [1,1,1,0,1]\nOutput: [false,false,false,false,false]\n\n\n \n\nNote:\n\n1 <= A.length <= 30000\nA[i] is 0 or 1"},{"index":"1019","url":"https://leetcode.com/problems/next-greater-node-in-linked-list","title":"Next Greater Node In Linked List","difficulty":"Medium","description":"We are given a linked list with head as the first node.  Let's number the nodes in the list: node_1, node_2, node_3, ... etc.\n\nEach node may have a next larger value: for node_i, next_larger(node_i) is the node_j.val such that j > i, node_j.val > node_i.val, and j is the smallest possible choice.  If such a j does not exist, the next larger value is 0.\n\nReturn an array of integers answer, where answer[i] = next_larger(node_{i+1}).\n\nNote that in the example inputs (not outputs) below, arrays such as [2,1,5] represent the serialization of a linked list with a head node value of 2, second node value of 1, and third node value of 5.\n\n \n\nExample 1:\n\nInput: [2,1,5]\nOutput: [5,5,0]\n\n\nExample 2:\n\nInput: [2,7,4,3,5]\nOutput: [7,0,5,5,0]\n\n\nExample 3:\n\nInput: [1,7,5,1,9,2,5,1]\nOutput: [7,9,9,9,0,5,0,0]\n\n\n \n\nNote:\n\n1 <= node.val <= 10^9 for each node in the linked list.\nThe given list has length in the range [0, 10000]."},{"index":"1020","url":"https://leetcode.com/problems/number-of-enclaves","title":"Number of Enclaves","difficulty":"Medium","description":"Given a 2D array A, each cell is 0 (representing sea) or 1 (representing land)\n\nA move consists of walking from one land square 4-directionally to another land square, or off the boundary of the grid.\n\nReturn the number of land squares in the grid for which we cannot walk off the boundary of the grid in any number of moves.\n\n \n\nExample 1:\n\nInput: [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\nOutput: 3\nExplanation: \nThere are three 1s that are enclosed by 0s, and one 1 that isn't enclosed because its on the boundary.\n\nExample 2:\n\nInput: [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\nOutput: 0\nExplanation: \nAll 1s are either on the boundary or can reach the boundary.\n\n\n \n\nNote:\n\n1 <= A.length <= 500\n1 <= A[i].length <= 500\n0 <= A[i][j] <= 1\nAll rows have the same size."},{"index":"1021","url":"https://leetcode.com/problems/remove-outermost-parentheses","title":"Remove Outermost Parentheses","difficulty":"Easy","description":"A valid parentheses string is either empty (\"\"), \"(\" + A + \")\", or A + B, where A and B are valid parentheses strings, and + represents string concatenation.  For example, \"\", \"()\", \"(())()\", and \"(()(()))\" are all valid parentheses strings.\n\nA valid parentheses string S is primitive if it is nonempty, and there does not exist a way to split it into S = A+B, with A and B nonempty valid parentheses strings.\n\nGiven a valid parentheses string S, consider its primitive decomposition: S = P_1 + P_2 + ... + P_k, where P_i are primitive valid parentheses strings.\n\nReturn S after removing the outermost parentheses of every primitive string in the primitive decomposition of S.\n\n \n\nExample 1:\n\nInput: \"(()())(())\"\nOutput: \"()()()\"\nExplanation: \nThe input string is \"(()())(())\", with primitive decomposition \"(()())\" + \"(())\".\nAfter removing outer parentheses of each part, this is \"()()\" + \"()\" = \"()()()\".\n\n\nExample 2:\n\nInput: \"(()())(())(()(()))\"\nOutput: \"()()()()(())\"\nExplanation: \nThe input string is \"(()())(())(()(()))\", with primitive decomposition \"(()())\" + \"(())\" + \"(()(()))\".\nAfter removing outer parentheses of each part, this is \"()()\" + \"()\" + \"()(())\" = \"()()()()(())\".\n\n\nExample 3:\n\nInput: \"()()\"\nOutput: \"\"\nExplanation: \nThe input string is \"()()\", with primitive decomposition \"()\" + \"()\".\nAfter removing outer parentheses of each part, this is \"\" + \"\" = \"\".\n\n\n \n\nNote:\n\nS.length <= 10000\nS[i] is \"(\" or \")\"\nS is a valid parentheses string\n "},{"index":"1022","url":"https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers","title":"Sum of Root To Leaf Binary Numbers","difficulty":"Easy","description":"You are given the root of a binary tree where each node has a value 0 or 1.  Each root-to-leaf path represents a binary number starting with the most significant bit.  For example, if the path is 0 -> 1 -> 1 -> 0 -> 1, then this could represent 01101 in binary, which is 13.\n\nFor all leaves in the tree, consider the numbers represented by the path from the root to that leaf.\n\nReturn the sum of these numbers. The answer is guaranteed to fit in a 32-bits integer.\n\n \n\nExample 1:\n\nInput: root = [1,0,1,0,1,0,1]\nOutput: 22\nExplanation: (100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22\n\n\nExample 2:\n\nInput: root = [0]\nOutput: 0\n\n\nExample 3:\n\nInput: root = [1]\nOutput: 1\n\n\nExample 4:\n\nInput: root = [1,1]\nOutput: 3\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 1000].\nNode.val is 0 or 1."},{"index":"1023","url":"https://leetcode.com/problems/camelcase-matching","title":"Camelcase Matching","difficulty":"Medium","description":"A query word matches a given pattern if we can insert lowercase letters to the pattern word so that it equals the query. (We may insert each character at any position, and may insert 0 characters.)\n\nGiven a list of queries, and a pattern, return an answer list of booleans, where answer[i] is true if and only if queries[i] matches the pattern.\n\n \n\nExample 1:\n\nInput: queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FB\"\nOutput: [true,false,true,true,false]\nExplanation: \n\"FooBar\" can be generated like this \"F\" + \"oo\" + \"B\" + \"ar\".\n\"FootBall\" can be generated like this \"F\" + \"oot\" + \"B\" + \"all\".\n\"FrameBuffer\" can be generated like this \"F\" + \"rame\" + \"B\" + \"uffer\".\n\nExample 2:\n\nInput: queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBa\"\nOutput: [true,false,true,false,false]\nExplanation: \n\"FooBar\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\".\n\"FootBall\" can be generated like this \"Fo\" + \"ot\" + \"Ba\" + \"ll\".\n\n\nExample 3:\n\nInput: queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBaT\"\nOutput: [false,true,false,false,false]\nExplanation: \n\"FooBarTest\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\" + \"T\" + \"est\".\n\n\n \n\nNote:\n\n1 <= queries.length <= 100\n1 <= queries[i].length <= 100\n1 <= pattern.length <= 100\nAll strings consists only of lower and upper case English letters."},{"index":"1024","url":"https://leetcode.com/problems/video-stitching","title":"Video Stitching","difficulty":"Medium","description":"You are given a series of video clips from a sporting event that lasted T seconds.  These video clips can be overlapping with each other and have varied lengths.\n\nEach video clip clips[i] is an interval: it starts at time clips[i][0] and ends at time clips[i][1].  We can cut these clips into segments freely: for example, a clip [0, 7] can be cut into segments [0, 1] + [1, 3] + [3, 7].\n\nReturn the minimum number of clips needed so that we can cut the clips into segments that cover the entire sporting event ([0, T]).  If the task is impossible, return -1.\n\n \n\nExample 1:\n\nInput: clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], T = 10\nOutput: 3\nExplanation: \nWe take the clips [0,2], [8,10], [1,9]; a total of 3 clips.\nThen, we can reconstruct the sporting event as follows:\nWe cut [1,9] into segments [1,2] + [2,8] + [8,9].\nNow we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].\n\n\nExample 2:\n\nInput: clips = [[0,1],[1,2]], T = 5\nOutput: -1\nExplanation: \nWe can't cover [0,5] with only [0,1] and [1,2].\n\n\nExample 3:\n\nInput: clips = [[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]], T = 9\nOutput: 3\nExplanation: \nWe can take clips [0,4], [4,7], and [6,9].\n\n\nExample 4:\n\nInput: clips = [[0,4],[2,8]], T = 5\nOutput: 2\nExplanation: \nNotice you can have extra video after the event ends.\n\n\n \n\nConstraints:\n\n1 <= clips.length <= 100\n0 <= clips[i][0] <= clips[i][1] <= 100\n0 <= T <= 100"},{"index":"1025","url":"https://leetcode.com/problems/divisor-game","title":"Divisor Game","difficulty":"Easy","description":"Alice and Bob take turns playing a game, with Alice starting first.\n\nInitially, there is a number N on the chalkboard.  On each player's turn, that player makes a move consisting of:\n\nChoosing any x with 0 < x < N and N % x == 0.\nReplacing the number N on the chalkboard with N - x.\n\nAlso, if a player cannot make a move, they lose the game.\n\nReturn True if and only if Alice wins the game, assuming both players play optimally.\n\n \n\nExample 1:\n\nInput: 2\nOutput: true\nExplanation: Alice chooses 1, and Bob has no more moves.\n\n\nExample 2:\n\nInput: 3\nOutput: false\nExplanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.\n\n\n \n\nNote:\n\n1 <= N <= 1000"},{"index":"1026","url":"https://leetcode.com/problems/maximum-difference-between-node-and-ancestor","title":"Maximum Difference Between Node and Ancestor","difficulty":"Medium","description":"Given the root of a binary tree, find the maximum value V for which there exist different nodes A and B where V = |A.val - B.val| and A is an ancestor of B.\n\nA node A is an ancestor of B if either: any child of A is equal to B, or any child of A is an ancestor of B.\n\n \n\nExample 1:\n\nInput: root = [8,3,10,1,6,null,14,null,null,4,7,13]\nOutput: 7\nExplanation: We have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.\n\nExample 2:\n\nInput: root = [1,null,2,null,0,3]\nOutput: 3\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [2, 5000].\n0 <= Node.val <= 105"},{"index":"1027","url":"https://leetcode.com/problems/longest-arithmetic-subsequence","title":"Longest Arithmetic Subsequence","difficulty":"Medium","description":"Given an array A of integers, return the length of the longest arithmetic subsequence in A.\n\nRecall that a subsequence of A is a list A[i_1], A[i_2], ..., A[i_k] with 0 <= i_1 < i_2 < ... < i_k <= A.length - 1, and that a sequence B is arithmetic if B[i+1] - B[i] are all the same value (for 0 <= i < B.length - 1).\n\n \n\nExample 1:\n\nInput: A = [3,6,9,12]\nOutput: 4\nExplanation: \nThe whole array is an arithmetic sequence with steps of length = 3.\n\n\nExample 2:\n\nInput: A = [9,4,7,2,10]\nOutput: 3\nExplanation: \nThe longest arithmetic subsequence is [4,7,10].\n\n\nExample 3:\n\nInput: A = [20,1,15,3,10,5,8]\nOutput: 4\nExplanation: \nThe longest arithmetic subsequence is [20,15,10,5].\n\n\n \n\nConstraints:\n\n2 <= A.length <= 1000\n0 <= A[i] <= 500"},{"index":"1028","url":"https://leetcode.com/problems/recover-a-tree-from-preorder-traversal","title":"Recover a Tree From Preorder Traversal","difficulty":"Hard","description":"We run a preorder depth-first search (DFS) on the root of a binary tree.\n\nAt each node in this traversal, we output D dashes (where D is the depth of this node), then we output the value of this node.  If the depth of a node is D, the depth of its immediate child is D + 1.  The depth of the root node is 0.\n\nIf a node has only one child, that child is guaranteed to be the left child.\n\nGiven the output S of this traversal, recover the tree and return its root.\n\n \n\nExample 1:\n\nInput: S = \"1-2--3--4-5--6--7\"\nOutput: [1,2,5,3,4,6,7]\n\n\nExample 2:\n\nInput: S = \"1-2--3---4-5--6---7\"\nOutput: [1,2,5,3,null,6,null,4,null,7]\n\n\nExample 3:\n\nInput: S = \"1-401--349---90--88\"\nOutput: [1,401,null,349,88,90]\n\n\n \n\nConstraints:\n\nThe number of nodes in the original tree is in the range [1, 1000].\n1 <= Node.val <= 109"},{"index":"1029","url":"https://leetcode.com/problems/two-city-scheduling","title":"Two City Scheduling","difficulty":"Medium","description":"A company is planning to interview 2n people. Given the array costs where costs[i] = [aCosti, bCosti], the cost of flying the ith person to city a is aCosti, and the cost of flying the ith person to city b is bCosti.\n\nReturn the minimum cost to fly every person to a city such that exactly n people arrive in each city.\n\n \n\nExample 1:\n\nInput: costs = [[10,20],[30,200],[400,50],[30,20]]\nOutput: 110\nExplanation: \nThe first person goes to city A for a cost of 10.\nThe second person goes to city A for a cost of 30.\nThe third person goes to city B for a cost of 50.\nThe fourth person goes to city B for a cost of 20.\n\nThe total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.\n\n\nExample 2:\n\nInput: costs = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]\nOutput: 1859\n\n\nExample 3:\n\nInput: costs = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]\nOutput: 3086\n\n\n \n\nConstraints:\n\n2 * n == costs.length\n2 <= costs.length <= 100\ncosts.length is even.\n1 <= aCosti, bCosti <= 1000"},{"index":"1030","url":"https://leetcode.com/problems/matrix-cells-in-distance-order","title":"Matrix Cells in Distance Order","difficulty":"Easy","description":"We are given a matrix with R rows and C columns has cells with integer coordinates (r, c), where 0 <= r < R and 0 <= c < C.\n\nAdditionally, we are given a cell in that matrix with coordinates (r0, c0).\n\nReturn the coordinates of all cells in the matrix, sorted by their distance from (r0, c0) from smallest distance to largest distance.  Here, the distance between two cells (r1, c1) and (r2, c2) is the Manhattan distance, |r1 - r2| + |c1 - c2|.  (You may return the answer in any order that satisfies this condition.)\n\n \n\nExample 1:\n\nInput: R = 1, C = 2, r0 = 0, c0 = 0\nOutput: [[0,0],[0,1]]\nExplanation: The distances from (r0, c0) to other cells are: [0,1]\n\n\nExample 2:\n\nInput: R = 2, C = 2, r0 = 0, c0 = 1\nOutput: [[0,1],[0,0],[1,1],[1,0]]\nExplanation: The distances from (r0, c0) to other cells are: [0,1,1,2]\nThe answer [[0,1],[1,1],[0,0],[1,0]] would also be accepted as correct.\n\n\nExample 3:\n\nInput: R = 2, C = 3, r0 = 1, c0 = 2\nOutput: [[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]\nExplanation: The distances from (r0, c0) to other cells are: [0,1,1,2,2,3]\nThere are other answers that would also be accepted as correct, such as [[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]].\n\n\n \n\nNote:\n\n1 <= R <= 100\n1 <= C <= 100\n0 <= r0 < R\n0 <= c0 < C"},{"index":"1031","url":"https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays","title":"Maximum Sum of Two Non-Overlapping Subarrays","difficulty":"Medium","description":"Given an array A of non-negative integers, return the maximum sum of elements in two non-overlapping (contiguous) subarrays, which have lengths L and M.  (For clarification, the L-length subarray could occur before or after the M-length subarray.)\n\nFormally, return the largest V for which V = (A[i] + A[i+1] + ... + A[i+L-1]) + (A[j] + A[j+1] + ... + A[j+M-1]) and either:\n\n0 <= i < i + L - 1 < j < j + M - 1 < A.length, or\n0 <= j < j + M - 1 < i < i + L - 1 < A.length.\n\n \n\nExample 1:\n\nInput: A = [0,6,5,2,2,5,1,9,4], L = 1, M = 2\nOutput: 20\nExplanation: One choice of subarrays is [9] with length 1, and [6,5] with length 2.\n\n\nExample 2:\n\nInput: A = [3,8,1,3,2,1,8,9,0], L = 3, M = 2\nOutput: 29\nExplanation: One choice of subarrays is [3,8,1] with length 3, and [8,9] with length 2.\n\n\nExample 3:\n\nInput: A = [2,1,5,6,0,9,5,0,3,8], L = 4, M = 3\nOutput: 31\nExplanation: One choice of subarrays is [5,6,0,9] with length 4, and [3,8] with length 3.\n\n\n \n\nNote:\n\nL >= 1\nM >= 1\nL + M <= A.length <= 1000\n0 <= A[i] <= 1000"},{"index":"1032","url":"https://leetcode.com/problems/stream-of-characters","title":"Stream of Characters","difficulty":"Hard","description":"Implement the StreamChecker class as follows:\n\nStreamChecker(words): Constructor, init the data structure with the given words.\nquery(letter): returns true if and only if for some k >= 1, the last k characters queried (in order from oldest to newest, including this letter just queried) spell one of the words in the given list.\n\n \n\nExample:\n\nStreamChecker streamChecker = new StreamChecker([\"cd\",\"f\",\"kl\"]); // init the dictionary.\nstreamChecker.query('a');          // return false\nstreamChecker.query('b');          // return false\nstreamChecker.query('c');          // return false\nstreamChecker.query('d');          // return true, because 'cd' is in the wordlist\nstreamChecker.query('e');          // return false\nstreamChecker.query('f');          // return true, because 'f' is in the wordlist\nstreamChecker.query('g');          // return false\nstreamChecker.query('h');          // return false\nstreamChecker.query('i');          // return false\nstreamChecker.query('j');          // return false\nstreamChecker.query('k');          // return false\nstreamChecker.query('l');          // return true, because 'kl' is in the wordlist\n\n\n \n\nNote:\n\n1 <= words.length <= 2000\n1 <= words[i].length <= 2000\nWords will only consist of lowercase English letters.\nQueries will only consist of lowercase English letters.\nThe number of queries is at most 40000."},{"index":"1033","url":"https://leetcode.com/problems/moving-stones-until-consecutive","title":"Moving Stones Until Consecutive","difficulty":"Easy","description":"Three stones are on a number line at positions a, b, and c.\n\nEach turn, you pick up a stone at an endpoint (ie., either the lowest or highest position stone), and move it to an unoccupied position between those endpoints.  Formally, let's say the stones are currently at positions x, y, z with x < y < z.  You pick up the stone at either position x or position z, and move that stone to an integer position k, with x < k < z and k != y.\n\nThe game ends when you cannot make any more moves, ie. the stones are in consecutive positions.\n\nWhen the game ends, what is the minimum and maximum number of moves that you could have made?  Return the answer as an length 2 array: answer = [minimum_moves, maximum_moves]\n\n \n\nExample 1:\n\nInput: a = 1, b = 2, c = 5\nOutput: [1,2]\nExplanation: Move the stone from 5 to 3, or move the stone from 5 to 4 to 3.\n\n\nExample 2:\n\nInput: a = 4, b = 3, c = 2\nOutput: [0,0]\nExplanation: We cannot make any moves.\n\n\nExample 3:\n\nInput: a = 3, b = 5, c = 1\nOutput: [1,2]\nExplanation: Move the stone from 1 to 4; or move the stone from 1 to 2 to 4.\n\n\n \n\nNote:\n\n1 <= a <= 100\n1 <= b <= 100\n1 <= c <= 100\na != b, b != c, c != a\n\n \n\n "},{"index":"1034","url":"https://leetcode.com/problems/coloring-a-border","title":"Coloring A Border","difficulty":"Medium","description":"Given a 2-dimensional grid of integers, each value in the grid represents the color of the grid square at that location.\n\nTwo squares belong to the same connected component if and only if they have the same color and are next to each other in any of the 4 directions.\n\nThe border of a connected component is all the squares in the connected component that are either 4-directionally adjacent to a square not in the component, or on the boundary of the grid (the first or last row or column).\n\nGiven a square at location (r0, c0) in the grid and a color, color the border of the connected component of that square with the given color, and return the final grid.\n\n \n\nExample 1:\n\nInput: grid = [[1,1],[1,2]], r0 = 0, c0 = 0, color = 3\nOutput: [[3, 3], [3, 2]]\n\n\nExample 2:\n\nInput: grid = [[1,2,2],[2,3,2]], r0 = 0, c0 = 1, color = 3\nOutput: [[1, 3, 3], [2, 3, 3]]\n\n\nExample 3:\n\nInput: grid = [[1,1,1],[1,1,1],[1,1,1]], r0 = 1, c0 = 1, color = 2\nOutput: [[2, 2, 2], [2, 1, 2], [2, 2, 2]]\n\n \n\nNote:\n\n1 <= grid.length <= 50\n1 <= grid[0].length <= 50\n1 <= grid[i][j] <= 1000\n0 <= r0 < grid.length\n0 <= c0 < grid[0].length\n1 <= color <= 1000"},{"index":"1035","url":"https://leetcode.com/problems/uncrossed-lines","title":"Uncrossed Lines","difficulty":"Medium","description":"We write the integers of A and B (in the order they are given) on two separate horizontal lines.\n\nNow, we may draw connecting lines: a straight line connecting two numbers A[i] and B[j] such that:\n\nA[i] == B[j];\nThe line we draw does not intersect any other connecting (non-horizontal) line.\n\nNote that a connecting lines cannot intersect even at the endpoints: each number can only belong to one connecting line.\n\nReturn the maximum number of connecting lines we can draw in this way.\n\n \n\nExample 1:\n\nInput: A = [1,4,2], B = [1,2,4]\nOutput: 2\nExplanation: We can draw 2 uncrossed lines as in the diagram.\nWe cannot draw 3 uncrossed lines, because the line from A[1]=4 to B[2]=4 will intersect the line from A[2]=2 to B[1]=2.\n\n\nExample 2:\n\nInput: A = [2,5,1,2,5], B = [10,5,2,1,5,2]\nOutput: 3\n\n\nExample 3:\n\nInput: A = [1,3,7,1,7,5], B = [1,9,2,5,1]\nOutput: 2\n\n \n\nNote:\n\n1 <= A.length <= 500\n1 <= B.length <= 500\n1 <= A[i], B[i] <= 2000"},{"index":"1036","url":"https://leetcode.com/problems/escape-a-large-maze","title":"Escape a Large Maze","difficulty":"Hard","description":"In a 1 million by 1 million grid, the coordinates of each grid square are (x, y).\n\nWe start at the source square and want to reach the target square.  Each move, we can walk to a 4-directionally adjacent square in the grid that isn't in the given list of blocked squares.\n\nReturn true if and only if it is possible to reach the target square through a sequence of moves.\n\n \n\nExample 1:\n\nInput: blocked = [[0,1],[1,0]], source = [0,0], target = [0,2]\nOutput: false\nExplanation: The target square is inaccessible starting from the source square, because we can't walk outside the grid.\n\n\nExample 2:\n\nInput: blocked = [], source = [0,0], target = [999999,999999]\nOutput: true\nExplanation: Because there are no blocked cells, it's possible to reach the target square.\n\n\n \n\nConstraints:\n\n0 <= blocked.length <= 200\nblocked[i].length == 2\n0 <= blocked[i][j] < 10^6\nsource.length == target.length == 2\n0 <= source[i][j], target[i][j] < 10^6\nsource != target"},{"index":"1037","url":"https://leetcode.com/problems/valid-boomerang","title":"Valid Boomerang","difficulty":"Easy","description":"A boomerang is a set of 3 points that are all distinct and not in a straight line.\n\nGiven a list of three points in the plane, return whether these points are a boomerang.\n\n \n\nExample 1:\n\nInput: [[1,1],[2,3],[3,2]]\nOutput: true\n\n\nExample 2:\n\nInput: [[1,1],[2,2],[3,3]]\nOutput: false\n\n \n\nNote:\n\npoints.length == 3\npoints[i].length == 2\n0 <= points[i][j] <= 100\n "},{"index":"1038","url":"https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree","title":"Binary Search Tree to Greater Sum Tree","difficulty":"Medium","description":"Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.\n\nAs a reminder, a binary search tree is a tree that satisfies these constraints:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\nNote: This question is the same as 538: https://leetcode.com/problems/convert-bst-to-greater-tree/\n\n \n\nExample 1:\n\nInput: root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\nOutput: [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n\n\nExample 2:\n\nInput: root = [0,null,1]\nOutput: [1,null,1]\n\n\nExample 3:\n\nInput: root = [1,0,2]\nOutput: [3,3,2]\n\n\nExample 4:\n\nInput: root = [3,2,4,1]\nOutput: [7,9,4,10]\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 100].\n0 <= Node.val <= 100\nAll the values in the tree are unique.\nroot is guaranteed to be a valid binary search tree."},{"index":"1039","url":"https://leetcode.com/problems/minimum-score-triangulation-of-polygon","title":"Minimum Score Triangulation of Polygon","difficulty":"Medium","description":"Given N, consider a convex N-sided polygon with vertices labelled A[0], A[i], ..., A[N-1] in clockwise order.\n\nSuppose you triangulate the polygon into N-2 triangles.  For each triangle, the value of that triangle is the product of the labels of the vertices, and the total score of the triangulation is the sum of these values over all N-2 triangles in the triangulation.\n\nReturn the smallest possible total score that you can achieve with some triangulation of the polygon.\n\n \n\nExample 1:\n\nInput: [1,2,3]\nOutput: 6\nExplanation: The polygon is already triangulated, and the score of the only triangle is 6.\n\n\nExample 2:\n\nInput: [3,7,4,5]\nOutput: 144\nExplanation: There are two triangulations, with possible scores: 3*7*5 + 4*5*7 = 245, or 3*4*5 + 3*4*7 = 144.  The minimum score is 144.\n\n\nExample 3:\n\nInput: [1,3,1,4,1,5]\nOutput: 13\nExplanation: The minimum score triangulation has score 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13.\n\n\n \n\nNote:\n\n3 <= A.length <= 50\n1 <= A[i] <= 100"},{"index":"1040","url":"https://leetcode.com/problems/moving-stones-until-consecutive-ii","title":"Moving Stones Until Consecutive II","difficulty":"Medium","description":"On an infinite number line, the position of the i-th stone is given by stones[i].  Call a stone an endpoint stone if it has the smallest or largest position.\n\nEach turn, you pick up an endpoint stone and move it to an unoccupied position so that it is no longer an endpoint stone.\n\nIn particular, if the stones are at say, stones = [1,2,5], you cannot move the endpoint stone at position 5, since moving it to any position (such as 0, or 3) will still keep that stone as an endpoint stone.\n\nThe game ends when you cannot make any more moves, ie. the stones are in consecutive positions.\n\nWhen the game ends, what is the minimum and maximum number of moves that you could have made?  Return the answer as an length 2 array: answer = [minimum_moves, maximum_moves]\n\n \n\nExample 1:\n\nInput: [7,4,9]\nOutput: [1,2]\nExplanation: \nWe can move 4 -> 8 for one move to finish the game.\nOr, we can move 9 -> 5, 4 -> 6 for two moves to finish the game.\n\n\nExample 2:\n\nInput: [6,5,4,3,10]\nOutput: [2,3]\nWe can move 3 -> 8 then 10 -> 7 to finish the game.\nOr, we can move 3 -> 7, 4 -> 8, 5 -> 9 to finish the game.\nNotice we cannot move 10 -> 2 to finish the game, because that would be an illegal move.\n\n\nExample 3:\n\nInput: [100,101,104,102,103]\nOutput: [0,0]\n\n \n\nNote:\n\n3 <= stones.length <= 10^4\n1 <= stones[i] <= 10^9\nstones[i] have distinct values.\n "},{"index":"1041","url":"https://leetcode.com/problems/robot-bounded-in-circle","title":"Robot Bounded In Circle","difficulty":"Medium","description":"On an infinite plane, a robot initially stands at (0, 0) and faces north.  The robot can receive one of three instructions:\n\n\"G\": go straight 1 unit;\n\"L\": turn 90 degrees to the left;\n\"R\": turn 90 degress to the right.\n\nThe robot performs the instructions given in order, and repeats them forever.\n\nReturn true if and only if there exists a circle in the plane such that the robot never leaves the circle.\n\n \n\nExample 1:\n\nInput: \"GGLLGG\"\nOutput: true\nExplanation: \nThe robot moves from (0,0) to (0,2), turns 180 degrees, and then returns to (0,0).\nWhen repeating these instructions, the robot remains in the circle of radius 2 centered at the origin.\n\n\nExample 2:\n\nInput: \"GG\"\nOutput: false\nExplanation: \nThe robot moves north indefinitely.\n\n\nExample 3:\n\nInput: \"GL\"\nOutput: true\nExplanation: \nThe robot moves from (0, 0) -> (0, 1) -> (-1, 1) -> (-1, 0) -> (0, 0) -> ...\n\n\n \n\nNote:\n\n1 <= instructions.length <= 100\ninstructions[i] is in {'G', 'L', 'R'}"},{"index":"1042","url":"https://leetcode.com/problems/flower-planting-with-no-adjacent","title":"Flower Planting With No Adjacent","difficulty":"Medium","description":"You have n gardens, labeled from 1 to n, and an array paths where paths[i] = [xi, yi] describes a bidirectional path between garden xi to garden yi. In each garden, you want to plant one of 4 types of flowers.\n\nAll gardens have at most 3 paths coming into or leaving it.\n\nYour task is to choose a flower type for each garden such that, for any two gardens connected by a path, they have different types of flowers.\n\nReturn any such a choice as an array answer, where answer[i] is the type of flower planted in the (i+1)th garden. The flower types are denoted 1, 2, 3, or 4. It is guaranteed an answer exists.\n\n \n\nExample 1:\n\nInput: n = 3, paths = [[1,2],[2,3],[3,1]]\nOutput: [1,2,3]\nExplanation:\nGardens 1 and 2 have different types.\nGardens 2 and 3 have different types.\nGardens 3 and 1 have different types.\nHence, [1,2,3] is a valid answer. Other valid answers include [1,2,4], [1,4,2], and [3,2,1].\n\n\nExample 2:\n\nInput: n = 4, paths = [[1,2],[3,4]]\nOutput: [1,2,1,2]\n\n\nExample 3:\n\nInput: n = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]\nOutput: [1,2,3,4]\n\n\n \n\nConstraints:\n\n1 <= n <= 104\n0 <= paths.length <= 2 * 104\npaths[i].length == 2\n1 <= xi, yi <= n\nxi != yi\nEvery garden has at most 3 paths coming into or leaving it."},{"index":"1043","url":"https://leetcode.com/problems/partition-array-for-maximum-sum","title":"Partition Array for Maximum Sum","difficulty":"Medium","description":"Given an integer array arr, you should partition the array into (contiguous) subarrays of length at most k. After partitioning, each subarray has their values changed to become the maximum value of that subarray.\n\nReturn the largest sum of the given array after partitioning.\n\n \n\nExample 1:\n\nInput: arr = [1,15,7,9,2,5,10], k = 3\nOutput: 84\nExplanation: arr becomes [15,15,15,9,10,10,10]\n\n\nExample 2:\n\nInput: arr = [1,4,1,5,7,3,6,1,9,9,3], k = 4\nOutput: 83\n\n\nExample 3:\n\nInput: arr = [1], k = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 500\n0 <= arr[i] <= 109\n1 <= k <= arr.length"},{"index":"1044","url":"https://leetcode.com/problems/longest-duplicate-substring","title":"Longest Duplicate Substring","difficulty":"Hard","description":"Given a string S, consider all duplicated substrings: (contiguous) substrings of S that occur 2 or more times.  (The occurrences may overlap.)\n\nReturn any duplicated substring that has the longest possible length.  (If S does not have a duplicated substring, the answer is \"\".)\n\n \n\nExample 1:\n\nInput: \"banana\"\nOutput: \"ana\"\n\n\nExample 2:\n\nInput: \"abcd\"\nOutput: \"\"\n\n\n \n\nNote:\n\n2 <= S.length <= 10^5\nS consists of lowercase English letters."},{"index":"1046","url":"https://leetcode.com/problems/last-stone-weight","title":"Last Stone Weight","difficulty":"Easy","description":"We have a collection of stones, each stone has a positive integer weight.\n\nEach turn, we choose the two heaviest stones and smash them together.  Suppose the stones have weights x and y with x <= y.  The result of this smash is:\n\nIf x == y, both stones are totally destroyed;\nIf x != y, the stone of weight x is totally destroyed, and the stone of weight y has new weight y-x.\n\nAt the end, there is at most 1 stone left.  Return the weight of this stone (or 0 if there are no stones left.)\n\n \n\nExample 1:\n\nInput: [2,7,4,1,8,1]\nOutput: 1\nExplanation: \nWe combine 7 and 8 to get 1 so the array converts to [2,4,1,1,1] then,\nwe combine 2 and 4 to get 2 so the array converts to [2,1,1,1] then,\nwe combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe combine 1 and 1 to get 0 so the array converts to [1] then that's the value of last stone.\n\n \n\nNote:\n\n1 <= stones.length <= 30\n1 <= stones[i] <= 1000"},{"index":"1047","url":"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string","title":"Remove All Adjacent Duplicates In String","difficulty":"Easy","description":"Given a string S of lowercase letters, a duplicate removal consists of choosing two adjacent and equal letters, and removing them.\n\nWe repeatedly make duplicate removals on S until we no longer can.\n\nReturn the final string after all such duplicate removals have been made.  It is guaranteed the answer is unique.\n\n \n\nExample 1:\n\nInput: \"abbaca\"\nOutput: \"ca\"\nExplanation: \nFor example, in \"abbaca\" we could remove \"bb\" since the letters are adjacent and equal, and this is the only possible move.  The result of this move is that the string is \"aaca\", of which only \"aa\" is possible, so the final string is \"ca\".\n\n\n \n\nNote:\n\n1 <= S.length <= 20000\nS consists only of English lowercase letters."},{"index":"1048","url":"https://leetcode.com/problems/longest-string-chain","title":"Longest String Chain","difficulty":"Medium","description":"Given a list of words, each word consists of English lowercase letters.\n\nLet's say word1 is a predecessor of word2 if and only if we can add exactly one letter anywhere in word1 to make it equal to word2.  For example, \"abc\" is a predecessor of \"abac\".\n\nA word chain is a sequence of words [word_1, word_2, ..., word_k] with k >= 1, where word_1 is a predecessor of word_2, word_2 is a predecessor of word_3, and so on.\n\nReturn the longest possible length of a word chain with words chosen from the given list of words.\n\n \n\nExample 1:\n\nInput: words = [\"a\",\"b\",\"ba\",\"bca\",\"bda\",\"bdca\"]\nOutput: 4\nExplanation: One of the longest word chain is \"a\",\"ba\",\"bda\",\"bdca\".\n\n\nExample 2:\n\nInput: words = [\"xbc\",\"pcxbcf\",\"xb\",\"cxbc\",\"pcxbc\"]\nOutput: 5\n\n\n \n\nConstraints:\n\n1 <= words.length <= 1000\n1 <= words[i].length <= 16\nwords[i] only consists of English lowercase letters."},{"index":"1049","url":"https://leetcode.com/problems/last-stone-weight-ii","title":"Last Stone Weight II","difficulty":"Medium","description":"We have a collection of rocks, each rock has a positive integer weight.\n\nEach turn, we choose any two rocks and smash them together.  Suppose the stones have weights x and y with x <= y.  The result of this smash is:\n\nIf x == y, both stones are totally destroyed;\nIf x != y, the stone of weight x is totally destroyed, and the stone of weight y has new weight y-x.\n\nAt the end, there is at most 1 stone left.  Return the smallest possible weight of this stone (the weight is 0 if there are no stones left.)\n\n \n\nExample 1:\n\nInput: [2,7,4,1,8,1]\nOutput: 1\nExplanation: \nWe can combine 2 and 4 to get 2 so the array converts to [2,7,1,8,1] then,\nwe can combine 7 and 8 to get 1 so the array converts to [2,1,1,1] then,\nwe can combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe can combine 1 and 1 to get 0 so the array converts to [1] then that's the optimal value.\n\n\n \n\nNote:\n\n1 <= stones.length <= 30\n1 <= stones[i] <= 100"},{"index":"1051","url":"https://leetcode.com/problems/height-checker","title":"Height Checker","difficulty":"Easy","description":"Students are asked to stand in non-decreasing order of heights for an annual photo.\n\nReturn the minimum number of students that must move in order for all students to be standing in non-decreasing order of height.\n\nNotice that when a group of students is selected they can reorder in any possible way between themselves and the non selected students remain on their seats.\n\n \n\nExample 1:\n\nInput: heights = [1,1,4,2,1,3]\nOutput: 3\nExplanation: \nCurrent array : [1,1,4,2,1,3]\nTarget array  : [1,1,1,2,3,4]\nOn index 2 (0-based) we have 4 vs 1 so we have to move this student.\nOn index 4 (0-based) we have 1 vs 3 so we have to move this student.\nOn index 5 (0-based) we have 3 vs 4 so we have to move this student.\n\n\nExample 2:\n\nInput: heights = [5,1,2,3,4]\nOutput: 5\n\n\nExample 3:\n\nInput: heights = [1,2,3,4,5]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= heights.length <= 100\n1 <= heights[i] <= 100"},{"index":"1052","url":"https://leetcode.com/problems/grumpy-bookstore-owner","title":"Grumpy Bookstore Owner","difficulty":"Medium","description":"Today, the bookstore owner has a store open for customers.length minutes.  Every minute, some number of customers (customers[i]) enter the store, and all those customers leave after the end of that minute.\n\nOn some minutes, the bookstore owner is grumpy.  If the bookstore owner is grumpy on the i-th minute, grumpy[i] = 1, otherwise grumpy[i] = 0.  When the bookstore owner is grumpy, the customers of that minute are not satisfied, otherwise they are satisfied.\n\nThe bookstore owner knows a secret technique to keep themselves not grumpy for X minutes straight, but can only use it once.\n\nReturn the maximum number of customers that can be satisfied throughout the day.\n\n \n\nExample 1:\n\nInput: customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], X = 3\nOutput: 16\nExplanation: The bookstore owner keeps themselves not grumpy for the last 3 minutes. \nThe maximum number of customers that can be satisfied = 1 + 1 + 1 + 1 + 7 + 5 = 16.\n\n\n \n\nNote:\n\n1 <= X <= customers.length == grumpy.length <= 20000\n0 <= customers[i] <= 1000\n0 <= grumpy[i] <= 1"},{"index":"1053","url":"https://leetcode.com/problems/previous-permutation-with-one-swap","title":"Previous Permutation With One Swap","difficulty":"Medium","description":"Given an array A of positive integers (not necessarily distinct), return the lexicographically largest permutation that is smaller than A, that can be made with one swap (A swap exchanges the positions of two numbers A[i] and A[j]).  If it cannot be done, then return the same array.\n\n \n\nExample 1:\n\nInput: [3,2,1]\nOutput: [3,1,2]\nExplanation: Swapping 2 and 1.\n\n\nExample 2:\n\nInput: [1,1,5]\nOutput: [1,1,5]\nExplanation: This is already the smallest permutation.\n\n\nExample 3:\n\nInput: [1,9,4,6,7]\nOutput: [1,7,4,6,9]\nExplanation: Swapping 9 and 7.\n\n\nExample 4:\n\nInput: [3,1,1,3]\nOutput: [1,3,1,3]\nExplanation: Swapping 1 and 3.\n\n\n \n\nNote:\n\n1 <= A.length <= 10000\n1 <= A[i] <= 10000"},{"index":"1054","url":"https://leetcode.com/problems/distant-barcodes","title":"Distant Barcodes","difficulty":"Medium","description":"In a warehouse, there is a row of barcodes, where the ith barcode is barcodes[i].\n\nRearrange the barcodes so that no two adjacent barcodes are equal. You may return any answer, and it is guaranteed an answer exists.\n\n \n\nExample 1:\n\nInput: barcodes = [1,1,1,2,2,2]\nOutput: [2,1,2,1,2,1]\n\n\nExample 2:\n\nInput: barcodes = [1,1,1,1,2,2,3,3]\nOutput: [1,3,1,3,1,2,1,2]\n\n\n \n\nConstraints:\n\n1 <= barcodes.length <= 10000\n1 <= barcodes[i] <= 10000"},{"index":"1071","url":"https://leetcode.com/problems/greatest-common-divisor-of-strings","title":"Greatest Common Divisor of Strings","difficulty":"Easy","description":"For two strings s and t, we say \"t divides s\" if and only if s = t + ... + t  (t concatenated with itself 1 or more times)\n\nGiven two strings str1 and str2, return the largest string x such that x divides both str1 and str2.\n\n \n\nExample 1:\n\nInput: str1 = \"ABCABC\", str2 = \"ABC\"\nOutput: \"ABC\"\n\n\nExample 2:\n\nInput: str1 = \"ABABAB\", str2 = \"ABAB\"\nOutput: \"AB\"\n\n\nExample 3:\n\nInput: str1 = \"LEET\", str2 = \"CODE\"\nOutput: \"\"\n\n\nExample 4:\n\nInput: str1 = \"ABCDEF\", str2 = \"ABC\"\nOutput: \"\"\n\n\n \n\nConstraints:\n\n1 <= str1.length <= 1000\n1 <= str2.length <= 1000\nstr1 and str2 consist of English uppercase letters."},{"index":"1072","url":"https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows","title":"Flip Columns For Maximum Number of Equal Rows","difficulty":"Medium","description":"Given a matrix consisting of 0s and 1s, we may choose any number of columns in the matrix and flip every cell in that column.  Flipping a cell changes the value of that cell from 0 to 1 or from 1 to 0.\n\nReturn the maximum number of rows that have all values equal after some number of flips.\n\n \n\nExample 1:\n\nInput: [[0,1],[1,1]]\nOutput: 1\nExplanation: After flipping no values, 1 row has all values equal.\n\n\nExample 2:\n\nInput: [[0,1],[1,0]]\nOutput: 2\nExplanation: After flipping values in the first column, both rows have equal values.\n\n\nExample 3:\n\nInput: [[0,0,0],[0,0,1],[1,1,0]]\nOutput: 2\nExplanation: After flipping values in the first two columns, the last two rows have equal values.\n\n\n \n\nNote:\n\n1 <= matrix.length <= 300\n1 <= matrix[i].length <= 300\nAll matrix[i].length's are equal\nmatrix[i][j] is 0 or 1"},{"index":"1073","url":"https://leetcode.com/problems/adding-two-negabinary-numbers","title":"Adding Two Negabinary Numbers","difficulty":"Medium","description":"Given two numbers arr1 and arr2 in base -2, return the result of adding them together.\n\nEach number is given in array format:  as an array of 0s and 1s, from most significant bit to least significant bit.  For example, arr = [1,1,0,1] represents the number (-2)^3 + (-2)^2 + (-2)^0 = -3.  A number arr in array, format is also guaranteed to have no leading zeros: either arr == [0] or arr[0] == 1.\n\nReturn the result of adding arr1 and arr2 in the same format: as an array of 0s and 1s with no leading zeros.\n\n \n\nExample 1:\n\nInput: arr1 = [1,1,1,1,1], arr2 = [1,0,1]\nOutput: [1,0,0,0,0]\nExplanation: arr1 represents 11, arr2 represents 5, the output represents 16.\n\n\nExample 2:\n\nInput: arr1 = [0], arr2 = [0]\nOutput: [0]\n\n\nExample 3:\n\nInput: arr1 = [0], arr2 = [1]\nOutput: [1]\n\n\n \n\nConstraints:\n\n1 <= arr1.length, arr2.length <= 1000\narr1[i] and arr2[i] are 0 or 1\narr1 and arr2 have no leading zeros"},{"index":"1074","url":"https://leetcode.com/problems/number-of-submatrices-that-sum-to-target","title":"Number of Submatrices That Sum to Target","difficulty":"Hard","description":"Given a matrix and a target, return the number of non-empty submatrices that sum to target.\n\nA submatrix x1, y1, x2, y2 is the set of all cells matrix[x][y] with x1 <= x <= x2 and y1 <= y <= y2.\n\nTwo submatrices (x1, y1, x2, y2) and (x1', y1', x2', y2') are different if they have some coordinate that is different: for example, if x1 != x1'.\n\n \n\nExample 1:\n\nInput: matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0\nOutput: 4\nExplanation: The four 1x1 submatrices that only contain 0.\n\n\nExample 2:\n\nInput: matrix = [[1,-1],[-1,1]], target = 0\nOutput: 5\nExplanation: The two 1x2 submatrices, plus the two 2x1 submatrices, plus the 2x2 submatrix.\n\n\nExample 3:\n\nInput: matrix = [[904]], target = 0\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= matrix.length <= 100\n1 <= matrix[0].length <= 100\n-1000 <= matrix[i] <= 1000\n-10^8 <= target <= 10^8"},{"index":"1078","url":"https://leetcode.com/problems/occurrences-after-bigram","title":"Occurrences After Bigram","difficulty":"Easy","description":"Given words first and second, consider occurrences in some text of the form \"first second third\", where second comes immediately after first, and third comes immediately after second.\n\nFor each such occurrence, add \"third\" to the answer, and return the answer.\n\n \n\nExample 1:\n\nInput: text = \"alice is a good girl she is a good student\", first = \"a\", second = \"good\"\nOutput: [\"girl\",\"student\"]\n\n\nExample 2:\n\nInput: text = \"we will we will rock you\", first = \"we\", second = \"will\"\nOutput: [\"we\",\"rock\"]\n\n\n \n\nNote:\n\n1 <= text.length <= 1000\ntext consists of space separated words, where each word consists of lowercase English letters.\n1 <= first.length, second.length <= 10\nfirst and second consist of lowercase English letters."},{"index":"1079","url":"https://leetcode.com/problems/letter-tile-possibilities","title":"Letter Tile Possibilities","difficulty":"Medium","description":"You have n  tiles, where each tile has one letter tiles[i] printed on it.\n\nReturn the number of possible non-empty sequences of letters you can make using the letters printed on those tiles.\n\n \n\nExample 1:\n\nInput: tiles = \"AAB\"\nOutput: 8\nExplanation: The possible sequences are \"A\", \"B\", \"AA\", \"AB\", \"BA\", \"AAB\", \"ABA\", \"BAA\".\n\n\nExample 2:\n\nInput: tiles = \"AAABBC\"\nOutput: 188\n\n\nExample 3:\n\nInput: tiles = \"V\"\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= tiles.length <= 7\ntiles consists of uppercase English letters."},{"index":"1080","url":"https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths","title":"Insufficient Nodes in Root to Leaf Paths","difficulty":"Medium","description":"Given the root of a binary tree, consider all root to leaf paths: paths from the root to any leaf.  (A leaf is a node with no children.)\n\nA node is insufficient if every such root to leaf path intersecting this node has sum strictly less than limit.\n\nDelete all insufficient nodes simultaneously, and return the root of the resulting binary tree.\n\n \n\nExample 1:\n\n\nInput: root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1\n\nOutput: [1,2,3,4,null,null,7,8,9,null,14]\n\n\nExample 2:\n\n\nInput: root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22\n\nOutput: [5,4,8,11,null,17,4,7,null,null,null,5]\n\n \n\nExample 3:\n\n\nInput: root = [1,2,-3,-5,null,4,null], limit = -1\n\nOutput: [1,null,-3,4]\n\n \n\nNote:\n\nThe given tree will have between 1 and 5000 nodes.\n-10^5 <= node.val <= 10^5\n-10^9 <= limit <= 10^9\n "},{"index":"1081","url":"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters","title":"Smallest Subsequence of Distinct Characters","difficulty":"Medium","description":"Return the lexicographically smallest subsequence of s that contains all the distinct characters of s exactly once.\n\nNote: This question is the same as 316: https://leetcode.com/problems/remove-duplicate-letters/\n\n \n\nExample 1:\n\nInput: s = \"bcabc\"\nOutput: \"abc\"\n\n\nExample 2:\n\nInput: s = \"cbacdcbc\"\nOutput: \"acdb\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns consists of lowercase English letters."},{"index":"1089","url":"https://leetcode.com/problems/duplicate-zeros","title":"Duplicate Zeros","difficulty":"Easy","description":"Given a fixed length array arr of integers, duplicate each occurrence of zero, shifting the remaining elements to the right.\n\nNote that elements beyond the length of the original array are not written.\n\nDo the above modifications to the input array in place, do not return anything from your function.\n\n \n\nExample 1:\n\nInput: [1,0,2,3,0,4,5,0]\nOutput: null\nExplanation: After calling your function, the input array is modified to: [1,0,0,2,3,0,0,4]\n\n\nExample 2:\n\nInput: [1,2,3]\nOutput: null\nExplanation: After calling your function, the input array is modified to: [1,2,3]\n\n\n \n\nNote:\n\n1 <= arr.length <= 10000\n0 <= arr[i] <= 9"},{"index":"1090","url":"https://leetcode.com/problems/largest-values-from-labels","title":"Largest Values From Labels","difficulty":"Medium","description":"We have a set of items: the i-th item has value values[i] and label labels[i].\n\nThen, we choose a subset S of these items, such that:\n\n|S| <= num_wanted\nFor every label L, the number of items in S with label L is <= use_limit.\n\nReturn the largest possible sum of the subset S.\n\n \n\nExample 1:\n\nInput: values = [5,4,3,2,1], labels = [1,1,2,2,3], num_wanted = 3, use_limit = 1\nOutput: 9\nExplanation: The subset chosen is the first, third, and fifth item.\n\n\nExample 2:\n\nInput: values = [5,4,3,2,1], labels = [1,3,3,3,2], num_wanted = 3, use_limit = 2\nOutput: 12\nExplanation: The subset chosen is the first, second, and third item.\n\n\nExample 3:\n\nInput: values = [9,8,8,7,6], labels = [0,0,0,1,1], num_wanted = 3, use_limit = 1\nOutput: 16\nExplanation: The subset chosen is the first and fourth item.\n\n\nExample 4:\n\nInput: values = [9,8,8,7,6], labels = [0,0,0,1,1], num_wanted = 3, use_limit = 2\nOutput: 24\nExplanation: The subset chosen is the first, second, and fourth item.\n\n\n \n\nNote:\n\n1 <= values.length == labels.length <= 20000\n0 <= values[i], labels[i] <= 20000\n1 <= num_wanted, use_limit <= values.length"},{"index":"1091","url":"https://leetcode.com/problems/shortest-path-in-binary-matrix","title":"Shortest Path in Binary Matrix","difficulty":"Medium","description":"In an N by N square grid, each cell is either empty (0) or blocked (1).\n\nA clear path from top-left to bottom-right has length k if and only if it is composed of cells C_1, C_2, ..., C_k such that:\n\nAdjacent cells C_i and C_{i+1} are connected 8-directionally (ie., they are different and share an edge or corner)\nC_1 is at location (0, 0) (ie. has value grid[0][0])\nC_k is at location (N-1, N-1) (ie. has value grid[N-1][N-1])\nIf C_i is located at (r, c), then grid[r][c] is empty (ie. grid[r][c] == 0).\n\nReturn the length of the shortest such clear path from top-left to bottom-right.  If such a path does not exist, return -1.\n\n \n\nExample 1:\n\nInput: [[0,1],[1,0]]\n\n\nOutput: 2\n\n\n\nExample 2:\n\nInput: [[0,0,0],[1,1,0],[1,1,0]]\n\n\nOutput: 4\n\n\n\n \n\nNote:\n\n1 <= grid.length == grid[0].length <= 100\ngrid[r][c] is 0 or 1"},{"index":"1092","url":"https://leetcode.com/problems/shortest-common-supersequence","title":"Shortest Common Supersequence ","difficulty":"Hard","description":"Given two strings str1 and str2, return the shortest string that has both str1 and str2 as subsequences.  If multiple answers exist, you may return any of them.\n\n(A string S is a subsequence of string T if deleting some number of characters from T (possibly 0, and the characters are chosen anywhere from T) results in the string S.)\n\n \n\nExample 1:\n\nInput: str1 = \"abac\", str2 = \"cab\"\nOutput: \"cabac\"\nExplanation: \nstr1 = \"abac\" is a subsequence of \"cabac\" because we can delete the first \"c\".\nstr2 = \"cab\" is a subsequence of \"cabac\" because we can delete the last \"ac\".\nThe answer provided is the shortest such string that satisfies these properties.\n\n\n \n\nNote:\n\n1 <= str1.length, str2.length <= 1000\nstr1 and str2 consist of lowercase English letters."},{"index":"1093","url":"https://leetcode.com/problems/statistics-from-a-large-sample","title":"Statistics from a Large Sample","difficulty":"Medium","description":"We sampled integers between 0 and 255, and stored the results in an array count:  count[k] is the number of integers we sampled equal to k.\n\nReturn the minimum, maximum, mean, median, and mode of the sample respectively, as an array of floating point numbers.  The mode is guaranteed to be unique.\n\n(Recall that the median of a sample is:\n\nThe middle element, if the elements of the sample were sorted and the number of elements is odd;\nThe average of the middle two elements, if the elements of the sample were sorted and the number of elements is even.)\n\n \n\nExample 1:\n\nInput: count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nOutput: [1.00000,3.00000,2.37500,2.50000,3.00000]\n\n\nExample 2:\n\nInput: count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nOutput: [1.00000,4.00000,2.18182,2.00000,1.00000]\n\n\n \n\nConstraints:\n\ncount.length == 256\n1 <= sum(count) <= 10^9\nThe mode of the sample that count represents is unique.\nAnswers within 10^-5 of the true value will be accepted as correct."},{"index":"1094","url":"https://leetcode.com/problems/car-pooling","title":"Car Pooling","difficulty":"Medium","description":"You are driving a vehicle that has capacity empty seats initially available for passengers.  The vehicle only drives east (ie. it cannot turn around and drive west.)\n\nGiven a list of trips, trip[i] = [num_passengers, start_location, end_location] contains information about the i-th trip: the number of passengers that must be picked up, and the locations to pick them up and drop them off.  The locations are given as the number of kilometers due east from your vehicle's initial location.\n\nReturn true if and only if it is possible to pick up and drop off all passengers for all the given trips. \n\n \n\nExample 1:\n\nInput: trips = [[2,1,5],[3,3,7]], capacity = 4\nOutput: false\n\n\nExample 2:\n\nInput: trips = [[2,1,5],[3,3,7]], capacity = 5\nOutput: true\n\n\nExample 3:\n\nInput: trips = [[2,1,5],[3,5,7]], capacity = 3\nOutput: true\n\n\nExample 4:\n\nInput: trips = [[3,2,7],[3,7,9],[8,3,9]], capacity = 11\nOutput: true\n\n \n\n \n\nConstraints:\n\ntrips.length <= 1000\ntrips[i].length == 3\n1 <= trips[i][0] <= 100\n0 <= trips[i][1] < trips[i][2] <= 1000\n1 <= capacity <= 100000"},{"index":"1095","url":"https://leetcode.com/problems/find-in-mountain-array","title":"Find in Mountain Array","difficulty":"Hard","description":"(This problem is an interactive problem.)\n\nYou may recall that an array A is a mountain array if and only if:\n\nA.length >= 3\nThere exists some i with 0 < i < A.length - 1 such that:\nA[0] < A[1] < ... A[i-1] < A[i]\nA[i] > A[i+1] > ... > A[A.length - 1]\n\nGiven a mountain array mountainArr, return the minimum index such that mountainArr.get(index) == target.  If such an index doesn't exist, return -1.\n\nYou can't access the mountain array directly.  You may only access the array using a MountainArray interface:\n\nMountainArray.get(k) returns the element of the array at index k (0-indexed).\nMountainArray.length() returns the length of the array.\n\nSubmissions making more than 100 calls to MountainArray.get will be judged Wrong Answer.  Also, any solutions that attempt to circumvent the judge will result in disqualification.\n\n \n\nExample 1:\n\nInput: array = [1,2,3,4,5,3,1], target = 3\nOutput: 2\nExplanation: 3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.\n\nExample 2:\n\nInput: array = [0,1,2,4,2,1], target = 3\nOutput: -1\nExplanation: 3 does not exist in the array, so we return -1.\n\n\n \n\nConstraints:\n\n3 <= mountain_arr.length() <= 10000\n0 <= target <= 10^9\n0 <= mountain_arr.get(index) <= 10^9"},{"index":"1096","url":"https://leetcode.com/problems/brace-expansion-ii","title":"Brace Expansion II","difficulty":"Hard","description":"Under a grammar given below, strings can represent a set of lowercase words.  Let's use R(expr) to denote the set of words the expression represents.\n\nGrammar can best be understood through simple examples:\n\nSingle letters represent a singleton set containing that word.\nR(\"a\") = {\"a\"}\nR(\"w\") = {\"w\"}\nWhen we take a comma delimited list of 2 or more expressions, we take the union of possibilities.\nR(\"{a,b,c}\") = {\"a\",\"b\",\"c\"}\nR(\"{{a,b},{b,c}}\") = {\"a\",\"b\",\"c\"} (notice the final set only contains each word at most once)\nWhen we concatenate two expressions, we take the set of possible concatenations between two words where the first word comes from the first expression and the second word comes from the second expression.\nR(\"{a,b}{c,d}\") = {\"ac\",\"ad\",\"bc\",\"bd\"}\nR(\"a{b,c}{d,e}f{g,h}\") = {\"abdfg\", \"abdfh\", \"abefg\", \"abefh\", \"acdfg\", \"acdfh\", \"acefg\", \"acefh\"}\n\nFormally, the 3 rules for our grammar:\n\nFor every lowercase letter x, we have R(x) = {x}\nFor expressions e_1, e_2, ... , e_k with k >= 2, we have R({e_1,e_2,...}) = R(e_1) ∪ R(e_2) ∪ ...\nFor expressions e_1 and e_2, we have R(e_1 + e_2) = {a + b for (a, b) in R(e_1) × R(e_2)}, where + denotes concatenation, and × denotes the cartesian product.\n\nGiven an expression representing a set of words under the given grammar, return the sorted list of words that the expression represents.\n\n \n\nExample 1:\n\nInput: \"{a,b}{c,{d,e}}\"\nOutput: [\"ac\",\"ad\",\"ae\",\"bc\",\"bd\",\"be\"]\n\n\nExample 2:\n\nInput: \"{{a,z},a{b,c},{ab,z}}\"\nOutput: [\"a\",\"ab\",\"ac\",\"z\"]\nExplanation: Each distinct word is written only once in the final answer.\n\n\n \n\nConstraints:\n\n1 <= expression.length <= 60\nexpression[i] consists of '{', '}', ','or lowercase English letters.\nThe given expression represents a set of words based on the grammar given in the description."},{"index":"1103","url":"https://leetcode.com/problems/distribute-candies-to-people","title":"Distribute Candies to People","difficulty":"Easy","description":"We distribute some number of candies, to a row of n = num_people people in the following way:\n\nWe then give 1 candy to the first person, 2 candies to the second person, and so on until we give n candies to the last person.\n\nThen, we go back to the start of the row, giving n + 1 candies to the first person, n + 2 candies to the second person, and so on until we give 2 * n candies to the last person.\n\nThis process repeats (with us giving one more candy each time, and moving to the start of the row after we reach the end) until we run out of candies.  The last person will receive all of our remaining candies (not necessarily one more than the previous gift).\n\nReturn an array (of length num_people and sum candies) that represents the final distribution of candies.\n\n \n\nExample 1:\n\nInput: candies = 7, num_people = 4\nOutput: [1,2,3,1]\nExplanation:\nOn the first turn, ans[0] += 1, and the array is [1,0,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3,0].\nOn the fourth turn, ans[3] += 1 (because there is only one candy left), and the final array is [1,2,3,1].\n\n\nExample 2:\n\nInput: candies = 10, num_people = 3\nOutput: [5,2,3]\nExplanation: \nOn the first turn, ans[0] += 1, and the array is [1,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3].\nOn the fourth turn, ans[0] += 4, and the final array is [5,2,3].\n\n\n \n\nConstraints:\n\n1 <= candies <= 10^9\n1 <= num_people <= 1000"},{"index":"1104","url":"https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree","title":"Path In Zigzag Labelled Binary Tree","difficulty":"Medium","description":"In an infinite binary tree where every node has two children, the nodes are labelled in row order.\n\nIn the odd numbered rows (ie., the first, third, fifth,...), the labelling is left to right, while in the even numbered rows (second, fourth, sixth,...), the labelling is right to left.\n\nGiven the label of a node in this tree, return the labels in the path from the root of the tree to the node with that label.\n\n \n\nExample 1:\n\nInput: label = 14\nOutput: [1,3,4,14]\n\n\nExample 2:\n\nInput: label = 26\nOutput: [1,2,6,10,26]\n\n\n \n\nConstraints:\n\n1 <= label <= 10^6"},{"index":"1105","url":"https://leetcode.com/problems/filling-bookcase-shelves","title":"Filling Bookcase Shelves","difficulty":"Medium","description":"We have a sequence of books: the i-th book has thickness books[i][0] and height books[i][1].\n\nWe want to place these books in order onto bookcase shelves that have total width shelf_width.\n\nWe choose some of the books to place on this shelf (such that the sum of their thickness is <= shelf_width), then build another level of shelf of the bookcase so that the total height of the bookcase has increased by the maximum height of the books we just put down.  We repeat this process until there are no more books to place.\n\nNote again that at each step of the above process, the order of the books we place is the same order as the given sequence of books.  For example, if we have an ordered list of 5 books, we might place the first and second book onto the first shelf, the third book on the second shelf, and the fourth and fifth book on the last shelf.\n\nReturn the minimum possible height that the total bookshelf can be after placing shelves in this manner.\n\n \n\nExample 1:\n\nInput: books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4\nOutput: 6\nExplanation:\nThe sum of the heights of the 3 shelves are 1 + 3 + 2 = 6.\nNotice that book number 2 does not have to be on the first shelf.\n\n\n \n\nConstraints:\n\n1 <= books.length <= 1000\n1 <= books[i][0] <= shelf_width <= 1000\n1 <= books[i][1] <= 1000"},{"index":"1106","url":"https://leetcode.com/problems/parsing-a-boolean-expression","title":"Parsing A Boolean Expression","difficulty":"Hard","description":"Return the result of evaluating a given boolean expression, represented as a string.\n\nAn expression can either be:\n\n\"t\", evaluating to True;\n\"f\", evaluating to False;\n\"!(expr)\", evaluating to the logical NOT of the inner expression expr;\n\"&(expr1,expr2,...)\", evaluating to the logical AND of 2 or more inner expressions expr1, expr2, ...;\n\"|(expr1,expr2,...)\", evaluating to the logical OR of 2 or more inner expressions expr1, expr2, ...\n\n \n\nExample 1:\n\nInput: expression = \"!(f)\"\nOutput: true\n\n\nExample 2:\n\nInput: expression = \"|(f,t)\"\nOutput: true\n\n\nExample 3:\n\nInput: expression = \"&(t,f)\"\nOutput: false\n\n\nExample 4:\n\nInput: expression = \"|(&(t,f,t),!(t))\"\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= expression.length <= 20000\nexpression[i] consists of characters in {'(', ')', '&', '|', '!', 't', 'f', ','}.\nexpression is a valid expression representing a boolean, as given in the description."},{"index":"1108","url":"https://leetcode.com/problems/defanging-an-ip-address","title":"Defanging an IP Address","difficulty":"Easy","description":"Given a valid (IPv4) IP address, return a defanged version of that IP address.\n\nA defanged IP address replaces every period \".\" with \"[.]\".\n\n \n\nExample 1:\n\nInput: address = \"1.1.1.1\"\nOutput: \"1[.]1[.]1[.]1\"\n\n\nExample 2:\n\nInput: address = \"255.100.50.0\"\nOutput: \"255[.]100[.]50[.]0\"\n\n\n \n\nConstraints:\n\nThe given address is a valid IPv4 address."},{"index":"1109","url":"https://leetcode.com/problems/corporate-flight-bookings","title":"Corporate Flight Bookings","difficulty":"Medium","description":"There are n flights, and they are labeled from 1 to n.\n\nWe have a list of flight bookings.  The i-th booking bookings[i] = [i, j, k] means that we booked k seats from flights labeled i to j inclusive.\n\nReturn an array answer of length n, representing the number of seats booked on each flight in order of their label.\n\n \n\nExample 1:\n\nInput: bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5\nOutput: [10,55,45,25,25]\n\n\n \n\nConstraints:\n\n1 <= bookings.length <= 20000\n1 <= bookings[i][0] <= bookings[i][1] <= n <= 20000\n1 <= bookings[i][2] <= 10000"},{"index":"1110","url":"https://leetcode.com/problems/delete-nodes-and-return-forest","title":"Delete Nodes And Return Forest","difficulty":"Medium","description":"Given the root of a binary tree, each node in the tree has a distinct value.\n\nAfter deleting all nodes with a value in to_delete, we are left with a forest (a disjoint union of trees).\n\nReturn the roots of the trees in the remaining forest.  You may return the result in any order.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,5,6,7], to_delete = [3,5]\nOutput: [[1,2,null,4],[6],[7]]\n\n\n \n\nConstraints:\n\nThe number of nodes in the given tree is at most 1000.\nEach node has a distinct value between 1 and 1000.\nto_delete.length <= 1000\nto_delete contains distinct values between 1 and 1000."},{"index":"1111","url":"https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings","title":"Maximum Nesting Depth of Two Valid Parentheses Strings","difficulty":"Medium","description":"A string is a valid parentheses string (denoted VPS) if and only if it consists of \"(\" and \")\" characters only, and:\n\nIt is the empty string, or\nIt can be written as AB (A concatenated with B), where A and B are VPS's, or\nIt can be written as (A), where A is a VPS.\n\nWe can similarly define the nesting depth depth(S) of any VPS S as follows:\n\ndepth(\"\") = 0\ndepth(A + B) = max(depth(A), depth(B)), where A and B are VPS's\ndepth(\"(\" + A + \")\") = 1 + depth(A), where A is a VPS.\n\nFor example,  \"\", \"()()\", and \"()(()())\" are VPS's (with nesting depths 0, 1, and 2), and \")(\" and \"(()\" are not VPS's.\n\n \n\nGiven a VPS seq, split it into two disjoint subsequences A and B, such that A and B are VPS's (and A.length + B.length = seq.length).\n\nNow choose any such A and B such that max(depth(A), depth(B)) is the minimum possible value.\n\nReturn an answer array (of length seq.length) that encodes such a choice of A and B:  answer[i] = 0 if seq[i] is part of A, else answer[i] = 1.  Note that even though multiple answers may exist, you may return any of them.\n\n \n\nExample 1:\n\nInput: seq = \"(()())\"\nOutput: [0,1,1,1,1,0]\n\n\nExample 2:\n\nInput: seq = \"()(())()\"\nOutput: [0,0,0,1,1,0,1,1]\n\n\n \n\nConstraints:\n\n1 <= seq.size <= 10000"},{"index":"1114","url":"https://leetcode.com/problems/print-in-order","title":"Print in Order","difficulty":"Easy","description":"Suppose we have a class:\n\npublic class Foo {\n  public void first() { print(\"first\"); }\n  public void second() { print(\"second\"); }\n  public void third() { print(\"third\"); }\n}\n\n\nThe same instance of Foo will be passed to three different threads. Thread A will call first(), thread B will call second(), and thread C will call third(). Design a mechanism and modify the program to ensure that second() is executed after first(), and third() is executed after second().\n\n \n\nExample 1:\n\nInput: [1,2,3]\nOutput: \"firstsecondthird\"\nExplanation: There are three threads being fired asynchronously. The input [1,2,3] means thread A calls first(), thread B calls second(), and thread C calls third(). \"firstsecondthird\" is the correct output.\n\n\nExample 2:\n\nInput: [1,3,2]\nOutput: \"firstsecondthird\"\nExplanation: The input [1,3,2] means thread A calls first(), thread B calls third(), and thread C calls second(). \"firstsecondthird\" is the correct output.\n\n \n\nNote:\n\nWe do not know how the threads will be scheduled in the operating system, even though the numbers in the input seems to imply the ordering. The input format you see is mainly to ensure our tests' comprehensiveness."},{"index":"1115","url":"https://leetcode.com/problems/print-foobar-alternately","title":"Print FooBar Alternately","difficulty":"Medium","description":"Suppose you are given the following code:\n\nclass FooBar {\n  public void foo() {\n    for (int i = 0; i < n; i++) {\n      print(\"foo\");\n    }\n  }\n\n  public void bar() {\n    for (int i = 0; i < n; i++) {\n      print(\"bar\");\n    }\n  }\n}\n\n\nThe same instance of FooBar will be passed to two different threads. Thread A will call foo() while thread B will call bar(). Modify the given program to output \"foobar\" n times.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: \"foobar\"\nExplanation: There are two threads being fired asynchronously. One of them calls foo(), while the other calls bar(). \"foobar\" is being output 1 time.\n\n\nExample 2:\n\nInput: n = 2\nOutput: \"foobarfoobar\"\nExplanation: \"foobar\" is being output 2 times.\n"},{"index":"1116","url":"https://leetcode.com/problems/print-zero-even-odd","title":"Print Zero Even Odd","difficulty":"Medium","description":"Suppose you are given the following code:\n\nclass ZeroEvenOdd {\n  public ZeroEvenOdd(int n) { ... }      // constructor\n  public void zero(printNumber) { ... }  // only output 0's\n  public void even(printNumber) { ... }  // only output even numbers\n  public void odd(printNumber) { ... }   // only output odd numbers\n}\n\n\nThe same instance of ZeroEvenOdd will be passed to three different threads:\n\nThread A will call zero() which should only output 0's.\nThread B will call even() which should only ouput even numbers.\nThread C will call odd() which should only output odd numbers.\n\nEach of the threads is given a printNumber method to output an integer. Modify the given program to output the series 010203040506... where the length of the series must be 2n.\n\n \n\nExample 1:\n\nInput: n = 2\nOutput: \"0102\"\nExplanation: There are three threads being fired asynchronously. One of them calls zero(), the other calls even(), and the last one calls odd(). \"0102\" is the correct output.\n\n\nExample 2:\n\nInput: n = 5\nOutput: \"0102030405\"\n"},{"index":"1117","url":"https://leetcode.com/problems/building-h2o","title":"Building H2O","difficulty":"Medium","description":"There are two kinds of threads, oxygen and hydrogen. Your goal is to group these threads to form water molecules. There is a barrier where each thread has to wait until a complete molecule can be formed. Hydrogen and oxygen threads will be given releaseHydrogen and releaseOxygen methods respectively, which will allow them to pass the barrier. These threads should pass the barrier in groups of three, and they must be able to immediately bond with each other to form a water molecule. You must guarantee that all the threads from one molecule bond before any other threads from the next molecule do.\n\nIn other words:\n\nIf an oxygen thread arrives at the barrier when no hydrogen threads are present, it has to wait for two hydrogen threads.\nIf a hydrogen thread arrives at the barrier when no other threads are present, it has to wait for an oxygen thread and another hydrogen thread.\n\nWe don’t have to worry about matching the threads up explicitly; that is, the threads do not necessarily know which other threads they are paired up with. The key is just that threads pass the barrier in complete sets; thus, if we examine the sequence of threads that bond and divide them into groups of three, each group should contain one oxygen and two hydrogen threads.\n\nWrite synchronization code for oxygen and hydrogen molecules that enforces these constraints.\n\n \n\nExample 1:\n\nInput: \"HOH\"\nOutput: \"HHO\"\nExplanation: \"HOH\" and \"OHH\" are also valid answers.\n\n\nExample 2:\n\nInput: \"OOHHHH\"\nOutput: \"HHOHHO\"\nExplanation: \"HOHHHO\", \"OHHHHO\", \"HHOHOH\", \"HOHHOH\", \"OHHHOH\", \"HHOOHH\", \"HOHOHH\" and \"OHHOHH\" are also valid answers.\n\n\n \n\nConstraints:\n\nTotal length of input string will be 3n, where 1 ≤ n ≤ 20.\nTotal number of H will be 2n in the input string.\nTotal number of O will be n in the input string."},{"index":"1122","url":"https://leetcode.com/problems/relative-sort-array","title":"Relative Sort Array","difficulty":"Easy","description":"Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1.\n\nSort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2.  Elements that don't appear in arr2 should be placed at the end of arr1 in ascending order.\n\n \n\nExample 1:\n\nInput: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]\nOutput: [2,2,2,1,4,3,3,9,6,7,19]\n\n\n \n\nConstraints:\n\n1 <= arr1.length, arr2.length <= 1000\n0 <= arr1[i], arr2[i] <= 1000\nAll the elements of arr2 are distinct.\nEach arr2[i] is in arr1."},{"index":"1123","url":"https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves","title":"Lowest Common Ancestor of Deepest Leaves","difficulty":"Medium","description":"Given the root of a binary tree, return the lowest common ancestor of its deepest leaves.\n\nRecall that:\n\nThe node of a binary tree is a leaf if and only if it has no children\nThe depth of the root of the tree is 0. if the depth of a node is d, the depth of each of its children is d + 1.\nThe lowest common ancestor of a set S of nodes, is the node A with the largest depth such that every node in S is in the subtree with root A.\n\nNote: This question is the same as 865: https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/\n\n \n\nExample 1:\n\nInput: root = [3,5,1,6,2,0,8,null,null,7,4]\nOutput: [2,7,4]\nExplanation: We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest leaf-nodes of the tree.\nNote that nodes 6, 0, and 8 are also leaf nodes, but the depth of them is 2, but the depth of nodes 7 and 4 is 3.\n\nExample 2:\n\nInput: root = [1]\nOutput: [1]\nExplanation: The root is the deepest node in the tree, and it's the lca of itself.\n\n\nExample 3:\n\nInput: root = [0,1,3,null,2]\nOutput: [2]\nExplanation: The deepest leaf node in the tree is 2, the lca of one node is itself.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree will be in the range [1, 1000].\n0 <= Node.val <= 1000\nThe values of the nodes in the tree are unique."},{"index":"1124","url":"https://leetcode.com/problems/longest-well-performing-interval","title":"Longest Well-Performing Interval","difficulty":"Medium","description":"We are given hours, a list of the number of hours worked per day for a given employee.\n\nA day is considered to be a tiring day if and only if the number of hours worked is (strictly) greater than 8.\n\nA well-performing interval is an interval of days for which the number of tiring days is strictly larger than the number of non-tiring days.\n\nReturn the length of the longest well-performing interval.\n\n \n\nExample 1:\n\nInput: hours = [9,9,6,0,6,6,9]\nOutput: 3\nExplanation: The longest well-performing interval is [9,9,6].\n\n\n \n\nConstraints:\n\n1 <= hours.length <= 10000\n0 <= hours[i] <= 16"},{"index":"1125","url":"https://leetcode.com/problems/smallest-sufficient-team","title":"Smallest Sufficient Team","difficulty":"Hard","description":"In a project, you have a list of required skills req_skills, and a list of people.  The i-th person people[i] contains a list of skills that person has.\n\nConsider a sufficient team: a set of people such that for every required skill in req_skills, there is at least one person in the team who has that skill.  We can represent these teams by the index of each person: for example, team = [0, 1, 3] represents the people with skills people[0], people[1], and people[3].\n\nReturn any sufficient team of the smallest possible size, represented by the index of each person.\n\nYou may return the answer in any order.  It is guaranteed an answer exists.\n\n \n\nExample 1:\n\nInput: req_skills = [\"java\",\"nodejs\",\"reactjs\"], people = [[\"java\"],[\"nodejs\"],[\"nodejs\",\"reactjs\"]]\nOutput: [0,2]\n\n\nExample 2:\n\nInput: req_skills = [\"algorithms\",\"math\",\"java\",\"reactjs\",\"csharp\",\"aws\"], people = [[\"algorithms\",\"math\",\"java\"],[\"algorithms\",\"math\",\"reactjs\"],[\"java\",\"csharp\",\"aws\"],[\"reactjs\",\"csharp\"],[\"csharp\",\"math\"],[\"aws\",\"java\"]]\nOutput: [1,2]\n\n\n \n\nConstraints:\n\n1 <= req_skills.length <= 16\n1 <= people.length <= 60\n1 <= people[i].length, req_skills[i].length, people[i][j].length <= 16\nElements of req_skills and people[i] are (respectively) distinct.\nreq_skills[i][j], people[i][j][k] are lowercase English letters.\nEvery skill in people[i] is a skill in req_skills.\nIt is guaranteed a sufficient team exists."},{"index":"1128","url":"https://leetcode.com/problems/number-of-equivalent-domino-pairs","title":"Number of Equivalent Domino Pairs","difficulty":"Easy","description":"Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a==c and b==d), or (a==d and b==c) - that is, one domino can be rotated to be equal to another domino.\n\nReturn the number of pairs (i, j) for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].\n\n \n\nExample 1:\n\nInput: dominoes = [[1,2],[2,1],[3,4],[5,6]]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= dominoes.length <= 40000\n1 <= dominoes[i][j] <= 9"},{"index":"1129","url":"https://leetcode.com/problems/shortest-path-with-alternating-colors","title":"Shortest Path with Alternating Colors","difficulty":"Medium","description":"Consider a directed graph, with nodes labelled 0, 1, ..., n-1.  In this graph, each edge is either red or blue, and there could be self-edges or parallel edges.\n\nEach [i, j] in red_edges denotes a red directed edge from node i to node j.  Similarly, each [i, j] in blue_edges denotes a blue directed edge from node i to node j.\n\nReturn an array answer of length n, where each answer[X] is the length of the shortest path from node 0 to node X such that the edge colors alternate along the path (or -1 if such a path doesn't exist).\n\n \n\nExample 1:\n\nInput: n = 3, red_edges = [[0,1],[1,2]], blue_edges = []\nOutput: [0,1,-1]\n\n\nExample 2:\n\nInput: n = 3, red_edges = [[0,1]], blue_edges = [[2,1]]\nOutput: [0,1,-1]\n\n\nExample 3:\n\nInput: n = 3, red_edges = [[1,0]], blue_edges = [[2,1]]\nOutput: [0,-1,-1]\n\n\nExample 4:\n\nInput: n = 3, red_edges = [[0,1]], blue_edges = [[1,2]]\nOutput: [0,1,2]\n\n\nExample 5:\n\nInput: n = 3, red_edges = [[0,1],[0,2]], blue_edges = [[1,0]]\nOutput: [0,1,1]\n\n\n \n\nConstraints:\n\n1 <= n <= 100\nred_edges.length <= 400\nblue_edges.length <= 400\nred_edges[i].length == blue_edges[i].length == 2\n0 <= red_edges[i][j], blue_edges[i][j] < n"},{"index":"1130","url":"https://leetcode.com/problems/minimum-cost-tree-from-leaf-values","title":"Minimum Cost Tree From Leaf Values","difficulty":"Medium","description":"Given an array arr of positive integers, consider all binary trees such that:\n\nEach node has either 0 or 2 children;\nThe values of arr correspond to the values of each leaf in an in-order traversal of the tree.  (Recall that a node is a leaf if and only if it has 0 children.)\nThe value of each non-leaf node is equal to the product of the largest leaf value in its left and right subtree respectively.\n\nAmong all possible binary trees considered, return the smallest possible sum of the values of each non-leaf node.  It is guaranteed this sum fits into a 32-bit integer.\n\n \n\nExample 1:\n\nInput: arr = [6,2,4]\nOutput: 32\nExplanation:\nThere are two possible trees.  The first has non-leaf node sum 36, and the second has non-leaf node sum 32.\n\n    24            24\n   /  \\          /  \\\n  12   4        6    8\n /  \\               / \\\n6    2             2   4\n\n\n \n\nConstraints:\n\n2 <= arr.length <= 40\n1 <= arr[i] <= 15\nIt is guaranteed that the answer fits into a 32-bit signed integer (ie. it is less than 2^31)."},{"index":"1131","url":"https://leetcode.com/problems/maximum-of-absolute-value-expression","title":"Maximum of Absolute Value Expression","difficulty":"Medium","description":"Given two arrays of integers with equal lengths, return the maximum value of:\n\n|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|\n\nwhere the maximum is taken over all 0 <= i, j < arr1.length.\n\n \n\nExample 1:\n\nInput: arr1 = [1,2,3,4], arr2 = [-1,4,5,6]\nOutput: 13\n\n\nExample 2:\n\nInput: arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]\nOutput: 20\n\n\n \n\nConstraints:\n\n2 <= arr1.length == arr2.length <= 40000\n-10^6 <= arr1[i], arr2[i] <= 10^6"},{"index":"1137","url":"https://leetcode.com/problems/n-th-tribonacci-number","title":"N-th Tribonacci Number","difficulty":"Easy","description":"The Tribonacci sequence Tn is defined as follows: \n\nT0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.\n\nGiven n, return the value of Tn.\n\n \n\nExample 1:\n\nInput: n = 4\nOutput: 4\nExplanation:\nT_3 = 0 + 1 + 1 = 2\nT_4 = 1 + 1 + 2 = 4\n\n\nExample 2:\n\nInput: n = 25\nOutput: 1389537\n\n\n \n\nConstraints:\n\n0 <= n <= 37\nThe answer is guaranteed to fit within a 32-bit integer, ie. answer <= 2^31 - 1."},{"index":"1138","url":"https://leetcode.com/problems/alphabet-board-path","title":"Alphabet Board Path","difficulty":"Medium","description":"On an alphabet board, we start at position (0, 0), corresponding to character board[0][0].\n\nHere, board = [\"abcde\", \"fghij\", \"klmno\", \"pqrst\", \"uvwxy\", \"z\"], as shown in the diagram below.\n\nWe may make the following moves:\n\n'U' moves our position up one row, if the position exists on the board;\n'D' moves our position down one row, if the position exists on the board;\n'L' moves our position left one column, if the position exists on the board;\n'R' moves our position right one column, if the position exists on the board;\n'!' adds the character board[r][c] at our current position (r, c) to the answer.\n\n(Here, the only positions that exist on the board are positions with letters on them.)\n\nReturn a sequence of moves that makes our answer equal to target in the minimum number of moves.  You may return any path that does so.\n\n \n\nExample 1:\n\nInput: target = \"leet\"\nOutput: \"DDR!UURRR!!DDD!\"\n\n\nExample 2:\n\nInput: target = \"code\"\nOutput: \"RR!DDRR!UUL!R!\"\n\n\n \n\nConstraints:\n\n1 <= target.length <= 100\ntarget consists only of English lowercase letters."},{"index":"1139","url":"https://leetcode.com/problems/largest-1-bordered-square","title":"Largest 1-Bordered Square","difficulty":"Medium","description":"Given a 2D grid of 0s and 1s, return the number of elements in the largest square subgrid that has all 1s on its border, or 0 if such a subgrid doesn't exist in the grid.\n\n \n\nExample 1:\n\nInput: grid = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: 9\n\n\nExample 2:\n\nInput: grid = [[1,1,0,0]]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= grid.length <= 100\n1 <= grid[0].length <= 100\ngrid[i][j] is 0 or 1"},{"index":"1140","url":"https://leetcode.com/problems/stone-game-ii","title":"Stone Game II","difficulty":"Medium","description":"Alice and Bob continue their games with piles of stones.  There are a number of piles arranged in a row, and each pile has a positive integer number of stones piles[i].  The objective of the game is to end with the most stones. \n\nAlice and Bob take turns, with Alice starting first.  Initially, M = 1.\n\nOn each player's turn, that player can take all the stones in the first X remaining piles, where 1 <= X <= 2M.  Then, we set M = max(M, X).\n\nThe game continues until all the stones have been taken.\n\nAssuming Alice and Bob play optimally, return the maximum number of stones Alice can get.\n\n \n\nExample 1:\n\nInput: piles = [2,7,9,4,4]\nOutput: 10\nExplanation:  If Alice takes one pile at the beginning, Bob takes two piles, then Alice takes 2 piles again. Alice can get 2 + 4 + 4 = 10 piles in total. If Alice takes two piles at the beginning, then Bob can take all three piles left. In this case, Alice get 2 + 7 = 9 piles in total. So we return 10 since it's larger. \n\n\nExample 2:\n\nInput: piles = [1,2,3,4,5,100]\nOutput: 104\n\n\n \n\nConstraints:\n\n1 <= piles.length <= 100\n1 <= piles[i] <= 104"},{"index":"1143","url":"https://leetcode.com/problems/longest-common-subsequence","title":"Longest Common Subsequence","difficulty":"Medium","description":"Given two strings text1 and text2, return the length of their longest common subsequence.\n\nA subsequence of a string is a new string generated from the original string with some characters(can be none) deleted without changing the relative order of the remaining characters. (eg, \"ace\" is a subsequence of \"abcde\" while \"aec\" is not). A common subsequence of two strings is a subsequence that is common to both strings.\n\n \n\nIf there is no common subsequence, return 0.\n\n \n\nExample 1:\n\nInput: text1 = \"abcde\", text2 = \"ace\" \nOutput: 3  \nExplanation: The longest common subsequence is \"ace\" and its length is 3.\n\n\nExample 2:\n\nInput: text1 = \"abc\", text2 = \"abc\"\nOutput: 3\nExplanation: The longest common subsequence is \"abc\" and its length is 3.\n\n\nExample 3:\n\nInput: text1 = \"abc\", text2 = \"def\"\nOutput: 0\nExplanation: There is no such common subsequence, so the result is 0.\n\n\n \n\nConstraints:\n\n1 <= text1.length <= 1000\n1 <= text2.length <= 1000\nThe input strings consist of lowercase English characters only."},{"index":"1144","url":"https://leetcode.com/problems/decrease-elements-to-make-array-zigzag","title":"Decrease Elements To Make Array Zigzag","difficulty":"Medium","description":"Given an array nums of integers, a move consists of choosing any element and decreasing it by 1.\n\nAn array A is a zigzag array if either:\n\nEvery even-indexed element is greater than adjacent elements, ie. A[0] > A[1] < A[2] > A[3] < A[4] > ...\nOR, every odd-indexed element is greater than adjacent elements, ie. A[0] < A[1] > A[2] < A[3] > A[4] < ...\n\nReturn the minimum number of moves to transform the given array nums into a zigzag array.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3]\nOutput: 2\nExplanation: We can decrease 2 to 0 or 3 to 1.\n\n\nExample 2:\n\nInput: nums = [9,6,1,6,2]\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i] <= 1000"},{"index":"1145","url":"https://leetcode.com/problems/binary-tree-coloring-game","title":"Binary Tree Coloring Game","difficulty":"Medium","description":"Two players play a turn based game on a binary tree.  We are given the root of this binary tree, and the number of nodes n in the tree.  n is odd, and each node has a distinct value from 1 to n.\n\nInitially, the first player names a value x with 1 <= x <= n, and the second player names a value y with 1 <= y <= n and y != x.  The first player colors the node with value x red, and the second player colors the node with value y blue.\n\nThen, the players take turns starting with the first player.  In each turn, that player chooses a node of their color (red if player 1, blue if player 2) and colors an uncolored neighbor of the chosen node (either the left child, right child, or parent of the chosen node.)\n\nIf (and only if) a player cannot choose such a node in this way, they must pass their turn.  If both players pass their turn, the game ends, and the winner is the player that colored more nodes.\n\nYou are the second player.  If it is possible to choose such a y to ensure you win the game, return true.  If it is not possible, return false.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,5,6,7,8,9,10,11], n = 11, x = 3\nOutput: true\nExplanation: The second player can choose the node with value 2.\n\n\n \n\nConstraints:\n\nroot is the root of a binary tree with n nodes and distinct node values from 1 to n.\nn is odd.\n1 <= x <= n <= 100"},{"index":"1146","url":"https://leetcode.com/problems/snapshot-array","title":"Snapshot Array","difficulty":"Medium","description":"Implement a SnapshotArray that supports the following interface:\n\nSnapshotArray(int length) initializes an array-like data structure with the given length.  Initially, each element equals 0.\nvoid set(index, val) sets the element at the given index to be equal to val.\nint snap() takes a snapshot of the array and returns the snap_id: the total number of times we called snap() minus 1.\nint get(index, snap_id) returns the value at the given index, at the time we took the snapshot with the given snap_id\n\n \n\nExample 1:\n\nInput: [\"SnapshotArray\",\"set\",\"snap\",\"set\",\"get\"]\n[[3],[0,5],[],[0,6],[0,0]]\nOutput: [null,null,0,null,5]\nExplanation: \nSnapshotArray snapshotArr = new SnapshotArray(3); // set the length to be 3\nsnapshotArr.set(0,5);  // Set array[0] = 5\nsnapshotArr.snap();  // Take a snapshot, return snap_id = 0\nsnapshotArr.set(0,6);\nsnapshotArr.get(0,0);  // Get the value of array[0] with snap_id = 0, return 5\n\n \n\nConstraints:\n\n1 <= length <= 50000\nAt most 50000 calls will be made to set, snap, and get.\n0 <= index < length\n0 <= snap_id < (the total number of times we call snap())\n0 <= val <= 10^9"},{"index":"1147","url":"https://leetcode.com/problems/longest-chunked-palindrome-decomposition","title":"Longest Chunked Palindrome Decomposition","difficulty":"Hard","description":"Return the largest possible k such that there exists a_1, a_2, ..., a_k such that:\n\nEach a_i is a non-empty string;\nTheir concatenation a_1 + a_2 + ... + a_k is equal to text;\nFor all 1 <= i <= k,  a_i = a_{k+1 - i}.\n\n \n\nExample 1:\n\nInput: text = \"ghiabcdefhelloadamhelloabcdefghi\"\nOutput: 7\nExplanation: We can split the string on \"(ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)\".\n\n\nExample 2:\n\nInput: text = \"merchant\"\nOutput: 1\nExplanation: We can split the string on \"(merchant)\".\n\n\nExample 3:\n\nInput: text = \"antaprezatepzapreanta\"\nOutput: 11\nExplanation: We can split the string on \"(a)(nt)(a)(pre)(za)(tpe)(za)(pre)(a)(nt)(a)\".\n\n\nExample 4:\n\nInput: text = \"aaa\"\nOutput: 3\nExplanation: We can split the string on \"(a)(a)(a)\".\n\n\n \n\nConstraints:\n\ntext consists only of lowercase English characters.\n1 <= text.length <= 1000"},{"index":"1154","url":"https://leetcode.com/problems/day-of-the-year","title":"Day of the Year","difficulty":"Easy","description":"Given a string date representing a Gregorian calendar date formatted as YYYY-MM-DD, return the day number of the year.\n\n \n\nExample 1:\n\nInput: date = \"2019-01-09\"\nOutput: 9\nExplanation: Given date is the 9th day of the year in 2019.\n\n\nExample 2:\n\nInput: date = \"2019-02-10\"\nOutput: 41\n\n\nExample 3:\n\nInput: date = \"2003-03-01\"\nOutput: 60\n\n\nExample 4:\n\nInput: date = \"2004-03-01\"\nOutput: 61\n\n\n \n\nConstraints:\n\ndate.length == 10\ndate[4] == date[7] == '-', and all other date[i]'s are digits\ndate represents a calendar date between Jan 1st, 1900 and Dec 31, 2019."},{"index":"1155","url":"https://leetcode.com/problems/number-of-dice-rolls-with-target-sum","title":"Number of Dice Rolls With Target Sum","difficulty":"Medium","description":"You have d dice, and each die has f faces numbered 1, 2, ..., f.\n\nReturn the number of possible ways (out of fd total ways) modulo 10^9 + 7 to roll the dice so the sum of the face up numbers equals target.\n\n \n\nExample 1:\n\nInput: d = 1, f = 6, target = 3\nOutput: 1\nExplanation: \nYou throw one die with 6 faces.  There is only one way to get a sum of 3.\n\n\nExample 2:\n\nInput: d = 2, f = 6, target = 7\nOutput: 6\nExplanation: \nYou throw two dice, each with 6 faces.  There are 6 ways to get a sum of 7:\n1+6, 2+5, 3+4, 4+3, 5+2, 6+1.\n\n\nExample 3:\n\nInput: d = 2, f = 5, target = 10\nOutput: 1\nExplanation: \nYou throw two dice, each with 5 faces.  There is only one way to get a sum of 10: 5+5.\n\n\nExample 4:\n\nInput: d = 1, f = 2, target = 3\nOutput: 0\nExplanation: \nYou throw one die with 2 faces.  There is no way to get a sum of 3.\n\n\nExample 5:\n\nInput: d = 30, f = 30, target = 500\nOutput: 222616187\nExplanation: \nThe answer must be returned modulo 10^9 + 7.\n\n\n \n\nConstraints:\n\n1 <= d, f <= 30\n1 <= target <= 1000"},{"index":"1156","url":"https://leetcode.com/problems/swap-for-longest-repeated-character-substring","title":"Swap For Longest Repeated Character Substring","difficulty":"Medium","description":"Given a string text, we are allowed to swap two of the characters in the string. Find the length of the longest substring with repeated characters.\n\n \n\nExample 1:\n\nInput: text = \"ababa\"\nOutput: 3\nExplanation: We can swap the first 'b' with the last 'a', or the last 'b' with the first 'a'. Then, the longest repeated character substring is \"aaa\", which its length is 3.\n\n\nExample 2:\n\nInput: text = \"aaabaaa\"\nOutput: 6\nExplanation: Swap 'b' with the last 'a' (or the first 'a'), and we get longest repeated character substring \"aaaaaa\", which its length is 6.\n\n\nExample 3:\n\nInput: text = \"aaabbaaa\"\nOutput: 4\n\n\nExample 4:\n\nInput: text = \"aaaaa\"\nOutput: 5\nExplanation: No need to swap, longest repeated character substring is \"aaaaa\", length is 5.\n\n\nExample 5:\n\nInput: text = \"abcdef\"\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= text.length <= 20000\ntext consist of lowercase English characters only."},{"index":"1157","url":"https://leetcode.com/problems/online-majority-element-in-subarray","title":"Online Majority Element In Subarray","difficulty":"Hard","description":"Implementing the class MajorityChecker, which has the following API:\n\nMajorityChecker(int[] arr) constructs an instance of MajorityChecker with the given array arr;\nint query(int left, int right, int threshold) has arguments such that:\n0 <= left <= right < arr.length representing a subarray of arr;\n2 * threshold > right - left + 1, ie. the threshold is always a strict majority of the length of the subarray\n\nEach query(...) returns the element in arr[left], arr[left+1], ..., arr[right] that occurs at least threshold times, or -1 if no such element exists.\n\n \n\nExample:\n\nMajorityChecker majorityChecker = new MajorityChecker([1,1,2,2,1,1]);\nmajorityChecker.query(0,5,4); // returns 1\nmajorityChecker.query(0,3,3); // returns -1\nmajorityChecker.query(2,3,2); // returns 2\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 20000\n1 <= arr[i] <= 20000\nFor each query, 0 <= left <= right < len(arr)\nFor each query, 2 * threshold > right - left + 1\nThe number of queries is at most 10000"},{"index":"1160","url":"https://leetcode.com/problems/find-words-that-can-be-formed-by-characters","title":"Find Words That Can Be Formed by Characters","difficulty":"Easy","description":"You are given an array of strings words and a string chars.\n\nA string is good if it can be formed by characters from chars (each character can only be used once).\n\nReturn the sum of lengths of all good strings in words.\n\n \n\nExample 1:\n\nInput: words = [\"cat\",\"bt\",\"hat\",\"tree\"], chars = \"atach\"\nOutput: 6\nExplanation: \nThe strings that can be formed are \"cat\" and \"hat\" so the answer is 3 + 3 = 6.\n\n\nExample 2:\n\nInput: words = [\"hello\",\"world\",\"leetcode\"], chars = \"welldonehoneyr\"\nOutput: 10\nExplanation: \nThe strings that can be formed are \"hello\" and \"world\" so the answer is 5 + 5 = 10.\n\n\n \n\nNote:\n\n1 <= words.length <= 1000\n1 <= words[i].length, chars.length <= 100\nAll strings contain lowercase English letters only."},{"index":"1161","url":"https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree","title":"Maximum Level Sum of a Binary Tree","difficulty":"Medium","description":"Given the root of a binary tree, the level of its root is 1, the level of its children is 2, and so on.\n\nReturn the smallest level X such that the sum of all the values of nodes at level X is maximal.\n\n \n\nExample 1:\n\nInput: root = [1,7,0,7,-8,null,null]\nOutput: 2\nExplanation: \nLevel 1 sum = 1.\nLevel 2 sum = 7 + 0 = 7.\nLevel 3 sum = 7 + -8 = -1.\nSo we return the level with the maximum sum which is level 2.\n\n\nExample 2:\n\nInput: root = [989,null,10250,98693,-89388,null,null,null,-32127]\nOutput: 2\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 104].\n-105 <= Node.val <= 105"},{"index":"1162","url":"https://leetcode.com/problems/as-far-from-land-as-possible","title":"As Far from Land as Possible","difficulty":"Medium","description":"Given an N x N grid containing only values 0 and 1, where 0 represents water and 1 represents land, find a water cell such that its distance to the nearest land cell is maximized and return the distance.\n\nThe distance used in this problem is the Manhattan distance: the distance between two cells (x0, y0) and (x1, y1) is |x0 - x1| + |y0 - y1|.\n\nIf no land or water exists in the grid, return -1.\n\n \n\nExample 1:\n\nInput: [[1,0,1],[0,0,0],[1,0,1]]\nOutput: 2\nExplanation: \nThe cell (1, 1) is as far as possible from all the land with distance 2.\n\n\nExample 2:\n\nInput: [[1,0,0],[0,0,0],[0,0,0]]\nOutput: 4\nExplanation: \nThe cell (2, 2) is as far as possible from all the land with distance 4.\n\n\n \n\nNote:\n\n1 <= grid.length == grid[0].length <= 100\ngrid[i][j] is 0 or 1"},{"index":"1163","url":"https://leetcode.com/problems/last-substring-in-lexicographical-order","title":"Last Substring in Lexicographical Order","difficulty":"Hard","description":"Given a string s, return the last substring of s in lexicographical order.\n\n \n\nExample 1:\n\nInput: \"abab\"\nOutput: \"bab\"\nExplanation: The substrings are [\"a\", \"ab\", \"aba\", \"abab\", \"b\", \"ba\", \"bab\"]. The lexicographically maximum substring is \"bab\".\n\n\nExample 2:\n\nInput: \"leetcode\"\nOutput: \"tcode\"\n\n\n \n\nNote:\n\n1 <= s.length <= 4 * 10^5\ns contains only lowercase English letters."},{"index":"1169","url":"https://leetcode.com/problems/invalid-transactions","title":"Invalid Transactions","difficulty":"Medium","description":"A transaction is possibly invalid if:\n\nthe amount exceeds $1000, or;\nif it occurs within (and including) 60 minutes of another transaction with the same name in a different city.\n\nEach transaction string transactions[i] consists of comma separated values representing the name, time (in minutes), amount, and city of the transaction.\n\nGiven a list of transactions, return a list of transactions that are possibly invalid.  You may return the answer in any order.\n\n \n\nExample 1:\n\nInput: transactions = [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\nOutput: [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\nExplanation: The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.\n\nExample 2:\n\nInput: transactions = [\"alice,20,800,mtv\",\"alice,50,1200,mtv\"]\nOutput: [\"alice,50,1200,mtv\"]\n\n\nExample 3:\n\nInput: transactions = [\"alice,20,800,mtv\",\"bob,50,1200,mtv\"]\nOutput: [\"bob,50,1200,mtv\"]\n\n\n \n\nConstraints:\n\ntransactions.length <= 1000\nEach transactions[i] takes the form \"{name},{time},{amount},{city}\"\nEach {name} and {city} consist of lowercase English letters, and have lengths between 1 and 10.\nEach {time} consist of digits, and represent an integer between 0 and 1000.\nEach {amount} consist of digits, and represent an integer between 0 and 2000."},{"index":"1170","url":"https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character","title":"Compare Strings by Frequency of the Smallest Character","difficulty":"Easy","description":"Let's define a function f(s) over a non-empty string s, which calculates the frequency of the smallest character in s. For example, if s = \"dcce\" then f(s) = 2 because the smallest character is \"c\" and its frequency is 2.\n\nNow, given string arrays queries and words, return an integer array answer, where each answer[i] is the number of words such that f(queries[i]) < f(W), where W is a word in words.\n\n \n\nExample 1:\n\nInput: queries = [\"cbd\"], words = [\"zaaaz\"]\nOutput: [1]\nExplanation: On the first query we have f(\"cbd\") = 1, f(\"zaaaz\") = 3 so f(\"cbd\") < f(\"zaaaz\").\n\n\nExample 2:\n\nInput: queries = [\"bbb\",\"cc\"], words = [\"a\",\"aa\",\"aaa\",\"aaaa\"]\nOutput: [1,2]\nExplanation: On the first query only f(\"bbb\") < f(\"aaaa\"). On the second query both f(\"aaa\") and f(\"aaaa\") are both > f(\"cc\").\n\n\n \n\nConstraints:\n\n1 <= queries.length <= 2000\n1 <= words.length <= 2000\n1 <= queries[i].length, words[i].length <= 10\nqueries[i][j], words[i][j] are English lowercase letters."},{"index":"1171","url":"https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list","title":"Remove Zero Sum Consecutive Nodes from Linked List","difficulty":"Medium","description":"Given the head of a linked list, we repeatedly delete consecutive sequences of nodes that sum to 0 until there are no such sequences.\n\nAfter doing so, return the head of the final linked list.  You may return any such answer.\n\n \n\n(Note that in the examples below, all sequences are serializations of ListNode objects.)\n\nExample 1:\n\nInput: head = [1,2,-3,3,1]\nOutput: [3,1]\nNote: The answer [1,2,1] would also be accepted.\n\n\nExample 2:\n\nInput: head = [1,2,3,-3,4]\nOutput: [1,2,4]\n\n\nExample 3:\n\nInput: head = [1,2,3,-3,-2]\nOutput: [1]\n\n\n \n\nConstraints:\n\nThe given linked list will contain between 1 and 1000 nodes.\nEach node in the linked list has -1000 <= node.val <= 1000."},{"index":"1172","url":"https://leetcode.com/problems/dinner-plate-stacks","title":"Dinner Plate Stacks","difficulty":"Hard","description":"You have an infinite number of stacks arranged in a row and numbered (left to right) from 0, each of the stacks has the same maximum capacity.\n\nImplement the DinnerPlates class:\n\nDinnerPlates(int capacity) Initializes the object with the maximum capacity of the stacks.\nvoid push(int val) Pushes the given positive integer val into the leftmost stack with size less than capacity.\nint pop() Returns the value at the top of the rightmost non-empty stack and removes it from that stack, and returns -1 if all stacks are empty.\nint popAtStack(int index) Returns the value at the top of the stack with the given index and removes it from that stack, and returns -1 if the stack with that given index is empty.\n\nExample:\n\nInput: \n[\"DinnerPlates\",\"push\",\"push\",\"push\",\"push\",\"push\",\"popAtStack\",\"push\",\"push\",\"popAtStack\",\"popAtStack\",\"pop\",\"pop\",\"pop\",\"pop\",\"pop\"]\n[[2],[1],[2],[3],[4],[5],[0],[20],[21],[0],[2],[],[],[],[],[]]\nOutput: \n[null,null,null,null,null,null,2,null,null,20,21,5,4,3,1,-1]\n\nExplanation: \nDinnerPlates D = DinnerPlates(2);  // Initialize with capacity = 2\nD.push(1);\nD.push(2);\nD.push(3);\nD.push(4);\nD.push(5);         // The stacks are now:  2  4\n                                           1  3  5\n                                           ﹈ ﹈ ﹈\nD.popAtStack(0);   // Returns 2.  The stacks are now:     4\n                                                       1  3  5\n                                                       ﹈ ﹈ ﹈\nD.push(20);        // The stacks are now: 20  4\n                                           1  3  5\n                                           ﹈ ﹈ ﹈\nD.push(21);        // The stacks are now: 20  4 21\n                                           1  3  5\n                                           ﹈ ﹈ ﹈\nD.popAtStack(0);   // Returns 20.  The stacks are now:     4 21\n                                                        1  3  5\n                                                        ﹈ ﹈ ﹈\nD.popAtStack(2);   // Returns 21.  The stacks are now:     4\n                                                        1  3  5\n                                                        ﹈ ﹈ ﹈ \nD.pop()            // Returns 5.  The stacks are now:      4\n                                                        1  3 \n                                                        ﹈ ﹈  \nD.pop()            // Returns 4.  The stacks are now:   1  3 \n                                                        ﹈ ﹈   \nD.pop()            // Returns 3.  The stacks are now:   1 \n                                                        ﹈   \nD.pop()            // Returns 1.  There are no stacks.\nD.pop()            // Returns -1.  There are still no stacks.\n\n\n \n\nConstraints:\n\n1 <= capacity <= 20000\n1 <= val <= 20000\n0 <= index <= 100000\nAt most 200000 calls will be made to push, pop, and popAtStack."},{"index":"1175","url":"https://leetcode.com/problems/prime-arrangements","title":"Prime Arrangements","difficulty":"Easy","description":"Return the number of permutations of 1 to n so that prime numbers are at prime indices (1-indexed.)\n\n(Recall that an integer is prime if and only if it is greater than 1, and cannot be written as a product of two positive integers both smaller than it.)\n\nSince the answer may be large, return the answer modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: n = 5\nOutput: 12\nExplanation: For example [1,2,5,4,3] is a valid permutation, but [5,2,3,4,1] is not because the prime number 5 is at index 1.\n\n\nExample 2:\n\nInput: n = 100\nOutput: 682289015\n\n\n \n\nConstraints:\n\n1 <= n <= 100"},{"index":"1177","url":"https://leetcode.com/problems/can-make-palindrome-from-substring","title":"Can Make Palindrome from Substring","difficulty":"Medium","description":"Given a string s, we make queries on substrings of s.\n\nFor each query queries[i] = [left, right, k], we may rearrange the substring s[left], ..., s[right], and then choose up to k of them to replace with any lowercase English letter. \n\nIf the substring is possible to be a palindrome string after the operations above, the result of the query is true. Otherwise, the result is false.\n\nReturn an array answer[], where answer[i] is the result of the i-th query queries[i].\n\nNote that: Each letter is counted individually for replacement so if for example s[left..right] = \"aaa\", and k = 2, we can only replace two of the letters.  (Also, note that the initial string s is never modified by any query.)\n\n \n\nExample :\n\nInput: s = \"abcda\", queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]]\nOutput: [true,false,false,true,true]\nExplanation:\nqueries[0] : substring = \"d\", is palidrome.\nqueries[1] : substring = \"bc\", is not palidrome.\nqueries[2] : substring = \"abcd\", is not palidrome after replacing only 1 character.\nqueries[3] : substring = \"abcd\", could be changed to \"abba\" which is palidrome. Also this can be changed to \"baab\" first rearrange it \"bacd\" then replace \"cd\" with \"ab\".\nqueries[4] : substring = \"abcda\", could be changed to \"abcba\" which is palidrome.\n\n\n \n\nConstraints:\n\n1 <= s.length, queries.length <= 10^5\n0 <= queries[i][0] <= queries[i][1] < s.length\n0 <= queries[i][2] <= s.length\ns only contains lowercase English letters."},{"index":"1178","url":"https://leetcode.com/problems/number-of-valid-words-for-each-puzzle","title":"Number of Valid Words for Each Puzzle","difficulty":"Hard","description":"With respect to a given puzzle string, a word is valid if both the following conditions are satisfied:\nword contains the first letter of puzzle.\nFor each letter in word, that letter is in puzzle.\nFor example, if the puzzle is \"abcdefg\", then valid words are \"faced\", \"cabbage\", and \"baggage\"; while invalid words are \"beefed\" (doesn't include \"a\") and \"based\" (includes \"s\" which isn't in the puzzle).\nReturn an array answer, where answer[i] is the number of words in the given word list words that are valid with respect to the puzzle puzzles[i].\n\n \n\nExample :\n\nInput: \nwords = [\"aaaa\",\"asas\",\"able\",\"ability\",\"actt\",\"actor\",\"access\"], \npuzzles = [\"aboveyz\",\"abrodyz\",\"abslute\",\"absoryz\",\"actresz\",\"gaswxyz\"]\nOutput: [1,1,3,2,4,0]\nExplanation:\n1 valid word for \"aboveyz\" : \"aaaa\" \n1 valid word for \"abrodyz\" : \"aaaa\"\n3 valid words for \"abslute\" : \"aaaa\", \"asas\", \"able\"\n2 valid words for \"absoryz\" : \"aaaa\", \"asas\"\n4 valid words for \"actresz\" : \"aaaa\", \"asas\", \"actt\", \"access\"\nThere're no valid words for \"gaswxyz\" cause none of the words in the list contains letter 'g'.\n\n\n \n\nConstraints:\n\n1 <= words.length <= 10^5\n4 <= words[i].length <= 50\n1 <= puzzles.length <= 10^4\npuzzles[i].length == 7\nwords[i][j], puzzles[i][j] are English lowercase letters.\nEach puzzles[i] doesn't contain repeated characters."},{"index":"1179","url":"https://leetcode.com/problems/reformat-department-table","title":"Reformat Department Table","difficulty":"Easy","description":"SQL Schema\n\nTable: Department\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| revenue       | int     |\n| month         | varchar |\n+---------------+---------+\n(id, month) is the primary key of this table.\nThe table has information about the revenue of each department per month.\nThe month has values in [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"].\n\n\n \n\nWrite an SQL query to reformat the table such that there is a department id column and a revenue column for each month.\n\nThe query result format is in the following example:\n\nDepartment table:\n+------+---------+-------+\n| id   | revenue | month |\n+------+---------+-------+\n| 1    | 8000    | Jan   |\n| 2    | 9000    | Jan   |\n| 3    | 10000   | Feb   |\n| 1    | 7000    | Feb   |\n| 1    | 6000    | Mar   |\n+------+---------+-------+\n\nResult table:\n+------+-------------+-------------+-------------+-----+-------------+\n| id   | Jan_Revenue | Feb_Revenue | Mar_Revenue | ... | Dec_Revenue |\n+------+-------------+-------------+-------------+-----+-------------+\n| 1    | 8000        | 7000        | 6000        | ... | null        |\n| 2    | 9000        | null        | null        | ... | null        |\n| 3    | null        | 10000       | null        | ... | null        |\n+------+-------------+-------------+-------------+-----+-------------+\n\nNote that the result table has 13 columns (1 for the department id + 12 for the months).\n"},{"index":"1184","url":"https://leetcode.com/problems/distance-between-bus-stops","title":"Distance Between Bus Stops","difficulty":"Easy","description":"A bus has n stops numbered from 0 to n - 1 that form a circle. We know the distance between all pairs of neighboring stops where distance[i] is the distance between the stops number i and (i + 1) % n.\n\nThe bus goes along both directions i.e. clockwise and counterclockwise.\n\nReturn the shortest distance between the given start and destination stops.\n\n \n\nExample 1:\n\nInput: distance = [1,2,3,4], start = 0, destination = 1\nOutput: 1\nExplanation: Distance between 0 and 1 is 1 or 9, minimum is 1.\n\n \n\nExample 2:\n\nInput: distance = [1,2,3,4], start = 0, destination = 2\nOutput: 3\nExplanation: Distance between 0 and 2 is 3 or 7, minimum is 3.\n\n\n \n\nExample 3:\n\nInput: distance = [1,2,3,4], start = 0, destination = 3\nOutput: 4\nExplanation: Distance between 0 and 3 is 6 or 4, minimum is 4.\n\n\n \n\nConstraints:\n\n1 <= n <= 10^4\ndistance.length == n\n0 <= start, destination < n\n0 <= distance[i] <= 10^4"},{"index":"1185","url":"https://leetcode.com/problems/day-of-the-week","title":"Day of the Week","difficulty":"Easy","description":"Given a date, return the corresponding day of the week for that date.\n\nThe input is given as three integers representing the day, month and year respectively.\n\nReturn the answer as one of the following values {\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"}.\n\n \n\nExample 1:\n\nInput: day = 31, month = 8, year = 2019\nOutput: \"Saturday\"\n\n\nExample 2:\n\nInput: day = 18, month = 7, year = 1999\nOutput: \"Sunday\"\n\n\nExample 3:\n\nInput: day = 15, month = 8, year = 1993\nOutput: \"Sunday\"\n\n\n \n\nConstraints:\n\nThe given dates are valid dates between the years 1971 and 2100."},{"index":"1186","url":"https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion","title":"Maximum Subarray Sum with One Deletion","difficulty":"Medium","description":"Given an array of integers, return the maximum sum for a non-empty subarray (contiguous elements) with at most one element deletion. In other words, you want to choose a subarray and optionally delete one element from it so that there is still at least one element left and the sum of the remaining elements is maximum possible.\n\nNote that the subarray needs to be non-empty after deleting one element.\n\n \n\nExample 1:\n\nInput: arr = [1,-2,0,3]\nOutput: 4\nExplanation: Because we can choose [1, -2, 0, 3] and drop -2, thus the subarray [1, 0, 3] becomes the maximum value.\n\nExample 2:\n\nInput: arr = [1,-2,-2,3]\nOutput: 3\nExplanation: We just choose [3] and it's the maximum sum.\n\n\nExample 3:\n\nInput: arr = [-1,-1,-1,-1]\nOutput: -1\nExplanation: The final subarray needs to be non-empty. You can't choose [-1] and delete -1 from it, then get an empty subarray to make the sum equals to 0.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 105\n-104 <= arr[i] <= 104"},{"index":"1187","url":"https://leetcode.com/problems/make-array-strictly-increasing","title":"Make Array Strictly Increasing","difficulty":"Hard","description":"Given two integer arrays arr1 and arr2, return the minimum number of operations (possibly zero) needed to make arr1 strictly increasing.\n\nIn one operation, you can choose two indices 0 <= i < arr1.length and 0 <= j < arr2.length and do the assignment arr1[i] = arr2[j].\n\nIf there is no way to make arr1 strictly increasing, return -1.\n\n \n\nExample 1:\n\nInput: arr1 = [1,5,3,6,7], arr2 = [1,3,2,4]\nOutput: 1\nExplanation: Replace 5 with 2, then arr1 = [1, 2, 3, 6, 7].\n\n\nExample 2:\n\nInput: arr1 = [1,5,3,6,7], arr2 = [4,3,1]\nOutput: 2\nExplanation: Replace 5 with 3 and then replace 3 with 4. arr1 = [1, 3, 4, 6, 7].\n\n\nExample 3:\n\nInput: arr1 = [1,5,3,6,7], arr2 = [1,6,3,3]\nOutput: -1\nExplanation: You can't make arr1 strictly increasing.\n\n \n\nConstraints:\n\n1 <= arr1.length, arr2.length <= 2000\n0 <= arr1[i], arr2[i] <= 10^9\n\n "},{"index":"1189","url":"https://leetcode.com/problems/maximum-number-of-balloons","title":"Maximum Number of Balloons","difficulty":"Easy","description":"Given a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible.\n\nYou can use each character in text at most once. Return the maximum number of instances that can be formed.\n\n \n\nExample 1:\n\nInput: text = \"nlaebolko\"\nOutput: 1\n\n\nExample 2:\n\nInput: text = \"loonbalxballpoon\"\nOutput: 2\n\n\nExample 3:\n\nInput: text = \"leetcode\"\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= text.length <= 10^4\ntext consists of lower case English letters only."},{"index":"1190","url":"https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses","title":"Reverse Substrings Between Each Pair of Parentheses","difficulty":"Medium","description":"You are given a string s that consists of lower case English letters and brackets. \n\nReverse the strings in each pair of matching parentheses, starting from the innermost one.\n\nYour result should not contain any brackets.\n\n \n\nExample 1:\n\nInput: s = \"(abcd)\"\nOutput: \"dcba\"\n\n\nExample 2:\n\nInput: s = \"(u(love)i)\"\nOutput: \"iloveu\"\nExplanation: The substring \"love\" is reversed first, then the whole string is reversed.\n\n\nExample 3:\n\nInput: s = \"(ed(et(oc))el)\"\nOutput: \"leetcode\"\nExplanation: First, we reverse the substring \"oc\", then \"etco\", and finally, the whole string.\n\n\nExample 4:\n\nInput: s = \"a(bcdefghijkl(mno)p)q\"\nOutput: \"apmnolkjihgfedcbq\"\n\n\n \n\nConstraints:\n\n0 <= s.length <= 2000\ns only contains lower case English characters and parentheses.\nIt's guaranteed that all parentheses are balanced."},{"index":"1191","url":"https://leetcode.com/problems/k-concatenation-maximum-sum","title":"K-Concatenation Maximum Sum","difficulty":"Medium","description":"Given an integer array arr and an integer k, modify the array by repeating it k times.\n\nFor example, if arr = [1, 2] and k = 3 then the modified array will be [1, 2, 1, 2, 1, 2].\n\nReturn the maximum sub-array sum in the modified array. Note that the length of the sub-array can be 0 and its sum in that case is 0.\n\nAs the answer can be very large, return the answer modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: arr = [1,2], k = 3\nOutput: 9\n\n\nExample 2:\n\nInput: arr = [1,-2,1], k = 5\nOutput: 2\n\n\nExample 3:\n\nInput: arr = [-1,-2], k = 7\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n1 <= k <= 10^5\n-10^4 <= arr[i] <= 10^4"},{"index":"1192","url":"https://leetcode.com/problems/critical-connections-in-a-network","title":"Critical Connections in a Network","difficulty":"Hard","description":"There are n servers numbered from 0 to n-1 connected by undirected server-to-server connections forming a network where connections[i] = [a, b] represents a connection between servers a and b. Any server can reach any other server directly or indirectly through the network.\n\nA critical connection is a connection that, if removed, will make some server unable to reach some other server.\n\nReturn all critical connections in the network in any order.\n\n \n\nExample 1:\n\nInput: n = 4, connections = [[0,1],[1,2],[2,0],[1,3]]\nOutput: [[1,3]]\nExplanation: [[3,1]] is also accepted.\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5\nn-1 <= connections.length <= 10^5\nconnections[i][0] != connections[i][1]\nThere are no repeated connections."},{"index":"1195","url":"https://leetcode.com/problems/fizz-buzz-multithreaded","title":"Fizz Buzz Multithreaded","difficulty":"Medium","description":"Write a program that outputs the string representation of numbers from 1 to n, however:\n\nIf the number is divisible by 3, output \"fizz\".\nIf the number is divisible by 5, output \"buzz\".\nIf the number is divisible by both 3 and 5, output \"fizzbuzz\".\n\nFor example, for n = 15, we output: 1, 2, fizz, 4, buzz, fizz, 7, 8, fizz, buzz, 11, fizz, 13, 14, fizzbuzz.\n\nSuppose you are given the following code:\n\nclass FizzBuzz {\n  public FizzBuzz(int n) { ... }               // constructor\n  public void fizz(printFizz) { ... }          // only output \"fizz\"\n  public void buzz(printBuzz) { ... }          // only output \"buzz\"\n  public void fizzbuzz(printFizzBuzz) { ... }  // only output \"fizzbuzz\"\n  public void number(printNumber) { ... }      // only output the numbers\n}\n\nImplement a multithreaded version of FizzBuzz with four threads. The same instance of FizzBuzz will be passed to four different threads:\n\nThread A will call fizz() to check for divisibility of 3 and outputs fizz.\nThread B will call buzz() to check for divisibility of 5 and outputs buzz.\nThread C will call fizzbuzz() to check for divisibility of 3 and 5 and outputs fizzbuzz.\nThread D will call number() which should only output the numbers."},{"index":"1200","url":"https://leetcode.com/problems/minimum-absolute-difference","title":"Minimum Absolute Difference","difficulty":"Easy","description":"Given an array of distinct integers arr, find all pairs of elements with the minimum absolute difference of any two elements. \n\nReturn a list of pairs in ascending order(with respect to pairs), each pair [a, b] follows\n\na, b are from arr\na < b\nb - a equals to the minimum absolute difference of any two elements in arr\n\n \n\nExample 1:\n\nInput: arr = [4,2,1,3]\nOutput: [[1,2],[2,3],[3,4]]\nExplanation: The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.\n\nExample 2:\n\nInput: arr = [1,3,6,10,15]\nOutput: [[1,3]]\n\n\nExample 3:\n\nInput: arr = [3,8,-10,23,19,-4,-14,27]\nOutput: [[-14,-10],[19,23],[23,27]]\n\n\n \n\nConstraints:\n\n2 <= arr.length <= 10^5\n-10^6 <= arr[i] <= 10^6"},{"index":"1201","url":"https://leetcode.com/problems/ugly-number-iii","title":"Ugly Number III","difficulty":"Medium","description":"Write a program to find the n-th ugly number.\n\nUgly numbers are positive integers which are divisible by a or b or c.\n\n \n\nExample 1:\n\nInput: n = 3, a = 2, b = 3, c = 5\nOutput: 4\nExplanation: The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3rd is 4.\n\nExample 2:\n\nInput: n = 4, a = 2, b = 3, c = 4\nOutput: 6\nExplanation: The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4th is 6.\n\n\nExample 3:\n\nInput: n = 5, a = 2, b = 11, c = 13\nOutput: 10\nExplanation: The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5th is 10.\n\n\nExample 4:\n\nInput: n = 1000000000, a = 2, b = 217983653, c = 336916467\nOutput: 1999999984\n\n\n \n\nConstraints:\n\n1 <= n, a, b, c <= 10^9\n1 <= a * b * c <= 10^18\nIt's guaranteed that the result will be in range [1, 2 * 10^9]"},{"index":"1202","url":"https://leetcode.com/problems/smallest-string-with-swaps","title":"Smallest String With Swaps","difficulty":"Medium","description":"You are given a string s, and an array of pairs of indices in the string pairs where pairs[i] = [a, b] indicates 2 indices(0-indexed) of the string.\n\nYou can swap the characters at any pair of indices in the given pairs any number of times.\n\nReturn the lexicographically smallest string that s can be changed to after using the swaps.\n\n \n\nExample 1:\n\nInput: s = \"dcab\", pairs = [[0,3],[1,2]]\nOutput: \"bacd\"\nExplaination: \nSwap s[0] and s[3], s = \"bcad\"\nSwap s[1] and s[2], s = \"bacd\"\n\n\nExample 2:\n\nInput: s = \"dcab\", pairs = [[0,3],[1,2],[0,2]]\nOutput: \"abcd\"\nExplaination: \nSwap s[0] and s[3], s = \"bcad\"\nSwap s[0] and s[2], s = \"acbd\"\nSwap s[1] and s[2], s = \"abcd\"\n\nExample 3:\n\nInput: s = \"cba\", pairs = [[0,1],[1,2]]\nOutput: \"abc\"\nExplaination: \nSwap s[0] and s[1], s = \"bca\"\nSwap s[1] and s[2], s = \"bac\"\nSwap s[0] and s[1], s = \"abc\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\n0 <= pairs.length <= 10^5\n0 <= pairs[i][0], pairs[i][1] < s.length\ns only contains lower case English letters."},{"index":"1203","url":"https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies","title":"Sort Items by Groups Respecting Dependencies","difficulty":"Hard","description":"There are n items each belonging to zero or one of m groups where group[i] is the group that the i-th item belongs to and it's equal to -1 if the i-th item belongs to no group. The items and the groups are zero indexed. A group can have no item belonging to it.\n\nReturn a sorted list of the items such that:\n\nThe items that belong to the same group are next to each other in the sorted list.\nThere are some relations between these items where beforeItems[i] is a list containing all the items that should come before the i-th item in the sorted array (to the left of the i-th item).\n\nReturn any solution if there is more than one solution and return an empty list if there is no solution.\n\n \n\nExample 1:\n\nInput: n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3,6],[],[],[]]\nOutput: [6,3,4,1,5,2,0,7]\n\n\nExample 2:\n\nInput: n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3],[],[4],[]]\nOutput: []\nExplanation: This is the same as example 1 except that 4 needs to be before 6 in the sorted list.\n\n\n \n\nConstraints:\n\n1 <= m <= n <= 3*10^4\ngroup.length == beforeItems.length == n\n-1 <= group[i] <= m-1\n0 <= beforeItems[i].length <= n-1\n0 <= beforeItems[i][j] <= n-1\ni != beforeItems[i][j]\nbeforeItems[i] does not contain duplicates elements."},{"index":"1206","url":"https://leetcode.com/problems/design-skiplist","title":"Design Skiplist","difficulty":"Hard","description":"Design a Skiplist without using any built-in libraries.\n\nA Skiplist is a data structure that takes O(log(n)) time to add, erase and search. Comparing with treap and red-black tree which has the same function and performance, the code length of Skiplist can be comparatively short and the idea behind Skiplists are just simple linked lists.\n\nFor example: we have a Skiplist containing [30,40,50,60,70,90] and we want to add 80 and 45 into it. The Skiplist works this way:\n\n\nArtyom Kalinin [CC BY-SA 3.0], via Wikimedia Commons\n\nYou can see there are many layers in the Skiplist. Each layer is a sorted linked list. With the help of the top layers, add , erase and search can be faster than O(n). It can be proven that the average time complexity for each operation is O(log(n)) and space complexity is O(n).\n\nTo be specific, your design should include these functions:\n\nbool search(int target) : Return whether the target exists in the Skiplist or not.\nvoid add(int num): Insert a value into the SkipList. \nbool erase(int num): Remove a value in the Skiplist. If num does not exist in the Skiplist, do nothing and return false. If there exists multiple num values, removing any one of them is fine.\n\nSee more about Skiplist : https://en.wikipedia.org/wiki/Skip_list\n\nNote that duplicates may exist in the Skiplist, your code needs to handle this situation.\n\n \n\nExample:\n\nSkiplist skiplist = new Skiplist();\n\nskiplist.add(1);\nskiplist.add(2);\nskiplist.add(3);\nskiplist.search(0);   // return false.\nskiplist.add(4);\nskiplist.search(1);   // return true.\nskiplist.erase(0);    // return false, 0 is not in skiplist.\nskiplist.erase(1);    // return true.\nskiplist.search(1);   // return false, 1 has already been erased.\n\n \n\nConstraints:\n\n0 <= num, target <= 20000\nAt most 50000 calls will be made to search, add, and erase."},{"index":"1207","url":"https://leetcode.com/problems/unique-number-of-occurrences","title":"Unique Number of Occurrences","difficulty":"Easy","description":"Given an array of integers arr, write a function that returns true if and only if the number of occurrences of each value in the array is unique.\n\n \n\nExample 1:\n\nInput: arr = [1,2,2,1,1,3]\nOutput: true\nExplanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.\n\nExample 2:\n\nInput: arr = [1,2]\nOutput: false\n\n\nExample 3:\n\nInput: arr = [-3,0,1,-3,1,1,1,-3,10,0]\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 1000\n-1000 <= arr[i] <= 1000"},{"index":"1208","url":"https://leetcode.com/problems/get-equal-substrings-within-budget","title":"Get Equal Substrings Within Budget","difficulty":"Medium","description":"You are given two strings s and t of the same length. You want to change s to t. Changing the i-th character of s to i-th character of t costs |s[i] - t[i]| that is, the absolute difference between the ASCII values of the characters.\n\nYou are also given an integer maxCost.\n\nReturn the maximum length of a substring of s that can be changed to be the same as the corresponding substring of twith a cost less than or equal to maxCost.\n\nIf there is no substring from s that can be changed to its corresponding substring from t, return 0.\n\n \n\nExample 1:\n\nInput: s = \"abcd\", t = \"bcdf\", maxCost = 3\nOutput: 3\nExplanation: \"abc\" of s can change to \"bcd\". That costs 3, so the maximum length is 3.\n\nExample 2:\n\nInput: s = \"abcd\", t = \"cdef\", maxCost = 3\nOutput: 1\nExplanation: Each character in s costs 2 to change to charactor in t, so the maximum length is 1.\n\n\nExample 3:\n\nInput: s = \"abcd\", t = \"acde\", maxCost = 0\nOutput: 1\nExplanation: You can't make any change, so the maximum length is 1.\n\n\n \n\nConstraints:\n\n1 <= s.length, t.length <= 10^5\n0 <= maxCost <= 10^6\ns and t only contain lower case English letters."},{"index":"1209","url":"https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii","title":"Remove All Adjacent Duplicates in String II","difficulty":"Medium","description":"Given a string s, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them causing the left and the right side of the deleted substring to concatenate together.\n\nWe repeatedly make k duplicate removals on s until we no longer can.\n\nReturn the final string after all such duplicate removals have been made.\n\nIt is guaranteed that the answer is unique.\n\n \n\nExample 1:\n\nInput: s = \"abcd\", k = 2\nOutput: \"abcd\"\nExplanation: There's nothing to delete.\n\nExample 2:\n\nInput: s = \"deeedbbcccbdaa\", k = 3\nOutput: \"aa\"\nExplanation: \nFirst delete \"eee\" and \"ccc\", get \"ddbbbdaa\"\nThen delete \"bbb\", get \"dddaa\"\nFinally delete \"ddd\", get \"aa\"\n\nExample 3:\n\nInput: s = \"pbbcggttciiippooaais\", k = 2\nOutput: \"ps\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\n2 <= k <= 10^4\ns only contains lower case English letters."},{"index":"1210","url":"https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations","title":"Minimum Moves to Reach Target with Rotations","difficulty":"Hard","description":"In an n*n grid, there is a snake that spans 2 cells and starts moving from the top left corner at (0, 0) and (0, 1). The grid has empty cells represented by zeros and blocked cells represented by ones. The snake wants to reach the lower right corner at (n-1, n-2) and (n-1, n-1).\n\nIn one move the snake can:\n\nMove one cell to the right if there are no blocked cells there. This move keeps the horizontal/vertical position of the snake as it is.\nMove down one cell if there are no blocked cells there. This move keeps the horizontal/vertical position of the snake as it is.\nRotate clockwise if it's in a horizontal position and the two cells under it are both empty. In that case the snake moves from (r, c) and (r, c+1) to (r, c) and (r+1, c).\n\nRotate counterclockwise if it's in a vertical position and the two cells to its right are both empty. In that case the snake moves from (r, c) and (r+1, c) to (r, c) and (r, c+1).\n\n\nReturn the minimum number of moves to reach the target.\n\nIf there is no way to reach the target, return -1.\n\n \n\nExample 1:\n\nInput: grid = [[0,0,0,0,0,1],\n               [1,1,0,0,1,0],\n               [0,0,0,0,1,1],\n               [0,0,1,0,1,0],\n               [0,1,1,0,0,0],\n               [0,1,1,0,0,0]]\nOutput: 11\nExplanation:\nOne possible solution is [right, right, rotate clockwise, right, down, down, down, down, rotate counterclockwise, right, down].\n\n\nExample 2:\n\nInput: grid = [[0,0,1,1,1,1],\n               [0,0,0,0,1,1],\n               [1,1,0,0,0,1],\n               [1,1,1,0,0,1],\n               [1,1,1,0,0,1],\n               [1,1,1,0,0,0]]\nOutput: 9\n\n\n \n\nConstraints:\n\n2 <= n <= 100\n0 <= grid[i][j] <= 1\nIt is guaranteed that the snake starts at empty cells."},{"index":"1217","url":"https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position","title":"Minimum Cost to Move Chips to The Same Position","difficulty":"Easy","description":"We have n chips, where the position of the ith chip is position[i].\n\nWe need to move all the chips to the same position. In one step, we can change the position of the ith chip from position[i] to:\n\nposition[i] + 2 or position[i] - 2 with cost = 0.\nposition[i] + 1 or position[i] - 1 with cost = 1.\n\nReturn the minimum cost needed to move all the chips to the same position.\n\n \n\nExample 1:\n\nInput: position = [1,2,3]\nOutput: 1\nExplanation: First step: Move the chip at position 3 to position 1 with cost = 0.\nSecond step: Move the chip at position 2 to position 1 with cost = 1.\nTotal cost is 1.\n\n\nExample 2:\n\nInput: position = [2,2,2,3,3]\nOutput: 2\nExplanation: We can move the two chips at position  3 to position 2. Each move has cost = 1. The total cost = 2.\n\n\nExample 3:\n\nInput: position = [1,1000000000]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= position.length <= 100\n1 <= position[i] <= 10^9"},{"index":"1218","url":"https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference","title":"Longest Arithmetic Subsequence of Given Difference","difficulty":"Medium","description":"Given an integer array arr and an integer difference, return the length of the longest subsequence in arr which is an arithmetic sequence such that the difference between adjacent elements in the subsequence equals difference.\n\n \n\nExample 1:\n\nInput: arr = [1,2,3,4], difference = 1\nOutput: 4\nExplanation: The longest arithmetic subsequence is [1,2,3,4].\n\nExample 2:\n\nInput: arr = [1,3,5,7], difference = 1\nOutput: 1\nExplanation: The longest arithmetic subsequence is any single element.\n\n\nExample 3:\n\nInput: arr = [1,5,7,8,5,3,4,2,1], difference = -2\nOutput: 4\nExplanation: The longest arithmetic subsequence is [7,5,3,1].\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n-10^4 <= arr[i], difference <= 10^4"},{"index":"1219","url":"https://leetcode.com/problems/path-with-maximum-gold","title":"Path with Maximum Gold","difficulty":"Medium","description":"In a gold mine grid of size m * n, each cell in this mine has an integer representing the amount of gold in that cell, 0 if it is empty.\n\nReturn the maximum amount of gold you can collect under the conditions:\n\nEvery time you are located in a cell you will collect all the gold in that cell.\nFrom your position you can walk one step to the left, right, up or down.\nYou can't visit the same cell more than once.\nNever visit a cell with 0 gold.\nYou can start and stop collecting gold from any position in the grid that has some gold.\n\n \n\nExample 1:\n\nInput: grid = [[0,6,0],[5,8,7],[0,9,0]]\nOutput: 24\nExplanation:\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\nPath to get the maximum gold, 9 -> 8 -> 7.\n\n\nExample 2:\n\nInput: grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\nOutput: 28\nExplanation:\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\nPath to get the maximum gold, 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7.\n\n\n \n\nConstraints:\n\n1 <= grid.length, grid[i].length <= 15\n0 <= grid[i][j] <= 100\nThere are at most 25 cells containing gold."},{"index":"1220","url":"https://leetcode.com/problems/count-vowels-permutation","title":"Count Vowels Permutation","difficulty":"Hard","description":"Given an integer n, your task is to count how many strings of length n can be formed under the following rules:\n\nEach character is a lower case vowel ('a', 'e', 'i', 'o', 'u')\nEach vowel 'a' may only be followed by an 'e'.\nEach vowel 'e' may only be followed by an 'a' or an 'i'.\nEach vowel 'i' may not be followed by another 'i'.\nEach vowel 'o' may only be followed by an 'i' or a 'u'.\nEach vowel 'u' may only be followed by an 'a'.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: 5\nExplanation: All possible strings are: \"a\", \"e\", \"i\" , \"o\" and \"u\".\n\n\nExample 2:\n\nInput: n = 2\nOutput: 10\nExplanation: All possible strings are: \"ae\", \"ea\", \"ei\", \"ia\", \"ie\", \"io\", \"iu\", \"oi\", \"ou\" and \"ua\".\n\n\nExample 3: \n\nInput: n = 5\nOutput: 68\n\n \n\nConstraints:\n\n1 <= n <= 2 * 10^4"},{"index":"1221","url":"https://leetcode.com/problems/split-a-string-in-balanced-strings","title":"Split a String in Balanced Strings","difficulty":"Easy","description":"Balanced strings are those who have equal quantity of 'L' and 'R' characters.\n\nGiven a balanced string s split it in the maximum amount of balanced strings.\n\nReturn the maximum amount of splitted balanced strings.\n\n \n\nExample 1:\n\nInput: s = \"RLRRLLRLRL\"\nOutput: 4\nExplanation: s can be split into \"RL\", \"RRLL\", \"RL\", \"RL\", each substring contains same number of 'L' and 'R'.\n\n\nExample 2:\n\nInput: s = \"RLLLLRRRLR\"\nOutput: 3\nExplanation: s can be split into \"RL\", \"LLLRRR\", \"LR\", each substring contains same number of 'L' and 'R'.\n\n\nExample 3:\n\nInput: s = \"LLLLRRRR\"\nOutput: 1\nExplanation: s can be split into \"LLLLRRRR\".\n\n\nExample 4:\n\nInput: s = \"RLRRRLLRLL\"\nOutput: 2\nExplanation: s can be split into \"RL\", \"RRRLLRLL\", since each substring contains an equal number of 'L' and 'R'\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns[i] = 'L' or 'R'"},{"index":"1222","url":"https://leetcode.com/problems/queens-that-can-attack-the-king","title":"Queens That Can Attack the King","difficulty":"Medium","description":"On an 8x8 chessboard, there can be multiple Black Queens and one White King.\n\nGiven an array of integer coordinates queens that represents the positions of the Black Queens, and a pair of coordinates king that represent the position of the White King, return the coordinates of all the queens (in any order) that can attack the King.\n\n \n\nExample 1:\n\nInput: queens = [[0,1],[1,0],[4,0],[0,4],[3,3],[2,4]], king = [0,0]\nOutput: [[0,1],[1,0],[3,3]]\nExplanation:  \nThe queen at [0,1] can attack the king cause they're in the same row. \nThe queen at [1,0] can attack the king cause they're in the same column. \nThe queen at [3,3] can attack the king cause they're in the same diagnal. \nThe queen at [0,4] can't attack the king cause it's blocked by the queen at [0,1]. \nThe queen at [4,0] can't attack the king cause it's blocked by the queen at [1,0]. \nThe queen at [2,4] can't attack the king cause it's not in the same row/column/diagnal as the king.\n\n\nExample 2:\n\nInput: queens = [[0,0],[1,1],[2,2],[3,4],[3,5],[4,4],[4,5]], king = [3,3]\nOutput: [[2,2],[3,4],[4,4]]\n\n\nExample 3:\n\nInput: queens = [[5,6],[7,7],[2,1],[0,7],[1,6],[5,1],[3,7],[0,3],[4,0],[1,2],[6,3],[5,0],[0,4],[2,2],[1,1],[6,4],[5,4],[0,0],[2,6],[4,5],[5,2],[1,4],[7,5],[2,3],[0,5],[4,2],[1,0],[2,7],[0,1],[4,6],[6,1],[0,6],[4,3],[1,7]], king = [3,4]\nOutput: [[2,3],[1,4],[1,6],[3,7],[4,3],[5,4],[4,5]]\n\n\n \n\nConstraints:\n\n1 <= queens.length <= 63\nqueens[0].length == 2\n0 <= queens[i][j] < 8\nking.length == 2\n0 <= king[0], king[1] < 8\nAt most one piece is allowed in a cell."},{"index":"1223","url":"https://leetcode.com/problems/dice-roll-simulation","title":"Dice Roll Simulation","difficulty":"Medium","description":"A die simulator generates a random number from 1 to 6 for each roll. You introduced a constraint to the generator such that it cannot roll the number i more than rollMax[i] (1-indexed) consecutive times. \n\nGiven an array of integers rollMax and an integer n, return the number of distinct sequences that can be obtained with exact n rolls.\n\nTwo sequences are considered different if at least one element differs from each other. Since the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: n = 2, rollMax = [1,1,2,2,2,3]\nOutput: 34\nExplanation: There will be 2 rolls of die, if there are no constraints on the die, there are 6 * 6 = 36 possible combinations. In this case, looking at rollMax array, the numbers 1 and 2 appear at most once consecutively, therefore sequences (1,1) and (2,2) cannot occur, so the final answer is 36-2 = 34.\n\n\nExample 2:\n\nInput: n = 2, rollMax = [1,1,1,1,1,1]\nOutput: 30\n\n\nExample 3:\n\nInput: n = 3, rollMax = [1,1,1,2,2,3]\nOutput: 181\n\n\n \n\nConstraints:\n\n1 <= n <= 5000\nrollMax.length == 6\n1 <= rollMax[i] <= 15"},{"index":"1224","url":"https://leetcode.com/problems/maximum-equal-frequency","title":"Maximum Equal Frequency","difficulty":"Hard","description":"Given an array nums of positive integers, return the longest possible length of an array prefix of nums, such that it is possible to remove exactly one element from this prefix so that every number that has appeared in it will have the same number of occurrences.\n\nIf after removing one element there are no remaining elements, it's still considered that every appeared number has the same number of ocurrences (0).\n\n \n\nExample 1:\n\nInput: nums = [2,2,1,1,5,3,3,5]\nOutput: 7\nExplanation: For the subarray [2,2,1,1,5,3,3] of length 7, if we remove nums[4]=5, we will get [2,2,1,1,3,3], so that each number will appear exactly twice.\n\n\nExample 2:\n\nInput: nums = [1,1,1,2,2,2,3,3,3,4,4,4,5]\nOutput: 13\n\n\nExample 3:\n\nInput: nums = [1,1,1,2,2,2]\nOutput: 5\n\n\nExample 4:\n\nInput: nums = [10,2,8,9,3,8,1,5,2,3,7,6]\nOutput: 8\n\n\n \n\nConstraints:\n\n2 <= nums.length <= 10^5\n1 <= nums[i] <= 10^5"},{"index":"1226","url":"https://leetcode.com/problems/the-dining-philosophers","title":"The Dining Philosophers","difficulty":"Medium","description":"Five silent philosophers sit at a round table with bowls of spaghetti. Forks are placed between each pair of adjacent philosophers.\n\nEach philosopher must alternately think and eat. However, a philosopher can only eat spaghetti when they have both left and right forks. Each fork can be held by only one philosopher and so a philosopher can use the fork only if it is not being used by another philosopher. After an individual philosopher finishes eating, they need to put down both forks so that the forks become available to others. A philosopher can take the fork on their right or the one on their left as they become available, but cannot start eating before getting both forks.\n\nEating is not limited by the remaining amounts of spaghetti or stomach space; an infinite supply and an infinite demand are assumed.\n\nDesign a discipline of behaviour (a concurrent algorithm) such that no philosopher will starve; i.e., each can forever continue to alternate between eating and thinking, assuming that no philosopher can know when others may want to eat or think.\n\nThe problem statement and the image above are taken from wikipedia.org\n\n \n\nThe philosophers' ids are numbered from 0 to 4 in a clockwise order. Implement the function void wantsToEat(philosopher, pickLeftFork, pickRightFork, eat, putLeftFork, putRightFork) where:\n\nphilosopher is the id of the philosopher who wants to eat.\npickLeftFork and pickRightFork are functions you can call to pick the corresponding forks of that philosopher.\neat is a function you can call to let the philosopher eat once he has picked both forks.\nputLeftFork and putRightFork are functions you can call to put down the corresponding forks of that philosopher.\nThe philosophers are assumed to be thinking as long as they are not asking to eat (the function is not being called with their number).\n\nFive threads, each representing a philosopher, will simultaneously use one object of your class to simulate the process. The function may be called for the same philosopher more than once, even before the last call ends.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: [[4,2,1],[4,1,1],[0,1,1],[2,2,1],[2,1,1],[2,0,3],[2,1,2],[2,2,2],[4,0,3],[4,1,2],[0,2,1],[4,2,2],[3,2,1],[3,1,1],[0,0,3],[0,1,2],[0,2,2],[1,2,1],[1,1,1],[3,0,3],[3,1,2],[3,2,2],[1,0,3],[1,1,2],[1,2,2]]\nExplanation:\nn is the number of times each philosopher will call the function.\nThe output array describes the calls you made to the functions controlling the forks and the eat function, its format is:\noutput[i] = [a, b, c] (three integers)\n- a is the id of a philosopher.\n- b specifies the fork: {1 : left, 2 : right}.\n- c specifies the operation: {1 : pick, 2 : put, 3 : eat}.\n\n \n\nConstraints:\n\n1 <= n <= 60"},{"index":"1227","url":"https://leetcode.com/problems/airplane-seat-assignment-probability","title":"Airplane Seat Assignment Probability","difficulty":"Medium","description":"n passengers board an airplane with exactly n seats. The first passenger has lost the ticket and picks a seat randomly. But after that, the rest of passengers will:\n\nTake their own seat if it is still available, \nPick other seats randomly when they find their seat occupied \n\nWhat is the probability that the n-th person can get his own seat?\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: 1.00000\nExplanation: The first person can only get the first seat.\n\nExample 2:\n\nInput: n = 2\nOutput: 0.50000\nExplanation: The second person has a probability of 0.5 to get the second seat (when first person gets the first seat).\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5"},{"index":"1232","url":"https://leetcode.com/problems/check-if-it-is-a-straight-line","title":"Check If It Is a Straight Line","difficulty":"Easy","description":"You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.\n\n \n\n \n\nExample 1:\n\nInput: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]\nOutput: true\n\n\nExample 2:\n\nInput: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]\nOutput: false\n\n\n \n\nConstraints:\n\n2 <= coordinates.length <= 1000\ncoordinates[i].length == 2\n-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4\ncoordinates contains no duplicate point."},{"index":"1233","url":"https://leetcode.com/problems/remove-sub-folders-from-the-filesystem","title":"Remove Sub-Folders from the Filesystem","difficulty":"Medium","description":"Given a list of folders, remove all sub-folders in those folders and return in any order the folders after removing.\n\nIf a folder[i] is located within another folder[j], it is called a sub-folder of it.\n\nThe format of a path is one or more concatenated strings of the form: / followed by one or more lowercase English letters. For example, /leetcode and /leetcode/problems are valid paths while an empty string and / are not.\n\n \n\nExample 1:\n\nInput: folder = [\"/a\",\"/a/b\",\"/c/d\",\"/c/d/e\",\"/c/f\"]\nOutput: [\"/a\",\"/c/d\",\"/c/f\"]\nExplanation: Folders \"/a/b/\" is a subfolder of \"/a\" and \"/c/d/e\" is inside of folder \"/c/d\" in our filesystem.\n\n\nExample 2:\n\nInput: folder = [\"/a\",\"/a/b/c\",\"/a/b/d\"]\nOutput: [\"/a\"]\nExplanation: Folders \"/a/b/c\" and \"/a/b/d/\" will be removed because they are subfolders of \"/a\".\n\n\nExample 3:\n\nInput: folder = [\"/a/b/c\",\"/a/b/ca\",\"/a/b/d\"]\nOutput: [\"/a/b/c\",\"/a/b/ca\",\"/a/b/d\"]\n\n\n \n\nConstraints:\n\n1 <= folder.length <= 4 * 10^4\n2 <= folder[i].length <= 100\nfolder[i] contains only lowercase letters and '/'\nfolder[i] always starts with character '/'\nEach folder name is unique."},{"index":"1234","url":"https://leetcode.com/problems/replace-the-substring-for-balanced-string","title":"Replace the Substring for Balanced String","difficulty":"Medium","description":"You are given a string containing only 4 kinds of characters 'Q', 'W', 'E' and 'R'.\n\nA string is said to be balanced if each of its characters appears n/4 times where n is the length of the string.\n\nReturn the minimum length of the substring that can be replaced with any other string of the same length to make the original string s balanced.\n\nReturn 0 if the string is already balanced.\n\n \n\nExample 1:\n\nInput: s = \"QWER\"\nOutput: 0\nExplanation: s is already balanced.\n\nExample 2:\n\nInput: s = \"QQWE\"\nOutput: 1\nExplanation: We need to replace a 'Q' to 'R', so that \"RQWE\" (or \"QRWE\") is balanced.\n\n\nExample 3:\n\nInput: s = \"QQQW\"\nOutput: 2\nExplanation: We can replace the first \"QQ\" to \"ER\". \n\n\nExample 4:\n\nInput: s = \"QQQQ\"\nOutput: 3\nExplanation: We can replace the last 3 'Q' to make s = \"QWER\".\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\ns.length is a multiple of 4\ns contains only 'Q', 'W', 'E' and 'R'."},{"index":"1235","url":"https://leetcode.com/problems/maximum-profit-in-job-scheduling","title":"Maximum Profit in Job Scheduling","difficulty":"Hard","description":"We have n jobs, where every job is scheduled to be done from startTime[i] to endTime[i], obtaining a profit of profit[i].\n\nYou're given the startTime , endTime and profit arrays, you need to output the maximum profit you can take such that there are no 2 jobs in the subset with overlapping time range.\n\nIf you choose a job that ends at time X you will be able to start another job that starts at time X.\n\n \n\nExample 1:\n\nInput: startTime = [1,2,3,3], endTime = [3,4,5,6], profit = [50,10,40,70]\nOutput: 120\nExplanation: The subset chosen is the first and fourth job. \nTime range [1-3]+[3-6] , we get profit of 120 = 50 + 70.\n\n\nExample 2:\n\n\nInput: startTime = [1,2,3,4,6], endTime = [3,5,10,6,9], profit = [20,20,100,70,60]\nOutput: 150\nExplanation: The subset chosen is the first, fourth and fifth job. \nProfit obtained 150 = 20 + 70 + 60.\n\n\nExample 3:\n\nInput: startTime = [1,1,1], endTime = [2,3,4], profit = [5,6,4]\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= startTime.length == endTime.length == profit.length <= 5 * 10^4\n1 <= startTime[i] < endTime[i] <= 10^9\n1 <= profit[i] <= 10^4"},{"index":"1237","url":"https://leetcode.com/problems/find-positive-integer-solution-for-a-given-equation","title":"Find Positive Integer Solution for a Given Equation","difficulty":"Easy","description":"Given a function  f(x, y) and a value z, return all positive integer pairs x and y where f(x,y) == z.\n\nThe function is constantly increasing, i.e.:\n\nf(x, y) < f(x + 1, y)\nf(x, y) < f(x, y + 1)\n\nThe function interface is defined like this: \n\ninterface CustomFunction {\npublic:\n  // Returns positive integer f(x, y) for any given positive integer x and y.\n  int f(int x, int y);\n};\n\n\nFor custom testing purposes you're given an integer function_id and a target z as input, where function_id represent one function from an secret internal list, on the examples you'll know only two functions from the list.  \n\nYou may return the solutions in any order.\n\n \n\nExample 1:\n\nInput: function_id = 1, z = 5\nOutput: [[1,4],[2,3],[3,2],[4,1]]\nExplanation: function_id = 1 means that f(x, y) = x + y\n\nExample 2:\n\nInput: function_id = 2, z = 5\nOutput: [[1,5],[5,1]]\nExplanation: function_id = 2 means that f(x, y) = x * y\n\n\n \n\nConstraints:\n\n1 <= function_id <= 9\n1 <= z <= 100\nIt's guaranteed that the solutions of f(x, y) == z will be on the range 1 <= x, y <= 1000\nIt's also guaranteed that f(x, y) will fit in 32 bit signed integer if 1 <= x, y <= 1000"},{"index":"1238","url":"https://leetcode.com/problems/circular-permutation-in-binary-representation","title":"Circular Permutation in Binary Representation","difficulty":"Medium","description":"Given 2 integers n and start. Your task is return any permutation p of (0,1,2.....,2^n -1) such that :\n\np[0] = start\np[i] and p[i+1] differ by only one bit in their binary representation.\np[0] and p[2^n -1] must also differ by only one bit in their binary representation.\n\n \n\nExample 1:\n\nInput: n = 2, start = 3\nOutput: [3,2,0,1]\nExplanation: The binary representation of the permutation is (11,10,00,01). \nAll the adjacent element differ by one bit. Another valid permutation is [3,1,0,2]\n\n\nExample 2:\n\nInput: n = 3, start = 2\nOutput: [2,6,7,5,4,0,1,3]\nExplanation: The binary representation of the permutation is (010,110,111,101,100,000,001,011).\n\n\n \n\nConstraints:\n\n1 <= n <= 16\n0 <= start < 2 ^ n"},{"index":"1239","url":"https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters","title":"Maximum Length of a Concatenated String with Unique Characters","difficulty":"Medium","description":"Given an array of strings arr. String s is a concatenation of a sub-sequence of arr which have unique characters.\n\nReturn the maximum possible length of s.\n\n \n\nExample 1:\n\nInput: arr = [\"un\",\"iq\",\"ue\"]\nOutput: 4\nExplanation: All possible concatenations are \"\",\"un\",\"iq\",\"ue\",\"uniq\" and \"ique\".\nMaximum length is 4.\n\n\nExample 2:\n\nInput: arr = [\"cha\",\"r\",\"act\",\"ers\"]\nOutput: 6\nExplanation: Possible solutions are \"chaers\" and \"acters\".\n\n\nExample 3:\n\nInput: arr = [\"abcdefghijklmnopqrstuvwxyz\"]\nOutput: 26\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 16\n1 <= arr[i].length <= 26\narr[i] contains only lower case English letters."},{"index":"1240","url":"https://leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares","title":"Tiling a Rectangle with the Fewest Squares","difficulty":"Hard","description":"Given a rectangle of size n x m, find the minimum number of integer-sided squares that tile the rectangle.\n\n \n\nExample 1:\n\nInput: n = 2, m = 3\nOutput: 3\nExplanation: 3 squares are necessary to cover the rectangle.\n2 (squares of 1x1)\n1 (square of 2x2)\n\nExample 2:\n\nInput: n = 5, m = 8\nOutput: 5\n\n\nExample 3:\n\nInput: n = 11, m = 13\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= n <= 13\n1 <= m <= 13"},{"index":"1247","url":"https://leetcode.com/problems/minimum-swaps-to-make-strings-equal","title":"Minimum Swaps to Make Strings Equal","difficulty":"Medium","description":"You are given two strings s1 and s2 of equal length consisting of letters \"x\" and \"y\" only. Your task is to make these two strings equal to each other. You can swap any two characters that belong to different strings, which means: swap s1[i] and s2[j].\n\nReturn the minimum number of swaps required to make s1 and s2 equal, or return -1 if it is impossible to do so.\n\n \n\nExample 1:\n\nInput: s1 = \"xx\", s2 = \"yy\"\nOutput: 1\nExplanation: \nSwap s1[0] and s2[1], s1 = \"yx\", s2 = \"yx\".\n\nExample 2: \n\nInput: s1 = \"xy\", s2 = \"yx\"\nOutput: 2\nExplanation: \nSwap s1[0] and s2[0], s1 = \"yy\", s2 = \"xx\".\nSwap s1[0] and s2[1], s1 = \"xy\", s2 = \"xy\".\nNote that you can't swap s1[0] and s1[1] to make s1 equal to \"yx\", cause we can only swap chars in different strings.\n\nExample 3:\n\nInput: s1 = \"xx\", s2 = \"xy\"\nOutput: -1\n\n\nExample 4:\n\nInput: s1 = \"xxyyxyxyxx\", s2 = \"xyyxyxxxyx\"\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= s1.length, s2.length <= 1000\ns1, s2 only contain 'x' or 'y'."},{"index":"1248","url":"https://leetcode.com/problems/count-number-of-nice-subarrays","title":"Count Number of Nice Subarrays","difficulty":"Medium","description":"Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.\n\nReturn the number of nice sub-arrays.\n\n \n\nExample 1:\n\nInput: nums = [1,1,2,1,1], k = 3\nOutput: 2\nExplanation: The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].\n\n\nExample 2:\n\nInput: nums = [2,4,6], k = 1\nOutput: 0\nExplanation: There is no odd numbers in the array.\n\n\nExample 3:\n\nInput: nums = [2,2,2,1,2,2,1,2,2,2], k = 2\nOutput: 16\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 50000\n1 <= nums[i] <= 10^5\n1 <= k <= nums.length"},{"index":"1249","url":"https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses","title":"Minimum Remove to Make Valid Parentheses","difficulty":"Medium","description":"Given a string s of '(' , ')' and lowercase English characters. \n\nYour task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string.\n\nFormally, a parentheses string is valid if and only if:\n\nIt is the empty string, contains only lowercase characters, or\nIt can be written as AB (A concatenated with B), where A and B are valid strings, or\nIt can be written as (A), where A is a valid string.\n\n \n\nExample 1:\n\nInput: s = \"lee(t(c)o)de)\"\nOutput: \"lee(t(c)o)de\"\nExplanation: \"lee(t(co)de)\" , \"lee(t(c)ode)\" would also be accepted.\n\n\nExample 2:\n\nInput: s = \"a)b(c)d\"\nOutput: \"ab(c)d\"\n\n\nExample 3:\n\nInput: s = \"))((\"\nOutput: \"\"\nExplanation: An empty string is also valid.\n\n\nExample 4:\n\nInput: s = \"(a(b(c)d)\"\nOutput: \"a(b(c)d)\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\ns[i] is one of  '(' , ')' and lowercase English letters."},{"index":"1250","url":"https://leetcode.com/problems/check-if-it-is-a-good-array","title":"Check If It Is a Good Array","difficulty":"Hard","description":"Given an array nums of positive integers. Your task is to select some subset of nums, multiply each element by an integer and add all these numbers. The array is said to be good if you can obtain a sum of 1 from the array by any possible subset and multiplicand.\n\nReturn True if the array is good otherwise return False.\n\n \n\nExample 1:\n\nInput: nums = [12,5,7,23]\nOutput: true\nExplanation: Pick numbers 5 and 7.\n5*3 + 7*(-2) = 1\n\n\nExample 2:\n\nInput: nums = [29,6,10]\nOutput: true\nExplanation: Pick numbers 29, 6 and 10.\n29*1 + 6*(-3) + 10*(-1) = 1\n\n\nExample 3:\n\nInput: nums = [3,6]\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n1 <= nums[i] <= 10^9"},{"index":"1252","url":"https://leetcode.com/problems/cells-with-odd-values-in-a-matrix","title":"Cells with Odd Values in a Matrix","difficulty":"Easy","description":"Given n and m which are the dimensions of a matrix initialized by zeros and given an array indices where indices[i] = [ri, ci]. For each pair of [ri, ci] you have to increment all cells in row ri and column ci by 1.\n\nReturn the number of cells with odd values in the matrix after applying the increment to all indices.\n\n \n\nExample 1:\n\nInput: n = 2, m = 3, indices = [[0,1],[1,1]]\nOutput: 6\nExplanation: Initial matrix = [[0,0,0],[0,0,0]].\nAfter applying first increment it becomes [[1,2,1],[0,1,0]].\nThe final matrix will be [[1,3,1],[1,3,1]] which contains 6 odd numbers.\n\n\nExample 2:\n\nInput: n = 2, m = 2, indices = [[1,1],[0,0]]\nOutput: 0\nExplanation: Final matrix = [[2,2],[2,2]]. There is no odd number in the final matrix.\n\n\n \n\nConstraints:\n\n1 <= n <= 50\n1 <= m <= 50\n1 <= indices.length <= 100\n0 <= indices[i][0] < n\n0 <= indices[i][1] < m"},{"index":"1253","url":"https://leetcode.com/problems/reconstruct-a-2-row-binary-matrix","title":"Reconstruct a 2-Row Binary Matrix","difficulty":"Medium","description":"Given the following details of a matrix with n columns and 2 rows :\n\nThe matrix is a binary matrix, which means each element in the matrix can be 0 or 1.\nThe sum of elements of the 0-th(upper) row is given as upper.\nThe sum of elements of the 1-st(lower) row is given as lower.\nThe sum of elements in the i-th column(0-indexed) is colsum[i], where colsum is given as an integer array with length n.\n\nYour task is to reconstruct the matrix with upper, lower and colsum.\n\nReturn it as a 2-D integer array.\n\nIf there are more than one valid solution, any of them will be accepted.\n\nIf no valid solution exists, return an empty 2-D array.\n\n \n\nExample 1:\n\nInput: upper = 2, lower = 1, colsum = [1,1,1]\nOutput: [[1,1,0],[0,0,1]]\nExplanation: [[1,0,1],[0,1,0]], and [[0,1,1],[1,0,0]] are also correct answers.\n\n\nExample 2:\n\nInput: upper = 2, lower = 3, colsum = [2,2,1,1]\nOutput: []\n\n\nExample 3:\n\nInput: upper = 5, lower = 5, colsum = [2,1,2,0,1,0,1,2,0,1]\nOutput: [[1,1,1,0,1,0,0,1,0,0],[1,0,1,0,0,0,1,1,0,1]]\n\n\n \n\nConstraints:\n\n1 <= colsum.length <= 10^5\n0 <= upper, lower <= colsum.length\n0 <= colsum[i] <= 2"},{"index":"1254","url":"https://leetcode.com/problems/number-of-closed-islands","title":"Number of Closed Islands","difficulty":"Medium","description":"Given a 2D grid consists of 0s (land) and 1s (water).  An island is a maximal 4-directionally connected group of 0s and a closed island is an island totally (all left, top, right, bottom) surrounded by 1s.\n\nReturn the number of closed islands.\n\n \n\nExample 1:\n\nInput: grid = [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]]\nOutput: 2\nExplanation: \nIslands in gray are closed because they are completely surrounded by water (group of 1s).\n\nExample 2:\n\nInput: grid = [[0,0,1,0,0],[0,1,0,1,0],[0,1,1,1,0]]\nOutput: 1\n\n\nExample 3:\n\nInput: grid = [[1,1,1,1,1,1,1],\n               [1,0,0,0,0,0,1],\n               [1,0,1,1,1,0,1],\n               [1,0,1,0,1,0,1],\n               [1,0,1,1,1,0,1],\n               [1,0,0,0,0,0,1],\n               [1,1,1,1,1,1,1]]\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= grid.length, grid[0].length <= 100\n0 <= grid[i][j] <=1"},{"index":"1255","url":"https://leetcode.com/problems/maximum-score-words-formed-by-letters","title":"Maximum Score Words Formed by Letters","difficulty":"Hard","description":"Given a list of words, list of  single letters (might be repeating) and score of every character.\n\nReturn the maximum score of any valid set of words formed by using the given letters (words[i] cannot be used two or more times).\n\nIt is not necessary to use all characters in letters and each letter can only be used once. Score of letters 'a', 'b', 'c', ... ,'z' is given by score[0], score[1], ... , score[25] respectively.\n\n \n\nExample 1:\n\nInput: words = [\"dog\",\"cat\",\"dad\",\"good\"], letters = [\"a\",\"a\",\"c\",\"d\",\"d\",\"d\",\"g\",\"o\",\"o\"], score = [1,0,9,5,0,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0]\nOutput: 23\nExplanation:\nScore  a=1, c=9, d=5, g=3, o=2\nGiven letters, we can form the words \"dad\" (5+1+5) and \"good\" (3+2+2+5) with a score of 23.\nWords \"dad\" and \"dog\" only get a score of 21.\n\nExample 2:\n\nInput: words = [\"xxxz\",\"ax\",\"bx\",\"cx\"], letters = [\"z\",\"a\",\"b\",\"c\",\"x\",\"x\",\"x\"], score = [4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,10]\nOutput: 27\nExplanation:\nScore  a=4, b=4, c=4, x=5, z=10\nGiven letters, we can form the words \"ax\" (4+5), \"bx\" (4+5) and \"cx\" (4+5) with a score of 27.\nWord \"xxxz\" only get a score of 25.\n\nExample 3:\n\nInput: words = [\"leetcode\"], letters = [\"l\",\"e\",\"t\",\"c\",\"o\",\"d\"], score = [0,0,1,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0]\nOutput: 0\nExplanation:\nLetter \"e\" can only be used once.\n\n \n\nConstraints:\n\n1 <= words.length <= 14\n1 <= words[i].length <= 15\n1 <= letters.length <= 100\nletters[i].length == 1\nscore.length == 26\n0 <= score[i] <= 10\nwords[i], letters[i] contains only lower case English letters."},{"index":"1260","url":"https://leetcode.com/problems/shift-2d-grid","title":"Shift 2D Grid","difficulty":"Easy","description":"Given a 2D grid of size m x n and an integer k. You need to shift the grid k times.\n\nIn one shift operation:\n\nElement at grid[i][j] moves to grid[i][j + 1].\nElement at grid[i][n - 1] moves to grid[i + 1][0].\nElement at grid[m - 1][n - 1] moves to grid[0][0].\n\nReturn the 2D grid after applying shift operation k times.\n\n \n\nExample 1:\n\nInput: grid = [[1,2,3],[4,5,6],[7,8,9]], k = 1\nOutput: [[9,1,2],[3,4,5],[6,7,8]]\n\n\nExample 2:\n\nInput: grid = [[3,8,1,9],[19,7,2,5],[4,6,11,10],[12,0,21,13]], k = 4\nOutput: [[12,0,21,13],[3,8,1,9],[19,7,2,5],[4,6,11,10]]\n\n\nExample 3:\n\nInput: grid = [[1,2,3],[4,5,6],[7,8,9]], k = 9\nOutput: [[1,2,3],[4,5,6],[7,8,9]]\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m <= 50\n1 <= n <= 50\n-1000 <= grid[i][j] <= 1000\n0 <= k <= 100"},{"index":"1261","url":"https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree","title":"Find Elements in a Contaminated Binary Tree","difficulty":"Medium","description":"Given a binary tree with the following rules:\n\nroot.val == 0\nIf treeNode.val == x and treeNode.left != null, then treeNode.left.val == 2 * x + 1\nIf treeNode.val == x and treeNode.right != null, then treeNode.right.val == 2 * x + 2\n\nNow the binary tree is contaminated, which means all treeNode.val have been changed to -1.\n\nYou need to first recover the binary tree and then implement the FindElements class:\n\nFindElements(TreeNode* root) Initializes the object with a contamined binary tree, you need to recover it first.\nbool find(int target) Return if the target value exists in the recovered binary tree.\n\n \n\nExample 1:\n\nInput\n[\"FindElements\",\"find\",\"find\"]\n[[[-1,null,-1]],[1],[2]]\nOutput\n[null,false,true]\nExplanation\nFindElements findElements = new FindElements([-1,null,-1]); \nfindElements.find(1); // return False \nfindElements.find(2); // return True \n\nExample 2:\n\nInput\n[\"FindElements\",\"find\",\"find\",\"find\"]\n[[[-1,-1,-1,-1,-1]],[1],[3],[5]]\nOutput\n[null,true,true,false]\nExplanation\nFindElements findElements = new FindElements([-1,-1,-1,-1,-1]);\nfindElements.find(1); // return True\nfindElements.find(3); // return True\nfindElements.find(5); // return False\n\nExample 3:\n\nInput\n[\"FindElements\",\"find\",\"find\",\"find\",\"find\"]\n[[[-1,null,-1,-1,null,-1]],[2],[3],[4],[5]]\nOutput\n[null,true,false,false,true]\nExplanation\nFindElements findElements = new FindElements([-1,null,-1,-1,null,-1]);\nfindElements.find(2); // return True\nfindElements.find(3); // return False\nfindElements.find(4); // return False\nfindElements.find(5); // return True\n\n\n \n\nConstraints:\n\nTreeNode.val == -1\nThe height of the binary tree is less than or equal to 20\nThe total number of nodes is between [1, 10^4]\nTotal calls of find() is between [1, 10^4]\n0 <= target <= 10^6"},{"index":"1262","url":"https://leetcode.com/problems/greatest-sum-divisible-by-three","title":"Greatest Sum Divisible by Three","difficulty":"Medium","description":"Given an array nums of integers, we need to find the maximum possible sum of elements of the array such that it is divisible by three.\n\n \n\nExample 1:\n\nInput: nums = [3,6,5,1,8]\nOutput: 18\nExplanation: Pick numbers 3, 6, 1 and 8 their sum is 18 (maximum sum divisible by 3).\n\nExample 2:\n\nInput: nums = [4]\nOutput: 0\nExplanation: Since 4 is not divisible by 3, do not pick any number.\n\n\nExample 3:\n\nInput: nums = [1,2,3,4,4]\nOutput: 12\nExplanation: Pick numbers 1, 3, 4 and 4 their sum is 12 (maximum sum divisible by 3).\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 4 * 10^4\n1 <= nums[i] <= 10^4"},{"index":"1263","url":"https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location","title":"Minimum Moves to Move a Box to Their Target Location","difficulty":"Hard","description":"Storekeeper is a game in which the player pushes boxes around in a warehouse trying to get them to target locations.\n\nThe game is represented by a grid of size m x n, where each element is a wall, floor, or a box.\n\nYour task is move the box 'B' to the target position 'T' under the following rules:\n\nPlayer is represented by character 'S' and can move up, down, left, right in the grid if it is a floor (empy cell).\nFloor is represented by character '.' that means free cell to walk.\nWall is represented by character '#' that means obstacle  (impossible to walk there). \nThere is only one box 'B' and one target cell 'T' in the grid.\nThe box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box. This is a push.\nThe player cannot walk through the box.\n\nReturn the minimum number of pushes to move the box to the target. If there is no way to reach the target, return -1.\n\n \n\nExample 1:\n\nInput: grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\".\",\".\",\"B\",\".\",\"#\"],\n               [\"#\",\".\",\"#\",\"#\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]\nOutput: 3\nExplanation: We return only the number of times the box is pushed.\n\nExample 2:\n\nInput: grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\".\",\".\",\"B\",\".\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]\nOutput: -1\n\n\nExample 3:\n\nInput: grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\".\",\".\",\"#\",\"#\"],\n               [\"#\",\".\",\"#\",\"B\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]\nOutput: 5\nExplanation:  push the box down, left, left, up and up.\n\n\nExample 4:\n\nInput: grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"S\",\"#\",\".\",\"B\",\"T\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]\nOutput: -1\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m <= 20\n1 <= n <= 20\ngrid contains only characters '.', '#',  'S' , 'T', or 'B'.\nThere is only one character 'S', 'B' and 'T' in the grid."},{"index":"1266","url":"https://leetcode.com/problems/minimum-time-visiting-all-points","title":"Minimum Time Visiting All Points","difficulty":"Easy","description":"On a plane there are n points with integer coordinates points[i] = [xi, yi]. Your task is to find the minimum time in seconds to visit all points.\n\nYou can move according to the next rules:\n\nIn one second always you can either move vertically, horizontally by one unit or diagonally (it means to move one unit vertically and one unit horizontally in one second).\nYou have to visit the points in the same order as they appear in the array.\n\n \n\nExample 1:\n\nInput: points = [[1,1],[3,4],[-1,0]]\nOutput: 7\nExplanation: One optimal path is [1,1] -> [2,2] -> [3,3] -> [3,4] -> [2,3] -> [1,2] -> [0,1] -> [-1,0]   \nTime from [1,1] to [3,4] = 3 seconds \nTime from [3,4] to [-1,0] = 4 seconds\nTotal time = 7 seconds\n\nExample 2:\n\nInput: points = [[3,2],[-2,2]]\nOutput: 5\n\n\n \n\nConstraints:\n\npoints.length == n\n1 <= n <= 100\npoints[i].length == 2\n-1000 <= points[i][0], points[i][1] <= 1000"},{"index":"1267","url":"https://leetcode.com/problems/count-servers-that-communicate","title":"Count Servers that Communicate","difficulty":"Medium","description":"You are given a map of a server center, represented as a m * n integer matrix grid, where 1 means that on that cell there is a server and 0 means that it is no server. Two servers are said to communicate if they are on the same row or on the same column.\n\nReturn the number of servers that communicate with any other server.\n\n \n\nExample 1:\n\nInput: grid = [[1,0],[0,1]]\nOutput: 0\nExplanation: No servers can communicate with others.\n\nExample 2:\n\nInput: grid = [[1,0],[1,1]]\nOutput: 3\nExplanation: All three servers can communicate with at least one other server.\n\n\nExample 3:\n\nInput: grid = [[1,1,0,0],[0,0,1,0],[0,0,1,0],[0,0,0,1]]\nOutput: 4\nExplanation: The two servers in the first row can communicate with each other. The two servers in the third column can communicate with each other. The server at right bottom corner can't communicate with any other server.\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m <= 250\n1 <= n <= 250\ngrid[i][j] == 0 or 1"},{"index":"1268","url":"https://leetcode.com/problems/search-suggestions-system","title":"Search Suggestions System","difficulty":"Medium","description":"Given an array of strings products and a string searchWord. We want to design a system that suggests at most three product names from products after each character of searchWord is typed. Suggested products should have common prefix with the searchWord. If there are more than three products with a common prefix return the three lexicographically minimums products.\n\nReturn list of lists of the suggested products after each character of searchWord is typed. \n\n \n\nExample 1:\n\nInput: products = [\"mobile\",\"mouse\",\"moneypot\",\"monitor\",\"mousepad\"], searchWord = \"mouse\"\nOutput: [\n[\"mobile\",\"moneypot\",\"monitor\"],\n[\"mobile\",\"moneypot\",\"monitor\"],\n[\"mouse\",\"mousepad\"],\n[\"mouse\",\"mousepad\"],\n[\"mouse\",\"mousepad\"]\n]\nExplanation: products sorted lexicographically = [\"mobile\",\"moneypot\",\"monitor\",\"mouse\",\"mousepad\"]\nAfter typing m and mo all products match and we show user [\"mobile\",\"moneypot\",\"monitor\"]\nAfter typing mou, mous and mouse the system suggests [\"mouse\",\"mousepad\"]\n\n\nExample 2:\n\nInput: products = [\"havana\"], searchWord = \"havana\"\nOutput: [[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"]]\n\n\nExample 3:\n\nInput: products = [\"bags\",\"baggage\",\"banner\",\"box\",\"cloths\"], searchWord = \"bags\"\nOutput: [[\"baggage\",\"bags\",\"banner\"],[\"baggage\",\"bags\",\"banner\"],[\"baggage\",\"bags\"],[\"bags\"]]\n\n\nExample 4:\n\nInput: products = [\"havana\"], searchWord = \"tatiana\"\nOutput: [[],[],[],[],[],[],[]]\n\n\n \n\nConstraints:\n\n1 <= products.length <= 1000\nThere are no repeated elements in products.\n1 <= Σ products[i].length <= 2 * 10^4\nAll characters of products[i] are lower-case English letters.\n1 <= searchWord.length <= 1000\nAll characters of searchWord are lower-case English letters."},{"index":"1269","url":"https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps","title":"Number of Ways to Stay in the Same Place After Some Steps","difficulty":"Hard","description":"You have a pointer at index 0 in an array of size arrLen. At each step, you can move 1 position to the left, 1 position to the right in the array or stay in the same place  (The pointer should not be placed outside the array at any time).\n\nGiven two integers steps and arrLen, return the number of ways such that your pointer still at index 0 after exactly steps steps.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: steps = 3, arrLen = 2\nOutput: 4\nExplanation: There are 4 differents ways to stay at index 0 after 3 steps.\nRight, Left, Stay\nStay, Right, Left\nRight, Stay, Left\nStay, Stay, Stay\n\n\nExample 2:\n\nInput: steps = 2, arrLen = 4\nOutput: 2\nExplanation: There are 2 differents ways to stay at index 0 after 2 steps\nRight, Left\nStay, Stay\n\n\nExample 3:\n\nInput: steps = 4, arrLen = 2\nOutput: 8\n\n\n \n\nConstraints:\n\n1 <= steps <= 500\n1 <= arrLen <= 10^6"},{"index":"1275","url":"https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game","title":"Find Winner on a Tic Tac Toe Game","difficulty":"Easy","description":"Tic-tac-toe is played by two players A and B on a 3 x 3 grid.\n\nHere are the rules of Tic-Tac-Toe:\n\nPlayers take turns placing characters into empty squares (\" \").\nThe first player A always places \"X\" characters, while the second player B always places \"O\" characters.\n\"X\" and \"O\" characters are always placed into empty squares, never on filled ones.\nThe game ends when there are 3 of the same (non-empty) character filling any row, column, or diagonal.\nThe game also ends if all squares are non-empty.\nNo more moves can be played if the game is over.\n\nGiven an array moves where each element is another array of size 2 corresponding to the row and column of the grid where they mark their respective character in the order in which A and B play.\n\nReturn the winner of the game if it exists (A or B), in case the game ends in a draw return \"Draw\", if there are still movements to play return \"Pending\".\n\nYou can assume that moves is valid (It follows the rules of Tic-Tac-Toe), the grid is initially empty and A will play first.\n\n \n\nExample 1:\n\nInput: moves = [[0,0],[2,0],[1,1],[2,1],[2,2]]\nOutput: \"A\"\nExplanation: \"A\" wins, he always plays first.\n\"X  \"    \"X  \"    \"X  \"    \"X  \"    \"X  \"\n\"   \" -> \"   \" -> \" X \" -> \" X \" -> \" X \"\n\"   \"    \"O  \"    \"O  \"    \"OO \"    \"OOX\"\n\n\nExample 2:\n\nInput: moves = [[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]\nOutput: \"B\"\nExplanation: \"B\" wins.\n\"X  \"    \"X  \"    \"XX \"    \"XXO\"    \"XXO\"    \"XXO\"\n\"   \" -> \" O \" -> \" O \" -> \" O \" -> \"XO \" -> \"XO \" \n\"   \"    \"   \"    \"   \"    \"   \"    \"   \"    \"O  \"\n\n\nExample 3:\n\nInput: moves = [[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]\nOutput: \"Draw\"\nExplanation: The game ends in a draw since there are no moves to make.\n\"XXO\"\n\"OOX\"\n\"XOX\"\n\n\nExample 4:\n\nInput: moves = [[0,0],[1,1]]\nOutput: \"Pending\"\nExplanation: The game has not finished yet.\n\"X  \"\n\" O \"\n\"   \"\n\n\n \n\nConstraints:\n\n1 <= moves.length <= 9\nmoves[i].length == 2\n0 <= moves[i][j] <= 2\nThere are no repeated elements on moves.\nmoves follow the rules of tic tac toe."},{"index":"1276","url":"https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients","title":"Number of Burgers with No Waste of Ingredients","difficulty":"Medium","description":"Given two integers tomatoSlices and cheeseSlices. The ingredients of different burgers are as follows:\n\nJumbo Burger: 4 tomato slices and 1 cheese slice.\nSmall Burger: 2 Tomato slices and 1 cheese slice.\n\nReturn [total_jumbo, total_small] so that the number of remaining tomatoSlices equal to 0 and the number of remaining cheeseSlices equal to 0. If it is not possible to make the remaining tomatoSlices and cheeseSlices equal to 0 return [].\n\n \n\nExample 1:\n\nInput: tomatoSlices = 16, cheeseSlices = 7\nOutput: [1,6]\nExplantion: To make one jumbo burger and 6 small burgers we need 4*1 + 2*6 = 16 tomato and 1 + 6 = 7 cheese. There will be no remaining ingredients.\n\n\nExample 2:\n\nInput: tomatoSlices = 17, cheeseSlices = 4\nOutput: []\nExplantion: There will be no way to use all ingredients to make small and jumbo burgers.\n\n\nExample 3:\n\nInput: tomatoSlices = 4, cheeseSlices = 17\nOutput: []\nExplantion: Making 1 jumbo burger there will be 16 cheese remaining and making 2 small burgers there will be 15 cheese remaining.\n\n\nExample 4:\n\nInput: tomatoSlices = 0, cheeseSlices = 0\nOutput: [0,0]\n\n\nExample 5:\n\nInput: tomatoSlices = 2, cheeseSlices = 1\nOutput: [0,1]\n\n\n \n\nConstraints:\n\n0 <= tomatoSlices <= 10^7\n0 <= cheeseSlices <= 10^7"},{"index":"1277","url":"https://leetcode.com/problems/count-square-submatrices-with-all-ones","title":"Count Square Submatrices with All Ones","difficulty":"Medium","description":"Given a m * n matrix of ones and zeros, return how many square submatrices have all ones.\n\n \n\nExample 1:\n\nInput: matrix =\n[\n  [0,1,1,1],\n  [1,1,1,1],\n  [0,1,1,1]\n]\nOutput: 15\nExplanation: \nThere are 10 squares of side 1.\nThere are 4 squares of side 2.\nThere is  1 square of side 3.\nTotal number of squares = 10 + 4 + 1 = 15.\n\n\nExample 2:\n\nInput: matrix = \n[\n  [1,0,1],\n  [1,1,0],\n  [1,1,0]\n]\nOutput: 7\nExplanation: \nThere are 6 squares of side 1.  \nThere is 1 square of side 2. \nTotal number of squares = 6 + 1 = 7.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 300\n1 <= arr[0].length <= 300\n0 <= arr[i][j] <= 1"},{"index":"1278","url":"https://leetcode.com/problems/palindrome-partitioning-iii","title":"Palindrome Partitioning III","difficulty":"Hard","description":"You are given a string s containing lowercase letters and an integer k. You need to :\n\nFirst, change some characters of s to other lowercase English letters.\nThen divide s into k non-empty disjoint substrings such that each substring is palindrome.\n\nReturn the minimal number of characters that you need to change to divide the string.\n\n \n\nExample 1:\n\nInput: s = \"abc\", k = 2\nOutput: 1\nExplanation: You can split the string into \"ab\" and \"c\", and change 1 character in \"ab\" to make it palindrome.\n\n\nExample 2:\n\nInput: s = \"aabbc\", k = 3\nOutput: 0\nExplanation: You can split the string into \"aa\", \"bb\" and \"c\", all of them are palindrome.\n\nExample 3:\n\nInput: s = \"leetcode\", k = 8\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= k <= s.length <= 100.\ns only contains lowercase English letters."},{"index":"1281","url":"https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer","title":"Subtract the Product and Sum of Digits of an Integer","difficulty":"Easy","description":"Given an integer number n, return the difference between the product of its digits and the sum of its digits.\n\n \n\nExample 1:\n\nInput: n = 234\nOutput: 15 \nExplanation: \nProduct of digits = 2 * 3 * 4 = 24 \nSum of digits = 2 + 3 + 4 = 9 \nResult = 24 - 9 = 15\n\n\nExample 2:\n\nInput: n = 4421\nOutput: 21\nExplanation: \nProduct of digits = 4 * 4 * 2 * 1 = 32 \nSum of digits = 4 + 4 + 2 + 1 = 11 \nResult = 32 - 11 = 21\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5"},{"index":"1282","url":"https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to","title":"Group the People Given the Group Size They Belong To","difficulty":"Medium","description":"There are n people that are split into some unknown number of groups. Each person is labeled with a unique ID from 0 to n - 1.\n\nYou are given an integer array groupSizes, where groupSizes[i] is the size of the group that person i is in. For example, if groupSizes[1] = 3, then person 1 must be in a group of size 3.\n\nReturn a list of groups such that each person i is in a group of size groupSizes[i].\n\nEach person should appear in exactly one group, and every person must be in a group. If there are multiple answers, return any of them. It is guaranteed that there will be at least one valid solution for the given input.\n\n \n\nExample 1:\n\nInput: groupSizes = [3,3,3,3,3,1,3]\nOutput: [[5],[0,1,2],[3,4,6]]\nExplanation: \nThe first group is [5]. The size is 1, and groupSizes[5] = 1.\nThe second group is [0,1,2]. The size is 3, and groupSizes[0] = groupSizes[1] = groupSizes[2] = 3.\nThe third group is [3,4,6]. The size is 3, and groupSizes[3] = groupSizes[4] = groupSizes[6] = 3.\nOther possible solutions are [[2,1,6],[5],[0,4,3]] and [[5],[0,6,2],[4,3,1]].\n\n\nExample 2:\n\nInput: groupSizes = [2,1,3,3,3,2]\nOutput: [[1],[0,5],[2,3,4]]\n\n\n \n\nConstraints:\n\ngroupSizes.length == n\n1 <= n <= 500\n1 <= groupSizes[i] <= n"},{"index":"1283","url":"https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold","title":"Find the Smallest Divisor Given a Threshold","difficulty":"Medium","description":"Given an array of integers nums and an integer threshold, we will choose a positive integer divisor and divide all the array by it and sum the result of the division. Find the smallest divisor such that the result mentioned above is less than or equal to threshold.\n\nEach result of division is rounded to the nearest integer greater than or equal to that element. (For example: 7/3 = 3 and 10/2 = 5).\n\nIt is guaranteed that there will be an answer.\n\n \n\nExample 1:\n\nInput: nums = [1,2,5,9], threshold = 6\nOutput: 5\nExplanation: We can get a sum to 17 (1+2+5+9) if the divisor is 1. \nIf the divisor is 4 we can get a sum to 7 (1+1+2+3) and if the divisor is 5 the sum will be 5 (1+1+1+2). \n\n\nExample 2:\n\nInput: nums = [2,3,5,7,11], threshold = 11\nOutput: 3\n\n\nExample 3:\n\nInput: nums = [19], threshold = 5\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 5 * 10^4\n1 <= nums[i] <= 10^6\nnums.length <= threshold <= 10^6"},{"index":"1284","url":"https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix","title":"Minimum Number of Flips to Convert Binary Matrix to Zero Matrix","difficulty":"Hard","description":"Given a m x n binary matrix mat. In one step, you can choose one cell and flip it and all the four neighbours of it if they exist (Flip is changing 1 to 0 and 0 to 1). A pair of cells are called neighboors if they share one edge.\n\nReturn the minimum number of steps required to convert mat to a zero matrix or -1 if you cannot.\n\nBinary matrix is a matrix with all cells equal to 0 or 1 only.\n\nZero matrix is a matrix with all cells equal to 0.\n\n \n\nExample 1:\n\nInput: mat = [[0,0],[0,1]]\nOutput: 3\nExplanation: One possible solution is to flip (1, 0) then (0, 1) and finally (1, 1) as shown.\n\n\nExample 2:\n\nInput: mat = [[0]]\nOutput: 0\nExplanation: Given matrix is a zero matrix. We don't need to change it.\n\n\nExample 3:\n\nInput: mat = [[1,1,1],[1,0,1],[0,0,0]]\nOutput: 6\n\n\nExample 4:\n\nInput: mat = [[1,0,0],[1,0,0]]\nOutput: -1\nExplanation: Given matrix can't be a zero matrix\n\n\n \n\nConstraints:\n\nm == mat.length\nn == mat[0].length\n1 <= m <= 3\n1 <= n <= 3\nmat[i][j] is 0 or 1."},{"index":"1286","url":"https://leetcode.com/problems/iterator-for-combination","title":"Iterator for Combination","difficulty":"Medium","description":"Design an Iterator class, which has:\n\nA constructor that takes a string characters of sorted distinct lowercase English letters and a number combinationLength as arguments.\nA function next() that returns the next combination of length combinationLength in lexicographical order.\nA function hasNext() that returns True if and only if there exists a next combination.\n\n \n\nExample:\n\nCombinationIterator iterator = new CombinationIterator(\"abc\", 2); // creates the iterator.\n\niterator.next(); // returns \"ab\"\niterator.hasNext(); // returns true\niterator.next(); // returns \"ac\"\niterator.hasNext(); // returns true\niterator.next(); // returns \"bc\"\niterator.hasNext(); // returns false\n\n\n \n\nConstraints:\n\n1 <= combinationLength <= characters.length <= 15\nThere will be at most 10^4 function calls per test.\nIt's guaranteed that all calls of the function next are valid."},{"index":"1287","url":"https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array","title":"Element Appearing More Than 25% In Sorted Array","difficulty":"Easy","description":"Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time.\n\nReturn that integer.\n\n \n\nExample 1:\n\nInput: arr = [1,2,2,6,6,6,6,7,10]\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^4\n0 <= arr[i] <= 10^5"},{"index":"1288","url":"https://leetcode.com/problems/remove-covered-intervals","title":"Remove Covered Intervals","difficulty":"Medium","description":"Given a list of intervals, remove all intervals that are covered by another interval in the list.\n\nInterval [a,b) is covered by interval [c,d) if and only if c <= a and b <= d.\n\nAfter doing so, return the number of remaining intervals.\n\n \n\nExample 1:\n\nInput: intervals = [[1,4],[3,6],[2,8]]\nOutput: 2\nExplanation: Interval [3,6] is covered by [2,8], therefore it is removed.\n\n\nExample 2:\n\nInput: intervals = [[1,4],[2,3]]\nOutput: 1\n\n\nExample 3:\n\nInput: intervals = [[0,10],[5,12]]\nOutput: 2\n\n\nExample 4:\n\nInput: intervals = [[3,10],[4,10],[5,11]]\nOutput: 2\n\n\nExample 5:\n\nInput: intervals = [[1,2],[1,4],[3,4]]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= intervals.length <= 1000\nintervals[i].length == 2\n0 <= intervals[i][0] < intervals[i][1] <= 10^5\nAll the intervals are unique."},{"index":"1289","url":"https://leetcode.com/problems/minimum-falling-path-sum-ii","title":"Minimum Falling Path Sum II","difficulty":"Hard","description":"Given a square grid of integers arr, a falling path with non-zero shifts is a choice of exactly one element from each row of arr, such that no two elements chosen in adjacent rows are in the same column.\n\nReturn the minimum sum of a falling path with non-zero shifts.\n\n \n\nExample 1:\n\nInput: arr = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: 13\nExplanation: \nThe possible falling paths are:\n[1,5,9], [1,5,7], [1,6,7], [1,6,8],\n[2,4,8], [2,4,9], [2,6,7], [2,6,8],\n[3,4,8], [3,4,9], [3,5,7], [3,5,9]\nThe falling path with the smallest sum is [1,5,7], so the answer is 13.\n\n\n \n\nConstraints:\n\n1 <= arr.length == arr[i].length <= 200\n-99 <= arr[i][j] <= 99"},{"index":"1290","url":"https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer","title":"Convert Binary Number in a Linked List to Integer","difficulty":"Easy","description":"Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.\n\nReturn the decimal value of the number in the linked list.\n\n \n\nExample 1:\n\nInput: head = [1,0,1]\nOutput: 5\nExplanation: (101) in base 2 = (5) in base 10\n\n\nExample 2:\n\nInput: head = [0]\nOutput: 0\n\n\nExample 3:\n\nInput: head = [1]\nOutput: 1\n\n\nExample 4:\n\nInput: head = [1,0,0,1,0,0,1,1,1,0,0,0,0,0,0]\nOutput: 18880\n\n\nExample 5:\n\nInput: head = [0,0]\nOutput: 0\n\n\n \n\nConstraints:\n\nThe Linked List is not empty.\nNumber of nodes will not exceed 30.\nEach node's value is either 0 or 1."},{"index":"1291","url":"https://leetcode.com/problems/sequential-digits","title":"Sequential Digits","difficulty":"Medium","description":"An integer has sequential digits if and only if each digit in the number is one more than the previous digit.\n\nReturn a sorted list of all the integers in the range [low, high] inclusive that have sequential digits.\n\n \n\nExample 1:\n\nInput: low = 100, high = 300\nOutput: [123,234]\n\n\nExample 2:\n\nInput: low = 1000, high = 13000\nOutput: [1234,2345,3456,4567,5678,6789,12345]\n\n\n \n\nConstraints:\n\n10 <= low <= high <= 10^9"},{"index":"1292","url":"https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold","title":"Maximum Side Length of a Square with Sum Less than or Equal to Threshold","difficulty":"Medium","description":"Given a m x n matrix mat and an integer threshold. Return the maximum side-length of a square with a sum less than or equal to threshold or return 0 if there is no such square.\n\n \n\nExample 1:\n\nInput: mat = [[1,1,3,2,4,3,2],[1,1,3,2,4,3,2],[1,1,3,2,4,3,2]], threshold = 4\nOutput: 2\nExplanation: The maximum side length of square with sum less than 4 is 2 as shown.\n\n\nExample 2:\n\nInput: mat = [[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], threshold = 1\nOutput: 0\n\n\nExample 3:\n\nInput: mat = [[1,1,1,1],[1,0,0,0],[1,0,0,0],[1,0,0,0]], threshold = 6\nOutput: 3\n\n\nExample 4:\n\nInput: mat = [[18,70],[61,1],[25,85],[14,40],[11,96],[97,96],[63,45]], threshold = 40184\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= m, n <= 300\nm == mat.length\nn == mat[i].length\n0 <= mat[i][j] <= 10000\n0 <= threshold <= 10^5"},{"index":"1293","url":"https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination","title":"Shortest Path in a Grid with Obstacles Elimination","difficulty":"Hard","description":"Given a m * n grid, where each cell is either 0 (empty) or 1 (obstacle). In one step, you can move up, down, left or right from and to an empty cell.\n\nReturn the minimum number of steps to walk from the upper left corner (0, 0) to the lower right corner (m-1, n-1) given that you can eliminate at most k obstacles. If it is not possible to find such walk return -1.\n\n \n\nExample 1:\n\nInput: \ngrid = \n[[0,0,0],\n [1,1,0],\n [0,0,0],\n [0,1,1],\n [0,0,0]], \nk = 1\nOutput: 6\nExplanation: \nThe shortest path without eliminating any obstacle is 10. \nThe shortest path with one obstacle elimination at position (3,2) is 6. Such path is (0,0) -> (0,1) -> (0,2) -> (1,2) -> (2,2) -> (3,2) -> (4,2).\n\n\n \n\nExample 2:\n\nInput: \ngrid = \n[[0,1,1],\n [1,1,1],\n [1,0,0]], \nk = 1\nOutput: -1\nExplanation: \nWe need to eliminate at least two obstacles to find such a walk.\n\n\n \n\nConstraints:\n\ngrid.length == m\ngrid[0].length == n\n1 <= m, n <= 40\n1 <= k <= m*n\ngrid[i][j] == 0 or 1\ngrid[0][0] == grid[m-1][n-1] == 0"},{"index":"1295","url":"https://leetcode.com/problems/find-numbers-with-even-number-of-digits","title":"Find Numbers with Even Number of Digits","difficulty":"Easy","description":"Given an array nums of integers, return how many of them contain an even number of digits.\n\n \n\nExample 1:\n\nInput: nums = [12,345,2,6,7896]\nOutput: 2\nExplanation: \n12 contains 2 digits (even number of digits). \n345 contains 3 digits (odd number of digits). \n2 contains 1 digit (odd number of digits). \n6 contains 1 digit (odd number of digits). \n7896 contains 4 digits (even number of digits). \nTherefore only 12 and 7896 contain an even number of digits.\n\n\nExample 2:\n\nInput: nums = [555,901,482,1771]\nOutput: 1 \nExplanation: \nOnly 1771 contains an even number of digits.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 500\n1 <= nums[i] <= 10^5"},{"index":"1296","url":"https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers","title":"Divide Array in Sets of K Consecutive Numbers","difficulty":"Medium","description":"Given an array of integers nums and a positive integer k, find whether it's possible to divide this array into sets of k consecutive numbers\nReturn True if its possible otherwise return False.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,3,4,4,5,6], k = 4\nOutput: true\nExplanation: Array can be divided into [1,2,3,4] and [3,4,5,6].\n\n\nExample 2:\n\nInput: nums = [3,2,1,2,3,4,3,4,5,9,10,11], k = 3\nOutput: true\nExplanation: Array can be divided into [1,2,3] , [2,3,4] , [3,4,5] and [9,10,11].\n\n\nExample 3:\n\nInput: nums = [3,3,2,2,1,1], k = 3\nOutput: true\n\n\nExample 4:\n\nInput: nums = [1,2,3,4], k = 3\nOutput: false\nExplanation: Each array should be divided in subarrays of size 3.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n1 <= nums[i] <= 10^9\n1 <= k <= nums.length\nNote: This question is the same as 846: https://leetcode.com/problems/hand-of-straights/"},{"index":"1297","url":"https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring","title":"Maximum Number of Occurrences of a Substring","difficulty":"Medium","description":"Given a string s, return the maximum number of ocurrences of any substring under the following rules:\n\nThe number of unique characters in the substring must be less than or equal to maxLetters.\nThe substring size must be between minSize and maxSize inclusive.\n\n \n\nExample 1:\n\nInput: s = \"aababcaab\", maxLetters = 2, minSize = 3, maxSize = 4\nOutput: 2\nExplanation: Substring \"aab\" has 2 ocurrences in the original string.\nIt satisfies the conditions, 2 unique letters and size 3 (between minSize and maxSize).\n\n\nExample 2:\n\nInput: s = \"aaaa\", maxLetters = 1, minSize = 3, maxSize = 3\nOutput: 2\nExplanation: Substring \"aaa\" occur 2 times in the string. It can overlap.\n\n\nExample 3:\n\nInput: s = \"aabcabcab\", maxLetters = 2, minSize = 2, maxSize = 3\nOutput: 3\n\n\nExample 4:\n\nInput: s = \"abcde\", maxLetters = 2, minSize = 3, maxSize = 3\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\n1 <= maxLetters <= 26\n1 <= minSize <= maxSize <= min(26, s.length)\ns only contains lowercase English letters."},{"index":"1298","url":"https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes","title":"Maximum Candies You Can Get from Boxes","difficulty":"Hard","description":"Given n boxes, each box is given in the format [status, candies, keys, containedBoxes] where:\n\nstatus[i]: an integer which is 1 if box[i] is open and 0 if box[i] is closed.\ncandies[i]: an integer representing the number of candies in box[i].\nkeys[i]: an array contains the indices of the boxes you can open with the key in box[i].\ncontainedBoxes[i]: an array contains the indices of the boxes found in box[i].\n\nYou will start with some boxes given in initialBoxes array. You can take all the candies in any open box and you can use the keys in it to open new boxes and you also can use the boxes you find in it.\n\nReturn the maximum number of candies you can get following the rules above.\n\n \n\nExample 1:\n\nInput: status = [1,0,1,0], candies = [7,5,4,100], keys = [[],[],[1],[]], containedBoxes = [[1,2],[3],[],[]], initialBoxes = [0]\nOutput: 16\nExplanation: You will be initially given box 0. You will find 7 candies in it and boxes 1 and 2. Box 1 is closed and you don't have a key for it so you will open box 2. You will find 4 candies and a key to box 1 in box 2.\nIn box 1, you will find 5 candies and box 3 but you will not find a key to box 3 so box 3 will remain closed.\nTotal number of candies collected = 7 + 4 + 5 = 16 candy.\n\n\nExample 2:\n\nInput: status = [1,0,0,0,0,0], candies = [1,1,1,1,1,1], keys = [[1,2,3,4,5],[],[],[],[],[]], containedBoxes = [[1,2,3,4,5],[],[],[],[],[]], initialBoxes = [0]\nOutput: 6\nExplanation: You have initially box 0. Opening it you can find boxes 1,2,3,4 and 5 and their keys. The total number of candies will be 6.\n\n\nExample 3:\n\nInput: status = [1,1,1], candies = [100,1,100], keys = [[],[0,2],[]], containedBoxes = [[],[],[]], initialBoxes = [1]\nOutput: 1\n\n\nExample 4:\n\nInput: status = [1], candies = [100], keys = [[]], containedBoxes = [[]], initialBoxes = []\nOutput: 0\n\n\nExample 5:\n\nInput: status = [1,1,1], candies = [2,3,2], keys = [[],[],[]], containedBoxes = [[],[],[]], initialBoxes = [2,1,0]\nOutput: 7\n\n\n \n\nConstraints:\n\n1 <= status.length <= 1000\nstatus.length == candies.length == keys.length == containedBoxes.length == n\nstatus[i] is 0 or 1.\n1 <= candies[i] <= 1000\n0 <= keys[i].length <= status.length\n0 <= keys[i][j] < status.length\nAll values in keys[i] are unique.\n0 <= containedBoxes[i].length <= status.length\n0 <= containedBoxes[i][j] < status.length\nAll values in containedBoxes[i] are unique.\nEach box is contained in one box at most.\n0 <= initialBoxes.length <= status.length\n0 <= initialBoxes[i] < status.length"},{"index":"1299","url":"https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side","title":"Replace Elements with Greatest Element on Right Side","difficulty":"Easy","description":"Given an array arr, replace every element in that array with the greatest element among the elements to its right, and replace the last element with -1.\n\nAfter doing so, return the array.\n\n \n\nExample 1:\n\nInput: arr = [17,18,5,4,6,1]\nOutput: [18,6,6,6,1,-1]\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^4\n1 <= arr[i] <= 10^5"},{"index":"1300","url":"https://leetcode.com/problems/sum-of-mutated-array-closest-to-target","title":"Sum of Mutated Array Closest to Target","difficulty":"Medium","description":"Given an integer array arr and a target value target, return the integer value such that when we change all the integers larger than value in the given array to be equal to value, the sum of the array gets as close as possible (in absolute difference) to target.\n\nIn case of a tie, return the minimum such integer.\n\nNotice that the answer is not neccesarilly a number from arr.\n\n \n\nExample 1:\n\nInput: arr = [4,9,3], target = 10\nOutput: 3\nExplanation: When using 3 arr converts to [3, 3, 3] which sums 9 and that's the optimal answer.\n\n\nExample 2:\n\nInput: arr = [2,3,5], target = 10\nOutput: 5\n\n\nExample 3:\n\nInput: arr = [60864,25176,27249,21296,20204], target = 56803\nOutput: 11361\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^4\n1 <= arr[i], target <= 10^5"},{"index":"1301","url":"https://leetcode.com/problems/number-of-paths-with-max-score","title":"Number of Paths with Max Score","difficulty":"Hard","description":"You are given a square board of characters. You can move on the board starting at the bottom right square marked with the character 'S'.\n\nYou need to reach the top left square marked with the character 'E'. The rest of the squares are labeled either with a numeric character 1, 2, ..., 9 or with an obstacle 'X'. In one move you can go up, left or up-left (diagonally) only if there is no obstacle there.\n\nReturn a list of two integers: the first integer is the maximum sum of numeric characters you can collect, and the second is the number of such paths that you can take to get that maximum sum, taken modulo 10^9 + 7.\n\nIn case there is no path, return [0, 0].\n\n \n\nExample 1:\n\nInput: board = [\"E23\",\"2X2\",\"12S\"]\nOutput: [7,1]\n\n\nExample 2:\n\nInput: board = [\"E12\",\"1X1\",\"21S\"]\nOutput: [4,2]\n\n\nExample 3:\n\nInput: board = [\"E11\",\"XXX\",\"11S\"]\nOutput: [0,0]\n\n\n \n\nConstraints:\n\n2 <= board.length == board[i].length <= 100"},{"index":"1302","url":"https://leetcode.com/problems/deepest-leaves-sum","title":"Deepest Leaves Sum","difficulty":"Medium","description":"Given a binary tree, return the sum of values of its deepest leaves.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\nOutput: 15\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is between 1 and 10^4.\nThe value of nodes is between 1 and 100."},{"index":"1304","url":"https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero","title":"Find N Unique Integers Sum up to Zero","difficulty":"Easy","description":"Given an integer n, return any array containing n unique integers such that they add up to 0.\n\n \n\nExample 1:\n\nInput: n = 5\nOutput: [-7,-1,1,3,4]\nExplanation: These arrays also are accepted [-5,-1,1,2,3] , [-3,-1,2,-2,4].\n\n\nExample 2:\n\nInput: n = 3\nOutput: [-1,0,1]\n\n\nExample 3:\n\nInput: n = 1\nOutput: [0]\n\n\n \n\nConstraints:\n\n1 <= n <= 1000"},{"index":"1305","url":"https://leetcode.com/problems/all-elements-in-two-binary-search-trees","title":"All Elements in Two Binary Search Trees","difficulty":"Medium","description":"Given two binary search trees root1 and root2.\n\nReturn a list containing all the integers from both trees sorted in ascending order.\n\n \n\nExample 1:\n\nInput: root1 = [2,1,4], root2 = [1,0,3]\nOutput: [0,1,1,2,3,4]\n\n\nExample 2:\n\nInput: root1 = [0,-10,10], root2 = [5,1,7,0,2]\nOutput: [-10,0,0,1,2,5,7,10]\n\n\nExample 3:\n\nInput: root1 = [], root2 = [5,1,7,0,2]\nOutput: [0,1,2,5,7]\n\n\nExample 4:\n\nInput: root1 = [0,-10,10], root2 = []\nOutput: [-10,0,10]\n\n\nExample 5:\n\nInput: root1 = [1,null,8], root2 = [8,1]\nOutput: [1,1,8,8]\n\n\n \n\nConstraints:\n\nEach tree has at most 5000 nodes.\nEach node's value is between [-10^5, 10^5]."},{"index":"1306","url":"https://leetcode.com/problems/jump-game-iii","title":"Jump Game III","difficulty":"Medium","description":"Given an array of non-negative integers arr, you are initially positioned at start index of the array. When you are at index i, you can jump to i + arr[i] or i - arr[i], check if you can reach to any index with value 0.\n\nNotice that you can not jump outside of the array at any time.\n\n \n\nExample 1:\n\nInput: arr = [4,2,3,0,3,1,2], start = 5\nOutput: true\nExplanation: \nAll possible ways to reach at index 3 with value 0 are: \nindex 5 -> index 4 -> index 1 -> index 3 \nindex 5 -> index 6 -> index 4 -> index 1 -> index 3 \n\n\nExample 2:\n\nInput: arr = [4,2,3,0,3,1,2], start = 0\nOutput: true \nExplanation: \nOne possible way to reach at index 3 with value 0 is: \nindex 0 -> index 4 -> index 1 -> index 3\n\n\nExample 3:\n\nInput: arr = [3,0,2,1,2], start = 2\nOutput: false\nExplanation: There is no way to reach at index 1 with value 0.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 5 * 10^4\n0 <= arr[i] < arr.length\n0 <= start < arr.length"},{"index":"1307","url":"https://leetcode.com/problems/verbal-arithmetic-puzzle","title":"Verbal Arithmetic Puzzle","difficulty":"Hard","description":"Given an equation, represented by words on left side and the result on right side.\n\nYou need to check if the equation is solvable under the following rules:\n\nEach character is decoded as one digit (0 - 9).\nEvery pair of different characters they must map to different digits.\nEach words[i] and result are decoded as one number without leading zeros.\nSum of numbers on left side (words) will equal to the number on right side (result). \n\nReturn True if the equation is solvable otherwise return False.\n\n \n\nExample 1:\n\nInput: words = [\"SEND\",\"MORE\"], result = \"MONEY\"\nOutput: true\nExplanation: Map 'S'-> 9, 'E'->5, 'N'->6, 'D'->7, 'M'->1, 'O'->0, 'R'->8, 'Y'->'2'\nSuch that: \"SEND\" + \"MORE\" = \"MONEY\" ,  9567 + 1085 = 10652\n\nExample 2:\n\nInput: words = [\"SIX\",\"SEVEN\",\"SEVEN\"], result = \"TWENTY\"\nOutput: true\nExplanation: Map 'S'-> 6, 'I'->5, 'X'->0, 'E'->8, 'V'->7, 'N'->2, 'T'->1, 'W'->'3', 'Y'->4\nSuch that: \"SIX\" + \"SEVEN\" + \"SEVEN\" = \"TWENTY\" ,  650 + 68782 + 68782 = 138214\n\nExample 3:\n\nInput: words = [\"THIS\",\"IS\",\"TOO\"], result = \"FUNNY\"\nOutput: true\n\n\nExample 4:\n\nInput: words = [\"LEET\",\"CODE\"], result = \"POINT\"\nOutput: false\n\n\n \n\nConstraints:\n\n2 <= words.length <= 5\n1 <= words[i].length, result.length <= 7\nwords[i], result contains only upper case English letters.\nNumber of different characters used on the expression is at most 10."},{"index":"1309","url":"https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping","title":"Decrypt String from Alphabet to Integer Mapping","difficulty":"Easy","description":"Given a string s formed by digits ('0' - '9') and '#' . We want to map s to English lowercase characters as follows:\n\nCharacters ('a' to 'i') are represented by ('1' to '9') respectively.\nCharacters ('j' to 'z') are represented by ('10#' to '26#') respectively. \n\nReturn the string formed after mapping.\n\nIt's guaranteed that a unique mapping will always exist.\n\n \n\nExample 1:\n\nInput: s = \"10#11#12\"\nOutput: \"jkab\"\nExplanation: \"j\" -> \"10#\" , \"k\" -> \"11#\" , \"a\" -> \"1\" , \"b\" -> \"2\".\n\n\nExample 2:\n\nInput: s = \"1326#\"\nOutput: \"acz\"\n\n\nExample 3:\n\nInput: s = \"25#\"\nOutput: \"y\"\n\n\nExample 4:\n\nInput: s = \"12345678910#11#12#13#14#15#16#17#18#19#20#21#22#23#24#25#26#\"\nOutput: \"abcdefghijklmnopqrstuvwxyz\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 1000\ns[i] only contains digits letters ('0'-'9') and '#' letter.\ns will be valid string such that mapping is always possible."},{"index":"1310","url":"https://leetcode.com/problems/xor-queries-of-a-subarray","title":"XOR Queries of a Subarray","difficulty":"Medium","description":"Given the array arr of positive integers and the array queries where queries[i] = [Li, Ri], for each query i compute the XOR of elements from Li to Ri (that is, arr[Li] xor arr[Li+1] xor ... xor arr[Ri] ). Return an array containing the result for the given queries.\n\n \n\nExample 1:\n\nInput: arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]\nOutput: [2,7,14,8] \nExplanation: \nThe binary representation of the elements in the array are:\n1 = 0001 \n3 = 0011 \n4 = 0100 \n8 = 1000 \nThe XOR values for queries are:\n[0,1] = 1 xor 3 = 2 \n[1,2] = 3 xor 4 = 7 \n[0,3] = 1 xor 3 xor 4 xor 8 = 14 \n[3,3] = 8\n\n\nExample 2:\n\nInput: arr = [4,8,2,10], queries = [[2,3],[1,3],[0,0],[0,3]]\nOutput: [8,0,4,4]\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 3 * 10^4\n1 <= arr[i] <= 10^9\n1 <= queries.length <= 3 * 10^4\nqueries[i].length == 2\n0 <= queries[i][0] <= queries[i][1] < arr.length"},{"index":"1311","url":"https://leetcode.com/problems/get-watched-videos-by-your-friends","title":"Get Watched Videos by Your Friends","difficulty":"Medium","description":"There are n people, each person has a unique id between 0 and n-1. Given the arrays watchedVideos and friends, where watchedVideos[i] and friends[i] contain the list of watched videos and the list of friends respectively for the person with id = i.\n\nLevel 1 of videos are all watched videos by your friends, level 2 of videos are all watched videos by the friends of your friends and so on. In general, the level k of videos are all watched videos by people with the shortest path exactly equal to k with you. Given your id and the level of videos, return the list of videos ordered by their frequencies (increasing). For videos with the same frequency order them alphabetically from least to greatest. \n\n \n\nExample 1:\n\nInput: watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 1\nOutput: [\"B\",\"C\"] \nExplanation: \nYou have id = 0 (green color in the figure) and your friends are (yellow color in the figure):\nPerson with id = 1 -> watchedVideos = [\"C\"] \nPerson with id = 2 -> watchedVideos = [\"B\",\"C\"] \nThe frequencies of watchedVideos by your friends are: \nB -> 1 \nC -> 2\n\n\nExample 2:\n\nInput: watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 2\nOutput: [\"D\"]\nExplanation: \nYou have id = 0 (green color in the figure) and the only friend of your friends is the person with id = 3 (yellow color in the figure).\n\n\n \n\nConstraints:\n\nn == watchedVideos.length == friends.length\n2 <= n <= 100\n1 <= watchedVideos[i].length <= 100\n1 <= watchedVideos[i][j].length <= 8\n0 <= friends[i].length < n\n0 <= friends[i][j] < n\n0 <= id < n\n1 <= level < n\nif friends[i] contains j, then friends[j] contains i"},{"index":"1312","url":"https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome","title":"Minimum Insertion Steps to Make a String Palindrome","difficulty":"Hard","description":"Given a string s. In one step you can insert any character at any index of the string.\n\nReturn the minimum number of steps to make s palindrome.\n\nA Palindrome String is one that reads the same backward as well as forward.\n\n \n\nExample 1:\n\nInput: s = \"zzazz\"\nOutput: 0\nExplanation: The string \"zzazz\" is already palindrome we don't need any insertions.\n\n\nExample 2:\n\nInput: s = \"mbadm\"\nOutput: 2\nExplanation: String can be \"mbdadbm\" or \"mdbabdm\".\n\n\nExample 3:\n\nInput: s = \"leetcode\"\nOutput: 5\nExplanation: Inserting 5 characters the string becomes \"leetcodocteel\".\n\n\nExample 4:\n\nInput: s = \"g\"\nOutput: 0\n\n\nExample 5:\n\nInput: s = \"no\"\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= s.length <= 500\nAll characters of s are lower case English letters."},{"index":"1313","url":"https://leetcode.com/problems/decompress-run-length-encoded-list","title":"Decompress Run-Length Encoded List","difficulty":"Easy","description":"We are given a list nums of integers representing a list compressed with run-length encoding.\n\nConsider each adjacent pair of elements [freq, val] = [nums[2*i], nums[2*i+1]] (with i >= 0).  For each such pair, there are freq elements with value val concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list.\n\nReturn the decompressed list.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,4]\nOutput: [2,4,4,4]\nExplanation: The first pair [1,2] means we have freq = 1 and val = 2 so we generate the array [2].\nThe second pair [3,4] means we have freq = 3 and val = 4 so we generate [4,4,4].\nAt the end the concatenation [2] + [4,4,4] is [2,4,4,4].\n\n\nExample 2:\n\nInput: nums = [1,1,2,3]\nOutput: [1,3,3]\n\n\n \n\nConstraints:\n\n2 <= nums.length <= 100\nnums.length % 2 == 0\n1 <= nums[i] <= 100"},{"index":"1314","url":"https://leetcode.com/problems/matrix-block-sum","title":"Matrix Block Sum","difficulty":"Medium","description":"Given a m * n matrix mat and an integer K, return a matrix answer where each answer[i][j] is the sum of all elements mat[r][c] for i - K <= r <= i + K, j - K <= c <= j + K, and (r, c) is a valid position in the matrix.\n\n \n\nExample 1:\n\nInput: mat = [[1,2,3],[4,5,6],[7,8,9]], K = 1\nOutput: [[12,21,16],[27,45,33],[24,39,28]]\n\n\nExample 2:\n\nInput: mat = [[1,2,3],[4,5,6],[7,8,9]], K = 2\nOutput: [[45,45,45],[45,45,45],[45,45,45]]\n\n\n \n\nConstraints:\n\nm == mat.length\nn == mat[i].length\n1 <= m, n, K <= 100\n1 <= mat[i][j] <= 100"},{"index":"1315","url":"https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent","title":"Sum of Nodes with Even-Valued Grandparent","difficulty":"Medium","description":"Given a binary tree, return the sum of values of nodes with even-valued grandparent.  (A grandparent of a node is the parent of its parent, if it exists.)\n\nIf there are no nodes with an even-valued grandparent, return 0.\n\n \n\nExample 1:\n\nInput: root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]\nOutput: 18\nExplanation: The red nodes are the nodes with even-value grandparent while the blue nodes are the even-value grandparents.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is between 1 and 10^4.\nThe value of nodes is between 1 and 100."},{"index":"1316","url":"https://leetcode.com/problems/distinct-echo-substrings","title":"Distinct Echo Substrings","difficulty":"Hard","description":"Return the number of distinct non-empty substrings of text that can be written as the concatenation of some string with itself (i.e. it can be written as a + a where a is some string).\n\n \n\nExample 1:\n\nInput: text = \"abcabcabc\"\nOutput: 3\nExplanation: The 3 substrings are \"abcabc\", \"bcabca\" and \"cabcab\".\n\n\nExample 2:\n\nInput: text = \"leetcodeleetcode\"\nOutput: 2\nExplanation: The 2 substrings are \"ee\" and \"leetcodeleetcode\".\n\n\n \n\nConstraints:\n\n1 <= text.length <= 2000\ntext has only lowercase English letters."},{"index":"1317","url":"https://leetcode.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers","title":"Convert Integer to the Sum of Two No-Zero Integers","difficulty":"Easy","description":"Given an integer n. No-Zero integer is a positive integer which doesn't contain any 0 in its decimal representation.\n\nReturn a list of two integers [A, B] where:\n\nA and B are No-Zero integers.\nA + B = n\n\nIt's guarateed that there is at least one valid solution. If there are many valid solutions you can return any of them.\n\n \n\nExample 1:\n\nInput: n = 2\nOutput: [1,1]\nExplanation: A = 1, B = 1. A + B = n and both A and B don't contain any 0 in their decimal representation.\n\n\nExample 2:\n\nInput: n = 11\nOutput: [2,9]\n\n\nExample 3:\n\nInput: n = 10000\nOutput: [1,9999]\n\n\nExample 4:\n\nInput: n = 69\nOutput: [1,68]\n\n\nExample 5:\n\nInput: n = 1010\nOutput: [11,999]\n\n\n \n\nConstraints:\n\n2 <= n <= 10^4"},{"index":"1318","url":"https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c","title":"Minimum Flips to Make a OR b Equal to c","difficulty":"Medium","description":"Given 3 positives numbers a, b and c. Return the minimum flips required in some bits of a and b to make ( a OR b == c ). (bitwise OR operation).\nFlip operation consists of change any single bit 1 to 0 or change the bit 0 to 1 in their binary representation.\n\n \n\nExample 1:\n\nInput: a = 2, b = 6, c = 5\nOutput: 3\nExplanation: After flips a = 1 , b = 4 , c = 5 such that (a OR b == c)\n\nExample 2:\n\nInput: a = 4, b = 2, c = 7\nOutput: 1\n\n\nExample 3:\n\nInput: a = 1, b = 2, c = 3\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= a <= 10^9\n1 <= b <= 10^9\n1 <= c <= 10^9"},{"index":"1319","url":"https://leetcode.com/problems/number-of-operations-to-make-network-connected","title":"Number of Operations to Make Network Connected","difficulty":"Medium","description":"There are n computers numbered from 0 to n-1 connected by ethernet cables connections forming a network where connections[i] = [a, b] represents a connection between computers a and b. Any computer can reach any other computer directly or indirectly through the network.\n\nGiven an initial computer network connections. You can extract certain cables between two directly connected computers, and place them between any pair of disconnected computers to make them directly connected. Return the minimum number of times you need to do this in order to make all the computers connected. If it's not possible, return -1. \n\n \n\nExample 1:\n\nInput: n = 4, connections = [[0,1],[0,2],[1,2]]\nOutput: 1\nExplanation: Remove cable between computer 1 and 2 and place between computers 1 and 3.\n\n\nExample 2:\n\nInput: n = 6, connections = [[0,1],[0,2],[0,3],[1,2],[1,3]]\nOutput: 2\n\n\nExample 3:\n\nInput: n = 6, connections = [[0,1],[0,2],[0,3],[1,2]]\nOutput: -1\nExplanation: There are not enough cables.\n\n\nExample 4:\n\nInput: n = 5, connections = [[0,1],[0,2],[3,4],[2,3]]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5\n1 <= connections.length <= min(n*(n-1)/2, 10^5)\nconnections[i].length == 2\n0 <= connections[i][0], connections[i][1] < n\nconnections[i][0] != connections[i][1]\nThere are no repeated connections.\nNo two computers are connected by more than one cable."},{"index":"1320","url":"https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers","title":"Minimum Distance to Type a Word Using Two Fingers","difficulty":"Hard","description":"You have a keyboard layout as shown above in the XY plane, where each English uppercase letter is located at some coordinate, for example, the letter A is located at coordinate (0,0), the letter B is located at coordinate (0,1), the letter P is located at coordinate (2,3) and the letter Z is located at coordinate (4,1).\n\nGiven the string word, return the minimum total distance to type such string using only two fingers. The distance between coordinates (x1,y1) and (x2,y2) is |x1 - x2| + |y1 - y2|. \n\nNote that the initial positions of your two fingers are considered free so don't count towards your total distance, also your two fingers do not have to start at the first letter or the first two letters.\n\n \n\nExample 1:\n\nInput: word = \"CAKE\"\nOutput: 3\nExplanation: \nUsing two fingers, one optimal way to type \"CAKE\" is: \nFinger 1 on letter 'C' -> cost = 0 \nFinger 1 on letter 'A' -> cost = Distance from letter 'C' to letter 'A' = 2 \nFinger 2 on letter 'K' -> cost = 0 \nFinger 2 on letter 'E' -> cost = Distance from letter 'K' to letter 'E' = 1 \nTotal distance = 3\n\n\nExample 2:\n\nInput: word = \"HAPPY\"\nOutput: 6\nExplanation: \nUsing two fingers, one optimal way to type \"HAPPY\" is:\nFinger 1 on letter 'H' -> cost = 0\nFinger 1 on letter 'A' -> cost = Distance from letter 'H' to letter 'A' = 2\nFinger 2 on letter 'P' -> cost = 0\nFinger 2 on letter 'P' -> cost = Distance from letter 'P' to letter 'P' = 0\nFinger 1 on letter 'Y' -> cost = Distance from letter 'A' to letter 'Y' = 4\nTotal distance = 6\n\n\nExample 3:\n\nInput: word = \"NEW\"\nOutput: 3\n\n\nExample 4:\n\nInput: word = \"YEAR\"\nOutput: 7\n\n\n \n\nConstraints:\n\n2 <= word.length <= 300\nEach word[i] is an English uppercase letter."},{"index":"1323","url":"https://leetcode.com/problems/maximum-69-number","title":"Maximum 69 Number","difficulty":"Easy","description":"Given a positive integer num consisting only of digits 6 and 9.\n\nReturn the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6).\n\n \n\nExample 1:\n\nInput: num = 9669\nOutput: 9969\nExplanation: \nChanging the first digit results in 6669.\nChanging the second digit results in 9969.\nChanging the third digit results in 9699.\nChanging the fourth digit results in 9666. \nThe maximum number is 9969.\n\n\nExample 2:\n\nInput: num = 9996\nOutput: 9999\nExplanation: Changing the last digit 6 to 9 results in the maximum number.\n\nExample 3:\n\nInput: num = 9999\nOutput: 9999\nExplanation: It is better not to apply any change.\n\n \n\nConstraints:\n\n1 <= num <= 10^4\nnum's digits are 6 or 9."},{"index":"1324","url":"https://leetcode.com/problems/print-words-vertically","title":"Print Words Vertically","difficulty":"Medium","description":"Given a string s. Return all the words vertically in the same order in which they appear in s.\nWords are returned as a list of strings, complete with spaces when is necessary. (Trailing spaces are not allowed).\nEach word would be put on only one column and that in one column there will be only one word.\n\n \n\nExample 1:\n\nInput: s = \"HOW ARE YOU\"\nOutput: [\"HAY\",\"ORO\",\"WEU\"]\nExplanation: Each word is printed vertically. \n \"HAY\"\n \"ORO\"\n \"WEU\"\n\n\nExample 2:\n\nInput: s = \"TO BE OR NOT TO BE\"\nOutput: [\"TBONTB\",\"OEROOE\",\"   T\"]\nExplanation: Trailing spaces is not allowed. \n\"TBONTB\"\n\"OEROOE\"\n\"   T\"\n\n\nExample 3:\n\nInput: s = \"CONTEST IS COMING\"\nOutput: [\"CIC\",\"OSO\",\"N M\",\"T I\",\"E N\",\"S G\",\"T\"]\n\n\n \n\nConstraints:\n\n1 <= s.length <= 200\ns contains only upper case English letters.\nIt's guaranteed that there is only one space between 2 words."},{"index":"1325","url":"https://leetcode.com/problems/delete-leaves-with-a-given-value","title":"Delete Leaves With a Given Value","difficulty":"Medium","description":"Given a binary tree root and an integer target, delete all the leaf nodes with value target.\n\nNote that once you delete a leaf node with value target, if it's parent node becomes a leaf node and has the value target, it should also be deleted (you need to continue doing that until you can't).\n\n \n\nExample 1:\n\nInput: root = [1,2,3,2,null,2,4], target = 2\nOutput: [1,null,3,null,4]\nExplanation: Leaf nodes in green with value (target = 2) are removed (Picture in left). \nAfter removing, new nodes become leaf nodes with value (target = 2) (Picture in center).\n\n\nExample 2:\n\nInput: root = [1,3,3,3,2], target = 3\nOutput: [1,3,null,null,2]\n\n\nExample 3:\n\nInput: root = [1,2,null,2,null,2], target = 2\nOutput: [1]\nExplanation: Leaf nodes in green with value (target = 2) are removed at each step.\n\n\nExample 4:\n\nInput: root = [1,1,1], target = 1\nOutput: []\n\n\nExample 5:\n\nInput: root = [1,2,3], target = 1\nOutput: [1,2,3]\n\n\n \n\nConstraints:\n\n1 <= target <= 1000\nThe given binary tree will have between 1 and 3000 nodes.\nEach node's value is between [1, 1000]."},{"index":"1326","url":"https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden","title":"Minimum Number of Taps to Open to Water a Garden","difficulty":"Hard","description":"There is a one-dimensional garden on the x-axis. The garden starts at the point 0 and ends at the point n. (i.e The length of the garden is n).\n\nThere are n + 1 taps located at points [0, 1, ..., n] in the garden.\n\nGiven an integer n and an integer array ranges of length n + 1 where ranges[i] (0-indexed) means the i-th tap can water the area [i - ranges[i], i + ranges[i]] if it was open.\n\nReturn the minimum number of taps that should be open to water the whole garden, If the garden cannot be watered return -1.\n\n \n\nExample 1:\n\nInput: n = 5, ranges = [3,4,1,1,0,0]\nOutput: 1\nExplanation: The tap at point 0 can cover the interval [-3,3]\nThe tap at point 1 can cover the interval [-3,5]\nThe tap at point 2 can cover the interval [1,3]\nThe tap at point 3 can cover the interval [2,4]\nThe tap at point 4 can cover the interval [4,4]\nThe tap at point 5 can cover the interval [5,5]\nOpening Only the second tap will water the whole garden [0,5]\n\n\nExample 2:\n\nInput: n = 3, ranges = [0,0,0,0]\nOutput: -1\nExplanation: Even if you activate all the four taps you cannot water the whole garden.\n\n\nExample 3:\n\nInput: n = 7, ranges = [1,2,1,0,2,1,0,1]\nOutput: 3\n\n\nExample 4:\n\nInput: n = 8, ranges = [4,0,0,0,0,0,0,0,4]\nOutput: 2\n\n\nExample 5:\n\nInput: n = 8, ranges = [4,0,0,0,4,0,0,0,4]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= n <= 10^4\nranges.length == n + 1\n0 <= ranges[i] <= 100"},{"index":"1328","url":"https://leetcode.com/problems/break-a-palindrome","title":"Break a Palindrome","difficulty":"Medium","description":"Given a palindromic string palindrome, replace exactly one character by any lowercase English letter so that the string becomes the lexicographically smallest possible string that isn't a palindrome.\n\nAfter doing so, return the final string.  If there is no way to do so, return the empty string.\n\n \n\nExample 1:\n\nInput: palindrome = \"abccba\"\nOutput: \"aaccba\"\n\n\nExample 2:\n\nInput: palindrome = \"a\"\nOutput: \"\"\n\n\n \n\nConstraints:\n\n1 <= palindrome.length <= 1000\npalindrome consists of only lowercase English letters."},{"index":"1329","url":"https://leetcode.com/problems/sort-the-matrix-diagonally","title":"Sort the Matrix Diagonally","difficulty":"Medium","description":"Given a m * n matrix mat of integers, sort it diagonally in ascending order from the top-left to the bottom-right then return the sorted array.\n\n \n\nExample 1:\n\nInput: mat = [[3,3,1,1],[2,2,1,2],[1,1,1,2]]\nOutput: [[1,1,1,1],[1,2,2,2],[1,2,3,3]]\n\n\n \n\nConstraints:\n\nm == mat.length\nn == mat[i].length\n1 <= m, n <= 100\n1 <= mat[i][j] <= 100"},{"index":"1330","url":"https://leetcode.com/problems/reverse-subarray-to-maximize-array-value","title":"Reverse Subarray To Maximize Array Value","difficulty":"Hard","description":"You are given an integer array nums. The value of this array is defined as the sum of |nums[i]-nums[i+1]| for all 0 <= i < nums.length-1.\n\nYou are allowed to select any subarray of the given array and reverse it. You can perform this operation only once.\n\nFind maximum possible value of the final array.\n\n \n\nExample 1:\n\nInput: nums = [2,3,1,5,4]\nOutput: 10\nExplanation: By reversing the subarray [3,1,5] the array becomes [2,5,1,3,4] whose value is 10.\n\n\nExample 2:\n\nInput: nums = [2,4,9,24,2,1,10]\nOutput: 68\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 3*10^4\n-10^5 <= nums[i] <= 10^5"},{"index":"1331","url":"https://leetcode.com/problems/rank-transform-of-an-array","title":"Rank Transform of an Array","difficulty":"Easy","description":"Given an array of integers arr, replace each element with its rank.\n\nThe rank represents how large the element is. The rank has the following rules:\n\nRank is an integer starting from 1.\nThe larger the element, the larger the rank. If two elements are equal, their rank must be the same.\nRank should be as small as possible.\n\n \n\nExample 1:\n\nInput: arr = [40,10,20,30]\nOutput: [4,1,2,3]\nExplanation: 40 is the largest element. 10 is the smallest. 20 is the second smallest. 30 is the third smallest.\n\nExample 2:\n\nInput: arr = [100,100,100]\nOutput: [1,1,1]\nExplanation: Same elements share the same rank.\n\n\nExample 3:\n\nInput: arr = [37,12,28,9,100,56,80,5,12]\nOutput: [5,3,4,2,8,6,7,1,3]\n\n\n \n\nConstraints:\n\n0 <= arr.length <= 105\n-109 <= arr[i] <= 109"},{"index":"1332","url":"https://leetcode.com/problems/remove-palindromic-subsequences","title":"Remove Palindromic Subsequences","difficulty":"Easy","description":"Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.\n\nReturn the minimum number of steps to make the given string empty.\n\nA string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.\n\nA string is called palindrome if is one that reads the same backward as well as forward.\n\n \n\nExample 1:\n\nInput: s = \"ababa\"\nOutput: 1\nExplanation: String is already palindrome\n\n\nExample 2:\n\nInput: s = \"abb\"\nOutput: 2\nExplanation: \"abb\" -> \"bb\" -> \"\". \nRemove palindromic subsequence \"a\" then \"bb\".\n\n\nExample 3:\n\nInput: s = \"baabb\"\nOutput: 2\nExplanation: \"baabb\" -> \"b\" -> \"\". \nRemove palindromic subsequence \"baab\" then \"b\".\n\n\nExample 4:\n\nInput: s = \"\"\nOutput: 0\n\n\n \n\nConstraints:\n\n0 <= s.length <= 1000\ns only consists of letters 'a' and 'b'"},{"index":"1333","url":"https://leetcode.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance","title":"Filter Restaurants by Vegan-Friendly, Price and Distance","difficulty":"Medium","description":"Given the array restaurants where  restaurants[i] = [idi, ratingi, veganFriendlyi, pricei, distancei]. You have to filter the restaurants using three filters.\n\nThe veganFriendly filter will be either true (meaning you should only include restaurants with veganFriendlyi set to true) or false (meaning you can include any restaurant). In addition, you have the filters maxPrice and maxDistance which are the maximum value for price and distance of restaurants you should consider respectively.\n\nReturn the array of restaurant IDs after filtering, ordered by rating from highest to lowest. For restaurants with the same rating, order them by id from highest to lowest. For simplicity veganFriendlyi and veganFriendly take value 1 when it is true, and 0 when it is false.\n\n \n\nExample 1:\n\nInput: restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 1, maxPrice = 50, maxDistance = 10\nOutput: [3,1,5] \nExplanation: \nThe restaurants are:\nRestaurant 1 [id=1, rating=4, veganFriendly=1, price=40, distance=10]\nRestaurant 2 [id=2, rating=8, veganFriendly=0, price=50, distance=5]\nRestaurant 3 [id=3, rating=8, veganFriendly=1, price=30, distance=4]\nRestaurant 4 [id=4, rating=10, veganFriendly=0, price=10, distance=3]\nRestaurant 5 [id=5, rating=1, veganFriendly=1, price=15, distance=1] \nAfter filter restaurants with veganFriendly = 1, maxPrice = 50 and maxDistance = 10 we have restaurant 3, restaurant 1 and restaurant 5 (ordered by rating from highest to lowest). \n\n\nExample 2:\n\nInput: restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 50, maxDistance = 10\nOutput: [4,3,2,1,5]\nExplanation: The restaurants are the same as in example 1, but in this case the filter veganFriendly = 0, therefore all restaurants are considered.\n\n\nExample 3:\n\nInput: restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 30, maxDistance = 3\nOutput: [4,5]\n\n\n \n\nConstraints:\n\n1 <= restaurants.length <= 10^4\nrestaurants[i].length == 5\n1 <= idi, ratingi, pricei, distancei <= 10^5\n1 <= maxPrice, maxDistance <= 10^5\nveganFriendlyi and veganFriendly are 0 or 1.\nAll idi are distinct."},{"index":"1334","url":"https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance","title":"Find the City With the Smallest Number of Neighbors at a Threshold Distance","difficulty":"Medium","description":"There are n cities numbered from 0 to n-1. Given the array edges where edges[i] = [fromi, toi, weighti] represents a bidirectional and weighted edge between cities fromi and toi, and given the integer distanceThreshold.\n\nReturn the city with the smallest number of cities that are reachable through some path and whose distance is at most distanceThreshold, If there are multiple such cities, return the city with the greatest number.\n\nNotice that the distance of a path connecting cities i and j is equal to the sum of the edges' weights along that path.\n\n \n\nExample 1:\n\nInput: n = 4, edges = [[0,1,3],[1,2,1],[1,3,4],[2,3,1]], distanceThreshold = 4\nOutput: 3\nExplanation: The figure above describes the graph. \nThe neighboring cities at a distanceThreshold = 4 for each city are:\nCity 0 -> [City 1, City 2] \nCity 1 -> [City 0, City 2, City 3] \nCity 2 -> [City 0, City 1, City 3] \nCity 3 -> [City 1, City 2] \nCities 0 and 3 have 2 neighboring cities at a distanceThreshold = 4, but we have to return city 3 since it has the greatest number.\n\n\nExample 2:\n\nInput: n = 5, edges = [[0,1,2],[0,4,8],[1,2,3],[1,4,2],[2,3,1],[3,4,1]], distanceThreshold = 2\nOutput: 0\nExplanation: The figure above describes the graph. \nThe neighboring cities at a distanceThreshold = 2 for each city are:\nCity 0 -> [City 1] \nCity 1 -> [City 0, City 4] \nCity 2 -> [City 3, City 4] \nCity 3 -> [City 2, City 4]\nCity 4 -> [City 1, City 2, City 3] \nThe city 0 has 1 neighboring city at a distanceThreshold = 2.\n\n\n \n\nConstraints:\n\n2 <= n <= 100\n1 <= edges.length <= n * (n - 1) / 2\nedges[i].length == 3\n0 <= fromi < toi < n\n1 <= weighti, distanceThreshold <= 10^4\nAll pairs (fromi, toi) are distinct."},{"index":"1335","url":"https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule","title":"Minimum Difficulty of a Job Schedule","difficulty":"Hard","description":"You want to schedule a list of jobs in d days. Jobs are dependent (i.e To work on the i-th job, you have to finish all the jobs j where 0 <= j < i).\n\nYou have to finish at least one task every day. The difficulty of a job schedule is the sum of difficulties of each day of the d days. The difficulty of a day is the maximum difficulty of a job done in that day.\n\nGiven an array of integers jobDifficulty and an integer d. The difficulty of the i-th job is jobDifficulty[i].\n\nReturn the minimum difficulty of a job schedule. If you cannot find a schedule for the jobs return -1.\n\n \n\nExample 1:\n\nInput: jobDifficulty = [6,5,4,3,2,1], d = 2\nOutput: 7\nExplanation: First day you can finish the first 5 jobs, total difficulty = 6.\nSecond day you can finish the last job, total difficulty = 1.\nThe difficulty of the schedule = 6 + 1 = 7 \n\n\nExample 2:\n\nInput: jobDifficulty = [9,9,9], d = 4\nOutput: -1\nExplanation: If you finish a job per day you will still have a free day. you cannot find a schedule for the given jobs.\n\n\nExample 3:\n\nInput: jobDifficulty = [1,1,1], d = 3\nOutput: 3\nExplanation: The schedule is one job per day. total difficulty will be 3.\n\n\nExample 4:\n\nInput: jobDifficulty = [7,1,7,1,7,1], d = 3\nOutput: 15\n\n\nExample 5:\n\nInput: jobDifficulty = [11,111,22,222,33,333,44,444], d = 6\nOutput: 843\n\n\n \n\nConstraints:\n\n1 <= jobDifficulty.length <= 300\n0 <= jobDifficulty[i] <= 1000\n1 <= d <= 10"},{"index":"1337","url":"https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix","title":"The K Weakest Rows in a Matrix","difficulty":"Easy","description":"Given a m * n matrix mat of ones (representing soldiers) and zeros (representing civilians), return the indexes of the k weakest rows in the matrix ordered from the weakest to the strongest.\n\nA row i is weaker than row j, if the number of soldiers in row i is less than the number of soldiers in row j, or they have the same number of soldiers but i is less than j. Soldiers are always stand in the frontier of a row, that is, always ones may appear first and then zeros.\n\n \n\nExample 1:\n\nInput: mat = \n[[1,1,0,0,0],\n [1,1,1,1,0],\n [1,0,0,0,0],\n [1,1,0,0,0],\n [1,1,1,1,1]], \nk = 3\nOutput: [2,0,3]\nExplanation: \nThe number of soldiers for each row is: \nrow 0 -> 2 \nrow 1 -> 4 \nrow 2 -> 1 \nrow 3 -> 2 \nrow 4 -> 5 \nRows ordered from the weakest to the strongest are [2,0,3,1,4]\n\n\nExample 2:\n\nInput: mat = \n[[1,0,0,0],\n [1,1,1,1],\n [1,0,0,0],\n [1,0,0,0]], \nk = 2\nOutput: [0,2]\nExplanation: \nThe number of soldiers for each row is: \nrow 0 -> 1 \nrow 1 -> 4 \nrow 2 -> 1 \nrow 3 -> 1 \nRows ordered from the weakest to the strongest are [0,2,3,1]\n\n\n \n\nConstraints:\n\nm == mat.length\nn == mat[i].length\n2 <= n, m <= 100\n1 <= k <= m\nmatrix[i][j] is either 0 or 1."},{"index":"1338","url":"https://leetcode.com/problems/reduce-array-size-to-the-half","title":"Reduce Array Size to The Half","difficulty":"Medium","description":"Given an array arr.  You can choose a set of integers and remove all the occurrences of these integers in the array.\n\nReturn the minimum size of the set so that at least half of the integers of the array are removed.\n\n \n\nExample 1:\n\nInput: arr = [3,3,3,3,5,5,5,2,2,7]\nOutput: 2\nExplanation: Choosing {3,7} will make the new array [5,5,5,2,2] which has size 5 (i.e equal to half of the size of the old array).\nPossible sets of size 2 are {3,5},{3,2},{5,2}.\nChoosing set {2,7} is not possible as it will make the new array [3,3,3,3,5,5,5] which has size greater than half of the size of the old array.\n\n\nExample 2:\n\nInput: arr = [7,7,7,7,7,7]\nOutput: 1\nExplanation: The only possible set you can choose is {7}. This will make the new array empty.\n\n\nExample 3:\n\nInput: arr = [1,9]\nOutput: 1\n\n\nExample 4:\n\nInput: arr = [1000,1000,3,7]\nOutput: 1\n\n\nExample 5:\n\nInput: arr = [1,2,3,4,5,6,7,8,9,10]\nOutput: 5\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\narr.length is even.\n1 <= arr[i] <= 10^5"},{"index":"1339","url":"https://leetcode.com/problems/maximum-product-of-splitted-binary-tree","title":"Maximum Product of Splitted Binary Tree","difficulty":"Medium","description":"Given a binary tree root. Split the binary tree into two subtrees by removing 1 edge such that the product of the sums of the subtrees are maximized.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,4,5,6]\nOutput: 110\nExplanation: Remove the red edge and get 2 binary trees with sum 11 and 10. Their product is 110 (11*10)\n\n\nExample 2:\n\nInput: root = [1,null,2,3,4,null,null,5,6]\nOutput: 90\nExplanation:  Remove the red edge and get 2 binary trees with sum 15 and 6.Their product is 90 (15*6)\n\n\nExample 3:\n\nInput: root = [2,3,9,10,7,8,6,5,4,11,1]\nOutput: 1025\n\n\nExample 4:\n\nInput: root = [1,1]\nOutput: 1\n\n\n \n\nConstraints:\n\nEach tree has at most 50000 nodes and at least 2 nodes.\nEach node's value is between [1, 10000]."},{"index":"1340","url":"https://leetcode.com/problems/jump-game-v","title":"Jump Game V","difficulty":"Hard","description":"Given an array of integers arr and an integer d. In one step you can jump from index i to index:\n\ni + x where: i + x < arr.length and 0 < x <= d.\ni - x where: i - x >= 0 and 0 < x <= d.\n\nIn addition, you can only jump from index i to index j if arr[i] > arr[j] and arr[i] > arr[k] for all indices k between i and j (More formally min(i, j) < k < max(i, j)).\n\nYou can choose any index of the array and start jumping. Return the maximum number of indices you can visit.\n\nNotice that you can not jump outside of the array at any time.\n\n \n\nExample 1:\n\nInput: arr = [6,4,14,6,8,13,9,7,10,6,12], d = 2\nOutput: 4\nExplanation: You can start at index 10. You can jump 10 --> 8 --> 6 --> 7 as shown.\nNote that if you start at index 6 you can only jump to index 7. You cannot jump to index 5 because 13 > 9. You cannot jump to index 4 because index 5 is between index 4 and 6 and 13 > 9.\nSimilarly You cannot jump from index 3 to index 2 or index 1.\n\n\nExample 2:\n\nInput: arr = [3,3,3,3,3], d = 3\nOutput: 1\nExplanation: You can start at any index. You always cannot jump to any index.\n\n\nExample 3:\n\nInput: arr = [7,6,5,4,3,2,1], d = 1\nOutput: 7\nExplanation: Start at index 0. You can visit all the indicies. \n\n\nExample 4:\n\nInput: arr = [7,1,7,1,7,1], d = 2\nOutput: 2\n\n\nExample 5:\n\nInput: arr = [66], d = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 1000\n1 <= arr[i] <= 10^5\n1 <= d <= arr.length"},{"index":"1342","url":"https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero","title":"Number of Steps to Reduce a Number to Zero","difficulty":"Easy","description":"Given a non-negative integer num, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.\n\n \n\nExample 1:\n\nInput: num = 14\nOutput: 6\nExplanation: \nStep 1) 14 is even; divide by 2 and obtain 7. \nStep 2) 7 is odd; subtract 1 and obtain 6.\nStep 3) 6 is even; divide by 2 and obtain 3. \nStep 4) 3 is odd; subtract 1 and obtain 2. \nStep 5) 2 is even; divide by 2 and obtain 1. \nStep 6) 1 is odd; subtract 1 and obtain 0.\n\n\nExample 2:\n\nInput: num = 8\nOutput: 4\nExplanation: \nStep 1) 8 is even; divide by 2 and obtain 4. \nStep 2) 4 is even; divide by 2 and obtain 2. \nStep 3) 2 is even; divide by 2 and obtain 1. \nStep 4) 1 is odd; subtract 1 and obtain 0.\n\n\nExample 3:\n\nInput: num = 123\nOutput: 12\n\n\n \n\nConstraints:\n\n0 <= num <= 10^6"},{"index":"1343","url":"https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold","title":"Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold","difficulty":"Medium","description":"Given an array of integers arr and two integers k and threshold.\n\nReturn the number of sub-arrays of size k and average greater than or equal to threshold.\n\n \n\nExample 1:\n\nInput: arr = [2,2,2,2,5,5,5,8], k = 3, threshold = 4\nOutput: 3\nExplanation: Sub-arrays [2,5,5],[5,5,5] and [5,5,8] have averages 4, 5 and 6 respectively. All other sub-arrays of size 3 have averages less than 4 (the threshold).\n\n\nExample 2:\n\nInput: arr = [1,1,1,1,1], k = 1, threshold = 0\nOutput: 5\n\n\nExample 3:\n\nInput: arr = [11,13,17,23,29,31,7,5,2,3], k = 3, threshold = 5\nOutput: 6\nExplanation: The first 6 sub-arrays of size 3 have averages greater than 5. Note that averages are not integers.\n\n\nExample 4:\n\nInput: arr = [7,7,7,7,7,7,7], k = 7, threshold = 7\nOutput: 1\n\n\nExample 5:\n\nInput: arr = [4,4,4,4], k = 4, threshold = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n1 <= arr[i] <= 10^4\n1 <= k <= arr.length\n0 <= threshold <= 10^4"},{"index":"1344","url":"https://leetcode.com/problems/angle-between-hands-of-a-clock","title":"Angle Between Hands of a Clock","difficulty":"Medium","description":"Given two numbers, hour and minutes. Return the smaller angle (in degrees) formed between the hour and the minute hand.\n\n \n\nExample 1:\n\nInput: hour = 12, minutes = 30\nOutput: 165\n\n\nExample 2:\n\nInput: hour = 3, minutes = 30\nOutput: 75\n\n\nExample 3:\n\nInput: hour = 3, minutes = 15\nOutput: 7.5\n\n\nExample 4:\n\nInput: hour = 4, minutes = 50\nOutput: 155\n\n\nExample 5:\n\nInput: hour = 12, minutes = 0\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= hour <= 12\n0 <= minutes <= 59\nAnswers within 10^-5 of the actual value will be accepted as correct."},{"index":"1345","url":"https://leetcode.com/problems/jump-game-iv","title":"Jump Game IV","difficulty":"Hard","description":"Given an array of integers arr, you are initially positioned at the first index of the array.\n\nIn one step you can jump from index i to index:\n\ni + 1 where: i + 1 < arr.length.\ni - 1 where: i - 1 >= 0.\nj where: arr[i] == arr[j] and i != j.\n\nReturn the minimum number of steps to reach the last index of the array.\n\nNotice that you can not jump outside of the array at any time.\n\n \n\nExample 1:\n\nInput: arr = [100,-23,-23,404,100,23,23,23,3,404]\nOutput: 3\nExplanation: You need three jumps from index 0 --> 4 --> 3 --> 9. Note that index 9 is the last index of the array.\n\n\nExample 2:\n\nInput: arr = [7]\nOutput: 0\nExplanation: Start index is the last index. You don't need to jump.\n\n\nExample 3:\n\nInput: arr = [7,6,9,6,9,6,9,7]\nOutput: 1\nExplanation: You can jump directly from index 0 to index 7 which is last index of the array.\n\n\nExample 4:\n\nInput: arr = [6,1,9]\nOutput: 2\n\n\nExample 5:\n\nInput: arr = [11,22,7,7,7,7,7,7,7,22,13]\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 5 * 10^4\n-10^8 <= arr[i] <= 10^8"},{"index":"1346","url":"https://leetcode.com/problems/check-if-n-and-its-double-exist","title":"Check If N and Its Double Exist","difficulty":"Easy","description":"Given an array arr of integers, check if there exists two integers N and M such that N is the double of M ( i.e. N = 2 * M).\n\nMore formally check if there exists two indices i and j such that :\n\ni != j\n0 <= i, j < arr.length\narr[i] == 2 * arr[j]\n\n \n\nExample 1:\n\nInput: arr = [10,2,5,3]\nOutput: true\nExplanation: N = 10 is the double of M = 5,that is, 10 = 2 * 5.\n\n\nExample 2:\n\nInput: arr = [7,1,14,11]\nOutput: true\nExplanation: N = 14 is the double of M = 7,that is, 14 = 2 * 7.\n\n\nExample 3:\n\nInput: arr = [3,1,7,11]\nOutput: false\nExplanation: In this case does not exist N and M, such that N = 2 * M.\n\n\n \n\nConstraints:\n\n2 <= arr.length <= 500\n-10^3 <= arr[i] <= 10^3"},{"index":"1347","url":"https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram","title":"Minimum Number of Steps to Make Two Strings Anagram","difficulty":"Medium","description":"Given two equal-size strings s and t. In one step you can choose any character of t and replace it with another character.\n\nReturn the minimum number of steps to make t an anagram of s.\n\nAn Anagram of a string is a string that contains the same characters with a different (or the same) ordering.\n\n \n\nExample 1:\n\nInput: s = \"bab\", t = \"aba\"\nOutput: 1\nExplanation: Replace the first 'a' in t with b, t = \"bba\" which is anagram of s.\n\n\nExample 2:\n\nInput: s = \"leetcode\", t = \"practice\"\nOutput: 5\nExplanation: Replace 'p', 'r', 'a', 'i' and 'c' from t with proper characters to make t anagram of s.\n\n\nExample 3:\n\nInput: s = \"anagram\", t = \"mangaar\"\nOutput: 0\nExplanation: \"anagram\" and \"mangaar\" are anagrams. \n\n\nExample 4:\n\nInput: s = \"xxyyzz\", t = \"xxyyzz\"\nOutput: 0\n\n\nExample 5:\n\nInput: s = \"friend\", t = \"family\"\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= s.length <= 50000\ns.length == t.length\ns and t contain lower-case English letters only."},{"index":"1348","url":"https://leetcode.com/problems/tweet-counts-per-frequency","title":"Tweet Counts Per Frequency","difficulty":"Medium","description":"Implement the class TweetCounts that supports two methods:\n\n1. recordTweet(string tweetName, int time)\n\nStores the tweetName at the recorded time (in seconds).\n\n2. getTweetCountsPerFrequency(string freq, string tweetName, int startTime, int endTime)\n\nReturns the total number of occurrences for the given tweetName per minute, hour, or day (depending on freq) starting from the startTime (in seconds) and ending at the endTime (in seconds).\nfreq is always minute, hour or day, representing the time interval to get the total number of occurrences for the given tweetName.\nThe first time interval always starts from the startTime, so the time intervals are [startTime, startTime + delta*1>,  [startTime + delta*1, startTime + delta*2>, [startTime + delta*2, startTime + delta*3>, ... , [startTime + delta*i, min(startTime + delta*(i+1), endTime + 1)> for some non-negative number i and delta (which depends on freq).  \n\n \n\nExample:\n\nInput\n[\"TweetCounts\",\"recordTweet\",\"recordTweet\",\"recordTweet\",\"getTweetCountsPerFrequency\",\"getTweetCountsPerFrequency\",\"recordTweet\",\"getTweetCountsPerFrequency\"]\n[[],[\"tweet3\",0],[\"tweet3\",60],[\"tweet3\",10],[\"minute\",\"tweet3\",0,59],[\"minute\",\"tweet3\",0,60],[\"tweet3\",120],[\"hour\",\"tweet3\",0,210]]\n\nOutput\n[null,null,null,null,[2],[2,1],null,[4]]\n\nExplanation\nTweetCounts tweetCounts = new TweetCounts();\ntweetCounts.recordTweet(\"tweet3\", 0);\ntweetCounts.recordTweet(\"tweet3\", 60);\ntweetCounts.recordTweet(\"tweet3\", 10);                             // All tweets correspond to \"tweet3\" with recorded times at 0, 10 and 60.\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 59); // return [2]. The frequency is per minute (60 seconds), so there is one interval of time: 1) [0, 60> - > 2 tweets.\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 60); // return [2, 1]. The frequency is per minute (60 seconds), so there are two intervals of time: 1) [0, 60> - > 2 tweets, and 2) [60,61> - > 1 tweet.\ntweetCounts.recordTweet(\"tweet3\", 120);                            // All tweets correspond to \"tweet3\" with recorded times at 0, 10, 60 and 120.\ntweetCounts.getTweetCountsPerFrequency(\"hour\", \"tweet3\", 0, 210);  // return [4]. The frequency is per hour (3600 seconds), so there is one interval of time: 1) [0, 211> - > 4 tweets.\n\n\n \n\nConstraints:\n\nThere will be at most 10000 operations considering both recordTweet and getTweetCountsPerFrequency.\n0 <= time, startTime, endTime <= 10^9\n0 <= endTime - startTime <= 10^4"},{"index":"1349","url":"https://leetcode.com/problems/maximum-students-taking-exam","title":"Maximum Students Taking Exam","difficulty":"Hard","description":"Given a m * n matrix seats  that represent seats distributions in a classroom. If a seat is broken, it is denoted by '#' character otherwise it is denoted by a '.' character.\n\nStudents can see the answers of those sitting next to the left, right, upper left and upper right, but he cannot see the answers of the student sitting directly in front or behind him. Return the maximum number of students that can take the exam together without any cheating being possible..\n\nStudents must be placed in seats in good condition.\n\n \n\nExample 1:\n\nInput: seats = [[\"#\",\".\",\"#\",\"#\",\".\",\"#\"],\n                [\".\",\"#\",\"#\",\"#\",\"#\",\".\"],\n                [\"#\",\".\",\"#\",\"#\",\".\",\"#\"]]\nOutput: 4\nExplanation: Teacher can place 4 students in available seats so they don't cheat on the exam. \n\n\nExample 2:\n\nInput: seats = [[\".\",\"#\"],\n                [\"#\",\"#\"],\n                [\"#\",\".\"],\n                [\"#\",\"#\"],\n                [\".\",\"#\"]]\nOutput: 3\nExplanation: Place all students in available seats. \n\n\n\nExample 3:\n\nInput: seats = [[\"#\",\".\",\".\",\".\",\"#\"],\n                [\".\",\"#\",\".\",\"#\",\".\"],\n                [\".\",\".\",\"#\",\".\",\".\"],\n                [\".\",\"#\",\".\",\"#\",\".\"],\n                [\"#\",\".\",\".\",\".\",\"#\"]]\nOutput: 10\nExplanation: Place students in available seats in column 1, 3 and 5.\n\n\n \n\nConstraints:\n\nseats contains only characters '.' and'#'.\nm == seats.length\nn == seats[i].length\n1 <= m <= 8\n1 <= n <= 8"},{"index":"1351","url":"https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix","title":"Count Negative Numbers in a Sorted Matrix","difficulty":"Easy","description":"Given a m * n matrix grid which is sorted in non-increasing order both row-wise and column-wise. \n\nReturn the number of negative numbers in grid.\n\n \n\nExample 1:\n\nInput: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]\nOutput: 8\nExplanation: There are 8 negatives number in the matrix.\n\n\nExample 2:\n\nInput: grid = [[3,2],[1,0]]\nOutput: 0\n\n\nExample 3:\n\nInput: grid = [[1,-1],[-1,-1]]\nOutput: 3\n\n\nExample 4:\n\nInput: grid = [[-1]]\nOutput: 1\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 100\n-100 <= grid[i][j] <= 100"},{"index":"1352","url":"https://leetcode.com/problems/product-of-the-last-k-numbers","title":"Product of the Last K Numbers","difficulty":"Medium","description":"Implement the class ProductOfNumbers that supports two methods:\n\n1. add(int num)\n\nAdds the number num to the back of the current list of numbers.\n\n2. getProduct(int k)\n\nReturns the product of the last k numbers in the current list.\nYou can assume that always the current list has at least k numbers.\n\nAt any time, the product of any contiguous sequence of numbers will fit into a single 32-bit integer without overflowing.\n\n \n\nExample:\n\nInput\n[\"ProductOfNumbers\",\"add\",\"add\",\"add\",\"add\",\"add\",\"getProduct\",\"getProduct\",\"getProduct\",\"add\",\"getProduct\"]\n[[],[3],[0],[2],[5],[4],[2],[3],[4],[8],[2]]\n\nOutput\n[null,null,null,null,null,null,20,40,0,null,32]\n\nExplanation\nProductOfNumbers productOfNumbers = new ProductOfNumbers();\nproductOfNumbers.add(3);        // [3]\nproductOfNumbers.add(0);        // [3,0]\nproductOfNumbers.add(2);        // [3,0,2]\nproductOfNumbers.add(5);        // [3,0,2,5]\nproductOfNumbers.add(4);        // [3,0,2,5,4]\nproductOfNumbers.getProduct(2); // return 20. The product of the last 2 numbers is 5 * 4 = 20\nproductOfNumbers.getProduct(3); // return 40. The product of the last 3 numbers is 2 * 5 * 4 = 40\nproductOfNumbers.getProduct(4); // return 0. The product of the last 4 numbers is 0 * 2 * 5 * 4 = 0\nproductOfNumbers.add(8);        // [3,0,2,5,4,8]\nproductOfNumbers.getProduct(2); // return 32. The product of the last 2 numbers is 4 * 8 = 32 \n\n\n \n\nConstraints:\n\nThere will be at most 40000 operations considering both add and getProduct.\n0 <= num <= 100\n1 <= k <= 40000"},{"index":"1353","url":"https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended","title":"Maximum Number of Events That Can Be Attended","difficulty":"Medium","description":"Given an array of events where events[i] = [startDayi, endDayi]. Every event i starts at startDayi and ends at endDayi.\n\nYou can attend an event i at any day d where startTimei <= d <= endTimei. Notice that you can only attend one event at any time d.\n\nReturn the maximum number of events you can attend.\n\n \n\nExample 1:\n\nInput: events = [[1,2],[2,3],[3,4]]\nOutput: 3\nExplanation: You can attend all the three events.\nOne way to attend them all is as shown.\nAttend the first event on day 1.\nAttend the second event on day 2.\nAttend the third event on day 3.\n\n\nExample 2:\n\nInput: events= [[1,2],[2,3],[3,4],[1,2]]\nOutput: 4\n\n\nExample 3:\n\nInput: events = [[1,4],[4,4],[2,2],[3,4],[1,1]]\nOutput: 4\n\n\nExample 4:\n\nInput: events = [[1,100000]]\nOutput: 1\n\n\nExample 5:\n\nInput: events = [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7]]\nOutput: 7\n\n\n \n\nConstraints:\n\n1 <= events.length <= 105\nevents[i].length == 2\n1 <= startDayi <= endDayi <= 105"},{"index":"1354","url":"https://leetcode.com/problems/construct-target-array-with-multiple-sums","title":"Construct Target Array With Multiple Sums","difficulty":"Hard","description":"Given an array of integers target. From a starting array, A consisting of all 1's, you may perform the following procedure :\n\nlet x be the sum of all elements currently in your array.\nchoose index i, such that 0 <= i < target.size and set the value of A at index i to x.\nYou may repeat this procedure as many times as needed.\n\nReturn True if it is possible to construct the target array from A otherwise return False.\n\n \n\nExample 1:\n\nInput: target = [9,3,5]\nOutput: true\nExplanation: Start with [1, 1, 1] \n[1, 1, 1], sum = 3 choose index 1\n[1, 3, 1], sum = 5 choose index 2\n[1, 3, 5], sum = 9 choose index 0\n[9, 3, 5] Done\n\n\nExample 2:\n\nInput: target = [1,1,1,2]\nOutput: false\nExplanation: Impossible to create target array from [1,1,1,1].\n\n\nExample 3:\n\nInput: target = [8,5]\nOutput: true\n\n\n \n\nConstraints:\n\nN == target.length\n1 <= target.length <= 5 * 10^4\n1 <= target[i] <= 10^9"},{"index":"1356","url":"https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits","title":"Sort Integers by The Number of 1 Bits","difficulty":"Easy","description":"Given an integer array arr. You have to sort the integers in the array in ascending order by the number of 1's in their binary representation and in case of two or more integers have the same number of 1's you have to sort them in ascending order.\n\nReturn the sorted array.\n\n \n\nExample 1:\n\nInput: arr = [0,1,2,3,4,5,6,7,8]\nOutput: [0,1,2,4,8,3,5,6,7]\nExplantion: [0] is the only integer with 0 bits.\n[1,2,4,8] all have 1 bit.\n[3,5,6] have 2 bits.\n[7] has 3 bits.\nThe sorted array by bits is [0,1,2,4,8,3,5,6,7]\n\n\nExample 2:\n\nInput: arr = [1024,512,256,128,64,32,16,8,4,2,1]\nOutput: [1,2,4,8,16,32,64,128,256,512,1024]\nExplantion: All integers have 1 bit in the binary representation, you should just sort them in ascending order.\n\n\nExample 3:\n\nInput: arr = [10000,10000]\nOutput: [10000,10000]\n\n\nExample 4:\n\nInput: arr = [2,3,5,7,11,13,17,19]\nOutput: [2,3,5,17,7,11,13,19]\n\n\nExample 5:\n\nInput: arr = [10,100,1000,10000]\nOutput: [10,100,10000,1000]\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 500\n0 <= arr[i] <= 10^4"},{"index":"1357","url":"https://leetcode.com/problems/apply-discount-every-n-orders","title":"Apply Discount Every n Orders","difficulty":"Medium","description":"There is a sale in a supermarket, there will be a discount every n customer.\nThere are some products in the supermarket where the id of the i-th product is products[i] and the price per unit of this product is prices[i].\nThe system will count the number of customers and when the n-th customer arrive he/she will have a discount on the bill. (i.e if the cost is x the new cost is x - (discount * x) / 100). Then the system will start counting customers again.\nThe customer orders a certain amount of each product where product[i] is the id of the i-th product the customer ordered and amount[i] is the number of units the customer ordered of that product.\n\nImplement the Cashier class:\n\nCashier(int n, int discount, int[] products, int[] prices) Initializes the object with n, the discount, the products and their prices.\ndouble getBill(int[] product, int[] amount) returns the value of the bill and apply the discount if needed. Answers within 10^-5 of the actual value will be accepted as correct.\n\n \n\nExample 1:\n\nInput\n[\"Cashier\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\"]\n[[3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]],[[1,2],[1,2]],[[3,7],[10,10]],[[1,2,3,4,5,6,7],[1,1,1,1,1,1,1]],[[4],[10]],[[7,3],[10,10]],[[7,5,3,1,6,4,2],[10,10,10,9,9,9,7]],[[2,3,5],[5,3,2]]]\nOutput\n[null,500.0,4000.0,800.0,4000.0,4000.0,7350.0,2500.0]\nExplanation\nCashier cashier = new Cashier(3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]);\ncashier.getBill([1,2],[1,2]);                        // return 500.0, bill = 1 * 100 + 2 * 200 = 500.\ncashier.getBill([3,7],[10,10]);                      // return 4000.0\ncashier.getBill([1,2,3,4,5,6,7],[1,1,1,1,1,1,1]);    // return 800.0, The bill was 1600.0 but as this is the third customer, he has a discount of 50% which means his bill is only 1600 - 1600 * (50 / 100) = 800.\ncashier.getBill([4],[10]);                           // return 4000.0\ncashier.getBill([7,3],[10,10]);                      // return 4000.0\ncashier.getBill([7,5,3,1,6,4,2],[10,10,10,9,9,9,7]); // return 7350.0, Bill was 14700.0 but as the system counted three more customers, he will have a 50% discount and the bill becomes 7350.0\ncashier.getBill([2,3,5],[5,3,2]);                    // return 2500.0\n\n\n \n\nConstraints:\n\n1 <= n <= 10^4\n0 <= discount <= 100\n1 <= products.length <= 200\n1 <= products[i] <= 200\nThere are not repeated elements in the array products.\nprices.length == products.length\n1 <= prices[i] <= 1000\n1 <= product.length <= products.length\nproduct[i] exists in products.\namount.length == product.length\n1 <= amount[i] <= 1000\nAt most 1000 calls will be made to getBill.\nAnswers within 10^-5 of the actual value will be accepted as correct."},{"index":"1358","url":"https://leetcode.com/problems/number-of-substrings-containing-all-three-characters","title":"Number of Substrings Containing All Three Characters","difficulty":"Medium","description":"Given a string s consisting only of characters a, b and c.\n\nReturn the number of substrings containing at least one occurrence of all these characters a, b and c.\n\n \n\nExample 1:\n\nInput: s = \"abcabc\"\nOutput: 10\nExplanation: The substrings containing at least one occurrence of the characters a, b and c are \"abc\", \"abca\", \"abcab\", \"abcabc\", \"bca\", \"bcab\", \"bcabc\", \"cab\", \"cabc\" and \"abc\" (again). \n\n\nExample 2:\n\nInput: s = \"aaacb\"\nOutput: 3\nExplanation: The substrings containing at least one occurrence of the characters a, b and c are \"aaacb\", \"aacb\" and \"acb\". \n\n\nExample 3:\n\nInput: s = \"abc\"\nOutput: 1\n\n\n \n\nConstraints:\n\n3 <= s.length <= 5 x 10^4\ns only consists of a, b or c characters."},{"index":"1359","url":"https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options","title":"Count All Valid Pickup and Delivery Options","difficulty":"Hard","description":"Given n orders, each order consist in pickup and delivery services. \n\nCount all valid pickup/delivery possible sequences such that delivery(i) is always after of pickup(i). \n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: 1\nExplanation: Unique order (P1, D1), Delivery 1 always is after of Pickup 1.\n\n\nExample 2:\n\nInput: n = 2\nOutput: 6\nExplanation: All possible orders: \n(P1,P2,D1,D2), (P1,P2,D2,D1), (P1,D1,P2,D2), (P2,P1,D1,D2), (P2,P1,D2,D1) and (P2,D2,P1,D1).\nThis is an invalid order (P1,D2,P2,D1) because Pickup 2 is after of Delivery 2.\n\n\nExample 3:\n\nInput: n = 3\nOutput: 90\n\n\n \n\nConstraints:\n\n1 <= n <= 500"},{"index":"1360","url":"https://leetcode.com/problems/number-of-days-between-two-dates","title":"Number of Days Between Two Dates","difficulty":"Easy","description":"Write a program to count the number of days between two dates.\n\nThe two dates are given as strings, their format is YYYY-MM-DD as shown in the examples.\n\n \n\nExample 1:\n\nInput: date1 = \"2019-06-29\", date2 = \"2019-06-30\"\nOutput: 1\n\n\nExample 2:\n\nInput: date1 = \"2020-01-15\", date2 = \"2019-12-31\"\nOutput: 15\n\n\n \n\nConstraints:\n\nThe given dates are valid dates between the years 1971 and 2100."},{"index":"1361","url":"https://leetcode.com/problems/validate-binary-tree-nodes","title":"Validate Binary Tree Nodes","difficulty":"Medium","description":"You have n binary tree nodes numbered from 0 to n - 1 where node i has two children leftChild[i] and rightChild[i], return true if and only if all the given nodes form exactly one valid binary tree.\n\nIf node i has no left child then leftChild[i] will equal -1, similarly for the right child.\n\nNote that the nodes have no values and that we only use the node numbers in this problem.\n\n \n\nExample 1:\n\nInput: n = 4, leftChild = [1,-1,3,-1], rightChild = [2,-1,-1,-1]\nOutput: true\n\n\nExample 2:\n\nInput: n = 4, leftChild = [1,-1,3,-1], rightChild = [2,3,-1,-1]\nOutput: false\n\n\nExample 3:\n\nInput: n = 2, leftChild = [1,0], rightChild = [-1,-1]\nOutput: false\n\n\nExample 4:\n\nInput: n = 6, leftChild = [1,-1,-1,4,-1,-1], rightChild = [2,-1,-1,5,-1,-1]\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= n <= 10^4\nleftChild.length == rightChild.length == n\n-1 <= leftChild[i], rightChild[i] <= n - 1"},{"index":"1362","url":"https://leetcode.com/problems/closest-divisors","title":"Closest Divisors","difficulty":"Medium","description":"Given an integer num, find the closest two integers in absolute difference whose product equals num + 1 or num + 2.\n\nReturn the two integers in any order.\n\n \n\nExample 1:\n\nInput: num = 8\nOutput: [3,3]\nExplanation: For num + 1 = 9, the closest divisors are 3 & 3, for num + 2 = 10, the closest divisors are 2 & 5, hence 3 & 3 is chosen.\n\n\nExample 2:\n\nInput: num = 123\nOutput: [5,25]\n\n\nExample 3:\n\nInput: num = 999\nOutput: [40,25]\n\n\n \n\nConstraints:\n\n1 <= num <= 10^9"},{"index":"1363","url":"https://leetcode.com/problems/largest-multiple-of-three","title":"Largest Multiple of Three","difficulty":"Hard","description":"Given an integer array of digits, return the largest multiple of three that can be formed by concatenating some of the given digits in any order.\n\nSince the answer may not fit in an integer data type, return the answer as a string.\n\nIf there is no answer return an empty string.\n\n \n\nExample 1:\n\nInput: digits = [8,1,9]\nOutput: \"981\"\n\n\nExample 2:\n\nInput: digits = [8,6,7,1,0]\nOutput: \"8760\"\n\n\nExample 3:\n\nInput: digits = [1]\nOutput: \"\"\n\n\nExample 4:\n\nInput: digits = [0,0,0,0,0,0]\nOutput: \"0\"\n\n\n \n\nConstraints:\n\n1 <= digits.length <= 10^4\n0 <= digits[i] <= 9\nThe returning answer must not contain unnecessary leading zeros."},{"index":"1365","url":"https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number","title":"How Many Numbers Are Smaller Than the Current Number","difficulty":"Easy","description":"Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i].\n\nReturn the answer in an array.\n\n \n\nExample 1:\n\nInput: nums = [8,1,2,2,3]\nOutput: [4,0,1,1,3]\nExplanation: \nFor nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3). \nFor nums[1]=1 does not exist any smaller number than it.\nFor nums[2]=2 there exist one smaller number than it (1). \nFor nums[3]=2 there exist one smaller number than it (1). \nFor nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).\n\n\nExample 2:\n\nInput: nums = [6,5,4,8]\nOutput: [2,1,0,3]\n\n\nExample 3:\n\nInput: nums = [7,7,7,7]\nOutput: [0,0,0,0]\n\n\n \n\nConstraints:\n\n2 <= nums.length <= 500\n0 <= nums[i] <= 100"},{"index":"1366","url":"https://leetcode.com/problems/rank-teams-by-votes","title":"Rank Teams by Votes","difficulty":"Medium","description":"In a special ranking system, each voter gives a rank from highest to lowest to all teams participated in the competition.\n\nThe ordering of teams is decided by who received the most position-one votes. If two or more teams tie in the first position, we consider the second position to resolve the conflict, if they tie again, we continue this process until the ties are resolved. If two or more teams are still tied after considering all positions, we rank them alphabetically based on their team letter.\n\nGiven an array of strings votes which is the votes of all voters in the ranking systems. Sort all teams according to the ranking system described above.\n\nReturn a string of all teams sorted by the ranking system.\n\n \n\nExample 1:\n\nInput: votes = [\"ABC\",\"ACB\",\"ABC\",\"ACB\",\"ACB\"]\nOutput: \"ACB\"\nExplanation: Team A was ranked first place by 5 voters. No other team was voted as first place so team A is the first team.\nTeam B was ranked second by 2 voters and was ranked third by 3 voters.\nTeam C was ranked second by 3 voters and was ranked third by 2 voters.\nAs most of the voters ranked C second, team C is the second team and team B is the third.\n\n\nExample 2:\n\nInput: votes = [\"WXYZ\",\"XYZW\"]\nOutput: \"XWYZ\"\nExplanation: X is the winner due to tie-breaking rule. X has same votes as W for the first position but X has one vote as second position while W doesn't have any votes as second position. \n\n\nExample 3:\n\nInput: votes = [\"ZMNAGUEDSJYLBOPHRQICWFXTVK\"]\nOutput: \"ZMNAGUEDSJYLBOPHRQICWFXTVK\"\nExplanation: Only one voter so his votes are used for the ranking.\n\n\nExample 4:\n\nInput: votes = [\"BCA\",\"CAB\",\"CBA\",\"ABC\",\"ACB\",\"BAC\"]\nOutput: \"ABC\"\nExplanation: \nTeam A was ranked first by 2 voters, second by 2 voters and third by 2 voters.\nTeam B was ranked first by 2 voters, second by 2 voters and third by 2 voters.\nTeam C was ranked first by 2 voters, second by 2 voters and third by 2 voters.\nThere is a tie and we rank teams ascending by their IDs.\n\n\nExample 5:\n\nInput: votes = [\"M\",\"M\",\"M\",\"M\"]\nOutput: \"M\"\nExplanation: Only team M in the competition so it has the first rank.\n\n\n \n\nConstraints:\n\n1 <= votes.length <= 1000\n1 <= votes[i].length <= 26\nvotes[i].length == votes[j].length for 0 <= i, j < votes.length.\nvotes[i][j] is an English upper-case letter.\nAll characters of votes[i] are unique.\nAll the characters that occur in votes[0] also occur in votes[j] where 1 <= j < votes.length."},{"index":"1367","url":"https://leetcode.com/problems/linked-list-in-binary-tree","title":"Linked List in Binary Tree","difficulty":"Medium","description":"Given a binary tree root and a linked list with head as the first node. \n\nReturn True if all the elements in the linked list starting from the head correspond to some downward path connected in the binary tree otherwise return False.\n\nIn this context downward path means a path that starts at some node and goes downwards.\n\n \n\nExample 1:\n\nInput: head = [4,2,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\nOutput: true\nExplanation: Nodes in blue form a subpath in the binary Tree.  \n\n\nExample 2:\n\nInput: head = [1,4,2,6], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\nOutput: true\n\n\nExample 3:\n\nInput: head = [1,4,2,6,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\nOutput: false\nExplanation: There is no path in the binary tree that contains all the elements of the linked list from head.\n\n\n \n\nConstraints:\n\n1 <= node.val <= 100 for each node in the linked list and binary tree.\nThe given linked list will contain between 1 and 100 nodes.\nThe given binary tree will contain between 1 and 2500 nodes."},{"index":"1368","url":"https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid","title":"Minimum Cost to Make at Least One Valid Path in a Grid","difficulty":"Hard","description":"Given a m x n grid. Each cell of the grid has a sign pointing to the next cell you should visit if you are currently in this cell. The sign of grid[i][j] can be:\n1 which means go to the cell to the right. (i.e go from grid[i][j] to grid[i][j + 1])\n2 which means go to the cell to the left. (i.e go from grid[i][j] to grid[i][j - 1])\n3 which means go to the lower cell. (i.e go from grid[i][j] to grid[i + 1][j])\n4 which means go to the upper cell. (i.e go from grid[i][j] to grid[i - 1][j])\n\nNotice that there could be some invalid signs on the cells of the grid which points outside the grid.\n\nYou will initially start at the upper left cell (0,0). A valid path in the grid is a path which starts from the upper left cell (0,0) and ends at the bottom-right cell (m - 1, n - 1) following the signs on the grid. The valid path doesn't have to be the shortest.\n\nYou can modify the sign on a cell with cost = 1. You can modify the sign on a cell one time only.\n\nReturn the minimum cost to make the grid have at least one valid path.\n\n \n\nExample 1:\n\nInput: grid = [[1,1,1,1],[2,2,2,2],[1,1,1,1],[2,2,2,2]]\nOutput: 3\nExplanation: You will start at point (0, 0).\nThe path to (3, 3) is as follows. (0, 0) --> (0, 1) --> (0, 2) --> (0, 3) change the arrow to down with cost = 1 --> (1, 3) --> (1, 2) --> (1, 1) --> (1, 0) change the arrow to down with cost = 1 --> (2, 0) --> (2, 1) --> (2, 2) --> (2, 3) change the arrow to down with cost = 1 --> (3, 3)\nThe total cost = 3.\n\n\nExample 2:\n\nInput: grid = [[1,1,3],[3,2,2],[1,1,4]]\nOutput: 0\nExplanation: You can follow the path from (0, 0) to (2, 2).\n\n\nExample 3:\n\nInput: grid = [[1,2],[4,3]]\nOutput: 1\n\n\nExample 4:\n\nInput: grid = [[2,2,2],[2,2,2]]\nOutput: 3\n\n\nExample 5:\n\nInput: grid = [[4]]\nOutput: 0\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 100"},{"index":"1370","url":"https://leetcode.com/problems/increasing-decreasing-string","title":"Increasing Decreasing String","difficulty":"Easy","description":"Given a string s. You should re-order the string using the following algorithm:\n\nPick the smallest character from s and append it to the result.\nPick the smallest character from s which is greater than the last appended character to the result and append it.\nRepeat step 2 until you cannot pick more characters.\nPick the largest character from s and append it to the result.\nPick the largest character from s which is smaller than the last appended character to the result and append it.\nRepeat step 5 until you cannot pick more characters.\nRepeat the steps from 1 to 6 until you pick all characters from s.\n\nIn each step, If the smallest or the largest character appears more than once you can choose any occurrence and append it to the result.\n\nReturn the result string after sorting s with this algorithm.\n\n \n\nExample 1:\n\nInput: s = \"aaaabbbbcccc\"\nOutput: \"abccbaabccba\"\nExplanation: After steps 1, 2 and 3 of the first iteration, result = \"abc\"\nAfter steps 4, 5 and 6 of the first iteration, result = \"abccba\"\nFirst iteration is done. Now s = \"aabbcc\" and we go back to step 1\nAfter steps 1, 2 and 3 of the second iteration, result = \"abccbaabc\"\nAfter steps 4, 5 and 6 of the second iteration, result = \"abccbaabccba\"\n\n\nExample 2:\n\nInput: s = \"rat\"\nOutput: \"art\"\nExplanation: The word \"rat\" becomes \"art\" after re-ordering it with the mentioned algorithm.\n\n\nExample 3:\n\nInput: s = \"leetcode\"\nOutput: \"cdelotee\"\n\n\nExample 4:\n\nInput: s = \"ggggggg\"\nOutput: \"ggggggg\"\n\n\nExample 5:\n\nInput: s = \"spo\"\nOutput: \"ops\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 500\ns contains only lower-case English letters."},{"index":"1371","url":"https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts","title":"Find the Longest Substring Containing Vowels in Even Counts","difficulty":"Medium","description":"Given the string s, return the size of the longest substring containing each vowel an even number of times. That is, 'a', 'e', 'i', 'o', and 'u' must appear an even number of times.\n\n \n\nExample 1:\n\nInput: s = \"eleetminicoworoep\"\nOutput: 13\nExplanation: The longest substring is \"leetminicowor\" which contains two each of the vowels: e, i and o and zero of the vowels: a and u.\n\n\nExample 2:\n\nInput: s = \"leetcodeisgreat\"\nOutput: 5\nExplanation: The longest substring is \"leetc\" which contains two e's.\n\n\nExample 3:\n\nInput: s = \"bcbcbc\"\nOutput: 6\nExplanation: In this case, the given string \"bcbcbc\" is the longest because all vowels: a, e, i, o and u appear zero times.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 5 x 10^5\ns contains only lowercase English letters."},{"index":"1372","url":"https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree","title":"Longest ZigZag Path in a Binary Tree","difficulty":"Medium","description":"Given a binary tree root, a ZigZag path for a binary tree is defined as follow:\n\nChoose any node in the binary tree and a direction (right or left).\nIf the current direction is right then move to the right child of the current node otherwise move to the left child.\nChange the direction from right to left or right to left.\nRepeat the second and third step until you can't move in the tree.\n\nZigzag length is defined as the number of nodes visited - 1. (A single node has a length of 0).\n\nReturn the longest ZigZag path contained in that tree.\n\n \n\nExample 1:\n\nInput: root = [1,null,1,1,1,null,null,1,1,null,1,null,null,null,1,null,1]\nOutput: 3\nExplanation: Longest ZigZag path in blue nodes (right -> left -> right).\n\n\nExample 2:\n\nInput: root = [1,1,1,null,1,null,null,1,1,null,1]\nOutput: 4\nExplanation: Longest ZigZag path in blue nodes (left -> right -> left -> right).\n\n\nExample 3:\n\nInput: root = [1]\nOutput: 0\n\n\n \n\nConstraints:\n\nEach tree has at most 50000 nodes..\nEach node's value is between [1, 100]."},{"index":"1373","url":"https://leetcode.com/problems/maximum-sum-bst-in-binary-tree","title":"Maximum Sum BST in Binary Tree","difficulty":"Hard","description":"Given a binary tree root, the task is to return the maximum sum of all keys of any sub-tree which is also a Binary Search Tree (BST).\n\nAssume a BST is defined as follows:\n\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n\n \n\nExample 1:\n\nInput: root = [1,4,3,2,4,2,5,null,null,null,null,null,null,4,6]\nOutput: 20\nExplanation: Maximum sum in a valid Binary search tree is obtained in root node with key equal to 3.\n\n\nExample 2:\n\nInput: root = [4,3,null,1,2]\nOutput: 2\nExplanation: Maximum sum in a valid Binary search tree is obtained in a single root node with key equal to 2.\n\n\nExample 3:\n\nInput: root = [-4,-2,-5]\nOutput: 0\nExplanation: All values are negatives. Return an empty BST.\n\n\nExample 4:\n\nInput: root = [2,1,3]\nOutput: 6\n\n\nExample 5:\n\nInput: root = [5,4,8,3,null,6,3]\nOutput: 7\n\n\n \n\nConstraints:\n\nThe given binary tree will have between 1 and 40000 nodes.\nEach node's value is between [-4 * 10^4 , 4 * 10^4]."},{"index":"1374","url":"https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts","title":"Generate a String With Characters That Have Odd Counts","difficulty":"Easy","description":"Given an integer n, return a string with n characters such that each character in such string occurs an odd number of times.\n\nThe returned string must contain only lowercase English letters. If there are multiples valid strings, return any of them.  \n\n \n\nExample 1:\n\nInput: n = 4\nOutput: \"pppz\"\nExplanation: \"pppz\" is a valid string since the character 'p' occurs three times and the character 'z' occurs once. Note that there are many other valid strings such as \"ohhh\" and \"love\".\n\n\nExample 2:\n\nInput: n = 2\nOutput: \"xy\"\nExplanation: \"xy\" is a valid string since the characters 'x' and 'y' occur once. Note that there are many other valid strings such as \"ag\" and \"ur\".\n\n\nExample 3:\n\nInput: n = 7\nOutput: \"holasss\"\n\n\n \n\nConstraints:\n\n1 <= n <= 500"},{"index":"1375","url":"https://leetcode.com/problems/bulb-switcher-iii","title":"Bulb Switcher III","difficulty":"Medium","description":"There is a room with n bulbs, numbered from 1 to n, arranged in a row from left to right. Initially, all the bulbs are turned off.\n\nAt moment k (for k from 0 to n - 1), we turn on the light[k] bulb. A bulb change color to blue only if it is on and all the previous bulbs (to the left) are turned on too.\n\nReturn the number of moments in which all turned on bulbs are blue.\n\n \n\nExample 1:\n\nInput: light = [2,1,3,5,4]\nOutput: 3\nExplanation: All bulbs turned on, are blue at the moment 1, 2 and 4.\n\n\nExample 2:\n\nInput: light = [3,2,4,1,5]\nOutput: 2\nExplanation: All bulbs turned on, are blue at the moment 3, and 4 (index-0).\n\n\nExample 3:\n\nInput: light = [4,1,2,3]\nOutput: 1\nExplanation: All bulbs turned on, are blue at the moment 3 (index-0).\nBulb 4th changes to blue at the moment 3.\n\n\nExample 4:\n\nInput: light = [2,1,4,3,6,5]\nOutput: 3\n\n\nExample 5:\n\nInput: light = [1,2,3,4,5,6]\nOutput: 6\n\n\n \n\nConstraints:\n\nn == light.length\n1 <= n <= 5 * 10^4\nlight is a permutation of  [1, 2, ..., n]"},{"index":"1376","url":"https://leetcode.com/problems/time-needed-to-inform-all-employees","title":"Time Needed to Inform All Employees","difficulty":"Medium","description":"A company has n employees with a unique ID for each employee from 0 to n - 1. The head of the company has is the one with headID.\n\nEach employee has one direct manager given in the manager array where manager[i] is the direct manager of the i-th employee, manager[headID] = -1. Also it's guaranteed that the subordination relationships have a tree structure.\n\nThe head of the company wants to inform all the employees of the company of an urgent piece of news. He will inform his direct subordinates and they will inform their subordinates and so on until all employees know about the urgent news.\n\nThe i-th employee needs informTime[i] minutes to inform all of his direct subordinates (i.e After informTime[i] minutes, all his direct subordinates can start spreading the news).\n\nReturn the number of minutes needed to inform all the employees about the urgent news.\n\n \n\nExample 1:\n\nInput: n = 1, headID = 0, manager = [-1], informTime = [0]\nOutput: 0\nExplanation: The head of the company is the only employee in the company.\n\n\nExample 2:\n\nInput: n = 6, headID = 2, manager = [2,2,-1,2,2,2], informTime = [0,0,1,0,0,0]\nOutput: 1\nExplanation: The head of the company with id = 2 is the direct manager of all the employees in the company and needs 1 minute to inform them all.\nThe tree structure of the employees in the company is shown.\n\n\nExample 3:\n\nInput: n = 7, headID = 6, manager = [1,2,3,4,5,6,-1], informTime = [0,6,5,4,3,2,1]\nOutput: 21\nExplanation: The head has id = 6. He will inform employee with id = 5 in 1 minute.\nThe employee with id = 5 will inform the employee with id = 4 in 2 minutes.\nThe employee with id = 4 will inform the employee with id = 3 in 3 minutes.\nThe employee with id = 3 will inform the employee with id = 2 in 4 minutes.\nThe employee with id = 2 will inform the employee with id = 1 in 5 minutes.\nThe employee with id = 1 will inform the employee with id = 0 in 6 minutes.\nNeeded time = 1 + 2 + 3 + 4 + 5 + 6 = 21.\n\n\nExample 4:\n\nInput: n = 15, headID = 0, manager = [-1,0,0,1,1,2,2,3,3,4,4,5,5,6,6], informTime = [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]\nOutput: 3\nExplanation: The first minute the head will inform employees 1 and 2.\nThe second minute they will inform employees 3, 4, 5 and 6.\nThe third minute they will inform the rest of employees.\n\n\nExample 5:\n\nInput: n = 4, headID = 2, manager = [3,3,-1,2], informTime = [0,0,162,914]\nOutput: 1076\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5\n0 <= headID < n\nmanager.length == n\n0 <= manager[i] < n\nmanager[headID] == -1\ninformTime.length == n\n0 <= informTime[i] <= 1000\ninformTime[i] == 0 if employee i has no subordinates.\nIt is guaranteed that all the employees can be informed."},{"index":"1377","url":"https://leetcode.com/problems/frog-position-after-t-seconds","title":"Frog Position After T Seconds","difficulty":"Hard","description":"Given an undirected tree consisting of n vertices numbered from 1 to n. A frog starts jumping from vertex 1. In one second, the frog jumps from its current vertex to another unvisited vertex if they are directly connected. The frog can not jump back to a visited vertex. In case the frog can jump to several vertices, it jumps randomly to one of them with the same probability. Otherwise, when the frog can not jump to any unvisited vertex, it jumps forever on the same vertex.\n\nThe edges of the undirected tree are given in the array edges, where edges[i] = [ai, bi] means that exists an edge connecting the vertices ai and bi.\n\nReturn the probability that after t seconds the frog is on the vertex target.\n\n \n\nExample 1:\n\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 2, target = 4\nOutput: 0.16666666666666666 \nExplanation: The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 probability to the vertex 2 after second 1 and then jumping with 1/2 probability to vertex 4 after second 2. Thus the probability for the frog is on the vertex 4 after 2 seconds is 1/3 * 1/2 = 1/6 = 0.16666666666666666. \n\n\nExample 2:\n\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 1, target = 7\nOutput: 0.3333333333333333\nExplanation: The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 = 0.3333333333333333 probability to the vertex 7 after second 1. \n\n\nExample 3:\n\nInput: n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 20, target = 6\nOutput: 0.16666666666666666\n\n\n \n\nConstraints:\n\n1 <= n <= 100\nedges.length == n - 1\nedges[i].length == 2\n1 <= ai, bi <= n\n1 <= t <= 50\n1 <= target <= n\nAnswers within 10-5 of the actual value will be accepted as correct."},{"index":"1379","url":"https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","difficulty":"Medium","description":"Given two binary trees original and cloned and given a reference to a node target in the original tree.\n\nThe cloned tree is a copy of the original tree.\n\nReturn a reference to the same node in the cloned tree.\n\nNote that you are not allowed to change any of the two trees or the target node and the answer must be a reference to a node in the cloned tree.\n\nFollow up: Solve the problem if repeated values on the tree are allowed.\n\n \n\nExample 1:\n\nInput: tree = [7,4,3,null,null,6,19], target = 3\nOutput: 3\nExplanation: In all examples the original and cloned trees are shown. The target node is a green node from the original tree. The answer is the yellow node from the cloned tree.\n\n\nExample 2:\n\nInput: tree = [7], target =  7\nOutput: 7\n\n\nExample 3:\n\nInput: tree = [8,null,6,null,5,null,4,null,3,null,2,null,1], target = 4\nOutput: 4\n\n\nExample 4:\n\nInput: tree = [1,2,3,4,5,6,7,8,9,10], target = 5\nOutput: 5\n\n\nExample 5:\n\nInput: tree = [1,2,null,3], target = 2\nOutput: 2\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 10^4].\nThe values of the nodes of the tree are unique.\ntarget node is a node from the original tree and is not null."},{"index":"1380","url":"https://leetcode.com/problems/lucky-numbers-in-a-matrix","title":"Lucky Numbers in a Matrix","difficulty":"Easy","description":"Given a m * n matrix of distinct numbers, return all lucky numbers in the matrix in any order.\n\nA lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.\n\n \n\nExample 1:\n\nInput: matrix = [[3,7,8],[9,11,13],[15,16,17]]\nOutput: [15]\nExplanation: 15 is the only lucky number since it is the minimum in its row and the maximum in its column\n\n\nExample 2:\n\nInput: matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]\nOutput: [12]\nExplanation: 12 is the only lucky number since it is the minimum in its row and the maximum in its column.\n\n\nExample 3:\n\nInput: matrix = [[7,8],[1,2]]\nOutput: [7]\n\n\n \n\nConstraints:\n\nm == mat.length\nn == mat[i].length\n1 <= n, m <= 50\n1 <= matrix[i][j] <= 10^5.\nAll elements in the matrix are distinct."},{"index":"1381","url":"https://leetcode.com/problems/design-a-stack-with-increment-operation","title":"Design a Stack With Increment Operation","difficulty":"Medium","description":"Design a stack which supports the following operations.\n\nImplement the CustomStack class:\n\nCustomStack(int maxSize) Initializes the object with maxSize which is the maximum number of elements in the stack or do nothing if the stack reached the maxSize.\nvoid push(int x) Adds x to the top of the stack if the stack hasn't reached the maxSize.\nint pop() Pops and returns the top of stack or -1 if the stack is empty.\nvoid inc(int k, int val) Increments the bottom k elements of the stack by val. If there are less than k elements in the stack, just increment all the elements in the stack.\n\n \n\nExample 1:\n\nInput\n[\"CustomStack\",\"push\",\"push\",\"pop\",\"push\",\"push\",\"push\",\"increment\",\"increment\",\"pop\",\"pop\",\"pop\",\"pop\"]\n[[3],[1],[2],[],[2],[3],[4],[5,100],[2,100],[],[],[],[]]\nOutput\n[null,null,null,2,null,null,null,null,null,103,202,201,-1]\nExplanation\nCustomStack customStack = new CustomStack(3); // Stack is Empty []\ncustomStack.push(1);                          // stack becomes [1]\ncustomStack.push(2);                          // stack becomes [1, 2]\ncustomStack.pop();                            // return 2 --> Return top of the stack 2, stack becomes [1]\ncustomStack.push(2);                          // stack becomes [1, 2]\ncustomStack.push(3);                          // stack becomes [1, 2, 3]\ncustomStack.push(4);                          // stack still [1, 2, 3], Don't add another elements as size is 4\ncustomStack.increment(5, 100);                // stack becomes [101, 102, 103]\ncustomStack.increment(2, 100);                // stack becomes [201, 202, 103]\ncustomStack.pop();                            // return 103 --> Return top of the stack 103, stack becomes [201, 202]\ncustomStack.pop();                            // return 202 --> Return top of the stack 102, stack becomes [201]\ncustomStack.pop();                            // return 201 --> Return top of the stack 101, stack becomes []\ncustomStack.pop();                            // return -1 --> Stack is empty return -1.\n\n\n \n\nConstraints:\n\n1 <= maxSize <= 1000\n1 <= x <= 1000\n1 <= k <= 1000\n0 <= val <= 100\nAt most 1000 calls will be made to each method of increment, push and pop each separately."},{"index":"1382","url":"https://leetcode.com/problems/balance-a-binary-search-tree","title":"Balance a Binary Search Tree","difficulty":"Medium","description":"Given a binary search tree, return a balanced binary search tree with the same node values.\n\nA binary search tree is balanced if and only if the depth of the two subtrees of every node never differ by more than 1.\n\nIf there is more than one answer, return any of them.\n\n \n\nExample 1:\n\nInput: root = [1,null,2,null,3,null,4,null,null]\nOutput: [2,1,3,null,null,null,4]\nExplanation: This is not the only correct answer, [3,1,4,null,2,null,null] is also correct.\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is between 1 and 10^4.\nThe tree nodes will have distinct values between 1 and 10^5."},{"index":"1383","url":"https://leetcode.com/problems/maximum-performance-of-a-team","title":"Maximum Performance of a Team","difficulty":"Hard","description":"There are n engineers numbered from 1 to n and two arrays: speed and efficiency, where speed[i] and efficiency[i] represent the speed and efficiency for the i-th engineer respectively. Return the maximum performance of a team composed of at most k engineers, since the answer can be a huge number, return this modulo 10^9 + 7.\n\nThe performance of a team is the sum of their engineers' speeds multiplied by the minimum efficiency among their engineers. \n\n \n\nExample 1:\n\nInput: n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 2\nOutput: 60\nExplanation: \nWe have the maximum performance of the team by selecting engineer 2 (with speed=10 and efficiency=4) and engineer 5 (with speed=5 and efficiency=7). That is, performance = (10 + 5) * min(4, 7) = 60.\n\n\nExample 2:\n\nInput: n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 3\nOutput: 68\nExplanation:\nThis is the same example as the first but k = 3. We can select engineer 1, engineer 2 and engineer 5 to get the maximum performance of the team. That is, performance = (2 + 10 + 5) * min(5, 4, 7) = 68.\n\n\nExample 3:\n\nInput: n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 4\nOutput: 72\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5\nspeed.length == n\nefficiency.length == n\n1 <= speed[i] <= 10^5\n1 <= efficiency[i] <= 10^8\n1 <= k <= n"},{"index":"1385","url":"https://leetcode.com/problems/find-the-distance-value-between-two-arrays","title":"Find the Distance Value Between Two Arrays","difficulty":"Easy","description":"Given two integer arrays arr1 and arr2, and the integer d, return the distance value between the two arrays.\n\nThe distance value is defined as the number of elements arr1[i] such that there is not any element arr2[j] where |arr1[i]-arr2[j]| <= d.\n\n \n\nExample 1:\n\nInput: arr1 = [4,5,8], arr2 = [10,9,1,8], d = 2\nOutput: 2\nExplanation: \nFor arr1[0]=4 we have: \n|4-10|=6 > d=2 \n|4-9|=5 > d=2 \n|4-1|=3 > d=2 \n|4-8|=4 > d=2 \nFor arr1[1]=5 we have: \n|5-10|=5 > d=2 \n|5-9|=4 > d=2 \n|5-1|=4 > d=2 \n|5-8|=3 > d=2\nFor arr1[2]=8 we have:\n|8-10|=2 <= d=2\n|8-9|=1 <= d=2\n|8-1|=7 > d=2\n|8-8|=0 <= d=2\n\n\nExample 2:\n\nInput: arr1 = [1,4,2,3], arr2 = [-4,-3,6,10,20,30], d = 3\nOutput: 2\n\n\nExample 3:\n\nInput: arr1 = [2,1,100,3], arr2 = [-5,-2,10,-3,7], d = 6\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= arr1.length, arr2.length <= 500\n-10^3 <= arr1[i], arr2[j] <= 10^3\n0 <= d <= 100"},{"index":"1386","url":"https://leetcode.com/problems/cinema-seat-allocation","title":"Cinema Seat Allocation","difficulty":"Medium","description":"A cinema has n rows of seats, numbered from 1 to n and there are ten seats in each row, labelled from 1 to 10 as shown in the figure above.\n\nGiven the array reservedSeats containing the numbers of seats already reserved, for example, reservedSeats[i] = [3,8] means the seat located in row 3 and labelled with 8 is already reserved.\n\nReturn the maximum number of four-person groups you can assign on the cinema seats. A four-person group occupies four adjacent seats in one single row. Seats across an aisle (such as [3,3] and [3,4]) are not considered to be adjacent, but there is an exceptional case on which an aisle split a four-person group, in that case, the aisle split a four-person group in the middle, which means to have two people on each side.\n\n \n\nExample 1:\n\nInput: n = 3, reservedSeats = [[1,2],[1,3],[1,8],[2,6],[3,1],[3,10]]\nOutput: 4\nExplanation: The figure above shows the optimal allocation for four groups, where seats mark with blue are already reserved and contiguous seats mark with orange are for one group.\n\n\nExample 2:\n\nInput: n = 2, reservedSeats = [[2,1],[1,8],[2,6]]\nOutput: 2\n\n\nExample 3:\n\nInput: n = 4, reservedSeats = [[4,3],[1,4],[4,6],[1,7]]\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= n <= 10^9\n1 <= reservedSeats.length <= min(10*n, 10^4)\nreservedSeats[i].length == 2\n1 <= reservedSeats[i][0] <= n\n1 <= reservedSeats[i][1] <= 10\nAll reservedSeats[i] are distinct."},{"index":"1387","url":"https://leetcode.com/problems/sort-integers-by-the-power-value","title":"Sort Integers by The Power Value","difficulty":"Medium","description":"The power of an integer x is defined as the number of steps needed to transform x into 1 using the following steps:\n\nif x is even then x = x / 2\nif x is odd then x = 3 * x + 1\n\nFor example, the power of x = 3 is 7 because 3 needs 7 steps to become 1 (3 --> 10 --> 5 --> 16 --> 8 --> 4 --> 2 --> 1).\n\nGiven three integers lo, hi and k. The task is to sort all integers in the interval [lo, hi] by the power value in ascending order, if two or more integers have the same power value sort them by ascending order.\n\nReturn the k-th integer in the range [lo, hi] sorted by the power value.\n\nNotice that for any integer x (lo <= x <= hi) it is guaranteed that x will transform into 1 using these steps and that the power of x is will fit in 32 bit signed integer.\n\n \n\nExample 1:\n\nInput: lo = 12, hi = 15, k = 2\nOutput: 13\nExplanation: The power of 12 is 9 (12 --> 6 --> 3 --> 10 --> 5 --> 16 --> 8 --> 4 --> 2 --> 1)\nThe power of 13 is 9\nThe power of 14 is 17\nThe power of 15 is 17\nThe interval sorted by the power value [12,13,14,15]. For k = 2 answer is the second element which is 13.\nNotice that 12 and 13 have the same power value and we sorted them in ascending order. Same for 14 and 15.\n\n\nExample 2:\n\nInput: lo = 1, hi = 1, k = 1\nOutput: 1\n\n\nExample 3:\n\nInput: lo = 7, hi = 11, k = 4\nOutput: 7\nExplanation: The power array corresponding to the interval [7, 8, 9, 10, 11] is [16, 3, 19, 6, 14].\nThe interval sorted by power is [8, 10, 11, 7, 9].\nThe fourth number in the sorted array is 7.\n\n\nExample 4:\n\nInput: lo = 10, hi = 20, k = 5\nOutput: 13\n\n\nExample 5:\n\nInput: lo = 1, hi = 1000, k = 777\nOutput: 570\n\n\n \n\nConstraints:\n\n1 <= lo <= hi <= 1000\n1 <= k <= hi - lo + 1"},{"index":"1388","url":"https://leetcode.com/problems/pizza-with-3n-slices","title":"Pizza With 3n Slices","difficulty":"Hard","description":"There is a pizza with 3n slices of varying size, you and your friends will take slices of pizza as follows:\n\nYou will pick any pizza slice.\nYour friend Alice will pick next slice in anti clockwise direction of your pick. \nYour friend Bob will pick next slice in clockwise direction of your pick.\nRepeat until there are no more slices of pizzas.\n\nSizes of Pizza slices is represented by circular array slices in clockwise direction.\n\nReturn the maximum possible sum of slice sizes which you can have.\n\n \n\nExample 1:\n\nInput: slices = [1,2,3,4,5,6]\nOutput: 10\nExplanation: Pick pizza slice of size 4, Alice and Bob will pick slices with size 3 and 5 respectively. Then Pick slices with size 6, finally Alice and Bob will pick slice of size 2 and 1 respectively. Total = 4 + 6.\n\n\nExample 2:\n\nInput: slices = [8,9,8,6,1,1]\nOutput: 16\nOutput: Pick pizza slice of size 8 in each turn. If you pick slice with size 9 your partners will pick slices of size 8.\n\n\nExample 3:\n\nInput: slices = [4,1,2,5,8,3,1,9,7]\nOutput: 21\n\n\nExample 4:\n\nInput: slices = [3,1,2]\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= slices.length <= 500\nslices.length % 3 == 0\n1 <= slices[i] <= 1000"},{"index":"1389","url":"https://leetcode.com/problems/create-target-array-in-the-given-order","title":"Create Target Array in the Given Order","difficulty":"Easy","description":"Given two arrays of integers nums and index. Your task is to create target array under the following rules:\n\nInitially target array is empty.\nFrom left to right read nums[i] and index[i], insert at index index[i] the value nums[i] in target array.\nRepeat the previous step until there are no elements to read in nums and index.\n\nReturn the target array.\n\nIt is guaranteed that the insertion operations will be valid.\n\n \n\nExample 1:\n\nInput: nums = [0,1,2,3,4], index = [0,1,2,2,1]\nOutput: [0,4,1,3,2]\nExplanation:\nnums       index     target\n0            0        [0]\n1            1        [0,1]\n2            2        [0,1,2]\n3            2        [0,1,3,2]\n4            1        [0,4,1,3,2]\n\n\nExample 2:\n\nInput: nums = [1,2,3,4,0], index = [0,1,2,3,0]\nOutput: [0,1,2,3,4]\nExplanation:\nnums       index     target\n1            0        [1]\n2            1        [1,2]\n3            2        [1,2,3]\n4            3        [1,2,3,4]\n0            0        [0,1,2,3,4]\n\n\nExample 3:\n\nInput: nums = [1], index = [0]\nOutput: [1]\n\n\n \n\nConstraints:\n\n1 <= nums.length, index.length <= 100\nnums.length == index.length\n0 <= nums[i] <= 100\n0 <= index[i] <= i"},{"index":"1390","url":"https://leetcode.com/problems/four-divisors","title":"Four Divisors","difficulty":"Medium","description":"Given an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors.\n\nIf there is no such integer in the array, return 0.\n\n \n\nExample 1:\n\nInput: nums = [21,4,7]\nOutput: 32\nExplanation:\n21 has 4 divisors: 1, 3, 7, 21\n4 has 3 divisors: 1, 2, 4\n7 has 2 divisors: 1, 7\nThe answer is the sum of divisors of 21 only.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^4\n1 <= nums[i] <= 10^5"},{"index":"1391","url":"https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid","title":"Check if There is a Valid Path in a Grid","difficulty":"Medium","description":"Given a m x n grid. Each cell of the grid represents a street. The street of grid[i][j] can be:\n1 which means a street connecting the left cell and the right cell.\n2 which means a street connecting the upper cell and the lower cell.\n3 which means a street connecting the left cell and the lower cell.\n4 which means a street connecting the right cell and the lower cell.\n5 which means a street connecting the left cell and the upper cell.\n6 which means a street connecting the right cell and the upper cell.\n\nYou will initially start at the street of the upper-left cell (0,0). A valid path in the grid is a path which starts from the upper left cell (0,0) and ends at the bottom-right cell (m - 1, n - 1). The path should only follow the streets.\n\nNotice that you are not allowed to change any street.\n\nReturn true if there is a valid path in the grid or false otherwise.\n\n \n\nExample 1:\n\nInput: grid = [[2,4,3],[6,5,2]]\nOutput: true\nExplanation: As shown you can start at cell (0, 0) and visit all the cells of the grid to reach (m - 1, n - 1).\n\n\nExample 2:\n\nInput: grid = [[1,2,1],[1,2,1]]\nOutput: false\nExplanation: As shown you the street at cell (0, 0) is not connected with any street of any other cell and you will get stuck at cell (0, 0)\n\n\nExample 3:\n\nInput: grid = [[1,1,2]]\nOutput: false\nExplanation: You will get stuck at cell (0, 1) and you cannot reach cell (0, 2).\n\n\nExample 4:\n\nInput: grid = [[1,1,1,1,1,1,3]]\nOutput: true\n\n\nExample 5:\n\nInput: grid = [[2],[2],[2],[2],[2],[2],[6]]\nOutput: true\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m, n <= 300\n1 <= grid[i][j] <= 6"},{"index":"1392","url":"https://leetcode.com/problems/longest-happy-prefix","title":"Longest Happy Prefix","difficulty":"Hard","description":"A string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself).\n\nGiven a string s. Return the longest happy prefix of s .\n\nReturn an empty string if no such prefix exists.\n\n \n\nExample 1:\n\nInput: s = \"level\"\nOutput: \"l\"\nExplanation: s contains 4 prefix excluding itself (\"l\", \"le\", \"lev\", \"leve\"), and suffix (\"l\", \"el\", \"vel\", \"evel\"). The largest prefix which is also suffix is given by \"l\".\n\n\nExample 2:\n\nInput: s = \"ababab\"\nOutput: \"abab\"\nExplanation: \"abab\" is the largest prefix which is also suffix. They can overlap in the original string.\n\n\nExample 3:\n\nInput: s = \"leetcodeleet\"\nOutput: \"leet\"\n\n\nExample 4:\n\nInput: s = \"a\"\nOutput: \"\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\ns contains only lowercase English letters."},{"index":"1394","url":"https://leetcode.com/problems/find-lucky-integer-in-an-array","title":"Find Lucky Integer in an Array","difficulty":"Easy","description":"Given an array of integers arr, a lucky integer is an integer which has a frequency in the array equal to its value.\n\nReturn a lucky integer in the array. If there are multiple lucky integers return the largest of them. If there is no lucky integer return -1.\n\n \n\nExample 1:\n\nInput: arr = [2,2,3,4]\nOutput: 2\nExplanation: The only lucky number in the array is 2 because frequency[2] == 2.\n\n\nExample 2:\n\nInput: arr = [1,2,2,3,3,3]\nOutput: 3\nExplanation: 1, 2 and 3 are all lucky numbers, return the largest of them.\n\n\nExample 3:\n\nInput: arr = [2,2,2,3,3]\nOutput: -1\nExplanation: There are no lucky numbers in the array.\n\n\nExample 4:\n\nInput: arr = [5]\nOutput: -1\n\n\nExample 5:\n\nInput: arr = [7,7,7,7,7,7,7]\nOutput: 7\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 500\n1 <= arr[i] <= 500"},{"index":"1395","url":"https://leetcode.com/problems/count-number-of-teams","title":"Count Number of Teams","difficulty":"Medium","description":"There are n soldiers standing in a line. Each soldier is assigned a unique rating value.\n\nYou have to form a team of 3 soldiers amongst them under the following rules:\n\nChoose 3 soldiers with index (i, j, k) with rating (rating[i], rating[j], rating[k]).\nA team is valid if:  (rating[i] < rating[j] < rating[k]) or (rating[i] > rating[j] > rating[k]) where (0 <= i < j < k < n).\n\nReturn the number of teams you can form given the conditions. (soldiers can be part of multiple teams).\n\n \n\nExample 1:\n\nInput: rating = [2,5,3,4,1]\nOutput: 3\nExplanation: We can form three teams given the conditions. (2,3,4), (5,4,1), (5,3,1). \n\n\nExample 2:\n\nInput: rating = [2,1,3]\nOutput: 0\nExplanation: We can't form any team given the conditions.\n\n\nExample 3:\n\nInput: rating = [1,2,3,4]\nOutput: 4\n\n\n \n\nConstraints:\n\nn == rating.length\n1 <= n <= 200\n1 <= rating[i] <= 10^5"},{"index":"1396","url":"https://leetcode.com/problems/design-underground-system","title":"Design Underground System","difficulty":"Medium","description":"Implement the class UndergroundSystem that supports three methods:\n\n1. checkIn(int id, string stationName, int t)\n\nA customer with id card equal to id, gets in the station stationName at time t.\nA customer can only be checked into one place at a time.\n\n2. checkOut(int id, string stationName, int t)\n\nA customer with id card equal to id, gets out from the station stationName at time t.\n\n3. getAverageTime(string startStation, string endStation) \n\nReturns the average time to travel between the startStation and the endStation.\nThe average time is computed from all the previous traveling from startStation to endStation that happened directly.\nCall to getAverageTime is always valid.\n\nYou can assume all calls to checkIn and checkOut methods are consistent. That is, if a customer gets in at time t1 at some station, then it gets out at time t2 with t2 > t1. All events happen in chronological order.\n\n \n\nExample 1:\n\nInput\n[\"UndergroundSystem\",\"checkIn\",\"checkIn\",\"checkIn\",\"checkOut\",\"checkOut\",\"checkOut\",\"getAverageTime\",\"getAverageTime\",\"checkIn\",\"getAverageTime\",\"checkOut\",\"getAverageTime\"]\n[[],[45,\"Leyton\",3],[32,\"Paradise\",8],[27,\"Leyton\",10],[45,\"Waterloo\",15],[27,\"Waterloo\",20],[32,\"Cambridge\",22],[\"Paradise\",\"Cambridge\"],[\"Leyton\",\"Waterloo\"],[10,\"Leyton\",24],[\"Leyton\",\"Waterloo\"],[10,\"Waterloo\",38],[\"Leyton\",\"Waterloo\"]]\n\nOutput\n[null,null,null,null,null,null,null,14.00000,11.00000,null,11.00000,null,12.00000]\n\nExplanation\nUndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(45, \"Leyton\", 3);\nundergroundSystem.checkIn(32, \"Paradise\", 8);\nundergroundSystem.checkIn(27, \"Leyton\", 10);\nundergroundSystem.checkOut(45, \"Waterloo\", 15);\nundergroundSystem.checkOut(27, \"Waterloo\", 20);\nundergroundSystem.checkOut(32, \"Cambridge\", 22);\nundergroundSystem.getAverageTime(\"Paradise\", \"Cambridge\");       // return 14.00000. There was only one travel from \"Paradise\" (at time 8) to \"Cambridge\" (at time 22)\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");          // return 11.00000. There were two travels from \"Leyton\" to \"Waterloo\", a customer with id=45 from time=3 to time=15 and a customer with id=27 from time=10 to time=20. So the average time is ( (15-3) + (20-10) ) / 2 = 11.00000\nundergroundSystem.checkIn(10, \"Leyton\", 24);\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");          // return 11.00000\nundergroundSystem.checkOut(10, \"Waterloo\", 38);\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");          // return 12.00000\n\n\nExample 2:\n\nInput\n[\"UndergroundSystem\",\"checkIn\",\"checkOut\",\"getAverageTime\",\"checkIn\",\"checkOut\",\"getAverageTime\",\"checkIn\",\"checkOut\",\"getAverageTime\"]\n[[],[10,\"Leyton\",3],[10,\"Paradise\",8],[\"Leyton\",\"Paradise\"],[5,\"Leyton\",10],[5,\"Paradise\",16],[\"Leyton\",\"Paradise\"],[2,\"Leyton\",21],[2,\"Paradise\",30],[\"Leyton\",\"Paradise\"]]\n\nOutput\n[null,null,null,5.00000,null,null,5.50000,null,null,6.66667]\n\nExplanation\nUndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(10, \"Leyton\", 3);\nundergroundSystem.checkOut(10, \"Paradise\", 8);\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 5.00000\nundergroundSystem.checkIn(5, \"Leyton\", 10);\nundergroundSystem.checkOut(5, \"Paradise\", 16);\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 5.50000\nundergroundSystem.checkIn(2, \"Leyton\", 21);\nundergroundSystem.checkOut(2, \"Paradise\", 30);\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 6.66667\n\n\n \n\nConstraints:\n\nThere will be at most 20000 operations.\n1 <= id, t <= 10^6\nAll strings consist of uppercase, lowercase English letters and digits.\n1 <= stationName.length <= 10\nAnswers within 10^-5 of the actual value will be accepted as correct."},{"index":"1397","url":"https://leetcode.com/problems/find-all-good-strings","title":"Find All Good Strings","difficulty":"Hard","description":"Given the strings s1 and s2 of size n, and the string evil. Return the number of good strings.\n\nA good string has size n, it is alphabetically greater than or equal to s1, it is alphabetically smaller than or equal to s2, and it does not contain the string evil as a substring. Since the answer can be a huge number, return this modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: n = 2, s1 = \"aa\", s2 = \"da\", evil = \"b\"\nOutput: 51 \nExplanation: There are 25 good strings starting with 'a': \"aa\",\"ac\",\"ad\",...,\"az\". Then there are 25 good strings starting with 'c': \"ca\",\"cc\",\"cd\",...,\"cz\" and finally there is one good string starting with 'd': \"da\". \n\n\nExample 2:\n\nInput: n = 8, s1 = \"leetcode\", s2 = \"leetgoes\", evil = \"leet\"\nOutput: 0 \nExplanation: All strings greater than or equal to s1 and smaller than or equal to s2 start with the prefix \"leet\", therefore, there is not any good string.\n\n\nExample 3:\n\nInput: n = 2, s1 = \"gx\", s2 = \"gz\", evil = \"x\"\nOutput: 2\n\n\n \n\nConstraints:\n\ns1.length == n\ns2.length == n\ns1 <= s2\n1 <= n <= 500\n1 <= evil.length <= 50\nAll strings consist of lowercase English letters."},{"index":"1399","url":"https://leetcode.com/problems/count-largest-group","title":"Count Largest Group","difficulty":"Easy","description":"Given an integer n. Each number from 1 to n is grouped according to the sum of its digits. \n\nReturn how many groups have the largest size.\n\n \n\nExample 1:\n\nInput: n = 13\nOutput: 4\nExplanation: There are 9 groups in total, they are grouped according sum of its digits of numbers from 1 to 13:\n[1,10], [2,11], [3,12], [4,13], [5], [6], [7], [8], [9]. There are 4 groups with largest size.\n\n\nExample 2:\n\nInput: n = 2\nOutput: 2\nExplanation: There are 2 groups [1], [2] of size 1.\n\n\nExample 3:\n\nInput: n = 15\nOutput: 6\n\n\nExample 4:\n\nInput: n = 24\nOutput: 5\n\n\n \n\nConstraints:\n\n1 <= n <= 10^4"},{"index":"1400","url":"https://leetcode.com/problems/construct-k-palindrome-strings","title":"Construct K Palindrome Strings","difficulty":"Medium","description":"Given a string s and an integer k. You should construct k non-empty palindrome strings using all the characters in s.\n\nReturn True if you can use all the characters in s to construct k palindrome strings or False otherwise.\n\n \n\nExample 1:\n\nInput: s = \"annabelle\", k = 2\nOutput: true\nExplanation: You can construct two palindromes using all characters in s.\nSome possible constructions \"anna\" + \"elble\", \"anbna\" + \"elle\", \"anellena\" + \"b\"\n\n\nExample 2:\n\nInput: s = \"leetcode\", k = 3\nOutput: false\nExplanation: It is impossible to construct 3 palindromes using all the characters of s.\n\n\nExample 3:\n\nInput: s = \"true\", k = 4\nOutput: true\nExplanation: The only possible solution is to put each character in a separate string.\n\n\nExample 4:\n\nInput: s = \"yzyzyzyzyzyzyzy\", k = 2\nOutput: true\nExplanation: Simply you can put all z's in one string and all y's in the other string. Both strings will be palindrome.\n\n\nExample 5:\n\nInput: s = \"cr\", k = 7\nOutput: false\nExplanation: We don't have enough characters in s to construct 7 palindromes.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\nAll characters in s are lower-case English letters.\n1 <= k <= 10^5"},{"index":"1401","url":"https://leetcode.com/problems/circle-and-rectangle-overlapping","title":"Circle and Rectangle Overlapping","difficulty":"Medium","description":"Given a circle represented as (radius, x_center, y_center) and an axis-aligned rectangle represented as (x1, y1, x2, y2), where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the rectangle.\n\nReturn True if the circle and rectangle are overlapped otherwise return False.\n\nIn other words, check if there are any point (xi, yi) such that belongs to the circle and the rectangle at the same time.\n\n \n\nExample 1:\n\nInput: radius = 1, x_center = 0, y_center = 0, x1 = 1, y1 = -1, x2 = 3, y2 = 1\nOutput: true\nExplanation: Circle and rectangle share the point (1,0) \n\n\nExample 2:\n\nInput: radius = 1, x_center = 0, y_center = 0, x1 = -1, y1 = 0, x2 = 0, y2 = 1\nOutput: true\n\n\nExample 3:\n\nInput: radius = 1, x_center = 1, y_center = 1, x1 = -3, y1 = -3, x2 = 3, y2 = 3\nOutput: true\n\n\nExample 4:\n\nInput: radius = 1, x_center = 1, y_center = 1, x1 = 1, y1 = -3, x2 = 2, y2 = -1\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= radius <= 2000\n-10^4 <= x_center, y_center, x1, y1, x2, y2 <= 10^4\nx1 < x2\ny1 < y2"},{"index":"1402","url":"https://leetcode.com/problems/reducing-dishes","title":"Reducing Dishes","difficulty":"Hard","description":"A chef has collected data on the satisfaction level of his n dishes. Chef can cook any dish in 1 unit of time.\n\nLike-time coefficient of a dish is defined as the time taken to cook that dish including previous dishes multiplied by its satisfaction level  i.e.  time[i]*satisfaction[i]\n\nReturn the maximum sum of Like-time coefficient that the chef can obtain after dishes preparation.\n\nDishes can be prepared in any order and the chef can discard some dishes to get this maximum value.\n\n \n\nExample 1:\n\nInput: satisfaction = [-1,-8,0,5,-9]\nOutput: 14\nExplanation: After Removing the second and last dish, the maximum total Like-time coefficient will be equal to (-1*1 + 0*2 + 5*3 = 14). Each dish is prepared in one unit of time.\n\nExample 2:\n\nInput: satisfaction = [4,3,2]\nOutput: 20\nExplanation: Dishes can be prepared in any order, (2*1 + 3*2 + 4*3 = 20)\n\n\nExample 3:\n\nInput: satisfaction = [-1,-4,-5]\nOutput: 0\nExplanation: People don't like the dishes. No dish is prepared.\n\n\nExample 4:\n\nInput: satisfaction = [-2,5,-1,0,3,-3]\nOutput: 35\n\n\n \n\nConstraints:\n\nn == satisfaction.length\n1 <= n <= 500\n-10^3 <= satisfaction[i] <= 10^3"},{"index":"1403","url":"https://leetcode.com/problems/minimum-subsequence-in-non-increasing-order","title":"Minimum Subsequence in Non-Increasing Order","difficulty":"Easy","description":"Given the array nums, obtain a subsequence of the array whose sum of elements is strictly greater than the sum of the non included elements in such subsequence. \n\nIf there are multiple solutions, return the subsequence with minimum size and if there still exist multiple solutions, return the subsequence with the maximum total sum of all its elements. A subsequence of an array can be obtained by erasing some (possibly zero) elements from the array. \n\nNote that the solution with the given constraints is guaranteed to be unique. Also return the answer sorted in non-increasing order.\n\n \n\nExample 1:\n\nInput: nums = [4,3,10,9,8]\nOutput: [10,9] \nExplanation: The subsequences [10,9] and [10,8] are minimal such that the sum of their elements is strictly greater than the sum of elements not included, however, the subsequence [10,9] has the maximum total sum of its elements. \n\n\nExample 2:\n\nInput: nums = [4,4,7,6,7]\nOutput: [7,7,6] \nExplanation: The subsequence [7,7] has the sum of its elements equal to 14 which is not strictly greater than the sum of elements not included (14 = 4 + 4 + 6). Therefore, the subsequence [7,6,7] is the minimal satisfying the conditions. Note the subsequence has to returned in non-decreasing order.  \n\n\nExample 3:\n\nInput: nums = [6]\nOutput: [6]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 500\n1 <= nums[i] <= 100"},{"index":"1404","url":"https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one","title":"Number of Steps to Reduce a Number in Binary Representation to One","difficulty":"Medium","description":"Given a number s in their binary representation. Return the number of steps to reduce it to 1 under the following rules:\n\nIf the current number is even, you have to divide it by 2.\n\nIf the current number is odd, you have to add 1 to it.\n\nIt's guaranteed that you can always reach to one for all testcases.\n\n \n\nExample 1:\n\nInput: s = \"1101\"\nOutput: 6\nExplanation: \"1101\" corressponds to number 13 in their decimal representation.\nStep 1) 13 is odd, add 1 and obtain 14. \nStep 2) 14 is even, divide by 2 and obtain 7.\nStep 3) 7 is odd, add 1 and obtain 8.\nStep 4) 8 is even, divide by 2 and obtain 4.  \nStep 5) 4 is even, divide by 2 and obtain 2. \nStep 6) 2 is even, divide by 2 and obtain 1.  \n\n\nExample 2:\n\nInput: s = \"10\"\nOutput: 1\nExplanation: \"10\" corressponds to number 2 in their decimal representation.\nStep 1) 2 is even, divide by 2 and obtain 1.  \n\n\nExample 3:\n\nInput: s = \"1\"\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= s.length <= 500\ns consists of characters '0' or '1'\ns[0] == '1'"},{"index":"1405","url":"https://leetcode.com/problems/longest-happy-string","title":"Longest Happy String","difficulty":"Medium","description":"A string is called happy if it does not have any of the strings 'aaa', 'bbb' or 'ccc' as a substring.\n\nGiven three integers a, b and c, return any string s, which satisfies following conditions:\n\ns is happy and longest possible.\ns contains at most a occurrences of the letter 'a', at most b occurrences of the letter 'b' and at most c occurrences of the letter 'c'.\ns will only contain 'a', 'b' and 'c' letters.\n\nIf there is no such string s return the empty string \"\".\n\n \n\nExample 1:\n\nInput: a = 1, b = 1, c = 7\nOutput: \"ccaccbcc\"\nExplanation: \"ccbccacc\" would also be a correct answer.\n\n\nExample 2:\n\nInput: a = 2, b = 2, c = 1\nOutput: \"aabbc\"\n\n\nExample 3:\n\nInput: a = 7, b = 1, c = 0\nOutput: \"aabaa\"\nExplanation: It's the only correct answer in this case.\n\n\n \n\nConstraints:\n\n0 <= a, b, c <= 100\na + b + c > 0"},{"index":"1406","url":"https://leetcode.com/problems/stone-game-iii","title":"Stone Game III","difficulty":"Hard","description":"Alice and Bob continue their games with piles of stones. There are several stones arranged in a row, and each stone has an associated value which is an integer given in the array stoneValue.\n\nAlice and Bob take turns, with Alice starting first. On each player's turn, that player can take 1, 2 or 3 stones from the first remaining stones in the row.\n\nThe score of each player is the sum of values of the stones taken. The score of each player is 0 initially.\n\nThe objective of the game is to end with the highest score, and the winner is the player with the highest score and there could be a tie. The game continues until all the stones have been taken.\n\nAssume Alice and Bob play optimally.\n\nReturn \"Alice\" if Alice will win, \"Bob\" if Bob will win or \"Tie\" if they end the game with the same score.\n\n \n\nExample 1:\n\nInput: values = [1,2,3,7]\nOutput: \"Bob\"\nExplanation: Alice will always lose. Her best move will be to take three piles and the score become 6. Now the score of Bob is 7 and Bob wins.\n\n\nExample 2:\n\nInput: values = [1,2,3,-9]\nOutput: \"Alice\"\nExplanation: Alice must choose all the three piles at the first move to win and leave Bob with negative score.\nIf Alice chooses one pile her score will be 1 and the next move Bob's score becomes 5. The next move Alice will take the pile with value = -9 and lose.\nIf Alice chooses two piles her score will be 3 and the next move Bob's score becomes 3. The next move Alice will take the pile with value = -9 and also lose.\nRemember that both play optimally so here Alice will choose the scenario that makes her win.\n\n\nExample 3:\n\nInput: values = [1,2,3,6]\nOutput: \"Tie\"\nExplanation: Alice cannot win this game. She can end the game in a draw if she decided to choose all the first three piles, otherwise she will lose.\n\n\nExample 4:\n\nInput: values = [1,2,3,-1,-2,-3,7]\nOutput: \"Alice\"\n\n\nExample 5:\n\nInput: values = [-1,-2,-3]\nOutput: \"Tie\"\n\n\n \n\nConstraints:\n\n1 <= values.length <= 50000\n-1000 <= values[i] <= 1000"},{"index":"1408","url":"https://leetcode.com/problems/string-matching-in-an-array","title":"String Matching in an Array","difficulty":"Easy","description":"Given an array of string words. Return all strings in words which is substring of another word in any order. \n\nString words[i] is substring of words[j], if can be obtained removing some characters to left and/or right side of words[j].\n\n \n\nExample 1:\n\nInput: words = [\"mass\",\"as\",\"hero\",\"superhero\"]\nOutput: [\"as\",\"hero\"]\nExplanation: \"as\" is substring of \"mass\" and \"hero\" is substring of \"superhero\".\n[\"hero\",\"as\"] is also a valid answer.\n\n\nExample 2:\n\nInput: words = [\"leetcode\",\"et\",\"code\"]\nOutput: [\"et\",\"code\"]\nExplanation: \"et\", \"code\" are substring of \"leetcode\".\n\n\nExample 3:\n\nInput: words = [\"blue\",\"green\",\"bu\"]\nOutput: []\n\n\n \n\nConstraints:\n\n1 <= words.length <= 100\n1 <= words[i].length <= 30\nwords[i] contains only lowercase English letters.\nIt's guaranteed that words[i] will be unique."},{"index":"1409","url":"https://leetcode.com/problems/queries-on-a-permutation-with-key","title":"Queries on a Permutation With Key","difficulty":"Medium","description":"Given the array queries of positive integers between 1 and m, you have to process all queries[i] (from i=0 to i=queries.length-1) according to the following rules:\n\nIn the beginning, you have the permutation P=[1,2,3,...,m].\nFor the current i, find the position of queries[i] in the permutation P (indexing from 0) and then move this at the beginning of the permutation P. Notice that the position of queries[i] in P is the result for queries[i].\n\nReturn an array containing the result for the given queries.\n\n \n\nExample 1:\n\nInput: queries = [3,1,2,1], m = 5\nOutput: [2,1,2,1] \nExplanation: The queries are processed as follow: \nFor i=0: queries[i]=3, P=[1,2,3,4,5], position of 3 in P is 2, then we move 3 to the beginning of P resulting in P=[3,1,2,4,5]. \nFor i=1: queries[i]=1, P=[3,1,2,4,5], position of 1 in P is 1, then we move 1 to the beginning of P resulting in P=[1,3,2,4,5]. \nFor i=2: queries[i]=2, P=[1,3,2,4,5], position of 2 in P is 2, then we move 2 to the beginning of P resulting in P=[2,1,3,4,5]. \nFor i=3: queries[i]=1, P=[2,1,3,4,5], position of 1 in P is 1, then we move 1 to the beginning of P resulting in P=[1,2,3,4,5]. \nTherefore, the array containing the result is [2,1,2,1].  \n\n\nExample 2:\n\nInput: queries = [4,1,2,2], m = 4\nOutput: [3,1,2,0]\n\n\nExample 3:\n\nInput: queries = [7,5,5,8,3], m = 8\nOutput: [6,5,0,7,5]\n\n\n \n\nConstraints:\n\n1 <= m <= 10^3\n1 <= queries.length <= m\n1 <= queries[i] <= m"},{"index":"1410","url":"https://leetcode.com/problems/html-entity-parser","title":"HTML Entity Parser","difficulty":"Medium","description":"HTML entity parser is the parser that takes HTML code as input and replace all the entities of the special characters by the characters itself.\n\nThe special characters and their entities for HTML are:\n\nQuotation Mark: the entity is &quot; and symbol character is \".\nSingle Quote Mark: the entity is &apos; and symbol character is '.\nAmpersand: the entity is &amp; and symbol character is &.\nGreater Than Sign: the entity is &gt; and symbol character is >.\nLess Than Sign: the entity is &lt; and symbol character is <.\nSlash: the entity is &frasl; and symbol character is /.\n\nGiven the input text string to the HTML parser, you have to implement the entity parser.\n\nReturn the text after replacing the entities by the special characters.\n\n \n\nExample 1:\n\nInput: text = \"&amp; is an HTML entity but &ambassador; is not.\"\nOutput: \"& is an HTML entity but &ambassador; is not.\"\nExplanation: The parser will replace the &amp; entity by &\n\n\nExample 2:\n\nInput: text = \"and I quote: &quot;...&quot;\"\nOutput: \"and I quote: \\\"...\\\"\"\n\n\nExample 3:\n\nInput: text = \"Stay home! Practice on Leetcode :)\"\nOutput: \"Stay home! Practice on Leetcode :)\"\n\n\nExample 4:\n\nInput: text = \"x &gt; y &amp;&amp; x &lt; y is always false\"\nOutput: \"x > y && x < y is always false\"\n\n\nExample 5:\n\nInput: text = \"leetcode.com&frasl;problemset&frasl;all\"\nOutput: \"leetcode.com/problemset/all\"\n\n\n \n\nConstraints:\n\n1 <= text.length <= 10^5\nThe string may contain any possible characters out of all the 256 ASCII characters."},{"index":"1411","url":"https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid","title":"Number of Ways to Paint N × 3 Grid","difficulty":"Hard","description":"You have a grid of size n x 3 and you want to paint each cell of the grid with exactly one of the three colours: Red, Yellow or Green while making sure that no two adjacent cells have the same colour (i.e no two cells that share vertical or horizontal sides have the same colour).\n\nYou are given n the number of rows of the grid.\n\nReturn the number of ways you can paint this grid. As the answer may grow large, the answer must be computed modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: 12\nExplanation: There are 12 possible way to paint the grid as shown:\n\n\n\nExample 2:\n\nInput: n = 2\nOutput: 54\n\n\nExample 3:\n\nInput: n = 3\nOutput: 246\n\n\nExample 4:\n\nInput: n = 7\nOutput: 106494\n\n\nExample 5:\n\nInput: n = 5000\nOutput: 30228214\n\n\n \n\nConstraints:\n\nn == grid.length\ngrid[i].length == 3\n1 <= n <= 5000"},{"index":"1413","url":"https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum","title":"Minimum Value to Get Positive Step by Step Sum","difficulty":"Easy","description":"Given an array of integers nums, you start with an initial positive value startValue.\n\nIn each iteration, you calculate the step by step sum of startValue plus elements in nums (from left to right).\n\nReturn the minimum positive value of startValue such that the step by step sum is never less than 1.\n\n \n\nExample 1:\n\nInput: nums = [-3,2,-3,4,2]\nOutput: 5\nExplanation: If you choose startValue = 4, in the third iteration your step by step sum is less than 1.\n                step by step sum\n                startValue = 4 | startValue = 5 | nums\n                  (4 -3 ) = 1  | (5 -3 ) = 2    |  -3\n                  (1 +2 ) = 3  | (2 +2 ) = 4    |   2\n                  (3 -3 ) = 0  | (4 -3 ) = 1    |  -3\n                  (0 +4 ) = 4  | (1 +4 ) = 5    |   4\n                  (4 +2 ) = 6  | (5 +2 ) = 7    |   2\n\n\nExample 2:\n\nInput: nums = [1,2]\nOutput: 1\nExplanation: Minimum start value should be positive. \n\n\nExample 3:\n\nInput: nums = [1,-2,-3]\nOutput: 5\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n-100 <= nums[i] <= 100"},{"index":"1414","url":"https://leetcode.com/problems/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k","title":"Find the Minimum Number of Fibonacci Numbers Whose Sum Is K","difficulty":"Medium","description":"Given an integer k, return the minimum number of Fibonacci numbers whose sum is equal to k. The same Fibonacci number can be used multiple times.\n\nThe Fibonacci numbers are defined as:\n\nF1 = 1\nF2 = 1\nFn = Fn-1 + Fn-2 for n > 2.\nIt is guaranteed that for the given constraints we can always find such Fibonacci numbers that sum up to k.\n\n \n\nExample 1:\n\nInput: k = 7\nOutput: 2 \nExplanation: The Fibonacci numbers are: 1, 1, 2, 3, 5, 8, 13, ... \nFor k = 7 we can use 2 + 5 = 7.\n\nExample 2:\n\nInput: k = 10\nOutput: 2 \nExplanation: For k = 10 we can use 2 + 8 = 10.\n\n\nExample 3:\n\nInput: k = 19\nOutput: 3 \nExplanation: For k = 19 we can use 1 + 5 + 13 = 19.\n\n\n \n\nConstraints:\n\n1 <= k <= 10^9"},{"index":"1415","url":"https://leetcode.com/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n","title":"The k-th Lexicographical String of All Happy Strings of Length n","difficulty":"Medium","description":"A happy string is a string that:\n\nconsists only of letters of the set ['a', 'b', 'c'].\ns[i] != s[i + 1] for all values of i from 1 to s.length - 1 (string is 1-indexed).\n\nFor example, strings \"abc\", \"ac\", \"b\" and \"abcbabcbcb\" are all happy strings and strings \"aa\", \"baa\" and \"ababbc\" are not happy strings.\n\nGiven two integers n and k, consider a list of all happy strings of length n sorted in lexicographical order.\n\nReturn the kth string of this list or return an empty string if there are less than k happy strings of length n.\n\n \n\nExample 1:\n\nInput: n = 1, k = 3\nOutput: \"c\"\nExplanation: The list [\"a\", \"b\", \"c\"] contains all happy strings of length 1. The third string is \"c\".\n\n\nExample 2:\n\nInput: n = 1, k = 4\nOutput: \"\"\nExplanation: There are only 3 happy strings of length 1.\n\n\nExample 3:\n\nInput: n = 3, k = 9\nOutput: \"cab\"\nExplanation: There are 12 different happy string of length 3 [\"aba\", \"abc\", \"aca\", \"acb\", \"bab\", \"bac\", \"bca\", \"bcb\", \"cab\", \"cac\", \"cba\", \"cbc\"]. You will find the 9th string = \"cab\"\n\n\nExample 4:\n\nInput: n = 2, k = 7\nOutput: \"\"\n\n\nExample 5:\n\nInput: n = 10, k = 100\nOutput: \"abacbabacb\"\n\n\n \n\nConstraints:\n\n1 <= n <= 10\n1 <= k <= 100\n "},{"index":"1416","url":"https://leetcode.com/problems/restore-the-array","title":"Restore The Array","difficulty":"Hard","description":"A program was supposed to print an array of integers. The program forgot to print whitespaces and the array is printed as a string of digits and all we know is that all integers in the array were in the range [1, k] and there are no leading zeros in the array.\n\nGiven the string s and the integer k. There can be multiple ways to restore the array.\n\nReturn the number of possible array that can be printed as a string s using the mentioned program.\n\nThe number of ways could be very large so return it modulo 10^9 + 7\n\n \n\nExample 1:\n\nInput: s = \"1000\", k = 10000\nOutput: 1\nExplanation: The only possible array is [1000]\n\n\nExample 2:\n\nInput: s = \"1000\", k = 10\nOutput: 0\nExplanation: There cannot be an array that was printed this way and has all integer >= 1 and <= 10.\n\n\nExample 3:\n\nInput: s = \"1317\", k = 2000\nOutput: 8\nExplanation: Possible arrays are [1317],[131,7],[13,17],[1,317],[13,1,7],[1,31,7],[1,3,17],[1,3,1,7]\n\n\nExample 4:\n\nInput: s = \"2020\", k = 30\nOutput: 1\nExplanation: The only possible array is [20,20]. [2020] is invalid because 2020 > 30. [2,020] is ivalid because 020 contains leading zeros.\n\n\nExample 5:\n\nInput: s = \"1234567890\", k = 90\nOutput: 34\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5.\ns consists of only digits and doesn't contain leading zeros.\n1 <= k <= 10^9."},{"index":"1417","url":"https://leetcode.com/problems/reformat-the-string","title":"Reformat The String","difficulty":"Easy","description":"Given alphanumeric string s. (Alphanumeric string is a string consisting of lowercase English letters and digits).\n\nYou have to find a permutation of the string where no letter is followed by another letter and no digit is followed by another digit. That is, no two adjacent characters have the same type.\n\nReturn the reformatted string or return an empty string if it is impossible to reformat the string.\n\n \n\nExample 1:\n\nInput: s = \"a0b1c2\"\nOutput: \"0a1b2c\"\nExplanation: No two adjacent characters have the same type in \"0a1b2c\". \"a0b1c2\", \"0a1b2c\", \"0c2a1b\" are also valid permutations.\n\n\nExample 2:\n\nInput: s = \"leetcode\"\nOutput: \"\"\nExplanation: \"leetcode\" has only characters so we cannot separate them by digits.\n\n\nExample 3:\n\nInput: s = \"1229857369\"\nOutput: \"\"\nExplanation: \"1229857369\" has only digits so we cannot separate them by characters.\n\n\nExample 4:\n\nInput: s = \"covid2019\"\nOutput: \"c2o0v1i9d\"\n\n\nExample 5:\n\nInput: s = \"ab123\"\nOutput: \"1a2b3\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 500\ns consists of only lowercase English letters and/or digits."},{"index":"1418","url":"https://leetcode.com/problems/display-table-of-food-orders-in-a-restaurant","title":"Display Table of Food Orders in a Restaurant","difficulty":"Medium","description":"Given the array orders, which represents the orders that customers have done in a restaurant. More specifically orders[i]=[customerNamei,tableNumberi,foodItemi] where customerNamei is the name of the customer, tableNumberi is the table customer sit at, and foodItemi is the item customer orders.\n\nReturn the restaurant's “display table”. The “display table” is a table whose row entries denote how many of each food item each table ordered. The first column is the table number and the remaining columns correspond to each food item in alphabetical order. The first row should be a header whose first column is “Table”, followed by the names of the food items. Note that the customer names are not part of the table. Additionally, the rows should be sorted in numerically increasing order.\n\n \n\nExample 1:\n\nInput: orders = [[\"David\",\"3\",\"Ceviche\"],[\"Corina\",\"10\",\"Beef Burrito\"],[\"David\",\"3\",\"Fried Chicken\"],[\"Carla\",\"5\",\"Water\"],[\"Carla\",\"5\",\"Ceviche\"],[\"Rous\",\"3\",\"Ceviche\"]]\nOutput: [[\"Table\",\"Beef Burrito\",\"Ceviche\",\"Fried Chicken\",\"Water\"],[\"3\",\"0\",\"2\",\"1\",\"0\"],[\"5\",\"0\",\"1\",\"0\",\"1\"],[\"10\",\"1\",\"0\",\"0\",\"0\"]] \nExplanation:\nThe displaying table looks like:\nTable,Beef Burrito,Ceviche,Fried Chicken,Water\n3    ,0           ,2      ,1            ,0\n5    ,0           ,1      ,0            ,1\n10   ,1           ,0      ,0            ,0\nFor the table 3: David orders \"Ceviche\" and \"Fried Chicken\", and Rous orders \"Ceviche\".\nFor the table 5: Carla orders \"Water\" and \"Ceviche\".\nFor the table 10: Corina orders \"Beef Burrito\". \n\n\nExample 2:\n\nInput: orders = [[\"James\",\"12\",\"Fried Chicken\"],[\"Ratesh\",\"12\",\"Fried Chicken\"],[\"Amadeus\",\"12\",\"Fried Chicken\"],[\"Adam\",\"1\",\"Canadian Waffles\"],[\"Brianna\",\"1\",\"Canadian Waffles\"]]\nOutput: [[\"Table\",\"Canadian Waffles\",\"Fried Chicken\"],[\"1\",\"2\",\"0\"],[\"12\",\"0\",\"3\"]] \nExplanation: \nFor the table 1: Adam and Brianna order \"Canadian Waffles\".\nFor the table 12: James, Ratesh and Amadeus order \"Fried Chicken\".\n\n\nExample 3:\n\nInput: orders = [[\"Laura\",\"2\",\"Bean Burrito\"],[\"Jhon\",\"2\",\"Beef Burrito\"],[\"Melissa\",\"2\",\"Soda\"]]\nOutput: [[\"Table\",\"Bean Burrito\",\"Beef Burrito\",\"Soda\"],[\"2\",\"1\",\"1\",\"1\"]]\n\n\n \n\nConstraints:\n\n1 <= orders.length <= 5 * 10^4\norders[i].length == 3\n1 <= customerNamei.length, foodItemi.length <= 20\ncustomerNamei and foodItemi consist of lowercase and uppercase English letters and the space character.\ntableNumberi is a valid integer between 1 and 500."},{"index":"1419","url":"https://leetcode.com/problems/minimum-number-of-frogs-croaking","title":"Minimum Number of Frogs Croaking","difficulty":"Medium","description":"Given the string croakOfFrogs, which represents a combination of the string \"croak\" from different frogs, that is, multiple frogs can croak at the same time, so multiple “croak” are mixed. Return the minimum number of different frogs to finish all the croak in the given string.\n\nA valid \"croak\" means a frog is printing 5 letters ‘c’, ’r’, ’o’, ’a’, ’k’ sequentially. The frogs have to print all five letters to finish a croak. If the given string is not a combination of valid \"croak\" return -1.\n\n \n\nExample 1:\n\nInput: croakOfFrogs = \"croakcroak\"\nOutput: 1 \nExplanation: One frog yelling \"croak\" twice.\n\n\nExample 2:\n\nInput: croakOfFrogs = \"crcoakroak\"\nOutput: 2 \nExplanation: The minimum number of frogs is two. \nThe first frog could yell \"crcoakroak\".\nThe second frog could yell later \"crcoakroak\".\n\n\nExample 3:\n\nInput: croakOfFrogs = \"croakcrook\"\nOutput: -1\nExplanation: The given string is an invalid combination of \"croak\" from different frogs.\n\n\nExample 4:\n\nInput: croakOfFrogs = \"croakcroa\"\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= croakOfFrogs.length <= 10^5\nAll characters in the string are: 'c', 'r', 'o', 'a' or 'k'."},{"index":"1420","url":"https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons","title":"Build Array Where You Can Find The Maximum Exactly K Comparisons","difficulty":"Hard","description":"Given three integers n, m and k. Consider the following algorithm to find the maximum element of an array of positive integers:\n\nYou should build the array arr which has the following properties:\n\narr has exactly n integers.\n1 <= arr[i] <= m where (0 <= i < n).\nAfter applying the mentioned algorithm to arr, the value search_cost is equal to k.\n\nReturn the number of ways to build the array arr under the mentioned conditions. As the answer may grow large, the answer must be computed modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: n = 2, m = 3, k = 1\nOutput: 6\nExplanation: The possible arrays are [1, 1], [2, 1], [2, 2], [3, 1], [3, 2] [3, 3]\n\n\nExample 2:\n\nInput: n = 5, m = 2, k = 3\nOutput: 0\nExplanation: There are no possible arrays that satisify the mentioned conditions.\n\n\nExample 3:\n\nInput: n = 9, m = 1, k = 1\nOutput: 1\nExplanation: The only possible array is [1, 1, 1, 1, 1, 1, 1, 1, 1]\n\n\nExample 4:\n\nInput: n = 50, m = 100, k = 25\nOutput: 34549172\nExplanation: Don't forget to compute the answer modulo 1000000007\n\n\nExample 5:\n\nInput: n = 37, m = 17, k = 7\nOutput: 418930126\n\n\n \n\nConstraints:\n\n1 <= n <= 50\n1 <= m <= 100\n0 <= k <= n"},{"index":"1422","url":"https://leetcode.com/problems/maximum-score-after-splitting-a-string","title":"Maximum Score After Splitting a String","difficulty":"Easy","description":"Given a string s of zeros and ones, return the maximum score after splitting the string into two non-empty substrings (i.e. left substring and right substring).\n\nThe score after splitting a string is the number of zeros in the left substring plus the number of ones in the right substring.\n\n \n\nExample 1:\n\nInput: s = \"011101\"\nOutput: 5 \nExplanation: \nAll possible ways of splitting s into two non-empty substrings are:\nleft = \"0\" and right = \"11101\", score = 1 + 4 = 5 \nleft = \"01\" and right = \"1101\", score = 1 + 3 = 4 \nleft = \"011\" and right = \"101\", score = 1 + 2 = 3 \nleft = \"0111\" and right = \"01\", score = 1 + 1 = 2 \nleft = \"01110\" and right = \"1\", score = 2 + 1 = 3\n\n\nExample 2:\n\nInput: s = \"00111\"\nOutput: 5\nExplanation: When left = \"00\" and right = \"111\", we get the maximum score = 2 + 3 = 5\n\n\nExample 3:\n\nInput: s = \"1111\"\nOutput: 3\n\n\n \n\nConstraints:\n\n2 <= s.length <= 500\nThe string s consists of characters '0' and '1' only."},{"index":"1423","url":"https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards","title":"Maximum Points You Can Obtain from Cards","difficulty":"Medium","description":"There are several cards arranged in a row, and each card has an associated number of points The points are given in the integer array cardPoints.\n\nIn one step, you can take one card from the beginning or from the end of the row. You have to take exactly k cards.\n\nYour score is the sum of the points of the cards you have taken.\n\nGiven the integer array cardPoints and the integer k, return the maximum score you can obtain.\n\n \n\nExample 1:\n\nInput: cardPoints = [1,2,3,4,5,6,1], k = 3\nOutput: 12\nExplanation: After the first step, your score will always be 1. However, choosing the rightmost card first will maximize your total score. The optimal strategy is to take the three cards on the right, giving a final score of 1 + 6 + 5 = 12.\n\n\nExample 2:\n\nInput: cardPoints = [2,2,2], k = 2\nOutput: 4\nExplanation: Regardless of which two cards you take, your score will always be 4.\n\n\nExample 3:\n\nInput: cardPoints = [9,7,7,9,7,7,9], k = 7\nOutput: 55\nExplanation: You have to take all the cards. Your score is the sum of points of all cards.\n\n\nExample 4:\n\nInput: cardPoints = [1,1000,1], k = 1\nOutput: 1\nExplanation: You cannot take the card in the middle. Your best score is 1. \n\n\nExample 5:\n\nInput: cardPoints = [1,79,80,1,1,1,200,1], k = 3\nOutput: 202\n\n\n \n\nConstraints:\n\n1 <= cardPoints.length <= 10^5\n1 <= cardPoints[i] <= 10^4\n1 <= k <= cardPoints.length"},{"index":"1424","url":"https://leetcode.com/problems/diagonal-traverse-ii","title":"Diagonal Traverse II","difficulty":"Medium","description":"Given a list of lists of integers, nums, return all elements of nums in diagonal order as shown in the below images.\n\n \n\nExample 1:\n\nInput: nums = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [1,4,2,7,5,3,8,6,9]\n\n\nExample 2:\n\nInput: nums = [[1,2,3,4,5],[6,7],[8],[9,10,11],[12,13,14,15,16]]\nOutput: [1,6,2,8,7,3,9,4,12,10,5,13,11,14,15,16]\n\n\nExample 3:\n\nInput: nums = [[1,2,3],[4],[5,6,7],[8],[9,10,11]]\nOutput: [1,4,2,5,3,8,6,9,7,10,11]\n\n\nExample 4:\n\nInput: nums = [[1,2,3,4,5,6]]\nOutput: [1,2,3,4,5,6]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n1 <= nums[i].length <= 10^5\n1 <= nums[i][j] <= 10^9\nThere at most 10^5 elements in nums."},{"index":"1425","url":"https://leetcode.com/problems/constrained-subsequence-sum","title":"Constrained Subsequence Sum","difficulty":"Hard","description":"Given an integer array nums and an integer k, return the maximum sum of a non-empty subsequence of that array such that for every two consecutive integers in the subsequence, nums[i] and nums[j], where i < j, the condition j - i <= k is satisfied.\n\nA subsequence of an array is obtained by deleting some number of elements (can be zero) from the array, leaving the remaining elements in their original order.\n\n \n\nExample 1:\n\nInput: nums = [10,2,-10,5,20], k = 2\nOutput: 37\nExplanation: The subsequence is [10, 2, 5, 20].\n\n\nExample 2:\n\nInput: nums = [-1,-2,-3], k = 1\nOutput: -1\nExplanation: The subsequence must be non-empty, so we choose the largest number.\n\n\nExample 3:\n\nInput: nums = [10,-2,-10,-5,20], k = 2\nOutput: 23\nExplanation: The subsequence is [10, -2, -5, 20].\n\n\n \n\nConstraints:\n\n1 <= k <= nums.length <= 10^5\n-10^4 <= nums[i] <= 10^4"},{"index":"1431","url":"https://leetcode.com/problems/kids-with-the-greatest-number-of-candies","title":"Kids With the Greatest Number of Candies","difficulty":"Easy","description":"Given the array candies and the integer extraCandies, where candies[i] represents the number of candies that the ith kid has.\n\nFor each kid check if there is a way to distribute extraCandies among the kids such that he or she can have the greatest number of candies among them. Notice that multiple kids can have the greatest number of candies.\n\n \n\nExample 1:\n\nInput: candies = [2,3,5,1,3], extraCandies = 3\nOutput: [true,true,true,false,true] \nExplanation: \nKid 1 has 2 candies and if he or she receives all extra candies (3) will have 5 candies --- the greatest number of candies among the kids. \nKid 2 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids. \nKid 3 has 5 candies and this is already the greatest number of candies among the kids. \nKid 4 has 1 candy and even if he or she receives all extra candies will only have 4 candies. \nKid 5 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids. \n\n\nExample 2:\n\nInput: candies = [4,2,1,1,2], extraCandies = 1\nOutput: [true,false,false,false,false] \nExplanation: There is only 1 extra candy, therefore only kid 1 will have the greatest number of candies among the kids regardless of who takes the extra candy.\n\n\nExample 3:\n\nInput: candies = [12,1,12], extraCandies = 10\nOutput: [true,false,true]\n\n\n \n\nConstraints:\n\n2 <= candies.length <= 100\n1 <= candies[i] <= 100\n1 <= extraCandies <= 50"},{"index":"1432","url":"https://leetcode.com/problems/max-difference-you-can-get-from-changing-an-integer","title":"Max Difference You Can Get From Changing an Integer","difficulty":"Medium","description":"You are given an integer num. You will apply the following steps exactly two times:\n\nPick a digit x (0 <= x <= 9).\nPick another digit y (0 <= y <= 9). The digit y can be equal to x.\nReplace all the occurrences of x in the decimal representation of num by y.\nThe new integer cannot have any leading zeros, also the new integer cannot be 0.\n\nLet a and b be the results of applying the operations to num the first and second times, respectively.\n\nReturn the max difference between a and b.\n\n \n\nExample 1:\n\nInput: num = 555\nOutput: 888\nExplanation: The first time pick x = 5 and y = 9 and store the new integer in a.\nThe second time pick x = 5 and y = 1 and store the new integer in b.\nWe have now a = 999 and b = 111 and max difference = 888\n\n\nExample 2:\n\nInput: num = 9\nOutput: 8\nExplanation: The first time pick x = 9 and y = 9 and store the new integer in a.\nThe second time pick x = 9 and y = 1 and store the new integer in b.\nWe have now a = 9 and b = 1 and max difference = 8\n\n\nExample 3:\n\nInput: num = 123456\nOutput: 820000\n\n\nExample 4:\n\nInput: num = 10000\nOutput: 80000\n\n\nExample 5:\n\nInput: num = 9288\nOutput: 8700\n\n\n \n\nConstraints:\n\n1 <= num <= 10^8"},{"index":"1433","url":"https://leetcode.com/problems/check-if-a-string-can-break-another-string","title":"Check If a String Can Break Another String","difficulty":"Medium","description":"Given two strings: s1 and s2 with the same size, check if some permutation of string s1 can break some permutation of string s2 or vice-versa. In other words s2 can break s1 or vice-versa.\n\nA string x can break string y (both of size n) if x[i] >= y[i] (in alphabetical order) for all i between 0 and n-1.\n\n \n\nExample 1:\n\nInput: s1 = \"abc\", s2 = \"xya\"\nOutput: true\nExplanation: \"ayx\" is a permutation of s2=\"xya\" which can break to string \"abc\" which is a permutation of s1=\"abc\".\n\n\nExample 2:\n\nInput: s1 = \"abe\", s2 = \"acd\"\nOutput: false \nExplanation: All permutations for s1=\"abe\" are: \"abe\", \"aeb\", \"bae\", \"bea\", \"eab\" and \"eba\" and all permutation for s2=\"acd\" are: \"acd\", \"adc\", \"cad\", \"cda\", \"dac\" and \"dca\". However, there is not any permutation from s1 which can break some permutation from s2 and vice-versa.\n\n\nExample 3:\n\nInput: s1 = \"leetcodee\", s2 = \"interview\"\nOutput: true\n\n\n \n\nConstraints:\n\ns1.length == n\ns2.length == n\n1 <= n <= 10^5\nAll strings consist of lowercase English letters."},{"index":"1434","url":"https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other","title":"Number of Ways to Wear Different Hats to Each Other","difficulty":"Hard","description":"There are n people and 40 types of hats labeled from 1 to 40.\n\nGiven a list of list of integers hats, where hats[i] is a list of all hats preferred by the i-th person.\n\nReturn the number of ways that the n people wear different hats to each other.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: hats = [[3,4],[4,5],[5]]\nOutput: 1\nExplanation: There is only one way to choose hats given the conditions. \nFirst person choose hat 3, Second person choose hat 4 and last one hat 5.\n\nExample 2:\n\nInput: hats = [[3,5,1],[3,5]]\nOutput: 4\nExplanation: There are 4 ways to choose hats\n(3,5), (5,3), (1,3) and (1,5)\n\n\nExample 3:\n\nInput: hats = [[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]\nOutput: 24\nExplanation: Each person can choose hats labeled from 1 to 4.\nNumber of Permutations of (1,2,3,4) = 24.\n\n\nExample 4:\n\nInput: hats = [[1,2,3],[2,3,5,6],[1,3,7,9],[1,8,9],[2,5,7]]\nOutput: 111\n\n\n \n\nConstraints:\n\nn == hats.length\n1 <= n <= 10\n1 <= hats[i].length <= 40\n1 <= hats[i][j] <= 40\nhats[i] contains a list of unique integers."},{"index":"1436","url":"https://leetcode.com/problems/destination-city","title":"Destination City","difficulty":"Easy","description":"You are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi. Return the destination city, that is, the city without any path outgoing to another city.\n\nIt is guaranteed that the graph of paths forms a line without any loop, therefore, there will be exactly one destination city.\n\n \n\nExample 1:\n\nInput: paths = [[\"London\",\"New York\"],[\"New York\",\"Lima\"],[\"Lima\",\"Sao Paulo\"]]\nOutput: \"Sao Paulo\" \nExplanation: Starting at \"London\" city you will reach \"Sao Paulo\" city which is the destination city. Your trip consist of: \"London\" -> \"New York\" -> \"Lima\" -> \"Sao Paulo\".\n\n\nExample 2:\n\nInput: paths = [[\"B\",\"C\"],[\"D\",\"B\"],[\"C\",\"A\"]]\nOutput: \"A\"\nExplanation: All possible trips are: \n\"D\" -> \"B\" -> \"C\" -> \"A\". \n\"B\" -> \"C\" -> \"A\". \n\"C\" -> \"A\". \n\"A\". \nClearly the destination city is \"A\".\n\n\nExample 3:\n\nInput: paths = [[\"A\",\"Z\"]]\nOutput: \"Z\"\n\n\n \n\nConstraints:\n\n1 <= paths.length <= 100\npaths[i].length == 2\n1 <= cityAi.length, cityBi.length <= 10\ncityAi != cityBi\nAll strings consist of lowercase and uppercase English letters and the space character."},{"index":"1437","url":"https://leetcode.com/problems/check-if-all-1s-are-at-least-length-k-places-away","title":"Check If All 1's Are at Least Length K Places Away","difficulty":"Medium","description":"Given an array nums of 0s and 1s and an integer k, return True if all 1's are at least k places away from each other, otherwise return False.\n\n \n\nExample 1:\n\nInput: nums = [1,0,0,0,1,0,0,1], k = 2\nOutput: true\nExplanation: Each of the 1s are at least 2 places away from each other.\n\n\nExample 2:\n\nInput: nums = [1,0,0,1,0,1], k = 2\nOutput: false\nExplanation: The second 1 and third 1 are only one apart from each other.\n\nExample 3:\n\nInput: nums = [1,1,1,1,1], k = 0\nOutput: true\n\n\nExample 4:\n\nInput: nums = [0,1,0,1], k = 1\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n0 <= k <= nums.length\nnums[i] is 0 or 1"},{"index":"1438","url":"https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","difficulty":"Medium","description":"Given an array of integers nums and an integer limit, return the size of the longest non-empty subarray such that the absolute difference between any two elements of this subarray is less than or equal to limit.\n\n \n\nExample 1:\n\nInput: nums = [8,2,4,7], limit = 4\nOutput: 2 \nExplanation: All subarrays are: \n[8] with maximum absolute diff |8-8| = 0 <= 4.\n[8,2] with maximum absolute diff |8-2| = 6 > 4. \n[8,2,4] with maximum absolute diff |8-2| = 6 > 4.\n[8,2,4,7] with maximum absolute diff |8-2| = 6 > 4.\n[2] with maximum absolute diff |2-2| = 0 <= 4.\n[2,4] with maximum absolute diff |2-4| = 2 <= 4.\n[2,4,7] with maximum absolute diff |2-7| = 5 > 4.\n[4] with maximum absolute diff |4-4| = 0 <= 4.\n[4,7] with maximum absolute diff |4-7| = 3 <= 4.\n[7] with maximum absolute diff |7-7| = 0 <= 4. \nTherefore, the size of the longest subarray is 2.\n\n\nExample 2:\n\nInput: nums = [10,1,2,4,7,2], limit = 5\nOutput: 4 \nExplanation: The subarray [2,4,7,2] is the longest since the maximum absolute diff is |2-7| = 5 <= 5.\n\n\nExample 3:\n\nInput: nums = [4,2,2,2,4,4,2,2], limit = 0\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n1 <= nums[i] <= 10^9\n0 <= limit <= 10^9"},{"index":"1439","url":"https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows","title":"Find the Kth Smallest Sum of a Matrix With Sorted Rows","difficulty":"Hard","description":"You are given an m * n matrix, mat, and an integer k, which has its rows sorted in non-decreasing order.\n\nYou are allowed to choose exactly 1 element from each row to form an array. Return the Kth smallest array sum among all possible arrays.\n\n \n\nExample 1:\n\nInput: mat = [[1,3,11],[2,4,6]], k = 5\nOutput: 7\nExplanation: Choosing one element from each row, the first k smallest sum are:\n[1,2], [1,4], [3,2], [3,4], [1,6]. Where the 5th sum is 7.  \n\nExample 2:\n\nInput: mat = [[1,3,11],[2,4,6]], k = 9\nOutput: 17\n\n\nExample 3:\n\nInput: mat = [[1,10,10],[1,4,5],[2,3,6]], k = 7\nOutput: 9\nExplanation: Choosing one element from each row, the first k smallest sum are:\n[1,1,2], [1,1,3], [1,4,2], [1,4,3], [1,1,6], [1,5,2], [1,5,3]. Where the 7th sum is 9.  \n\n\nExample 4:\n\nInput: mat = [[1,1,10],[2,2,9]], k = 7\nOutput: 12\n\n\n \n\nConstraints:\n\nm == mat.length\nn == mat.length[i]\n1 <= m, n <= 40\n1 <= k <= min(200, n ^ m)\n1 <= mat[i][j] <= 5000\nmat[i] is a non decreasing array."},{"index":"1441","url":"https://leetcode.com/problems/build-an-array-with-stack-operations","title":"Build an Array With Stack Operations","difficulty":"Easy","description":"Given an array target and an integer n. In each iteration, you will read a number from  list = {1,2,3..., n}.\n\nBuild the target array using the following operations:\n\nPush: Read a new element from the beginning list, and push it in the array.\nPop: delete the last element of the array.\nIf the target array is already built, stop reading more elements.\n\nYou are guaranteed that the target array is strictly increasing, only containing numbers between 1 to n inclusive.\n\nReturn the operations to build the target array.\n\nYou are guaranteed that the answer is unique.\n\n \n\nExample 1:\n\nInput: target = [1,3], n = 3\nOutput: [\"Push\",\"Push\",\"Pop\",\"Push\"]\nExplanation: \nRead number 1 and automatically push in the array -> [1]\nRead number 2 and automatically push in the array then Pop it -> [1]\nRead number 3 and automatically push in the array -> [1,3]\n\n\nExample 2:\n\nInput: target = [1,2,3], n = 3\nOutput: [\"Push\",\"Push\",\"Push\"]\n\n\nExample 3:\n\nInput: target = [1,2], n = 4\nOutput: [\"Push\",\"Push\"]\nExplanation: You only need to read the first 2 numbers and stop.\n\n\nExample 4:\n\nInput: target = [2,3,4], n = 4\nOutput: [\"Push\",\"Pop\",\"Push\",\"Push\",\"Push\"]\n\n\n \n\nConstraints:\n\n1 <= target.length <= 100\n1 <= target[i] <= 100\n1 <= n <= 100\ntarget is strictly increasing."},{"index":"1442","url":"https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor","title":"Count Triplets That Can Form Two Arrays of Equal XOR","difficulty":"Medium","description":"Given an array of integers arr.\n\nWe want to select three indices i, j and k where (0 <= i < j <= k < arr.length).\n\nLet's define a and b as follows:\n\na = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]\nb = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]\n\nNote that ^ denotes the bitwise-xor operation.\n\nReturn the number of triplets (i, j and k) Where a == b.\n\n \n\nExample 1:\n\nInput: arr = [2,3,1,6,7]\nOutput: 4\nExplanation: The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4)\n\n\nExample 2:\n\nInput: arr = [1,1,1,1,1]\nOutput: 10\n\n\nExample 3:\n\nInput: arr = [2,3]\nOutput: 0\n\n\nExample 4:\n\nInput: arr = [1,3,5,7,9]\nOutput: 3\n\n\nExample 5:\n\nInput: arr = [7,11,12,9,5,2,7,17,22]\nOutput: 8\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 300\n1 <= arr[i] <= 10^8"},{"index":"1443","url":"https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree","title":"Minimum Time to Collect All Apples in a Tree","difficulty":"Medium","description":"Given an undirected tree consisting of n vertices numbered from 0 to n-1, which has some apples in their vertices. You spend 1 second to walk over one edge of the tree. Return the minimum time in seconds you have to spend to collect all apples in the tree, starting at vertex 0 and coming back to this vertex.\n\nThe edges of the undirected tree are given in the array edges, where edges[i] = [ai, bi] means that exists an edge connecting the vertices ai and bi. Additionally, there is a boolean array hasApple, where hasApple[i] = true means that vertex i has an apple; otherwise, it does not have any apple.\n\n \n\nExample 1:\n\nInput: n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,true,true,false]\nOutput: 8 \nExplanation: The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.  \n\n\nExample 2:\n\nInput: n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,false,true,false]\nOutput: 6\nExplanation: The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.  \n\n\nExample 3:\n\nInput: n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,false,false,false,false,false]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5\nedges.length == n - 1\nedges[i].length == 2\n0 <= ai < bi <= n - 1\nfromi < toi\nhasApple.length == n"},{"index":"1444","url":"https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza","title":"Number of Ways of Cutting a Pizza","difficulty":"Hard","description":"Given a rectangular pizza represented as a rows x cols matrix containing the following characters: 'A' (an apple) and '.' (empty cell) and given the integer k. You have to cut the pizza into k pieces using k-1 cuts. \n\nFor each cut you choose the direction: vertical or horizontal, then you choose a cut position at the cell boundary and cut the pizza into two pieces. If you cut the pizza vertically, give the left part of the pizza to a person. If you cut the pizza horizontally, give the upper part of the pizza to a person. Give the last piece of pizza to the last person.\n\nReturn the number of ways of cutting the pizza such that each piece contains at least one apple. Since the answer can be a huge number, return this modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: pizza = [\"A..\",\"AAA\",\"...\"], k = 3\nOutput: 3 \nExplanation: The figure above shows the three ways to cut the pizza. Note that pieces must contain at least one apple.\n\n\nExample 2:\n\nInput: pizza = [\"A..\",\"AA.\",\"...\"], k = 3\nOutput: 1\n\n\nExample 3:\n\nInput: pizza = [\"A..\",\"A..\",\"...\"], k = 1\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= rows, cols <= 50\nrows == pizza.length\ncols == pizza[i].length\n1 <= k <= 10\npizza consists of characters 'A' and '.' only."},{"index":"1446","url":"https://leetcode.com/problems/consecutive-characters","title":"Consecutive Characters","difficulty":"Easy","description":"Given a string s, the power of the string is the maximum length of a non-empty substring that contains only one unique character.\n\nReturn the power of the string.\n\n \n\nExample 1:\n\nInput: s = \"leetcode\"\nOutput: 2\nExplanation: The substring \"ee\" is of length 2 with the character 'e' only.\n\n\nExample 2:\n\nInput: s = \"abbcccddddeeeeedcba\"\nOutput: 5\nExplanation: The substring \"eeeee\" is of length 5 with the character 'e' only.\n\n\nExample 3:\n\nInput: s = \"triplepillooooow\"\nOutput: 5\n\n\nExample 4:\n\nInput: s = \"hooraaaaaaaaaaay\"\nOutput: 11\n\n\nExample 5:\n\nInput: s = \"tourist\"\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= s.length <= 500\ns contains only lowercase English letters."},{"index":"1447","url":"https://leetcode.com/problems/simplified-fractions","title":"Simplified Fractions","difficulty":"Medium","description":"Given an integer n, return a list of all simplified fractions between 0 and 1 (exclusive) such that the denominator is less-than-or-equal-to n. The fractions can be in any order.\n\n \n\nExample 1:\n\nInput: n = 2\nOutput: [\"1/2\"]\nExplanation: \"1/2\" is the only unique fraction with a denominator less-than-or-equal-to 2.\n\nExample 2:\n\nInput: n = 3\nOutput: [\"1/2\",\"1/3\",\"2/3\"]\n\n\nExample 3:\n\nInput: n = 4\nOutput: [\"1/2\",\"1/3\",\"1/4\",\"2/3\",\"3/4\"]\nExplanation: \"2/4\" is not a simplified fraction because it can be simplified to \"1/2\".\n\nExample 4:\n\nInput: n = 1\nOutput: []\n\n\n \n\nConstraints:\n\n1 <= n <= 100"},{"index":"1448","url":"https://leetcode.com/problems/count-good-nodes-in-binary-tree","title":"Count Good Nodes in Binary Tree","difficulty":"Medium","description":"Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.\n\nReturn the number of good nodes in the binary tree.\n\n \n\nExample 1:\n\nInput: root = [3,1,4,3,null,1,5]\nOutput: 4\nExplanation: Nodes in blue are good.\nRoot Node (3) is always a good node.\nNode 4 -> (3,4) is the maximum value in the path starting from the root.\nNode 5 -> (3,4,5) is the maximum value in the path\nNode 3 -> (3,1,3) is the maximum value in the path.\n\nExample 2:\n\nInput: root = [3,3,null,4,2]\nOutput: 3\nExplanation: Node 2 -> (3, 3, 2) is not good, because \"3\" is higher than it.\n\nExample 3:\n\nInput: root = [1]\nOutput: 1\nExplanation: Root is considered as good.\n\n \n\nConstraints:\n\nThe number of nodes in the binary tree is in the range [1, 10^5].\nEach node's value is between [-10^4, 10^4]."},{"index":"1449","url":"https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target","title":"Form Largest Integer With Digits That Add up to Target","difficulty":"Hard","description":"Given an array of integers cost and an integer target. Return the maximum integer you can paint under the following rules:\n\nThe cost of painting a digit (i+1) is given by cost[i] (0 indexed).\nThe total cost used must be equal to target.\nInteger does not have digits 0.\n\nSince the answer may be too large, return it as string.\n\nIf there is no way to paint any integer given the condition, return \"0\".\n\n \n\nExample 1:\n\nInput: cost = [4,3,2,5,6,7,2,5,5], target = 9\nOutput: \"7772\"\nExplanation:  The cost to paint the digit '7' is 2, and the digit '2' is 3. Then cost(\"7772\") = 2*3+ 3*1 = 9. You could also paint \"977\", but \"7772\" is the largest number.\nDigit    cost\n  1  ->   4\n  2  ->   3\n  3  ->   2\n  4  ->   5\n  5  ->   6\n  6  ->   7\n  7  ->   2\n  8  ->   5\n  9  ->   5\n\n\nExample 2:\n\nInput: cost = [7,6,5,5,5,6,8,7,8], target = 12\nOutput: \"85\"\nExplanation: The cost to paint the digit '8' is 7, and the digit '5' is 5. Then cost(\"85\") = 7 + 5 = 12.\n\n\nExample 3:\n\nInput: cost = [2,4,6,2,4,6,4,4,4], target = 5\nOutput: \"0\"\nExplanation: It's not possible to paint any integer with total cost equal to target.\n\n\nExample 4:\n\nInput: cost = [6,10,15,40,40,40,40,40,40], target = 47\nOutput: \"32211\"\n\n\n \n\nConstraints:\n\ncost.length == 9\n1 <= cost[i] <= 5000\n1 <= target <= 5000"},{"index":"1450","url":"https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time","title":"Number of Students Doing Homework at a Given Time","difficulty":"Easy","description":"Given two integer arrays startTime and endTime and given an integer queryTime.\n\nThe ith student started doing their homework at the time startTime[i] and finished it at time endTime[i].\n\nReturn the number of students doing their homework at time queryTime. More formally, return the number of students where queryTime lays in the interval [startTime[i], endTime[i]] inclusive.\n\n \n\nExample 1:\n\nInput: startTime = [1,2,3], endTime = [3,2,7], queryTime = 4\nOutput: 1\nExplanation: We have 3 students where:\nThe first student started doing homework at time 1 and finished at time 3 and wasn't doing anything at time 4.\nThe second student started doing homework at time 2 and finished at time 2 and also wasn't doing anything at time 4.\nThe third student started doing homework at time 3 and finished at time 7 and was the only student doing homework at time 4.\n\n\nExample 2:\n\nInput: startTime = [4], endTime = [4], queryTime = 4\nOutput: 1\nExplanation: The only student was doing their homework at the queryTime.\n\n\nExample 3:\n\nInput: startTime = [4], endTime = [4], queryTime = 5\nOutput: 0\n\n\nExample 4:\n\nInput: startTime = [1,1,1,1], endTime = [1,3,2,4], queryTime = 7\nOutput: 0\n\n\nExample 5:\n\nInput: startTime = [9,8,7,6,5,4,3,2,1], endTime = [10,10,10,10,10,10,10,10,10], queryTime = 5\nOutput: 5\n\n\n \n\nConstraints:\n\nstartTime.length == endTime.length\n1 <= startTime.length <= 100\n1 <= startTime[i] <= endTime[i] <= 1000\n1 <= queryTime <= 1000"},{"index":"1451","url":"https://leetcode.com/problems/rearrange-words-in-a-sentence","title":"Rearrange Words in a Sentence","difficulty":"Medium","description":"Given a sentence text (A sentence is a string of space-separated words) in the following format:\n\nFirst letter is in upper case.\nEach word in text are separated by a single space.\n\nYour task is to rearrange the words in text such that all words are rearranged in an increasing order of their lengths. If two words have the same length, arrange them in their original order.\n\nReturn the new text following the format shown above.\n\n \n\nExample 1:\n\nInput: text = \"Leetcode is cool\"\nOutput: \"Is cool leetcode\"\nExplanation: There are 3 words, \"Leetcode\" of length 8, \"is\" of length 2 and \"cool\" of length 4.\nOutput is ordered by length and the new first word starts with capital letter.\n\n\nExample 2:\n\nInput: text = \"Keep calm and code on\"\nOutput: \"On and keep calm code\"\nExplanation: Output is ordered as follows:\n\"On\" 2 letters.\n\"and\" 3 letters.\n\"keep\" 4 letters in case of tie order by position in original text.\n\"calm\" 4 letters.\n\"code\" 4 letters.\n\n\nExample 3:\n\nInput: text = \"To be or not to be\"\nOutput: \"To be or to be not\"\n\n\n \n\nConstraints:\n\ntext begins with a capital letter and then contains lowercase letters and single space between words.\n1 <= text.length <= 10^5"},{"index":"1452","url":"https://leetcode.com/problems/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list","title":"People Whose List of Favorite Companies Is Not a Subset of Another List","difficulty":"Medium","description":"Given the array favoriteCompanies where favoriteCompanies[i] is the list of favorites companies for the ith person (indexed from 0).\n\nReturn the indices of people whose list of favorite companies is not a subset of any other list of favorites companies. You must return the indices in increasing order.\n\n \n\nExample 1:\n\nInput: favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"google\",\"microsoft\"],[\"google\",\"facebook\"],[\"google\"],[\"amazon\"]]\nOutput: [0,1,4] \nExplanation: \nPerson with index=2 has favoriteCompanies[2]=[\"google\",\"facebook\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] corresponding to the person with index 0. \nPerson with index=3 has favoriteCompanies[3]=[\"google\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] and favoriteCompanies[1]=[\"google\",\"microsoft\"]. \nOther lists of favorite companies are not a subset of another list, therefore, the answer is [0,1,4].\n\n\nExample 2:\n\nInput: favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"leetcode\",\"amazon\"],[\"facebook\",\"google\"]]\nOutput: [0,1] \nExplanation: In this case favoriteCompanies[2]=[\"facebook\",\"google\"] is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"], therefore, the answer is [0,1].\n\n\nExample 3:\n\nInput: favoriteCompanies = [[\"leetcode\"],[\"google\"],[\"facebook\"],[\"amazon\"]]\nOutput: [0,1,2,3]\n\n\n \n\nConstraints:\n\n1 <= favoriteCompanies.length <= 100\n1 <= favoriteCompanies[i].length <= 500\n1 <= favoriteCompanies[i][j].length <= 20\nAll strings in favoriteCompanies[i] are distinct.\nAll lists of favorite companies are distinct, that is, If we sort alphabetically each list then favoriteCompanies[i] != favoriteCompanies[j].\nAll strings consist of lowercase English letters only."},{"index":"1453","url":"https://leetcode.com/problems/maximum-number-of-darts-inside-of-a-circular-dartboard","title":"Maximum Number of Darts Inside of a Circular Dartboard","difficulty":"Hard","description":"You have a very large square wall and a circular dartboard placed on the wall. You have been challenged to throw darts into the board blindfolded. Darts thrown at the wall are represented as an array of points on a 2D plane. \n\nReturn the maximum number of points that are within or lie on any circular dartboard of radius r.\n\n \n\nExample 1:\n\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 2\nOutput: 4\nExplanation: Circle dartboard with center in (0,0) and radius = 2 contain all points.\n\n\nExample 2:\n\nInput: points = [[-3,0],[3,0],[2,6],[5,4],[0,9],[7,8]], r = 5\nOutput: 5\nExplanation: Circle dartboard with center in (0,4) and radius = 5 contain all points except the point (7,8).\n\n\nExample 3:\n\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 1\nOutput: 1\n\n\nExample 4:\n\nInput: points = [[1,2],[3,5],[1,-1],[2,3],[4,1],[1,3]], r = 2\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= points.length <= 100\npoints[i].length == 2\n-10^4 <= points[i][0], points[i][1] <= 10^4\n1 <= r <= 5000"},{"index":"1455","url":"https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence","title":"Check If a Word Occurs As a Prefix of Any Word in a Sentence","difficulty":"Easy","description":"Given a sentence that consists of some words separated by a single space, and a searchWord.\n\nYou have to check if searchWord is a prefix of any word in sentence.\n\nReturn the index of the word in sentence where searchWord is a prefix of this word (1-indexed).\n\nIf searchWord is a prefix of more than one word, return the index of the first word (minimum index). If there is no such word return -1.\n\nA prefix of a string S is any leading contiguous substring of S.\n\n \n\nExample 1:\n\nInput: sentence = \"i love eating burger\", searchWord = \"burg\"\nOutput: 4\nExplanation: \"burg\" is prefix of \"burger\" which is the 4th word in the sentence.\n\n\nExample 2:\n\nInput: sentence = \"this problem is an easy problem\", searchWord = \"pro\"\nOutput: 2\nExplanation: \"pro\" is prefix of \"problem\" which is the 2nd and the 6th word in the sentence, but we return 2 as it's the minimal index.\n\n\nExample 3:\n\nInput: sentence = \"i am tired\", searchWord = \"you\"\nOutput: -1\nExplanation: \"you\" is not a prefix of any word in the sentence.\n\n\nExample 4:\n\nInput: sentence = \"i use triple pillow\", searchWord = \"pill\"\nOutput: 4\n\n\nExample 5:\n\nInput: sentence = \"hello from the other side\", searchWord = \"they\"\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= sentence.length <= 100\n1 <= searchWord.length <= 10\nsentence consists of lowercase English letters and spaces.\nsearchWord consists of lowercase English letters."},{"index":"1456","url":"https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length","title":"Maximum Number of Vowels in a Substring of Given Length","difficulty":"Medium","description":"Given a string s and an integer k.\n\nReturn the maximum number of vowel letters in any substring of s with length k.\n\nVowel letters in English are (a, e, i, o, u).\n\n \n\nExample 1:\n\nInput: s = \"abciiidef\", k = 3\nOutput: 3\nExplanation: The substring \"iii\" contains 3 vowel letters.\n\n\nExample 2:\n\nInput: s = \"aeiou\", k = 2\nOutput: 2\nExplanation: Any substring of length 2 contains 2 vowels.\n\n\nExample 3:\n\nInput: s = \"leetcode\", k = 3\nOutput: 2\nExplanation: \"lee\", \"eet\" and \"ode\" contain 2 vowels.\n\n\nExample 4:\n\nInput: s = \"rhythms\", k = 4\nOutput: 0\nExplanation: We can see that s doesn't have any vowel letters.\n\n\nExample 5:\n\nInput: s = \"tryhard\", k = 4\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\ns consists of lowercase English letters.\n1 <= k <= s.length"},{"index":"1457","url":"https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree","title":"Pseudo-Palindromic Paths in a Binary Tree","difficulty":"Medium","description":"Given a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be pseudo-palindromic if at least one permutation of the node values in the path is a palindrome.\n\nReturn the number of pseudo-palindromic paths going from the root node to leaf nodes.\n\n \n\nExample 1:\n\nInput: root = [2,3,1,3,1,null,1]\nOutput: 2 \nExplanation: The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the red path [2,3,3], the green path [2,1,1], and the path [2,3,1]. Among these paths only red path and green path are pseudo-palindromic paths since the red path [2,3,3] can be rearranged in [3,2,3] (palindrome) and the green path [2,1,1] can be rearranged in [1,2,1] (palindrome).\n\n\nExample 2:\n\nInput: root = [2,1,1,1,3,null,null,null,null,null,1]\nOutput: 1 \nExplanation: The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the green path [2,1,1], the path [2,1,3,1], and the path [2,1]. Among these paths only the green path is pseudo-palindromic since [2,1,1] can be rearranged in [1,2,1] (palindrome).\n\n\nExample 3:\n\nInput: root = [9]\nOutput: 1\n\n\n \n\nConstraints:\n\nThe given binary tree will have between 1 and 10^5 nodes.\nNode values are digits from 1 to 9."},{"index":"1458","url":"https://leetcode.com/problems/max-dot-product-of-two-subsequences","title":"Max Dot Product of Two Subsequences","difficulty":"Hard","description":"Given two arrays nums1 and nums2.\n\nReturn the maximum dot product between non-empty subsequences of nums1 and nums2 with the same length.\n\nA subsequence of a array is a new array which is formed from the original array by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, [2,3,5] is a subsequence of [1,2,3,4,5] while [1,5,3] is not).\n\n \n\nExample 1:\n\nInput: nums1 = [2,1,-2,5], nums2 = [3,0,-6]\nOutput: 18\nExplanation: Take subsequence [2,-2] from nums1 and subsequence [3,-6] from nums2.\nTheir dot product is (2*3 + (-2)*(-6)) = 18.\n\nExample 2:\n\nInput: nums1 = [3,-2], nums2 = [2,-6,7]\nOutput: 21\nExplanation: Take subsequence [3] from nums1 and subsequence [7] from nums2.\nTheir dot product is (3*7) = 21.\n\nExample 3:\n\nInput: nums1 = [-1,-1], nums2 = [1,1]\nOutput: -1\nExplanation: Take subsequence [-1] from nums1 and subsequence [1] from nums2.\nTheir dot product is -1.\n\n \n\nConstraints:\n\n1 <= nums1.length, nums2.length <= 500\n-1000 <= nums1[i], nums2[i] <= 1000"},{"index":"1460","url":"https://leetcode.com/problems/make-two-arrays-equal-by-reversing-sub-arrays","title":"Make Two Arrays Equal by Reversing Sub-arrays","difficulty":"Easy","description":"Given two integer arrays of equal length target and arr.\n\nIn one step, you can select any non-empty sub-array of arr and reverse it. You are allowed to make any number of steps.\n\nReturn True if you can make arr equal to target, or False otherwise.\n\n \n\nExample 1:\n\nInput: target = [1,2,3,4], arr = [2,4,1,3]\nOutput: true\nExplanation: You can follow the next steps to convert arr to target:\n1- Reverse sub-array [2,4,1], arr becomes [1,4,2,3]\n2- Reverse sub-array [4,2], arr becomes [1,2,4,3]\n3- Reverse sub-array [4,3], arr becomes [1,2,3,4]\nThere are multiple ways to convert arr to target, this is not the only way to do so.\n\n\nExample 2:\n\nInput: target = [7], arr = [7]\nOutput: true\nExplanation: arr is equal to target without any reverses.\n\n\nExample 3:\n\nInput: target = [1,12], arr = [12,1]\nOutput: true\n\n\nExample 4:\n\nInput: target = [3,7,9], arr = [3,7,11]\nOutput: false\nExplanation: arr doesn't have value 9 and it can never be converted to target.\n\n\nExample 5:\n\nInput: target = [1,1,1,1,1], arr = [1,1,1,1,1]\nOutput: true\n\n\n \n\nConstraints:\n\ntarget.length == arr.length\n1 <= target.length <= 1000\n1 <= target[i] <= 1000\n1 <= arr[i] <= 1000"},{"index":"1461","url":"https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k","title":"Check If a String Contains All Binary Codes of Size K","difficulty":"Medium","description":"Given a binary string s and an integer k.\n\nReturn True if every binary code of length k is a substring of s. Otherwise, return False.\n\n \n\nExample 1:\n\nInput: s = \"00110110\", k = 2\nOutput: true\nExplanation: The binary codes of length 2 are \"00\", \"01\", \"10\" and \"11\". They can be all found as substrings at indicies 0, 1, 3 and 2 respectively.\n\n\nExample 2:\n\nInput: s = \"00110\", k = 2\nOutput: true\n\n\nExample 3:\n\nInput: s = \"0110\", k = 1\nOutput: true\nExplanation: The binary codes of length 1 are \"0\" and \"1\", it is clear that both exist as a substring. \n\n\nExample 4:\n\nInput: s = \"0110\", k = 2\nOutput: false\nExplanation: The binary code \"00\" is of length 2 and doesn't exist in the array.\n\n\nExample 5:\n\nInput: s = \"0000000001011100\", k = 4\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= s.length <= 5 * 10^5\ns consists of 0's and 1's only.\n1 <= k <= 20"},{"index":"1462","url":"https://leetcode.com/problems/course-schedule-iv","title":"Course Schedule IV","difficulty":"Medium","description":"There are a total of n courses you have to take, labeled from 0 to n-1.\n\nSome courses may have direct prerequisites, for example, to take course 0 you have first to take course 1, which is expressed as a pair: [1,0]\n\nGiven the total number of courses n, a list of direct prerequisite pairs and a list of queries pairs.\n\nYou should answer for each queries[i] whether the course queries[i][0] is a prerequisite of the course queries[i][1] or not.\n\nReturn a list of boolean, the answers to the given queries.\n\nPlease note that if course a is a prerequisite of course b and course b is a prerequisite of course c, then, course a is a prerequisite of course c.\n\n \n\nExample 1:\n\nInput: n = 2, prerequisites = [[1,0]], queries = [[0,1],[1,0]]\nOutput: [false,true]\nExplanation: course 0 is not a prerequisite of course 1 but the opposite is true.\n\n\nExample 2:\n\nInput: n = 2, prerequisites = [], queries = [[1,0],[0,1]]\nOutput: [false,false]\nExplanation: There are no prerequisites and each course is independent.\n\n\nExample 3:\n\nInput: n = 3, prerequisites = [[1,2],[1,0],[2,0]], queries = [[1,0],[1,2]]\nOutput: [true,true]\n\n\nExample 4:\n\nInput: n = 3, prerequisites = [[1,0],[2,0]], queries = [[0,1],[2,0]]\nOutput: [false,true]\n\n\nExample 5:\n\nInput: n = 5, prerequisites = [[0,1],[1,2],[2,3],[3,4]], queries = [[0,4],[4,0],[1,3],[3,0]]\nOutput: [true,false,true,false]\n\n\n \n\nConstraints:\n\n2 <= n <= 100\n0 <= prerequisite.length <= (n * (n - 1) / 2)\n0 <= prerequisite[i][0], prerequisite[i][1] < n\nprerequisite[i][0] != prerequisite[i][1]\nThe prerequisites graph has no cycles.\nThe prerequisites graph has no repeated edges.\n1 <= queries.length <= 10^4\nqueries[i][0] != queries[i][1]"},{"index":"1463","url":"https://leetcode.com/problems/cherry-pickup-ii","title":"Cherry Pickup II","difficulty":"Hard","description":"Given a rows x cols matrix grid representing a field of cherries. Each cell in grid represents the number of cherries that you can collect.\n\nYou have two robots that can collect cherries for you, Robot #1 is located at the top-left corner (0,0) , and Robot #2 is located at the top-right corner (0, cols-1) of the grid.\n\nReturn the maximum number of cherries collection using both robots  by following the rules below:\n\nFrom a cell (i,j), robots can move to cell (i+1, j-1) , (i+1, j) or (i+1, j+1).\nWhen any robot is passing through a cell, It picks it up all cherries, and the cell becomes an empty cell (0).\nWhen both robots stay on the same cell, only one of them takes the cherries.\nBoth robots cannot move outside of the grid at any moment.\nBoth robots should reach the bottom row in the grid.\n\n \n\nExample 1:\n\nInput: grid = [[3,1,1],[2,5,1],[1,5,5],[2,1,1]]\nOutput: 24\nExplanation: Path of robot #1 and #2 are described in color green and blue respectively.\nCherries taken by Robot #1, (3 + 2 + 5 + 2) = 12.\nCherries taken by Robot #2, (1 + 5 + 5 + 1) = 12.\nTotal of cherries: 12 + 12 = 24.\n\n\nExample 2:\n\nInput: grid = [[1,0,0,0,0,0,1],[2,0,0,0,0,3,0],[2,0,9,0,0,0,0],[0,3,0,5,4,0,0],[1,0,2,3,0,0,6]]\nOutput: 28\nExplanation: Path of robot #1 and #2 are described in color green and blue respectively.\nCherries taken by Robot #1, (1 + 9 + 5 + 2) = 17.\nCherries taken by Robot #2, (1 + 3 + 4 + 3) = 11.\nTotal of cherries: 17 + 11 = 28.\n\n\nExample 3:\n\nInput: grid = [[1,0,0,3],[0,0,0,3],[0,0,3,3],[9,0,3,3]]\nOutput: 22\n\n\nExample 4:\n\nInput: grid = [[1,1],[1,1]]\nOutput: 4\n\n\n \n\nConstraints:\n\nrows == grid.length\ncols == grid[i].length\n2 <= rows, cols <= 70\n0 <= grid[i][j] <= 100 "},{"index":"1464","url":"https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array","title":"Maximum Product of Two Elements in an Array","difficulty":"Easy","description":"Given the array of integers nums, you will choose two different indices i and j of that array. Return the maximum value of (nums[i]-1)*(nums[j]-1).\n\n \n\nExample 1:\n\nInput: nums = [3,4,5,2]\nOutput: 12 \nExplanation: If you choose the indices i=1 and j=2 (indexed from 0), you will get the maximum value, that is, (nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12. \n\n\nExample 2:\n\nInput: nums = [1,5,4,5]\nOutput: 16\nExplanation: Choosing the indices i=1 and j=3 (indexed from 0), you will get the maximum value of (5-1)*(5-1) = 16.\n\n\nExample 3:\n\nInput: nums = [3,7]\nOutput: 12\n\n\n \n\nConstraints:\n\n2 <= nums.length <= 500\n1 <= nums[i] <= 10^3"},{"index":"1465","url":"https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts","title":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","difficulty":"Medium","description":"Given a rectangular cake with height h and width w, and two arrays of integers horizontalCuts and verticalCuts where horizontalCuts[i] is the distance from the top of the rectangular cake to the ith horizontal cut and similarly, verticalCuts[j] is the distance from the left of the rectangular cake to the jth vertical cut.\n\nReturn the maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays horizontalCuts and verticalCuts. Since the answer can be a huge number, return this modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: h = 5, w = 4, horizontalCuts = [1,2,4], verticalCuts = [1,3]\nOutput: 4 \nExplanation: The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green piece of cake has the maximum area.\n\n\nExample 2:\n\nInput: h = 5, w = 4, horizontalCuts = [3,1], verticalCuts = [1]\nOutput: 6\nExplanation: The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green and yellow pieces of cake have the maximum area.\n\n\nExample 3:\n\nInput: h = 5, w = 4, horizontalCuts = [3], verticalCuts = [3]\nOutput: 9\n\n\n \n\nConstraints:\n\n2 <= h, w <= 10^9\n1 <= horizontalCuts.length < min(h, 10^5)\n1 <= verticalCuts.length < min(w, 10^5)\n1 <= horizontalCuts[i] < h\n1 <= verticalCuts[i] < w\nIt is guaranteed that all elements in horizontalCuts are distinct.\nIt is guaranteed that all elements in verticalCuts are distinct."},{"index":"1466","url":"https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero","title":"Reorder Routes to Make All Paths Lead to the City Zero","difficulty":"Medium","description":"There are n cities numbered from 0 to n-1 and n-1 roads such that there is only one way to travel between two different cities (this network form a tree). Last year, The ministry of transport decided to orient the roads in one direction because they are too narrow.\n\nRoads are represented by connections where connections[i] = [a, b] represents a road from city a to b.\n\nThis year, there will be a big event in the capital (city 0), and many people want to travel to this city.\n\nYour task consists of reorienting some roads such that each city can visit the city 0. Return the minimum number of edges changed.\n\nIt's guaranteed that each city can reach the city 0 after reorder.\n\n \n\nExample 1:\n\nInput: n = 6, connections = [[0,1],[1,3],[2,3],[4,0],[4,5]]\nOutput: 3\nExplanation: Change the direction of edges show in red such that each node can reach the node 0 (capital).\n\nExample 2:\n\nInput: n = 5, connections = [[1,0],[1,2],[3,2],[3,4]]\nOutput: 2\nExplanation: Change the direction of edges show in red such that each node can reach the node 0 (capital).\n\nExample 3:\n\nInput: n = 3, connections = [[1,0],[2,0]]\nOutput: 0\n\n\n \n\nConstraints:\n\n2 <= n <= 5 * 10^4\nconnections.length == n-1\nconnections[i].length == 2\n0 <= connections[i][0], connections[i][1] <= n-1\nconnections[i][0] != connections[i][1]"},{"index":"1467","url":"https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls","title":"Probability of a Two Boxes Having The Same Number of Distinct Balls","difficulty":"Hard","description":"Given 2n balls of k distinct colors. You will be given an integer array balls of size k where balls[i] is the number of balls of color i. \n\nAll the balls will be shuffled uniformly at random, then we will distribute the first n balls to the first box and the remaining n balls to the other box (Please read the explanation of the second example carefully).\n\nPlease note that the two boxes are considered different. For example, if we have two balls of colors a and b, and two boxes [] and (), then the distribution [a] (b) is considered different than the distribution [b] (a) (Please read the explanation of the first example carefully).\n\nWe want to calculate the probability that the two boxes have the same number of distinct balls.\n\n \n\nExample 1:\n\nInput: balls = [1,1]\nOutput: 1.00000\nExplanation: Only 2 ways to divide the balls equally:\n- A ball of color 1 to box 1 and a ball of color 2 to box 2\n- A ball of color 2 to box 1 and a ball of color 1 to box 2\nIn both ways, the number of distinct colors in each box is equal. The probability is 2/2 = 1\n\n\nExample 2:\n\nInput: balls = [2,1,1]\nOutput: 0.66667\nExplanation: We have the set of balls [1, 1, 2, 3]\nThis set of balls will be shuffled randomly and we may have one of the 12 distinct shuffles with equale probability (i.e. 1/12):\n[1,1 / 2,3], [1,1 / 3,2], [1,2 / 1,3], [1,2 / 3,1], [1,3 / 1,2], [1,3 / 2,1], [2,1 / 1,3], [2,1 / 3,1], [2,3 / 1,1], [3,1 / 1,2], [3,1 / 2,1], [3,2 / 1,1]\nAfter that we add the first two balls to the first box and the second two balls to the second box.\nWe can see that 8 of these 12 possible random distributions have the same number of distinct colors of balls in each box.\nProbability is 8/12 = 0.66667\n\n\nExample 3:\n\nInput: balls = [1,2,1,2]\nOutput: 0.60000\nExplanation: The set of balls is [1, 2, 2, 3, 4, 4]. It is hard to display all the 180 possible random shuffles of this set but it is easy to check that 108 of them will have the same number of distinct colors in each box.\nProbability = 108 / 180 = 0.6\n\n\nExample 4:\n\nInput: balls = [3,2,1]\nOutput: 0.30000\nExplanation: The set of balls is [1, 1, 1, 2, 2, 3]. It is hard to display all the 60 possible random shuffles of this set but it is easy to check that 18 of them will have the same number of distinct colors in each box.\nProbability = 18 / 60 = 0.3\n\n\nExample 5:\n\nInput: balls = [6,6,6,6,6,6]\nOutput: 0.90327\n\n\n \n\nConstraints:\n\n1 <= balls.length <= 8\n1 <= balls[i] <= 6\nsum(balls) is even.\nAnswers within 10^-5 of the actual value will be accepted as correct."},{"index":"1470","url":"https://leetcode.com/problems/shuffle-the-array","title":"Shuffle the Array","difficulty":"Easy","description":"Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].\n\nReturn the array in the form [x1,y1,x2,y2,...,xn,yn].\n\n \n\nExample 1:\n\nInput: nums = [2,5,1,3,4,7], n = 3\nOutput: [2,3,5,4,1,7] \nExplanation: Since x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 then the answer is [2,3,5,4,1,7].\n\n\nExample 2:\n\nInput: nums = [1,2,3,4,4,3,2,1], n = 4\nOutput: [1,4,2,3,3,2,4,1]\n\n\nExample 3:\n\nInput: nums = [1,1,2,2], n = 2\nOutput: [1,2,1,2]\n\n\n \n\nConstraints:\n\n1 <= n <= 500\nnums.length == 2n\n1 <= nums[i] <= 10^3"},{"index":"1471","url":"https://leetcode.com/problems/the-k-strongest-values-in-an-array","title":"The k Strongest Values in an Array","difficulty":"Medium","description":"Given an array of integers arr and an integer k.\n\nA value arr[i] is said to be stronger than a value arr[j] if |arr[i] - m| > |arr[j] - m| where m is the median of the array.\nIf |arr[i] - m| == |arr[j] - m|, then arr[i] is said to be stronger than arr[j] if arr[i] > arr[j].\n\nReturn a list of the strongest k values in the array. return the answer in any arbitrary order.\n\nMedian is the middle value in an ordered integer list. More formally, if the length of the list is n, the median is the element in position ((n - 1) / 2) in the sorted list (0-indexed).\n\nFor arr = [6, -3, 7, 2, 11], n = 5 and the median is obtained by sorting the array arr = [-3, 2, 6, 7, 11] and the median is arr[m] where m = ((5 - 1) / 2) = 2. The median is 6.\nFor arr = [-7, 22, 17, 3], n = 4 and the median is obtained by sorting the array arr = [-7, 3, 17, 22] and the median is arr[m] where m = ((4 - 1) / 2) = 1. The median is 3.\n\n \n\nExample 1:\n\nInput: arr = [1,2,3,4,5], k = 2\nOutput: [5,1]\nExplanation: Median is 3, the elements of the array sorted by the strongest are [5,1,4,2,3]. The strongest 2 elements are [5, 1]. [1, 5] is also accepted answer.\nPlease note that although |5 - 3| == |1 - 3| but 5 is stronger than 1 because 5 > 1.\n\n\nExample 2:\n\nInput: arr = [1,1,3,5,5], k = 2\nOutput: [5,5]\nExplanation: Median is 3, the elements of the array sorted by the strongest are [5,5,1,1,3]. The strongest 2 elements are [5, 5].\n\n\nExample 3:\n\nInput: arr = [6,7,11,7,6,8], k = 5\nOutput: [11,8,6,6,7]\nExplanation: Median is 7, the elements of the array sorted by the strongest are [11,8,6,6,7,7].\nAny permutation of [11,8,6,6,7] is accepted.\n\n\nExample 4:\n\nInput: arr = [6,-3,7,2,11], k = 3\nOutput: [-3,11,2]\n\n\nExample 5:\n\nInput: arr = [-7,22,17,3], k = 2\nOutput: [22,17]\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n-10^5 <= arr[i] <= 10^5\n1 <= k <= arr.length"},{"index":"1472","url":"https://leetcode.com/problems/design-browser-history","title":"Design Browser History","difficulty":"Medium","description":"You have a browser of one tab where you start on the homepage and you can visit another url, get back in the history number of steps or move forward in the history number of steps.\n\nImplement the BrowserHistory class:\n\nBrowserHistory(string homepage) Initializes the object with the homepage of the browser.\nvoid visit(string url) Visits url from the current page. It clears up all the forward history.\nstring back(int steps) Move steps back in history. If you can only return x steps in the history and steps > x, you will return only x steps. Return the current url after moving back in history at most steps.\nstring forward(int steps) Move steps forward in history. If you can only forward x steps in the history and steps > x, you will forward only x steps. Return the current url after forwarding in history at most steps.\n\n \n\nExample:\n\nInput:\n[\"BrowserHistory\",\"visit\",\"visit\",\"visit\",\"back\",\"back\",\"forward\",\"visit\",\"forward\",\"back\",\"back\"]\n[[\"leetcode.com\"],[\"google.com\"],[\"facebook.com\"],[\"youtube.com\"],[1],[1],[1],[\"linkedin.com\"],[2],[2],[7]]\nOutput:\n[null,null,null,null,\"facebook.com\",\"google.com\",\"facebook.com\",null,\"linkedin.com\",\"google.com\",\"leetcode.com\"]\n\nExplanation:\nBrowserHistory browserHistory = new BrowserHistory(\"leetcode.com\");\nbrowserHistory.visit(\"google.com\");       // You are in \"leetcode.com\". Visit \"google.com\"\nbrowserHistory.visit(\"facebook.com\");     // You are in \"google.com\". Visit \"facebook.com\"\nbrowserHistory.visit(\"youtube.com\");      // You are in \"facebook.com\". Visit \"youtube.com\"\nbrowserHistory.back(1);                   // You are in \"youtube.com\", move back to \"facebook.com\" return \"facebook.com\"\nbrowserHistory.back(1);                   // You are in \"facebook.com\", move back to \"google.com\" return \"google.com\"\nbrowserHistory.forward(1);                // You are in \"google.com\", move forward to \"facebook.com\" return \"facebook.com\"\nbrowserHistory.visit(\"linkedin.com\");     // You are in \"facebook.com\". Visit \"linkedin.com\"\nbrowserHistory.forward(2);                // You are in \"linkedin.com\", you cannot move forward any steps.\nbrowserHistory.back(2);                   // You are in \"linkedin.com\", move back two steps to \"facebook.com\" then to \"google.com\". return \"google.com\"\nbrowserHistory.back(7);                   // You are in \"google.com\", you can move back only one step to \"leetcode.com\". return \"leetcode.com\"\n\n\n \n\nConstraints:\n\n1 <= homepage.length <= 20\n1 <= url.length <= 20\n1 <= steps <= 100\nhomepage and url consist of  '.' or lower case English letters.\nAt most 5000 calls will be made to visit, back, and forward."},{"index":"1473","url":"https://leetcode.com/problems/paint-house-iii","title":"Paint House III","difficulty":"Hard","description":"There is a row of m houses in a small city, each house must be painted with one of the n colors (labeled from 1 to n), some houses that has been painted last summer should not be painted again.\n\nA neighborhood is a maximal group of continuous houses that are painted with the same color. (For example: houses = [1,2,2,3,3,2,1,1] contains 5 neighborhoods  [{1}, {2,2}, {3,3}, {2}, {1,1}]).\n\nGiven an array houses, an m * n matrix cost and an integer target where:\n\nhouses[i]: is the color of the house i, 0 if the house is not painted yet.\ncost[i][j]: is the cost of paint the house i with the color j+1.\n\nReturn the minimum cost of painting all the remaining houses in such a way that there are exactly target neighborhoods, if not possible return -1.\n\n \n\nExample 1:\n\nInput: houses = [0,0,0,0,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\nOutput: 9\nExplanation: Paint houses of this way [1,2,2,1,1]\nThis array contains target = 3 neighborhoods, [{1}, {2,2}, {1,1}].\nCost of paint all houses (1 + 1 + 1 + 1 + 5) = 9.\n\n\nExample 2:\n\nInput: houses = [0,2,1,2,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\nOutput: 11\nExplanation: Some houses are already painted, Paint the houses of this way [2,2,1,2,2]\nThis array contains target = 3 neighborhoods, [{2,2}, {1}, {2,2}]. \nCost of paint the first and last house (10 + 1) = 11.\n\n\nExample 3:\n\nInput: houses = [0,0,0,0,0], cost = [[1,10],[10,1],[1,10],[10,1],[1,10]], m = 5, n = 2, target = 5\nOutput: 5\n\n\nExample 4:\n\nInput: houses = [3,1,2,3], cost = [[1,1,1],[1,1,1],[1,1,1],[1,1,1]], m = 4, n = 3, target = 3\nOutput: -1\nExplanation: Houses are already painted with a total of 4 neighborhoods [{3},{1},{2},{3}] different of target = 3.\n\n\n \n\nConstraints:\n\nm == houses.length == cost.length\nn == cost[i].length\n1 <= m <= 100\n1 <= n <= 20\n1 <= target <= m\n0 <= houses[i] <= n\n1 <= cost[i][j] <= 10^4"},{"index":"1475","url":"https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop","title":"Final Prices With a Special Discount in a Shop","difficulty":"Easy","description":"Given the array prices where prices[i] is the price of the ith item in a shop. There is a special discount for items in the shop, if you buy the ith item, then you will receive a discount equivalent to prices[j] where j is the minimum index such that j > i and prices[j] <= prices[i], otherwise, you will not receive any discount at all.\n\nReturn an array where the ith element is the final price you will pay for the ith item of the shop considering the special discount.\n\n \n\nExample 1:\n\nInput: prices = [8,4,6,2,3]\nOutput: [4,2,4,2,3]\nExplanation: \nFor item 0 with price[0]=8 you will receive a discount equivalent to prices[1]=4, therefore, the final price you will pay is 8 - 4 = 4. \nFor item 1 with price[1]=4 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 4 - 2 = 2. \nFor item 2 with price[2]=6 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 6 - 2 = 4. \nFor items 3 and 4 you will not receive any discount at all.\n\n\nExample 2:\n\nInput: prices = [1,2,3,4,5]\nOutput: [1,2,3,4,5]\nExplanation: In this case, for all items, you will not receive any discount at all.\n\n\nExample 3:\n\nInput: prices = [10,1,1,6]\nOutput: [9,0,1,6]\n\n\n \n\nConstraints:\n\n1 <= prices.length <= 500\n1 <= prices[i] <= 10^3"},{"index":"1476","url":"https://leetcode.com/problems/subrectangle-queries","title":"Subrectangle Queries","difficulty":"Medium","description":"Implement the class SubrectangleQueries which receives a rows x cols rectangle as a matrix of integers in the constructor and supports two methods:\n\n1. updateSubrectangle(int row1, int col1, int row2, int col2, int newValue)\n\nUpdates all values with newValue in the subrectangle whose upper left coordinate is (row1,col1) and bottom right coordinate is (row2,col2).\n\n2. getValue(int row, int col)\n\nReturns the current value of the coordinate (row,col) from the rectangle.\n\n \n\nExample 1:\n\nInput\n[\"SubrectangleQueries\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\"]\n[[[[1,2,1],[4,3,4],[3,2,1],[1,1,1]]],[0,2],[0,0,3,2,5],[0,2],[3,1],[3,0,3,2,10],[3,1],[0,2]]\nOutput\n[null,1,null,5,5,null,10,5]\nExplanation\nSubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,2,1],[4,3,4],[3,2,1],[1,1,1]]);  \n// The initial rectangle (4x3) looks like:\n// 1 2 1\n// 4 3 4\n// 3 2 1\n// 1 1 1\nsubrectangleQueries.getValue(0, 2); // return 1\nsubrectangleQueries.updateSubrectangle(0, 0, 3, 2, 5);\n// After this update the rectangle looks like:\n// 5 5 5\n// 5 5 5\n// 5 5 5\n// 5 5 5 \nsubrectangleQueries.getValue(0, 2); // return 5\nsubrectangleQueries.getValue(3, 1); // return 5\nsubrectangleQueries.updateSubrectangle(3, 0, 3, 2, 10);\n// After this update the rectangle looks like:\n// 5   5   5\n// 5   5   5\n// 5   5   5\n// 10  10  10 \nsubrectangleQueries.getValue(3, 1); // return 10\nsubrectangleQueries.getValue(0, 2); // return 5\n\n\nExample 2:\n\nInput\n[\"SubrectangleQueries\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\",\"updateSubrectangle\",\"getValue\"]\n[[[[1,1,1],[2,2,2],[3,3,3]]],[0,0],[0,0,2,2,100],[0,0],[2,2],[1,1,2,2,20],[2,2]]\nOutput\n[null,1,null,100,100,null,20]\nExplanation\nSubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,1,1],[2,2,2],[3,3,3]]);\nsubrectangleQueries.getValue(0, 0); // return 1\nsubrectangleQueries.updateSubrectangle(0, 0, 2, 2, 100);\nsubrectangleQueries.getValue(0, 0); // return 100\nsubrectangleQueries.getValue(2, 2); // return 100\nsubrectangleQueries.updateSubrectangle(1, 1, 2, 2, 20);\nsubrectangleQueries.getValue(2, 2); // return 20\n\n\n \n\nConstraints:\n\nThere will be at most 500 operations considering both methods: updateSubrectangle and getValue.\n1 <= rows, cols <= 100\nrows == rectangle.length\ncols == rectangle[i].length\n0 <= row1 <= row2 < rows\n0 <= col1 <= col2 < cols\n1 <= newValue, rectangle[i][j] <= 10^9\n0 <= row < rows\n0 <= col < cols"},{"index":"1477","url":"https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum","title":"Find Two Non-overlapping Sub-arrays Each With Target Sum","difficulty":"Medium","description":"Given an array of integers arr and an integer target.\n\nYou have to find two non-overlapping sub-arrays of arr each with sum equal target. There can be multiple answers so you have to find an answer where the sum of the lengths of the two sub-arrays is minimum.\n\nReturn the minimum sum of the lengths of the two required sub-arrays, or return -1 if you cannot find such two sub-arrays.\n\n \n\nExample 1:\n\nInput: arr = [3,2,2,4,3], target = 3\nOutput: 2\nExplanation: Only two sub-arrays have sum = 3 ([3] and [3]). The sum of their lengths is 2.\n\n\nExample 2:\n\nInput: arr = [7,3,4,7], target = 7\nOutput: 2\nExplanation: Although we have three non-overlapping sub-arrays of sum = 7 ([7], [3,4] and [7]), but we will choose the first and third sub-arrays as the sum of their lengths is 2.\n\n\nExample 3:\n\nInput: arr = [4,3,2,6,2,3,4], target = 6\nOutput: -1\nExplanation: We have only one sub-array of sum = 6.\n\n\nExample 4:\n\nInput: arr = [5,5,4,4,5], target = 3\nOutput: -1\nExplanation: We cannot find a sub-array of sum = 3.\n\n\nExample 5:\n\nInput: arr = [3,1,1,1,5,1,2,1], target = 3\nOutput: 3\nExplanation: Note that sub-arrays [1,2] and [2,1] cannot be an answer because they overlap.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n1 <= arr[i] <= 1000\n1 <= target <= 10^8"},{"index":"1478","url":"https://leetcode.com/problems/allocate-mailboxes","title":"Allocate Mailboxes","difficulty":"Hard","description":"Given the array houses and an integer k. where houses[i] is the location of the ith house along a street, your task is to allocate k mailboxes in the street.\n\nReturn the minimum total distance between each house and its nearest mailbox.\n\nThe answer is guaranteed to fit in a 32-bit signed integer.\n\n \n\nExample 1:\n\nInput: houses = [1,4,8,10,20], k = 3\nOutput: 5\nExplanation: Allocate mailboxes in position 3, 9 and 20.\nMinimum total distance from each houses to nearest mailboxes is |3-1| + |4-3| + |9-8| + |10-9| + |20-20| = 5 \n\n\nExample 2:\n\nInput: houses = [2,3,5,12,18], k = 2\nOutput: 9\nExplanation: Allocate mailboxes in position 3 and 14.\nMinimum total distance from each houses to nearest mailboxes is |2-3| + |3-3| + |5-3| + |12-14| + |18-14| = 9.\n\n\nExample 3:\n\nInput: houses = [7,4,6,1], k = 1\nOutput: 8\n\n\nExample 4:\n\nInput: houses = [3,6,14,10], k = 4\nOutput: 0\n\n\n \n\nConstraints:\n\nn == houses.length\n1 <= n <= 100\n1 <= houses[i] <= 10^4\n1 <= k <= n\nArray houses contain unique integers."},{"index":"1480","url":"https://leetcode.com/problems/running-sum-of-1d-array","title":"Running Sum of 1d Array","difficulty":"Easy","description":"Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]).\n\nReturn the running sum of nums.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,4]\nOutput: [1,3,6,10]\nExplanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].\n\nExample 2:\n\nInput: nums = [1,1,1,1,1]\nOutput: [1,2,3,4,5]\nExplanation: Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].\n\nExample 3:\n\nInput: nums = [3,1,2,10,1]\nOutput: [3,4,6,16,17]\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 1000\n-10^6 <= nums[i] <= 10^6"},{"index":"1481","url":"https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals","title":"Least Number of Unique Integers after K Removals","difficulty":"Medium","description":"Given an array of integers arr and an integer k. Find the least number of unique integers after removing exactly k elements.\n\n \n\nExample 1:\n\nInput: arr = [5,5,4], k = 1\nOutput: 1\nExplanation: Remove the single 4, only 5 is left.\n\nExample 2:\nInput: arr = [4,3,1,1,3,3,2], k = 3\nOutput: 2\nExplanation: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n1 <= arr[i] <= 10^9\n0 <= k <= arr.length"},{"index":"1482","url":"https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets","title":"Minimum Number of Days to Make m Bouquets","difficulty":"Medium","description":"Given an integer array bloomDay, an integer m and an integer k.\n\nWe need to make m bouquets. To make a bouquet, you need to use k adjacent flowers from the garden.\n\nThe garden consists of n flowers, the ith flower will bloom in the bloomDay[i] and then can be used in exactly one bouquet.\n\nReturn the minimum number of days you need to wait to be able to make m bouquets from the garden. If it is impossible to make m bouquets return -1.\n\n \n\nExample 1:\n\nInput: bloomDay = [1,10,3,10,2], m = 3, k = 1\nOutput: 3\nExplanation: Let's see what happened in the first three days. x means flower bloomed and _ means flower didn't bloom in the garden.\nWe need 3 bouquets each should contain 1 flower.\nAfter day 1: [x, _, _, _, _]   // we can only make one bouquet.\nAfter day 2: [x, _, _, _, x]   // we can only make two bouquets.\nAfter day 3: [x, _, x, _, x]   // we can make 3 bouquets. The answer is 3.\n\n\nExample 2:\n\nInput: bloomDay = [1,10,3,10,2], m = 3, k = 2\nOutput: -1\nExplanation: We need 3 bouquets each has 2 flowers, that means we need 6 flowers. We only have 5 flowers so it is impossible to get the needed bouquets and we return -1.\n\n\nExample 3:\n\nInput: bloomDay = [7,7,7,7,12,7,7], m = 2, k = 3\nOutput: 12\nExplanation: We need 2 bouquets each should have 3 flowers.\nHere's the garden after the 7 and 12 days:\nAfter day 7: [x, x, x, x, _, x, x]\nWe can make one bouquet of the first three flowers that bloomed. We cannot make another bouquet from the last three flowers that bloomed because they are not adjacent.\nAfter day 12: [x, x, x, x, x, x, x]\nIt is obvious that we can make two bouquets in different ways.\n\n\nExample 4:\n\nInput: bloomDay = [1000000000,1000000000], m = 1, k = 1\nOutput: 1000000000\nExplanation: You need to wait 1000000000 days to have a flower ready for a bouquet.\n\n\nExample 5:\n\nInput: bloomDay = [1,10,2,9,3,8,4,7,5,6], m = 4, k = 2\nOutput: 9\n\n\n \n\nConstraints:\n\nbloomDay.length == n\n1 <= n <= 10^5\n1 <= bloomDay[i] <= 10^9\n1 <= m <= 10^6\n1 <= k <= n"},{"index":"1483","url":"https://leetcode.com/problems/kth-ancestor-of-a-tree-node","title":"Kth Ancestor of a Tree Node","difficulty":"Hard","description":"You are given a tree with n nodes numbered from 0 to n-1 in the form of a parent array where parent[i] is the parent of node i. The root of the tree is node 0.\n\nImplement the function getKthAncestor(int node, int k) to return the k-th ancestor of the given node. If there is no such ancestor, return -1.\n\nThe k-th ancestor of a tree node is the k-th node in the path from that node to the root.\n\n \n\nExample:\n\nInput:\n[\"TreeAncestor\",\"getKthAncestor\",\"getKthAncestor\",\"getKthAncestor\"]\n[[7,[-1,0,0,1,1,2,2]],[3,1],[5,2],[6,3]]\n\nOutput:\n[null,1,0,-1]\n\nExplanation:\nTreeAncestor treeAncestor = new TreeAncestor(7, [-1, 0, 0, 1, 1, 2, 2]);\n\ntreeAncestor.getKthAncestor(3, 1);  // returns 1 which is the parent of 3\ntreeAncestor.getKthAncestor(5, 2);  // returns 0 which is the grandparent of 5\ntreeAncestor.getKthAncestor(6, 3);  // returns -1 because there is no such ancestor\n\n\n \n\nConstraints:\n\n1 <= k <= n <= 5*10^4\nparent[0] == -1 indicating that 0 is the root node.\n0 <= parent[i] < n for all 0 < i < n\n0 <= node < n\nThere will be at most 5*10^4 queries."},{"index":"1486","url":"https://leetcode.com/problems/xor-operation-in-an-array","title":"XOR Operation in an Array","difficulty":"Easy","description":"Given an integer n and an integer start.\n\nDefine an array nums where nums[i] = start + 2*i (0-indexed) and n == nums.length.\n\nReturn the bitwise XOR of all elements of nums.\n\n \n\nExample 1:\n\nInput: n = 5, start = 0\nOutput: 8\nExplanation: Array nums is equal to [0, 2, 4, 6, 8] where (0 ^ 2 ^ 4 ^ 6 ^ 8) = 8.\nWhere \"^\" corresponds to bitwise XOR operator.\n\n\nExample 2:\n\nInput: n = 4, start = 3\nOutput: 8\nExplanation: Array nums is equal to [3, 5, 7, 9] where (3 ^ 5 ^ 7 ^ 9) = 8.\n\nExample 3:\n\nInput: n = 1, start = 7\nOutput: 7\n\n\nExample 4:\n\nInput: n = 10, start = 5\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= n <= 1000\n0 <= start <= 1000\nn == nums.length"},{"index":"1487","url":"https://leetcode.com/problems/making-file-names-unique","title":"Making File Names Unique","difficulty":"Medium","description":"Given an array of strings names of size n. You will create n folders in your file system such that, at the ith minute, you will create a folder with the name names[i].\n\nSince two files cannot have the same name, if you enter a folder name which is previously used, the system will have a suffix addition to its name in the form of (k), where, k is the smallest positive integer such that the obtained name remains unique.\n\nReturn an array of strings of length n where ans[i] is the actual name the system will assign to the ith folder when you create it.\n\n \n\nExample 1:\n\nInput: names = [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\nOutput: [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\nExplanation: Let's see how the file system creates folder names:\n\"pes\" --> not assigned before, remains \"pes\"\n\"fifa\" --> not assigned before, remains \"fifa\"\n\"gta\" --> not assigned before, remains \"gta\"\n\"pes(2019)\" --> not assigned before, remains \"pes(2019)\"\n\n\nExample 2:\n\nInput: names = [\"gta\",\"gta(1)\",\"gta\",\"avalon\"]\nOutput: [\"gta\",\"gta(1)\",\"gta(2)\",\"avalon\"]\nExplanation: Let's see how the file system creates folder names:\n\"gta\" --> not assigned before, remains \"gta\"\n\"gta(1)\" --> not assigned before, remains \"gta(1)\"\n\"gta\" --> the name is reserved, system adds (k), since \"gta(1)\" is also reserved, systems put k = 2. it becomes \"gta(2)\"\n\"avalon\" --> not assigned before, remains \"avalon\"\n\n\nExample 3:\n\nInput: names = [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece\"]\nOutput: [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece(4)\"]\nExplanation: When the last folder is created, the smallest positive valid k is 4, and it becomes \"onepiece(4)\".\n\n\nExample 4:\n\nInput: names = [\"wano\",\"wano\",\"wano\",\"wano\"]\nOutput: [\"wano\",\"wano(1)\",\"wano(2)\",\"wano(3)\"]\nExplanation: Just increase the value of k each time you create folder \"wano\".\n\n\nExample 5:\n\nInput: names = [\"kaido\",\"kaido(1)\",\"kaido\",\"kaido(1)\"]\nOutput: [\"kaido\",\"kaido(1)\",\"kaido(2)\",\"kaido(1)(1)\"]\nExplanation: Please note that system adds the suffix (k) to current name even it contained the same suffix before.\n\n\n \n\nConstraints:\n\n1 <= names.length <= 5 * 10^4\n1 <= names[i].length <= 20\nnames[i] consists of lower case English letters, digits and/or round brackets."},{"index":"1488","url":"https://leetcode.com/problems/avoid-flood-in-the-city","title":"Avoid Flood in The City","difficulty":"Medium","description":"Your country has an infinite number of lakes. Initially, all the lakes are empty, but when it rains over the nth lake, the nth lake becomes full of water. If it rains over a lake which is full of water, there will be a flood. Your goal is to avoid the flood in any lake.\n\nGiven an integer array rains where:\n\nrains[i] > 0 means there will be rains over the rains[i] lake.\nrains[i] == 0 means there are no rains this day and you can choose one lake this day and dry it.\n\nReturn an array ans where:\n\nans.length == rains.length\nans[i] == -1 if rains[i] > 0.\nans[i] is the lake you choose to dry in the ith day if rains[i] == 0.\n\nIf there are multiple valid answers return any of them. If it is impossible to avoid flood return an empty array.\n\nNotice that if you chose to dry a full lake, it becomes empty, but if you chose to dry an empty lake, nothing changes. (see example 4)\n\n \n\nExample 1:\n\nInput: rains = [1,2,3,4]\nOutput: [-1,-1,-1,-1]\nExplanation: After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day full lakes are [1,2,3]\nAfter the fourth day full lakes are [1,2,3,4]\nThere's no day to dry any lake and there is no flood in any lake.\n\n\nExample 2:\n\nInput: rains = [1,2,0,0,2,1]\nOutput: [-1,-1,2,1,-1,-1]\nExplanation: After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day, we dry lake 2. Full lakes are [1]\nAfter the fourth day, we dry lake 1. There is no full lakes.\nAfter the fifth day, full lakes are [2].\nAfter the sixth day, full lakes are [1,2].\nIt is easy that this scenario is flood-free. [-1,-1,1,2,-1,-1] is another acceptable scenario.\n\n\nExample 3:\n\nInput: rains = [1,2,0,1,2]\nOutput: []\nExplanation: After the second day, full lakes are  [1,2]. We have to dry one lake in the third day.\nAfter that, it will rain over lakes [1,2]. It's easy to prove that no matter which lake you choose to dry in the 3rd day, the other one will flood.\n\n\nExample 4:\n\nInput: rains = [69,0,0,0,69]\nOutput: [-1,69,1,1,-1]\nExplanation: Any solution on one of the forms [-1,69,x,y,-1], [-1,x,69,y,-1] or [-1,x,y,69,-1] is acceptable where 1 <= x,y <= 10^9\n\n\nExample 5:\n\nInput: rains = [10,20,20]\nOutput: []\nExplanation: It will rain over lake 20 two consecutive days. There is no chance to dry any lake.\n\n\n \n\nConstraints:\n\n1 <= rains.length <= 10^5\n0 <= rains[i] <= 10^9"},{"index":"1489","url":"https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree","title":"Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree","difficulty":"Hard","description":"Given a weighted undirected connected graph with n vertices numbered from 0 to n - 1, and an array edges where edges[i] = [ai, bi, weighti] represents a bidirectional and weighted edge between nodes ai and bi. A minimum spanning tree (MST) is a subset of the graph's edges that connects all vertices without cycles and with the minimum possible total edge weight.\n\nFind all the critical and pseudo-critical edges in the given graph's minimum spanning tree (MST). An MST edge whose deletion from the graph would cause the MST weight to increase is called a critical edge. On the other hand, a pseudo-critical edge is that which can appear in some MSTs but not all.\n\nNote that you can return the indices of the edges in any order.\n\n \n\nExample 1:\n\nInput: n = 5, edges = [[0,1,1],[1,2,1],[2,3,2],[0,3,2],[0,4,3],[3,4,3],[1,4,6]]\nOutput: [[0,1],[2,3,4,5]]\nExplanation: The figure above describes the graph.\nThe following figure shows all the possible MSTs:\n\nNotice that the two edges 0 and 1 appear in all MSTs, therefore they are critical edges, so we return them in the first list of the output.\nThe edges 2, 3, 4, and 5 are only part of some MSTs, therefore they are considered pseudo-critical edges. We add them to the second list of the output.\n\n\nExample 2:\n\nInput: n = 4, edges = [[0,1,1],[1,2,1],[2,3,1],[0,3,1]]\nOutput: [[],[0,1,2,3]]\nExplanation: We can observe that since all 4 edges have equal weight, choosing any 3 edges from the given 4 will yield an MST. Therefore all 4 edges are pseudo-critical.\n\n\n \n\nConstraints:\n\n2 <= n <= 100\n1 <= edges.length <= min(200, n * (n - 1) / 2)\nedges[i].length == 3\n0 <= ai < bi < n\n1 <= weighti <= 1000\nAll pairs (ai, bi) are distinct."},{"index":"1491","url":"https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary","title":"Average Salary Excluding the Minimum and Maximum Salary","difficulty":"Easy","description":"Given an array of unique integers salary where salary[i] is the salary of the employee i.\n\nReturn the average salary of employees excluding the minimum and maximum salary.\n\n \n\nExample 1:\n\nInput: salary = [4000,3000,1000,2000]\nOutput: 2500.00000\nExplanation: Minimum salary and maximum salary are 1000 and 4000 respectively.\nAverage salary excluding minimum and maximum salary is (2000+3000)/2= 2500\n\n\nExample 2:\n\nInput: salary = [1000,2000,3000]\nOutput: 2000.00000\nExplanation: Minimum salary and maximum salary are 1000 and 3000 respectively.\nAverage salary excluding minimum and maximum salary is (2000)/1= 2000\n\n\nExample 3:\n\nInput: salary = [6000,5000,4000,3000,2000,1000]\nOutput: 3500.00000\n\n\nExample 4:\n\nInput: salary = [8000,9000,2000,3000,6000,1000]\nOutput: 4750.00000\n\n\n \n\nConstraints:\n\n3 <= salary.length <= 100\n10^3 <= salary[i] <= 10^6\nsalary[i] is unique.\nAnswers within 10^-5 of the actual value will be accepted as correct."},{"index":"1492","url":"https://leetcode.com/problems/the-kth-factor-of-n","title":"The kth Factor of n","difficulty":"Medium","description":"Given two positive integers n and k.\n\nA factor of an integer n is defined as an integer i where n % i == 0.\n\nConsider a list of all factors of n sorted in ascending order, return the kth factor in this list or return -1 if n has less than k factors.\n\n \n\nExample 1:\n\nInput: n = 12, k = 3\nOutput: 3\nExplanation: Factors list is [1, 2, 3, 4, 6, 12], the 3rd factor is 3.\n\n\nExample 2:\n\nInput: n = 7, k = 2\nOutput: 7\nExplanation: Factors list is [1, 7], the 2nd factor is 7.\n\n\nExample 3:\n\nInput: n = 4, k = 4\nOutput: -1\nExplanation: Factors list is [1, 2, 4], there is only 3 factors. We should return -1.\n\n\nExample 4:\n\nInput: n = 1, k = 1\nOutput: 1\nExplanation: Factors list is [1], the 1st factor is 1.\n\n\nExample 5:\n\nInput: n = 1000, k = 3\nOutput: 4\nExplanation: Factors list is [1, 2, 4, 5, 8, 10, 20, 25, 40, 50, 100, 125, 200, 250, 500, 1000].\n\n\n \n\nConstraints:\n\n1 <= k <= n <= 1000"},{"index":"1493","url":"https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element","title":"Longest Subarray of 1's After Deleting One Element","difficulty":"Medium","description":"Given a binary array nums, you should delete one element from it.\n\nReturn the size of the longest non-empty subarray containing only 1's in the resulting array.\n\nReturn 0 if there is no such subarray.\n\n \n\nExample 1:\n\nInput: nums = [1,1,0,1]\nOutput: 3\nExplanation: After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1's.\n\nExample 2:\n\nInput: nums = [0,1,1,1,0,1,1,0,1]\nOutput: 5\nExplanation: After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1's is [1,1,1,1,1].\n\nExample 3:\n\nInput: nums = [1,1,1]\nOutput: 2\nExplanation: You must delete one element.\n\nExample 4:\n\nInput: nums = [1,1,0,0,1,1,1,0,1]\nOutput: 4\n\n\nExample 5:\n\nInput: nums = [0,0,0]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\nnums[i] is either 0 or 1."},{"index":"1494","url":"https://leetcode.com/problems/parallel-courses-ii","title":"Parallel Courses II","difficulty":"Hard","description":"Given the integer n representing the number of courses at some university labeled from 1 to n, and the array dependencies where dependencies[i] = [xi, yi]  represents a prerequisite relationship, that is, the course xi must be taken before the course yi.  Also, you are given the integer k.\n\nIn one semester you can take at most k courses as long as you have taken all the prerequisites for the courses you are taking.\n\nReturn the minimum number of semesters to take all courses. It is guaranteed that you can take all courses in some way.\n\n \n\nExample 1:\n\nInput: n = 4, dependencies = [[2,1],[3,1],[1,4]], k = 2\nOutput: 3 \nExplanation: The figure above represents the given graph. In this case we can take courses 2 and 3 in the first semester, then take course 1 in the second semester and finally take course 4 in the third semester.\n\n\nExample 2:\n\nInput: n = 5, dependencies = [[2,1],[3,1],[4,1],[1,5]], k = 2\nOutput: 4 \nExplanation: The figure above represents the given graph. In this case one optimal way to take all courses is: take courses 2 and 3 in the first semester and take course 4 in the second semester, then take course 1 in the third semester and finally take course 5 in the fourth semester.\n\n\nExample 3:\n\nInput: n = 11, dependencies = [], k = 2\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= n <= 15\n1 <= k <= n\n0 <= dependencies.length <= n * (n-1) / 2\ndependencies[i].length == 2\n1 <= xi, yi <= n\nxi != yi\nAll prerequisite relationships are distinct, that is, dependencies[i] != dependencies[j].\nThe given graph is a directed acyclic graph."},{"index":"1496","url":"https://leetcode.com/problems/path-crossing","title":"Path Crossing","difficulty":"Easy","description":"Given a string path, where path[i] = 'N', 'S', 'E' or 'W', each representing moving one unit north, south, east, or west, respectively. You start at the origin (0, 0) on a 2D plane and walk on the path specified by path.\n\nReturn True if the path crosses itself at any point, that is, if at any time you are on a location you've previously visited. Return False otherwise.\n\n \n\nExample 1:\n\nInput: path = \"NES\"\nOutput: false \nExplanation: Notice that the path doesn't cross any point more than once.\n\n\nExample 2:\n\nInput: path = \"NESWW\"\nOutput: true\nExplanation: Notice that the path visits the origin twice.\n\n \n\nConstraints:\n\n1 <= path.length <= 10^4\npath will only consist of characters in {'N', 'S', 'E', 'W}"},{"index":"1497","url":"https://leetcode.com/problems/check-if-array-pairs-are-divisible-by-k","title":"Check If Array Pairs Are Divisible by k","difficulty":"Medium","description":"Given an array of integers arr of even length n and an integer k.\n\nWe want to divide the array into exactly n / 2 pairs such that the sum of each pair is divisible by k.\n\nReturn True If you can find a way to do that or False otherwise.\n\n \n\nExample 1:\n\nInput: arr = [1,2,3,4,5,10,6,7,8,9], k = 5\nOutput: true\nExplanation: Pairs are (1,9),(2,8),(3,7),(4,6) and (5,10).\n\n\nExample 2:\n\nInput: arr = [1,2,3,4,5,6], k = 7\nOutput: true\nExplanation: Pairs are (1,6),(2,5) and(3,4).\n\n\nExample 3:\n\nInput: arr = [1,2,3,4,5,6], k = 10\nOutput: false\nExplanation: You can try all possible pairs to see that there is no way to divide arr into 3 pairs each with sum divisible by 10.\n\n\nExample 4:\n\nInput: arr = [-10,10], k = 2\nOutput: true\n\n\nExample 5:\n\nInput: arr = [-1,1,-2,2,-3,3,-4,4], k = 3\nOutput: true\n\n\n \n\nConstraints:\n\narr.length == n\n1 <= n <= 10^5\nn is even.\n-10^9 <= arr[i] <= 10^9\n1 <= k <= 10^5"},{"index":"1498","url":"https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition","title":"Number of Subsequences That Satisfy the Given Sum Condition","difficulty":"Medium","description":"Given an array of integers nums and an integer target.\n\nReturn the number of non-empty subsequences of nums such that the sum of the minimum and maximum element on it is less or equal than target.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: nums = [3,5,6,7], target = 9\nOutput: 4\nExplanation: There are 4 subsequences that satisfy the condition.\n[3] -> Min value + max value <= target (3 + 3 <= 9)\n[3,5] -> (3 + 5 <= 9)\n[3,5,6] -> (3 + 6 <= 9)\n[3,6] -> (3 + 6 <= 9)\n\n\nExample 2:\n\nInput: nums = [3,3,6,8], target = 10\nOutput: 6\nExplanation: There are 6 subsequences that satisfy the condition. (nums can have repeated numbers).\n[3] , [3] , [3,3], [3,6] , [3,6] , [3,3,6]\n\nExample 3:\n\nInput: nums = [2,3,3,4,6,7], target = 12\nOutput: 61\nExplanation: There are 63 non-empty subsequences, two of them don't satisfy the condition ([6,7], [7]).\nNumber of valid subsequences (63 - 2 = 61).\n\n\nExample 4:\n\nInput: nums = [5,2,4,1,7,6,8], target = 16\nOutput: 127\nExplanation: All non-empty subset satisfy the condition (2^7 - 1) = 127\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n1 <= nums[i] <= 10^6\n1 <= target <= 10^6"},{"index":"1499","url":"https://leetcode.com/problems/max-value-of-equation","title":"Max Value of Equation","difficulty":"Hard","description":"Given an array points containing the coordinates of points on a 2D plane, sorted by the x-values, where points[i] = [xi, yi] such that xi < xj for all 1 <= i < j <= points.length. You are also given an integer k.\n\nFind the maximum value of the equation yi + yj + |xi - xj| where |xi - xj| <= k and 1 <= i < j <= points.length. It is guaranteed that there exists at least one pair of points that satisfy the constraint |xi - xj| <= k.\n\n \n\nExample 1:\n\nInput: points = [[1,3],[2,0],[5,10],[6,-10]], k = 1\nOutput: 4\nExplanation: The first two points satisfy the condition |xi - xj| <= 1 and if we calculate the equation we get 3 + 0 + |1 - 2| = 4. Third and fourth points also satisfy the condition and give a value of 10 + -10 + |5 - 6| = 1.\nNo other pairs satisfy the condition, so we return the max of 4 and 1.\n\nExample 2:\n\nInput: points = [[0,0],[3,0],[9,2]], k = 3\nOutput: 3\nExplanation: Only the first two points have an absolute difference of 3 or less in the x-values, and give the value of 0 + 0 + |0 - 3| = 3.\n\n\n \n\nConstraints:\n\n2 <= points.length <= 10^5\npoints[i].length == 2\n-10^8 <= points[i][0], points[i][1] <= 10^8\n0 <= k <= 2 * 10^8\npoints[i][0] < points[j][0] for all 1 <= i < j <= points.length\nxi form a strictly increasing sequence."},{"index":"1502","url":"https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence","title":"Can Make Arithmetic Progression From Sequence","difficulty":"Easy","description":"Given an array of numbers arr. A sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same.\n\nReturn true if the array can be rearranged to form an arithmetic progression, otherwise, return false.\n\n \n\nExample 1:\n\nInput: arr = [3,5,1]\nOutput: true\nExplanation: We can reorder the elements as [1,3,5] or [5,3,1] with differences 2 and -2 respectively, between each consecutive elements.\n\n\nExample 2:\n\nInput: arr = [1,2,4]\nOutput: false\nExplanation: There is no way to reorder the elements to obtain an arithmetic progression.\n\n\n \n\nConstraints:\n\n2 <= arr.length <= 1000\n-10^6 <= arr[i] <= 10^6"},{"index":"1503","url":"https://leetcode.com/problems/last-moment-before-all-ants-fall-out-of-a-plank","title":"Last Moment Before All Ants Fall Out of a Plank","difficulty":"Medium","description":"We have a wooden plank of the length n units. Some ants are walking on the plank, each ant moves with speed 1 unit per second. Some of the ants move to the left, the other move to the right.\n\nWhen two ants moving in two different directions meet at some point, they change their directions and continue moving again. Assume changing directions doesn't take any additional time.\n\nWhen an ant reaches one end of the plank at a time t, it falls out of the plank imediately.\n\nGiven an integer n and two integer arrays left and right, the positions of the ants moving to the left and the right. Return the moment when the last ant(s) fall out of the plank.\n\n \n\nExample 1:\n\nInput: n = 4, left = [4,3], right = [0,1]\nOutput: 4\nExplanation: In the image above:\n-The ant at index 0 is named A and going to the right.\n-The ant at index 1 is named B and going to the right.\n-The ant at index 3 is named C and going to the left.\n-The ant at index 4 is named D and going to the left.\nNote that the last moment when an ant was on the plank is t = 4 second, after that it falls imediately out of the plank. (i.e. We can say that at t = 4.0000000001, there is no ants on the plank).\n\n\nExample 2:\n\nInput: n = 7, left = [], right = [0,1,2,3,4,5,6,7]\nOutput: 7\nExplanation: All ants are going to the right, the ant at index 0 needs 7 seconds to fall.\n\n\nExample 3:\n\nInput: n = 7, left = [0,1,2,3,4,5,6,7], right = []\nOutput: 7\nExplanation: All ants are going to the left, the ant at index 7 needs 7 seconds to fall.\n\n\nExample 4:\n\nInput: n = 9, left = [5], right = [4]\nOutput: 5\nExplanation: At t = 1 second, both ants will be at the same intial position but with different direction.\n\n\nExample 5:\n\nInput: n = 6, left = [6], right = [0]\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= n <= 10^4\n0 <= left.length <= n + 1\n0 <= left[i] <= n\n0 <= right.length <= n + 1\n0 <= right[i] <= n\n1 <= left.length + right.length <= n + 1\nAll values of left and right are unique, and each value can appear only in one of the two arrays."},{"index":"1504","url":"https://leetcode.com/problems/count-submatrices-with-all-ones","title":"Count Submatrices With All Ones","difficulty":"Medium","description":"Given a rows * columns matrix mat of ones and zeros, return how many submatrices have all ones.\n\n \n\nExample 1:\n\nInput: mat = [[1,0,1],\n              [1,1,0],\n              [1,1,0]]\nOutput: 13\nExplanation:\nThere are 6 rectangles of side 1x1.\nThere are 2 rectangles of side 1x2.\nThere are 3 rectangles of side 2x1.\nThere is 1 rectangle of side 2x2. \nThere is 1 rectangle of side 3x1.\nTotal number of rectangles = 6 + 2 + 3 + 1 + 1 = 13.\n\n\nExample 2:\n\nInput: mat = [[0,1,1,0],\n              [0,1,1,1],\n              [1,1,1,0]]\nOutput: 24\nExplanation:\nThere are 8 rectangles of side 1x1.\nThere are 5 rectangles of side 1x2.\nThere are 2 rectangles of side 1x3. \nThere are 4 rectangles of side 2x1.\nThere are 2 rectangles of side 2x2. \nThere are 2 rectangles of side 3x1. \nThere is 1 rectangle of side 3x2. \nTotal number of rectangles = 8 + 5 + 2 + 4 + 2 + 2 + 1 = 24.\n\n\nExample 3:\n\nInput: mat = [[1,1,1,1,1,1]]\nOutput: 21\n\n\nExample 4:\n\nInput: mat = [[1,0,1],[0,1,0],[1,0,1]]\nOutput: 5\n\n\n \n\nConstraints:\n\n1 <= rows <= 150\n1 <= columns <= 150\n0 <= mat[i][j] <= 1"},{"index":"1505","url":"https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits","title":"Minimum Possible Integer After at Most K Adjacent Swaps On Digits","difficulty":"Hard","description":"Given a string num representing the digits of a very large integer and an integer k.\n\nYou are allowed to swap any two adjacent digits of the integer at most k times.\n\nReturn the minimum integer you can obtain also as a string.\n\n \n\nExample 1:\n\nInput: num = \"4321\", k = 4\nOutput: \"1342\"\nExplanation: The steps to obtain the minimum integer from 4321 with 4 adjacent swaps are shown.\n\n\nExample 2:\n\nInput: num = \"100\", k = 1\nOutput: \"010\"\nExplanation: It's ok for the output to have leading zeros, but the input is guaranteed not to have any leading zeros.\n\n\nExample 3:\n\nInput: num = \"36789\", k = 1000\nOutput: \"36789\"\nExplanation: We can keep the number without any swaps.\n\n\nExample 4:\n\nInput: num = \"22\", k = 22\nOutput: \"22\"\n\n\nExample 5:\n\nInput: num = \"9438957234785635408\", k = 23\nOutput: \"0345989723478563548\"\n\n\n \n\nConstraints:\n\n1 <= num.length <= 30000\nnum contains digits only and doesn't have leading zeros.\n1 <= k <= 10^9"},{"index":"1507","url":"https://leetcode.com/problems/reformat-date","title":"Reformat Date","difficulty":"Easy","description":"Given a date string in the form Day Month Year, where:\n\nDay is in the set {\"1st\", \"2nd\", \"3rd\", \"4th\", ..., \"30th\", \"31st\"}.\nMonth is in the set {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"}.\nYear is in the range [1900, 2100].\n\nConvert the date string to the format YYYY-MM-DD, where:\n\nYYYY denotes the 4 digit year.\nMM denotes the 2 digit month.\nDD denotes the 2 digit day.\n\n \n\nExample 1:\n\nInput: date = \"20th Oct 2052\"\nOutput: \"2052-10-20\"\n\n\nExample 2:\n\nInput: date = \"6th Jun 1933\"\nOutput: \"1933-06-06\"\n\n\nExample 3:\n\nInput: date = \"26th May 1960\"\nOutput: \"1960-05-26\"\n\n\n \n\nConstraints:\n\nThe given dates are guaranteed to be valid, so no error handling is necessary."},{"index":"1508","url":"https://leetcode.com/problems/range-sum-of-sorted-subarray-sums","title":"Range Sum of Sorted Subarray Sums","difficulty":"Medium","description":"Given the array nums consisting of n positive integers. You computed the sum of all non-empty continous subarrays from the array and then sort them in non-decreasing order, creating a new array of n * (n + 1) / 2 numbers.\n\nReturn the sum of the numbers from index left to index right (indexed from 1), inclusive, in the new array. Since the answer can be a huge number return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,4], n = 4, left = 1, right = 5\nOutput: 13 \nExplanation: All subarray sums are 1, 3, 6, 10, 2, 5, 9, 3, 7, 4. After sorting them in non-decreasing order we have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 1 to ri = 5 is 1 + 2 + 3 + 3 + 4 = 13. \n\n\nExample 2:\n\nInput: nums = [1,2,3,4], n = 4, left = 3, right = 4\nOutput: 6\nExplanation: The given array is the same as example 1. We have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 3 to ri = 4 is 3 + 3 = 6.\n\n\nExample 3:\n\nInput: nums = [1,2,3,4], n = 4, left = 1, right = 10\nOutput: 50\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^3\nnums.length == n\n1 <= nums[i] <= 100\n1 <= left <= right <= n * (n + 1) / 2"},{"index":"1509","url":"https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves","title":"Minimum Difference Between Largest and Smallest Value in Three Moves","difficulty":"Medium","description":"Given an array nums, you are allowed to choose one element of nums and change it by any value in one move.\n\nReturn the minimum difference between the largest and smallest value of nums after perfoming at most 3 moves.\n\n \n\nExample 1:\n\nInput: nums = [5,3,2,4]\nOutput: 0\nExplanation: Change the array [5,3,2,4] to [2,2,2,2].\nThe difference between the maximum and minimum is 2-2 = 0.\n\nExample 2:\n\nInput: nums = [1,5,0,10,14]\nOutput: 1\nExplanation: Change the array [1,5,0,10,14] to [1,1,0,1,1]. \nThe difference between the maximum and minimum is 1-0 = 1.\n\n\nExample 3:\n\nInput: nums = [6,6,0,1,1,4,6]\nOutput: 2\n\n\nExample 4:\n\nInput: nums = [1,5,6,14,15]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n-10^9 <= nums[i] <= 10^9"},{"index":"1510","url":"https://leetcode.com/problems/stone-game-iv","title":"Stone Game IV","difficulty":"Hard","description":"Alice and Bob take turns playing a game, with Alice starting first.\n\nInitially, there are n stones in a pile.  On each player's turn, that player makes a move consisting of removing any non-zero square number of stones in the pile.\n\nAlso, if a player cannot make a move, he/she loses the game.\n\nGiven a positive integer n. Return True if and only if Alice wins the game otherwise return False, assuming both players play optimally.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: true\nExplanation: Alice can remove 1 stone winning the game because Bob doesn't have any moves.\n\nExample 2:\n\nInput: n = 2\nOutput: false\nExplanation: Alice can only remove 1 stone, after that Bob removes the last one winning the game (2 -> 1 -> 0).\n\nExample 3:\n\nInput: n = 4\nOutput: true\nExplanation: n is already a perfect square, Alice can win with one move, removing 4 stones (4 -> 0).\n\n\nExample 4:\n\nInput: n = 7\nOutput: false\nExplanation: Alice can't win the game if Bob plays optimally.\nIf Alice starts removing 4 stones, Bob will remove 1 stone then Alice should remove only 1 stone and finally Bob removes the last one (7 -> 3 -> 2 -> 1 -> 0). \nIf Alice starts removing 1 stone, Bob will remove 4 stones then Alice only can remove 1 stone and finally Bob removes the last one (7 -> 6 -> 2 -> 1 -> 0).\n\nExample 5:\n\nInput: n = 17\nOutput: false\nExplanation: Alice can't win the game if Bob plays optimally.\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5"},{"index":"1512","url":"https://leetcode.com/problems/number-of-good-pairs","title":"Number of Good Pairs","difficulty":"Easy","description":"Given an array of integers nums.\n\nA pair (i,j) is called good if nums[i] == nums[j] and i < j.\n\nReturn the number of good pairs.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,1,1,3]\nOutput: 4\nExplanation: There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.\n\n\nExample 2:\n\nInput: nums = [1,1,1,1]\nOutput: 6\nExplanation: Each pair in the array are good.\n\n\nExample 3:\n\nInput: nums = [1,2,3]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n1 <= nums[i] <= 100"},{"index":"1513","url":"https://leetcode.com/problems/number-of-substrings-with-only-1s","title":"Number of Substrings With Only 1s","difficulty":"Medium","description":"Given a binary string s (a string consisting only of '0' and '1's).\n\nReturn the number of substrings with all characters 1's.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: s = \"0110111\"\nOutput: 9\nExplanation: There are 9 substring in total with only 1's characters.\n\"1\" -> 5 times.\n\"11\" -> 3 times.\n\"111\" -> 1 time.\n\nExample 2:\n\nInput: s = \"101\"\nOutput: 2\nExplanation: Substring \"1\" is shown 2 times in s.\n\n\nExample 3:\n\nInput: s = \"111111\"\nOutput: 21\nExplanation: Each substring contains only 1's characters.\n\n\nExample 4:\n\nInput: s = \"000\"\nOutput: 0\n\n\n \n\nConstraints:\n\ns[i] == '0' or s[i] == '1'\n1 <= s.length <= 10^5"},{"index":"1514","url":"https://leetcode.com/problems/path-with-maximum-probability","title":"Path with Maximum Probability","difficulty":"Medium","description":"You are given an undirected weighted graph of n nodes (0-indexed), represented by an edge list where edges[i] = [a, b] is an undirected edge connecting the nodes a and b with a probability of success of traversing that edge succProb[i].\n\nGiven two nodes start and end, find the path with the maximum probability of success to go from start to end and return its success probability.\n\nIf there is no path from start to end, return 0. Your answer will be accepted if it differs from the correct answer by at most 1e-5.\n\n \n\nExample 1:\n\nInput: n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.2], start = 0, end = 2\nOutput: 0.25000\nExplanation: There are two paths from start to end, one having a probability of success = 0.2 and the other has 0.5 * 0.5 = 0.25.\n\n\nExample 2:\n\nInput: n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.3], start = 0, end = 2\nOutput: 0.30000\n\n\nExample 3:\n\nInput: n = 3, edges = [[0,1]], succProb = [0.5], start = 0, end = 2\nOutput: 0.00000\nExplanation: There is no path between 0 and 2.\n\n\n \n\nConstraints:\n\n2 <= n <= 10^4\n0 <= start, end < n\nstart != end\n0 <= a, b < n\na != b\n0 <= succProb.length == edges.length <= 2*10^4\n0 <= succProb[i] <= 1\nThere is at most one edge between every two nodes."},{"index":"1515","url":"https://leetcode.com/problems/best-position-for-a-service-centre","title":"Best Position for a Service Centre","difficulty":"Hard","description":"A delivery company wants to build a new service centre in a new city. The company knows the positions of all the customers in this city on a 2D-Map and wants to build the new centre in a position such that the sum of the euclidean distances to all customers is minimum.\n\nGiven an array positions where positions[i] = [xi, yi] is the position of the ith customer on the map, return the minimum sum of the euclidean distances to all customers.\n\nIn other words, you need to choose the position of the service centre [xcentre, ycentre] such that the following formula is minimized:\n\nAnswers within 10^-5 of the actual value will be accepted.\n\n \n\nExample 1:\n\nInput: positions = [[0,1],[1,0],[1,2],[2,1]]\nOutput: 4.00000\nExplanation: As shown, you can see that choosing [xcentre, ycentre] = [1, 1] will make the distance to each customer = 1, the sum of all distances is 4 which is the minimum possible we can achieve.\n\n\nExample 2:\n\nInput: positions = [[1,1],[3,3]]\nOutput: 2.82843\nExplanation: The minimum possible sum of distances = sqrt(2) + sqrt(2) = 2.82843\n\n\nExample 3:\n\nInput: positions = [[1,1]]\nOutput: 0.00000\n\n\nExample 4:\n\nInput: positions = [[1,1],[0,0],[2,0]]\nOutput: 2.73205\nExplanation: At the first glance, you may think that locating the centre at [1, 0] will achieve the minimum sum, but locating it at [1, 0] will make the sum of distances = 3.\nTry to locate the centre at [1.0, 0.5773502711] you will see that the sum of distances is 2.73205.\nBe careful with the precision!\n\n\nExample 5:\n\nInput: positions = [[0,1],[3,2],[4,5],[7,6],[8,9],[11,1],[2,12]]\nOutput: 32.94036\nExplanation: You can use [4.3460852395, 4.9813795505] as the position of the centre.\n\n\n \n\nConstraints:\n\n1 <= positions.length <= 50\npositions[i].length == 2\n0 <= positions[i][0], positions[i][1] <= 100"},{"index":"1518","url":"https://leetcode.com/problems/water-bottles","title":"Water Bottles","difficulty":"Easy","description":"Given numBottles full water bottles, you can exchange numExchange empty water bottles for one full water bottle.\n\nThe operation of drinking a full water bottle turns it into an empty bottle.\n\nReturn the maximum number of water bottles you can drink.\n\n \n\nExample 1:\n\nInput: numBottles = 9, numExchange = 3\nOutput: 13\nExplanation: You can exchange 3 empty bottles to get 1 full water bottle.\nNumber of water bottles you can drink: 9 + 3 + 1 = 13.\n\n\nExample 2:\n\nInput: numBottles = 15, numExchange = 4\nOutput: 19\nExplanation: You can exchange 4 empty bottles to get 1 full water bottle. \nNumber of water bottles you can drink: 15 + 3 + 1 = 19.\n\n\nExample 3:\n\nInput: numBottles = 5, numExchange = 5\nOutput: 6\n\n\nExample 4:\n\nInput: numBottles = 2, numExchange = 3\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= numBottles <= 100\n2 <= numExchange <= 100"},{"index":"1519","url":"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label","title":"Number of Nodes in the Sub-Tree With the Same Label","difficulty":"Medium","description":"Given a tree (i.e. a connected, undirected graph that has no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges. The root of the tree is the node 0, and each node of the tree has a label which is a lower-case character given in the string labels (i.e. The node with the number i has the label labels[i]).\n\nThe edges array is given on the form edges[i] = [ai, bi], which means there is an edge between nodes ai and bi in the tree.\n\nReturn an array of size n where ans[i] is the number of nodes in the subtree of the ith node which have the same label as node i.\n\nA subtree of a tree T is the tree consisting of a node in T and all of its descendant nodes.\n\n \n\nExample 1:\n\nInput: n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], labels = \"abaedcd\"\nOutput: [2,1,1,1,1,1,1]\nExplanation: Node 0 has label 'a' and its sub-tree has node 2 with label 'a' as well, thus the answer is 2. Notice that any node is part of its sub-tree.\nNode 1 has a label 'b'. The sub-tree of node 1 contains nodes 1,4 and 5, as nodes 4 and 5 have different labels than node 1, the answer is just 1 (the node itself).\n\n\nExample 2:\n\nInput: n = 4, edges = [[0,1],[1,2],[0,3]], labels = \"bbbb\"\nOutput: [4,2,1,1]\nExplanation: The sub-tree of node 2 contains only node 2, so the answer is 1.\nThe sub-tree of node 3 contains only node 3, so the answer is 1.\nThe sub-tree of node 1 contains nodes 1 and 2, both have label 'b', thus the answer is 2.\nThe sub-tree of node 0 contains nodes 0, 1, 2 and 3, all with label 'b', thus the answer is 4.\n\n\nExample 3:\n\nInput: n = 5, edges = [[0,1],[0,2],[1,3],[0,4]], labels = \"aabab\"\nOutput: [3,2,1,1,1]\n\n\nExample 4:\n\nInput: n = 6, edges = [[0,1],[0,2],[1,3],[3,4],[4,5]], labels = \"cbabaa\"\nOutput: [1,2,1,1,2,1]\n\n\nExample 5:\n\nInput: n = 7, edges = [[0,1],[1,2],[2,3],[3,4],[4,5],[5,6]], labels = \"aaabaaa\"\nOutput: [6,5,4,1,3,2,1]\n\n\n \n\nConstraints:\n\n1 <= n <= 10^5\nedges.length == n - 1\nedges[i].length == 2\n0 <= ai, bi < n\nai != bi\nlabels.length == n\nlabels is consisting of only of lower-case English letters."},{"index":"1520","url":"https://leetcode.com/problems/maximum-number-of-non-overlapping-substrings","title":"Maximum Number of Non-Overlapping Substrings","difficulty":"Hard","description":"Given a string s of lowercase letters, you need to find the maximum number of non-empty substrings of s that meet the following conditions:\n\nThe substrings do not overlap, that is for any two substrings s[i..j] and s[k..l], either j < k or i > l is true.\nA substring that contains a certain character c must also contain all occurrences of c.\n\nFind the maximum number of substrings that meet the above conditions. If there are multiple solutions with the same number of substrings, return the one with minimum total length. It can be shown that there exists a unique solution of minimum total length.\n\nNotice that you can return the substrings in any order.\n\n \n\nExample 1:\n\nInput: s = \"adefaddaccc\"\nOutput: [\"e\",\"f\",\"ccc\"]\nExplanation: The following are all the possible substrings that meet the conditions:\n[\n  \"adefaddaccc\"\n  \"adefadda\",\n  \"ef\",\n  \"e\",\n  \"f\",\n  \"ccc\",\n]\nIf we choose the first string, we cannot choose anything else and we'd get only 1. If we choose \"adefadda\", we are left with \"ccc\" which is the only one that doesn't overlap, thus obtaining 2 substrings. Notice also, that it's not optimal to choose \"ef\" since it can be split into two. Therefore, the optimal way is to choose [\"e\",\"f\",\"ccc\"] which gives us 3 substrings. No other solution of the same number of substrings exist.\n\n\nExample 2:\n\nInput: s = \"abbaccd\"\nOutput: [\"d\",\"bb\",\"cc\"]\nExplanation: Notice that while the set of substrings [\"d\",\"abba\",\"cc\"] also has length 3, it's considered incorrect since it has larger total length.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\ns contains only lowercase English letters."},{"index":"1521","url":"https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target","title":"Find a Value of a Mysterious Function Closest to Target","difficulty":"Hard","description":"Winston was given the above mysterious function func. He has an integer array arr and an integer target and he wants to find the values l and r that make the value |func(arr, l, r) - target| minimum possible.\n\nReturn the minimum possible value of |func(arr, l, r) - target|.\n\nNotice that func should be called with the values l and r where 0 <= l, r < arr.length.\n\n \n\nExample 1:\n\nInput: arr = [9,12,3,7,15], target = 5\nOutput: 2\nExplanation: Calling func with all the pairs of [l,r] = [[0,0],[1,1],[2,2],[3,3],[4,4],[0,1],[1,2],[2,3],[3,4],[0,2],[1,3],[2,4],[0,3],[1,4],[0,4]], Winston got the following results [9,12,3,7,15,8,0,3,7,0,0,3,0,0,0]. The value closest to 5 is 7 and 3, thus the minimum difference is 2.\n\n\nExample 2:\n\nInput: arr = [1000000,1000000,1000000], target = 1\nOutput: 999999\nExplanation: Winston called the func with all possible values of [l,r] and he always got 1000000, thus the min difference is 999999.\n\n\nExample 3:\n\nInput: arr = [1,2,4,8,16], target = 0\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n1 <= arr[i] <= 10^6\n0 <= target <= 10^7"},{"index":"1523","url":"https://leetcode.com/problems/count-odd-numbers-in-an-interval-range","title":"Count Odd Numbers in an Interval Range","difficulty":"Easy","description":"Given two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive).\n\n \n\nExample 1:\n\nInput: low = 3, high = 7\nOutput: 3\nExplanation: The odd numbers between 3 and 7 are [3,5,7].\n\nExample 2:\n\nInput: low = 8, high = 10\nOutput: 1\nExplanation: The odd numbers between 8 and 10 are [9].\n\n \n\nConstraints:\n\n0 <= low <= high <= 10^9"},{"index":"1524","url":"https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum","title":"Number of Sub-arrays With Odd Sum","difficulty":"Medium","description":"Given an array of integers arr. Return the number of sub-arrays with odd sum.\n\nAs the answer may grow large, the answer must be computed modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: arr = [1,3,5]\nOutput: 4\nExplanation: All sub-arrays are [[1],[1,3],[1,3,5],[3],[3,5],[5]]\nAll sub-arrays sum are [1,4,9,3,8,5].\nOdd sums are [1,9,3,5] so the answer is 4.\n\n\nExample 2:\n\nInput: arr = [2,4,6]\nOutput: 0\nExplanation: All sub-arrays are [[2],[2,4],[2,4,6],[4],[4,6],[6]]\nAll sub-arrays sum are [2,6,12,4,10,6].\nAll sub-arrays have even sum and the answer is 0.\n\n\nExample 3:\n\nInput: arr = [1,2,3,4,5,6,7]\nOutput: 16\n\n\nExample 4:\n\nInput: arr = [100,100,99,99]\nOutput: 4\n\n\nExample 5:\n\nInput: arr = [7]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n1 <= arr[i] <= 100"},{"index":"1525","url":"https://leetcode.com/problems/number-of-good-ways-to-split-a-string","title":"Number of Good Ways to Split a String","difficulty":"Medium","description":"You are given a string s, a split is called good if you can split s into 2 non-empty strings p and q where its concatenation is equal to s and the number of distinct letters in p and q are the same.\n\nReturn the number of good splits you can make in s.\n\n \n\nExample 1:\n\nInput: s = \"aacaba\"\nOutput: 2\nExplanation: There are 5 ways to split \"aacaba\" and 2 of them are good. \n(\"a\", \"acaba\") Left string and right string contains 1 and 3 different letters respectively.\n(\"aa\", \"caba\") Left string and right string contains 1 and 3 different letters respectively.\n(\"aac\", \"aba\") Left string and right string contains 2 and 2 different letters respectively (good split).\n(\"aaca\", \"ba\") Left string and right string contains 2 and 2 different letters respectively (good split).\n(\"aacab\", \"a\") Left string and right string contains 3 and 1 different letters respectively.\n\n\nExample 2:\n\nInput: s = \"abcd\"\nOutput: 1\nExplanation: Split the string as follows (\"ab\", \"cd\").\n\n\nExample 3:\n\nInput: s = \"aaaaa\"\nOutput: 4\nExplanation: All possible splits are good.\n\nExample 4:\n\nInput: s = \"acbadbaada\"\nOutput: 2\n\n\n \n\nConstraints:\n\ns contains only lowercase English letters.\n1 <= s.length <= 10^5"},{"index":"1526","url":"https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array","title":"Minimum Number of Increments on Subarrays to Form a Target Array","difficulty":"Hard","description":"Given an array of positive integers target and an array initial of same size with all zeros.\n\nReturn the minimum number of operations to form a target array from initial if you are allowed to do the following operation:\n\nChoose any subarray from initial and increment each value by one.\nThe answer is guaranteed to fit within the range of a 32-bit signed integer.\n\n \n\nExample 1:\n\nInput: target = [1,2,3,2,1]\nOutput: 3\nExplanation: We need at least 3 operations to form the target array from the initial array.\n[0,0,0,0,0] increment 1 from index 0 to 4 (inclusive).\n[1,1,1,1,1] increment 1 from index 1 to 3 (inclusive).\n[1,2,2,2,1] increment 1 at index 2.\n[1,2,3,2,1] target array is formed.\n\n\nExample 2:\n\nInput: target = [3,1,1,2]\nOutput: 4\nExplanation: (initial)[0,0,0,0] -> [1,1,1,1] -> [1,1,1,2] -> [2,1,1,2] -> [3,1,1,2] (target).\n\n\nExample 3:\n\nInput: target = [3,1,5,4,2]\nOutput: 7\nExplanation: (initial)[0,0,0,0,0] -> [1,1,1,1,1] -> [2,1,1,1,1] -> [3,1,1,1,1] \n                                  -> [3,1,2,2,2] -> [3,1,3,3,2] -> [3,1,4,4,2] -> [3,1,5,4,2] (target).\n\n\nExample 4:\n\nInput: target = [1,1,1,1]\nOutput: 1\n\n\n \n\nConstraints:\n\n1 <= target.length <= 10^5\n1 <= target[i] <= 10^5"},{"index":"1528","url":"https://leetcode.com/problems/shuffle-string","title":"Shuffle String","difficulty":"Easy","description":"Given a string s and an integer array indices of the same length.\n\nThe string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string.\n\nReturn the shuffled string.\n\n \n\nExample 1:\n\nInput: s = \"codeleet\", indices = [4,5,6,7,0,2,1,3]\nOutput: \"leetcode\"\nExplanation: As shown, \"codeleet\" becomes \"leetcode\" after shuffling.\n\n\nExample 2:\n\nInput: s = \"abc\", indices = [0,1,2]\nOutput: \"abc\"\nExplanation: After shuffling, each character remains in its position.\n\n\nExample 3:\n\nInput: s = \"aiohn\", indices = [3,1,4,2,0]\nOutput: \"nihao\"\n\n\nExample 4:\n\nInput: s = \"aaiougrt\", indices = [4,0,2,6,7,3,1,5]\nOutput: \"arigatou\"\n\n\nExample 5:\n\nInput: s = \"art\", indices = [1,0,2]\nOutput: \"rat\"\n\n\n \n\nConstraints:\n\ns.length == indices.length == n\n1 <= n <= 100\ns contains only lower-case English letters.\n0 <= indices[i] < n\nAll values of indices are unique (i.e. indices is a permutation of the integers from 0 to n - 1)."},{"index":"1529","url":"https://leetcode.com/problems/bulb-switcher-iv","title":"Bulb Switcher IV","difficulty":"Medium","description":"There is a room with n bulbs, numbered from 0 to n-1, arranged in a row from left to right. Initially all the bulbs are turned off.\n\nYour task is to obtain the configuration represented by target where target[i] is '1' if the i-th bulb is turned on and is '0' if it is turned off.\n\nYou have a switch to flip the state of the bulb, a flip operation is defined as follows:\n\nChoose any bulb (index i) of your current configuration.\nFlip each bulb from index i to n-1.\n\nWhen any bulb is flipped it means that if it is 0 it changes to 1 and if it is 1 it changes to 0.\n\nReturn the minimum number of flips required to form target.\n\n \n\nExample 1:\n\nInput: target = \"10111\"\nOutput: 3\nExplanation: Initial configuration \"00000\".\nflip from the third bulb:  \"00000\" -> \"00111\"\nflip from the first bulb:  \"00111\" -> \"11000\"\nflip from the second bulb:  \"11000\" -> \"10111\"\nWe need at least 3 flip operations to form target.\n\nExample 2:\n\nInput: target = \"101\"\nOutput: 3\nExplanation: \"000\" -> \"111\" -> \"100\" -> \"101\".\n\n\nExample 3:\n\nInput: target = \"00000\"\nOutput: 0\n\n\nExample 4:\n\nInput: target = \"001011101\"\nOutput: 5\n\n\n \n\nConstraints:\n\n1 <= target.length <= 10^5\ntarget[i] == '0' or target[i] == '1'"},{"index":"1530","url":"https://leetcode.com/problems/number-of-good-leaf-nodes-pairs","title":"Number of Good Leaf Nodes Pairs","difficulty":"Medium","description":"Given the root of a binary tree and an integer distance. A pair of two different leaf nodes of a binary tree is said to be good if the length of the shortest path between them is less than or equal to distance.\n\nReturn the number of good leaf node pairs in the tree.\n\n \n\nExample 1:\n\nInput: root = [1,2,3,null,4], distance = 3\nOutput: 1\nExplanation: The leaf nodes of the tree are 3 and 4 and the length of the shortest path between them is 3. This is the only good pair.\n\n\nExample 2:\n\nInput: root = [1,2,3,4,5,6,7], distance = 3\nOutput: 2\nExplanation: The good pairs are [4,5] and [6,7] with shortest path = 2. The pair [4,6] is not good because the length of ther shortest path between them is 4.\n\n\nExample 3:\n\nInput: root = [7,1,4,6,null,5,3,null,null,null,null,null,2], distance = 3\nOutput: 1\nExplanation: The only good pair is [2,5].\n\n\nExample 4:\n\nInput: root = [100], distance = 1\nOutput: 0\n\n\nExample 5:\n\nInput: root = [1,1,1], distance = 2\nOutput: 1\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 2^10].\nEach node's value is between [1, 100].\n1 <= distance <= 10"},{"index":"1531","url":"https://leetcode.com/problems/string-compression-ii","title":"String Compression II","difficulty":"Hard","description":"Run-length encoding is a string compression method that works by replacing consecutive identical characters (repeated 2 or more times) with the concatenation of the character and the number marking the count of the characters (length of the run). For example, to compress the string \"aabccc\" we replace \"aa\" by \"a2\" and replace \"ccc\" by \"c3\". Thus the compressed string becomes \"a2bc3\".\n\nNotice that in this problem, we are not adding '1' after single characters.\n\nGiven a string s and an integer k. You need to delete at most k characters from s such that the run-length encoded version of s has minimum length.\n\nFind the minimum length of the run-length encoded version of s after deleting at most k characters.\n\n \n\nExample 1:\n\nInput: s = \"aaabcccd\", k = 2\nOutput: 4\nExplanation: Compressing s without deleting anything will give us \"a3bc3d\" of length 6. Deleting any of the characters 'a' or 'c' would at most decrease the length of the compressed string to 5, for instance delete 2 'a' then we will have s = \"abcccd\" which compressed is abc3d. Therefore, the optimal way is to delete 'b' and 'd', then the compressed version of s will be \"a3c3\" of length 4.\n\nExample 2:\n\nInput: s = \"aabbaa\", k = 2\nOutput: 2\nExplanation: If we delete both 'b' characters, the resulting compressed string would be \"a4\" of length 2.\n\n\nExample 3:\n\nInput: s = \"aaaaaaaaaaa\", k = 0\nOutput: 3\nExplanation: Since k is zero, we cannot delete anything. The compressed string is \"a11\" of length 3.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 100\n0 <= k <= s.length\ns contains only lowercase English letters."},{"index":"1534","url":"https://leetcode.com/problems/count-good-triplets","title":"Count Good Triplets","difficulty":"Easy","description":"Given an array of integers arr, and three integers a, b and c. You need to find the number of good triplets.\n\nA triplet (arr[i], arr[j], arr[k]) is good if the following conditions are true:\n\n0 <= i < j < k < arr.length\n|arr[i] - arr[j]| <= a\n|arr[j] - arr[k]| <= b\n|arr[i] - arr[k]| <= c\n\nWhere |x| denotes the absolute value of x.\n\nReturn the number of good triplets.\n\n \n\nExample 1:\n\nInput: arr = [3,0,1,1,9,7], a = 7, b = 2, c = 3\nOutput: 4\nExplanation: There are 4 good triplets: [(3,0,1), (3,0,1), (3,1,1), (0,1,1)].\n\n\nExample 2:\n\nInput: arr = [1,1,2,2,3], a = 0, b = 0, c = 1\nOutput: 0\nExplanation: No triplet satisfies all conditions.\n\n\n \n\nConstraints:\n\n3 <= arr.length <= 100\n0 <= arr[i] <= 1000\n0 <= a, b, c <= 1000"},{"index":"1535","url":"https://leetcode.com/problems/find-the-winner-of-an-array-game","title":"Find the Winner of an Array Game","difficulty":"Medium","description":"Given an integer array arr of distinct integers and an integer k.\n\nA game will be played between the first two elements of the array (i.e. arr[0] and arr[1]). In each round of the game, we compare arr[0] with arr[1], the larger integer wins and remains at position 0 and the smaller integer moves to the end of the array. The game ends when an integer wins k consecutive rounds.\n\nReturn the integer which will win the game.\n\nIt is guaranteed that there will be a winner of the game.\n\n \n\nExample 1:\n\nInput: arr = [2,1,3,5,4,6,7], k = 2\nOutput: 5\nExplanation: Let's see the rounds of the game:\nRound |       arr       | winner | win_count\n  1   | [2,1,3,5,4,6,7] | 2      | 1\n  2   | [2,3,5,4,6,7,1] | 3      | 1\n  3   | [3,5,4,6,7,1,2] | 5      | 1\n  4   | [5,4,6,7,1,2,3] | 5      | 2\nSo we can see that 4 rounds will be played and 5 is the winner because it wins 2 consecutive games.\n\n\nExample 2:\n\nInput: arr = [3,2,1], k = 10\nOutput: 3\nExplanation: 3 will win the first 10 rounds consecutively.\n\n\nExample 3:\n\nInput: arr = [1,9,8,2,3,7,6,4,5], k = 7\nOutput: 9\n\n\nExample 4:\n\nInput: arr = [1,11,22,33,44,55,66,77,88,99], k = 1000000000\nOutput: 99\n\n\n \n\nConstraints:\n\n2 <= arr.length <= 10^5\n1 <= arr[i] <= 10^6\narr contains distinct integers.\n1 <= k <= 10^9"},{"index":"1536","url":"https://leetcode.com/problems/minimum-swaps-to-arrange-a-binary-grid","title":"Minimum Swaps to Arrange a Binary Grid","difficulty":"Medium","description":"Given an n x n binary grid, in one step you can choose two adjacent rows of the grid and swap them.\n\nA grid is said to be valid if all the cells above the main diagonal are zeros.\n\nReturn the minimum number of steps needed to make the grid valid, or -1 if the grid cannot be valid.\n\nThe main diagonal of a grid is the diagonal that starts at cell (1, 1) and ends at cell (n, n).\n\n \n\nExample 1:\n\nInput: grid = [[0,0,1],[1,1,0],[1,0,0]]\nOutput: 3\n\n\nExample 2:\n\nInput: grid = [[0,1,1,0],[0,1,1,0],[0,1,1,0],[0,1,1,0]]\nOutput: -1\nExplanation: All rows are similar, swaps have no effect on the grid.\n\n\nExample 3:\n\nInput: grid = [[1,0,0],[1,1,0],[1,1,1]]\nOutput: 0\n\n\n \n\nConstraints:\n\nn == grid.length\nn == grid[i].length\n1 <= n <= 200\ngrid[i][j] is 0 or 1"},{"index":"1537","url":"https://leetcode.com/problems/get-the-maximum-score","title":"Get the Maximum Score","difficulty":"Hard","description":"You are given two sorted arrays of distinct integers nums1 and nums2.\n\nA valid path is defined as follows:\n\nChoose array nums1 or nums2 to traverse (from index-0).\nTraverse the current array from left to right.\nIf you are reading any value that is present in nums1 and nums2 you are allowed to change your path to the other array. (Only one repeated value is considered in the valid path).\n\nScore is defined as the sum of uniques values in a valid path.\n\nReturn the maximum score you can obtain of all possible valid paths.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: nums1 = [2,4,5,8,10], nums2 = [4,6,8,9]\nOutput: 30\nExplanation: Valid paths:\n[2,4,5,8,10], [2,4,5,8,9], [2,4,6,8,9], [2,4,6,8,10],  (starting from nums1)\n[4,6,8,9], [4,5,8,10], [4,5,8,9], [4,6,8,10]    (starting from nums2)\nThe maximum is obtained with the path in green [2,4,6,8,10].\n\n\nExample 2:\n\nInput: nums1 = [1,3,5,7,9], nums2 = [3,5,100]\nOutput: 109\nExplanation: Maximum sum is obtained with the path [1,3,5,100].\n\n\nExample 3:\n\nInput: nums1 = [1,2,3,4,5], nums2 = [6,7,8,9,10]\nOutput: 40\nExplanation: There are no common elements between nums1 and nums2.\nMaximum sum is obtained with the path [6,7,8,9,10].\n\n\nExample 4:\n\nInput: nums1 = [1,4,5,8,9,11,19], nums2 = [2,3,4,11,12]\nOutput: 61\n\n\n \n\nConstraints:\n\n1 <= nums1.length <= 10^5\n1 <= nums2.length <= 10^5\n1 <= nums1[i], nums2[i] <= 10^7\nnums1 and nums2 are strictly increasing."},{"index":"1539","url":"https://leetcode.com/problems/kth-missing-positive-number","title":"Kth Missing Positive Number","difficulty":"Easy","description":"Given an array arr of positive integers sorted in a strictly increasing order, and an integer k.\n\nFind the kth positive integer that is missing from this array.\n\n \n\nExample 1:\n\nInput: arr = [2,3,4,7,11], k = 5\nOutput: 9\nExplanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th missing positive integer is 9.\n\n\nExample 2:\n\nInput: arr = [1,2,3,4], k = 2\nOutput: 6\nExplanation: The missing positive integers are [5,6,7,...]. The 2nd missing positive integer is 6.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 1000\n1 <= arr[i] <= 1000\n1 <= k <= 1000\narr[i] < arr[j] for 1 <= i < j <= arr.length"},{"index":"1540","url":"https://leetcode.com/problems/can-convert-string-in-k-moves","title":"Can Convert String in K Moves","difficulty":"Medium","description":"Given two strings s and t, your goal is to convert s into t in k moves or less.\n\nDuring the ith (1 <= i <= k) move you can:\n\nChoose any index j (1-indexed) from s, such that 1 <= j <= s.length and j has not been chosen in any previous move, and shift the character at that index i times.\nDo nothing.\n\nShifting a character means replacing it by the next letter in the alphabet (wrapping around so that 'z' becomes 'a'). Shifting a character by i means applying the shift operations i times.\n\nRemember that any index j can be picked at most once.\n\nReturn true if it's possible to convert s into t in no more than k moves, otherwise return false.\n\n \n\nExample 1:\n\nInput: s = \"input\", t = \"ouput\", k = 9\nOutput: true\nExplanation: In the 6th move, we shift 'i' 6 times to get 'o'. And in the 7th move we shift 'n' to get 'u'.\n\n\nExample 2:\n\nInput: s = \"abc\", t = \"bcd\", k = 10\nOutput: false\nExplanation: We need to shift each character in s one time to convert it into t. We can shift 'a' to 'b' during the 1st move. However, there is no way to shift the other characters in the remaining moves to obtain t from s.\n\n\nExample 3:\n\nInput: s = \"aab\", t = \"bbb\", k = 27\nOutput: true\nExplanation: In the 1st move, we shift the first 'a' 1 time to get 'b'. In the 27th move, we shift the second 'a' 27 times to get 'b'.\n\n\n \n\nConstraints:\n\n1 <= s.length, t.length <= 10^5\n0 <= k <= 10^9\ns, t contain only lowercase English letters."},{"index":"1541","url":"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string","title":"Minimum Insertions to Balance a Parentheses String","difficulty":"Medium","description":"Given a parentheses string s containing only the characters '(' and ')'. A parentheses string is balanced if:\n\nAny left parenthesis '(' must have a corresponding two consecutive right parenthesis '))'.\nLeft parenthesis '(' must go before the corresponding two consecutive right parenthesis '))'.\n\nIn other words, we treat '(' as openning parenthesis and '))' as closing parenthesis.\n\nFor example, \"())\", \"())(())))\" and \"(())())))\" are balanced, \")()\", \"()))\" and \"(()))\" are not balanced.\n\nYou can insert the characters '(' and ')' at any position of the string to balance it if needed.\n\nReturn the minimum number of insertions needed to make s balanced.\n\n \n\nExample 1:\n\nInput: s = \"(()))\"\nOutput: 1\nExplanation: The second '(' has two matching '))', but the first '(' has only ')' matching. We need to to add one more ')' at the end of the string to be \"(())))\" which is balanced.\n\n\nExample 2:\n\nInput: s = \"())\"\nOutput: 0\nExplanation: The string is already balanced.\n\n\nExample 3:\n\nInput: s = \"))())(\"\nOutput: 3\nExplanation: Add '(' to match the first '))', Add '))' to match the last '('.\n\n\nExample 4:\n\nInput: s = \"((((((\"\nOutput: 12\nExplanation: Add 12 ')' to balance the string.\n\n\nExample 5:\n\nInput: s = \")))))))\"\nOutput: 5\nExplanation: Add 4 '(' at the beginning of the string and one ')' at the end. The string becomes \"(((())))))))\".\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\ns consists of '(' and ')' only."},{"index":"1542","url":"https://leetcode.com/problems/find-longest-awesome-substring","title":"Find Longest Awesome Substring","difficulty":"Hard","description":"Given a string s. An awesome substring is a non-empty substring of s such that we can make any number of swaps in order to make it palindrome.\n\nReturn the length of the maximum length awesome substring of s.\n\n \n\nExample 1:\n\nInput: s = \"3242415\"\nOutput: 5\nExplanation: \"24241\" is the longest awesome substring, we can form the palindrome \"24142\" with some swaps.\n\n\nExample 2:\n\nInput: s = \"12345678\"\nOutput: 1\n\n\nExample 3:\n\nInput: s = \"213123\"\nOutput: 6\nExplanation: \"213123\" is the longest awesome substring, we can form the palindrome \"231132\" with some swaps.\n\n\nExample 4:\n\nInput: s = \"00\"\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= s.length <= 10^5\ns consists only of digits."},{"index":"1544","url":"https://leetcode.com/problems/make-the-string-great","title":"Make The String Great","difficulty":"Easy","description":"Given a string s of lower and upper case English letters.\n\nA good string is a string which doesn't have two adjacent characters s[i] and s[i + 1] where:\n\n0 <= i <= s.length - 2\ns[i] is a lower-case letter and s[i + 1] is the same letter but in upper-case or vice-versa.\n\nTo make the string good, you can choose two adjacent characters that make the string bad and remove them. You can keep doing this until the string becomes good.\n\nReturn the string after making it good. The answer is guaranteed to be unique under the given constraints.\n\nNotice that an empty string is also good.\n\n \n\nExample 1:\n\nInput: s = \"leEeetcode\"\nOutput: \"leetcode\"\nExplanation: In the first step, either you choose i = 1 or i = 2, both will result \"leEeetcode\" to be reduced to \"leetcode\".\n\n\nExample 2:\n\nInput: s = \"abBAcC\"\nOutput: \"\"\nExplanation: We have many possible scenarios, and all lead to the same answer. For example:\n\"abBAcC\" --> \"aAcC\" --> \"cC\" --> \"\"\n\"abBAcC\" --> \"abBA\" --> \"aA\" --> \"\"\n\n\nExample 3:\n\nInput: s = \"s\"\nOutput: \"s\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 100\ns contains only lower and upper case English letters."},{"index":"1545","url":"https://leetcode.com/problems/find-kth-bit-in-nth-binary-string","title":"Find Kth Bit in Nth Binary String","difficulty":"Medium","description":"Given two positive integers n and k, the binary string  Sn is formed as follows:\n\nS1 = \"0\"\nSi = Si-1 + \"1\" + reverse(invert(Si-1)) for i > 1\n\nWhere + denotes the concatenation operation, reverse(x) returns the reversed string x, and invert(x) inverts all the bits in x (0 changes to 1 and 1 changes to 0).\n\nFor example, the first 4 strings in the above sequence are:\n\nS1 = \"0\"\nS2 = \"011\"\nS3 = \"0111001\"\nS4 = \"011100110110001\"\n\nReturn the kth bit in Sn. It is guaranteed that k is valid for the given n.\n\n \n\nExample 1:\n\nInput: n = 3, k = 1\nOutput: \"0\"\nExplanation: S3 is \"0111001\". The first bit is \"0\".\n\n\nExample 2:\n\nInput: n = 4, k = 11\nOutput: \"1\"\nExplanation: S4 is \"011100110110001\". The 11th bit is \"1\".\n\n\nExample 3:\n\nInput: n = 1, k = 1\nOutput: \"0\"\n\n\nExample 4:\n\nInput: n = 2, k = 3\nOutput: \"1\"\n\n\n \n\nConstraints:\n\n1 <= n <= 20\n1 <= k <= 2n - 1"},{"index":"1546","url":"https://leetcode.com/problems/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target","title":"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target","difficulty":"Medium","description":"Given an array nums and an integer target.\n\nReturn the maximum number of non-empty non-overlapping subarrays such that the sum of values in each subarray is equal to target.\n\n \n\nExample 1:\n\nInput: nums = [1,1,1,1,1], target = 2\nOutput: 2\nExplanation: There are 2 non-overlapping subarrays [1,1,1,1,1] with sum equals to target(2).\n\n\nExample 2:\n\nInput: nums = [-1,3,5,1,4,2,-9], target = 6\nOutput: 2\nExplanation: There are 3 subarrays with sum equal to 6.\n([5,1], [4,2], [3,5,1,4,2,-9]) but only the first 2 are non-overlapping.\n\nExample 3:\n\nInput: nums = [-2,6,6,3,5,4,1,2,8], target = 10\nOutput: 3\n\n\nExample 4:\n\nInput: nums = [0,0,0], target = 0\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n-10^4 <= nums[i] <= 10^4\n0 <= target <= 10^6"},{"index":"1547","url":"https://leetcode.com/problems/minimum-cost-to-cut-a-stick","title":"Minimum Cost to Cut a Stick","difficulty":"Hard","description":"Given a wooden stick of length n units. The stick is labelled from 0 to n. For example, a stick of length 6 is labelled as follows:\n\nGiven an integer array cuts where cuts[i] denotes a position you should perform a cut at.\n\nYou should perform the cuts in order, you can change the order of the cuts as you wish.\n\nThe cost of one cut is the length of the stick to be cut, the total cost is the sum of costs of all cuts. When you cut a stick, it will be split into two smaller sticks (i.e. the sum of their lengths is the length of the stick before the cut). Please refer to the first example for a better explanation.\n\nReturn the minimum total cost of the cuts.\n\n \n\nExample 1:\n\nInput: n = 7, cuts = [1,3,4,5]\nOutput: 16\nExplanation: Using cuts order = [1, 3, 4, 5] as in the input leads to the following scenario:\n\nThe first cut is done to a rod of length 7 so the cost is 7. The second cut is done to a rod of length 6 (i.e. the second part of the first cut), the third is done to a rod of length 4 and the last cut is to a rod of length 3. The total cost is 7 + 6 + 4 + 3 = 20.\nRearranging the cuts to be [3, 5, 1, 4] for example will lead to a scenario with total cost = 16 (as shown in the example photo 7 + 4 + 3 + 2 = 16).\n\nExample 2:\n\nInput: n = 9, cuts = [5,6,1,4,2]\nOutput: 22\nExplanation: If you try the given cuts ordering the cost will be 25.\nThere are much ordering with total cost <= 25, for example, the order [4, 6, 5, 2, 1] has total cost = 22 which is the minimum possible.\n\n\n \n\nConstraints:\n\n2 <= n <= 10^6\n1 <= cuts.length <= min(n - 1, 100)\n1 <= cuts[i] <= n - 1\nAll the integers in cuts array are distinct."},{"index":"1550","url":"https://leetcode.com/problems/three-consecutive-odds","title":"Three Consecutive Odds","difficulty":"Easy","description":"Given an integer array arr, return true if there are three consecutive odd numbers in the array. Otherwise, return false.\n\n \n\nExample 1:\n\nInput: arr = [2,6,4,1]\nOutput: false\nExplanation: There are no three consecutive odds.\n\n\nExample 2:\n\nInput: arr = [1,2,34,3,4,5,7,23,12]\nOutput: true\nExplanation: [5,7,23] are three consecutive odds.\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 1000\n1 <= arr[i] <= 1000"},{"index":"1551","url":"https://leetcode.com/problems/minimum-operations-to-make-array-equal","title":"Minimum Operations to Make Array Equal","difficulty":"Medium","description":"You have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i.e. 0 <= i < n).\n\nIn one operation, you can select two indices x and y where 0 <= x, y < n and subtract 1 from arr[x] and add 1 to arr[y] (i.e. perform arr[x] -=1 and arr[y] += 1). The goal is to make all the elements of the array equal. It is guaranteed that all the elements of the array can be made equal using some operations.\n\nGiven an integer n, the length of the array. Return the minimum number of operations needed to make all the elements of arr equal.\n\n \n\nExample 1:\n\nInput: n = 3\nOutput: 2\nExplanation: arr = [1, 3, 5]\nFirst operation choose x = 2 and y = 0, this leads arr to be [2, 3, 4]\nIn the second operation choose x = 2 and y = 0 again, thus arr = [3, 3, 3].\n\n\nExample 2:\n\nInput: n = 6\nOutput: 9\n\n\n \n\nConstraints:\n\n1 <= n <= 10^4"},{"index":"1552","url":"https://leetcode.com/problems/magnetic-force-between-two-balls","title":"Magnetic Force Between Two Balls","difficulty":"Medium","description":"In universe Earth C-137, Rick discovered a special form of magnetic force between two balls if they are put in his new invented basket. Rick has n empty baskets, the ith basket is at position[i], Morty has m balls and needs to distribute the balls into the baskets such that the minimum magnetic force between any two balls is maximum.\n\nRick stated that magnetic force between two different balls at positions x and y is |x - y|.\n\nGiven the integer array position and the integer m. Return the required force.\n\n \n\nExample 1:\n\nInput: position = [1,2,3,4,7], m = 3\nOutput: 3\nExplanation: Distributing the 3 balls into baskets 1, 4 and 7 will make the magnetic force between ball pairs [3, 3, 6]. The minimum magnetic force is 3. We cannot achieve a larger minimum magnetic force than 3.\n\n\nExample 2:\n\nInput: position = [5,4,3,2,1,1000000000], m = 2\nOutput: 999999999\nExplanation: We can use baskets 1 and 1000000000.\n\n\n \n\nConstraints:\n\nn == position.length\n2 <= n <= 10^5\n1 <= position[i] <= 10^9\nAll integers in position are distinct.\n2 <= m <= position.length"},{"index":"1553","url":"https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges","title":"Minimum Number of Days to Eat N Oranges","difficulty":"Hard","description":"There are n oranges in the kitchen and you decided to eat some of these oranges every day as follows:\n\nEat one orange.\nIf the number of remaining oranges (n) is divisible by 2 then you can eat  n/2 oranges.\nIf the number of remaining oranges (n) is divisible by 3 then you can eat  2*(n/3) oranges.\n\nYou can only choose one of the actions per day.\n\nReturn the minimum number of days to eat n oranges.\n\n \n\nExample 1:\n\nInput: n = 10\nOutput: 4\nExplanation: You have 10 oranges.\nDay 1: Eat 1 orange,  10 - 1 = 9.  \nDay 2: Eat 6 oranges, 9 - 2*(9/3) = 9 - 6 = 3. (Since 9 is divisible by 3)\nDay 3: Eat 2 oranges, 3 - 2*(3/3) = 3 - 2 = 1. \nDay 4: Eat the last orange  1 - 1  = 0.\nYou need at least 4 days to eat the 10 oranges.\n\n\nExample 2:\n\nInput: n = 6\nOutput: 3\nExplanation: You have 6 oranges.\nDay 1: Eat 3 oranges, 6 - 6/2 = 6 - 3 = 3. (Since 6 is divisible by 2).\nDay 2: Eat 2 oranges, 3 - 2*(3/3) = 3 - 2 = 1. (Since 3 is divisible by 3)\nDay 3: Eat the last orange  1 - 1  = 0.\nYou need at least 3 days to eat the 6 oranges.\n\n\nExample 3:\n\nInput: n = 1\nOutput: 1\n\n\nExample 4:\n\nInput: n = 56\nOutput: 6\n\n\n \n\nConstraints:\n\n1 <= n <= 2*10^9"},{"index":"1556","url":"https://leetcode.com/problems/thousand-separator","title":"Thousand Separator","difficulty":"Easy","description":"Given an integer n, add a dot (\".\") as the thousands separator and return it in string format.\n\n \n\nExample 1:\n\nInput: n = 987\nOutput: \"987\"\n\n\nExample 2:\n\nInput: n = 1234\nOutput: \"1.234\"\n\n\nExample 3:\n\nInput: n = 123456789\nOutput: \"123.456.789\"\n\n\nExample 4:\n\nInput: n = 0\nOutput: \"0\"\n\n\n \n\nConstraints:\n\n0 <= n < 2^31"},{"index":"1557","url":"https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes","title":"Minimum Number of Vertices to Reach All Nodes","difficulty":"Medium","description":"Given a directed acyclic graph, with n vertices numbered from 0 to n-1, and an array edges where edges[i] = [fromi, toi] represents a directed edge from node fromi to node toi.\n\nFind the smallest set of vertices from which all nodes in the graph are reachable. It's guaranteed that a unique solution exists.\n\nNotice that you can return the vertices in any order.\n\n \n\nExample 1:\n\nInput: n = 6, edges = [[0,1],[0,2],[2,5],[3,4],[4,2]]\nOutput: [0,3]\nExplanation: It's not possible to reach all the nodes from a single vertex. From 0 we can reach [0,1,2,5]. From 3 we can reach [3,4,2,5]. So we output [0,3].\n\nExample 2:\n\nInput: n = 5, edges = [[0,1],[2,1],[3,1],[1,4],[2,4]]\nOutput: [0,2,3]\nExplanation: Notice that vertices 0, 3 and 2 are not reachable from any other node, so we must include them. Also any of these vertices can reach nodes 1 and 4.\n\n\n \n\nConstraints:\n\n2 <= n <= 10^5\n1 <= edges.length <= min(10^5, n * (n - 1) / 2)\nedges[i].length == 2\n0 <= fromi, toi < n\nAll pairs (fromi, toi) are distinct."},{"index":"1558","url":"https://leetcode.com/problems/minimum-numbers-of-function-calls-to-make-target-array","title":"Minimum Numbers of Function Calls to Make Target Array","difficulty":"Medium","description":"Your task is to form an integer array nums from an initial array of zeros arr that is the same size as nums.\n\nReturn the minimum number of function calls to make nums from arr.\n\nThe answer is guaranteed to fit in a 32-bit signed integer.\n\n \n\nExample 1:\n\nInput: nums = [1,5]\nOutput: 5\nExplanation: Increment by 1 (second element): [0, 0] to get [0, 1] (1 operation).\nDouble all the elements: [0, 1] -> [0, 2] -> [0, 4] (2 operations).\nIncrement by 1 (both elements)  [0, 4] -> [1, 4] -> [1, 5] (2 operations).\nTotal of operations: 1 + 2 + 2 = 5.\n\n\nExample 2:\n\nInput: nums = [2,2]\nOutput: 3\nExplanation: Increment by 1 (both elements) [0, 0] -> [0, 1] -> [1, 1] (2 operations).\nDouble all the elements: [1, 1] -> [2, 2] (1 operation).\nTotal of operations: 2 + 1 = 3.\n\n\nExample 3:\n\nInput: nums = [4,2,5]\nOutput: 6\nExplanation: (initial)[0,0,0] -> [1,0,0] -> [1,0,1] -> [2,0,2] -> [2,1,2] -> [4,2,4] -> [4,2,5](nums).\n\n\nExample 4:\n\nInput: nums = [3,2,2,4]\nOutput: 7\n\n\nExample 5:\n\nInput: nums = [2,4,8,16]\nOutput: 8\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n0 <= nums[i] <= 10^9"},{"index":"1559","url":"https://leetcode.com/problems/detect-cycles-in-2d-grid","title":"Detect Cycles in 2D Grid","difficulty":"Hard","description":"Given a 2D array of characters grid of size m x n, you need to find if there exists any cycle consisting of the same value in grid.\n\nA cycle is a path of length 4 or more in the grid that starts and ends at the same cell. From a given cell, you can move to one of the cells adjacent to it - in one of the four directions (up, down, left, or right), if it has the same value of the current cell.\n\nAlso, you cannot move to the cell that you visited in your last move. For example, the cycle (1, 1) -> (1, 2) -> (1, 1) is invalid because from (1, 2) we visited (1, 1) which was the last visited cell.\n\nReturn true if any cycle of the same value exists in grid, otherwise, return false.\n\n \n\nExample 1:\n\nInput: grid = [[\"a\",\"a\",\"a\",\"a\"],[\"a\",\"b\",\"b\",\"a\"],[\"a\",\"b\",\"b\",\"a\"],[\"a\",\"a\",\"a\",\"a\"]]\nOutput: true\nExplanation: There are two valid cycles shown in different colors in the image below:\n\n\n\nExample 2:\n\nInput: grid = [[\"c\",\"c\",\"c\",\"a\"],[\"c\",\"d\",\"c\",\"c\"],[\"c\",\"c\",\"e\",\"c\"],[\"f\",\"c\",\"c\",\"c\"]]\nOutput: true\nExplanation: There is only one valid cycle highlighted in the image below:\n\n\n\nExample 3:\n\nInput: grid = [[\"a\",\"b\",\"b\"],[\"b\",\"z\",\"b\"],[\"b\",\"b\",\"a\"]]\nOutput: false\n\n\n \n\nConstraints:\n\nm == grid.length\nn == grid[i].length\n1 <= m <= 500\n1 <= n <= 500\ngrid consists only of lowercase English letters."},{"index":"1560","url":"https://leetcode.com/problems/most-visited-sector-in-a-circular-track","title":"Most Visited Sector in a Circular Track","difficulty":"Easy","description":"Given an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n. A marathon will be held on this track, the marathon consists of m rounds. The ith round starts at sector rounds[i - 1] and ends at sector rounds[i]. For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]\n\nReturn an array of the most visited sectors sorted in ascending order.\n\nNotice that you circulate the track in ascending order of sector numbers in the counter-clockwise direction (See the first example).\n\n \n\nExample 1:\n\nInput: n = 4, rounds = [1,3,1,2]\nOutput: [1,2]\nExplanation: The marathon starts at sector 1. The order of the visited sectors is as follows:\n1 --> 2 --> 3 (end of round 1) --> 4 --> 1 (end of round 2) --> 2 (end of round 3 and the marathon)\nWe can see that both sectors 1 and 2 are visited twice and they are the most visited sectors. Sectors 3 and 4 are visited only once.\n\nExample 2:\n\nInput: n = 2, rounds = [2,1,2,1,2,1,2,1,2]\nOutput: [2]\n\n\nExample 3:\n\nInput: n = 7, rounds = [1,3,5,7]\nOutput: [1,2,3,4,5,6,7]\n\n\n \n\nConstraints:\n\n2 <= n <= 100\n1 <= m <= 100\nrounds.length == m + 1\n1 <= rounds[i] <= n\nrounds[i] != rounds[i + 1] for 0 <= i < m"},{"index":"1561","url":"https://leetcode.com/problems/maximum-number-of-coins-you-can-get","title":"Maximum Number of Coins You Can Get","difficulty":"Medium","description":"There are 3n piles of coins of varying size, you and your friends will take piles of coins as follows:\n\nIn each step, you will choose any 3 piles of coins (not necessarily consecutive).\nOf your choice, Alice will pick the pile with the maximum number of coins.\nYou will pick the next pile with maximum number of coins.\nYour friend Bob will pick the last pile.\nRepeat until there are no more piles of coins.\n\nGiven an array of integers piles where piles[i] is the number of coins in the ith pile.\n\nReturn the maximum number of coins which you can have.\n\n \n\nExample 1:\n\nInput: piles = [2,4,1,2,7,8]\nOutput: 9\nExplanation: Choose the triplet (2, 7, 8), Alice Pick the pile with 8 coins, you the pile with 7 coins and Bob the last one.\nChoose the triplet (1, 2, 4), Alice Pick the pile with 4 coins, you the pile with 2 coins and Bob the last one.\nThe maximum number of coins which you can have are: 7 + 2 = 9.\nOn the other hand if we choose this arrangement (1, 2, 8), (2, 4, 7) you only get 2 + 4 = 6 coins which is not optimal.\n\n\nExample 2:\n\nInput: piles = [2,4,5]\nOutput: 4\n\n\nExample 3:\n\nInput: piles = [9,8,7,6,5,1,2,3,4]\nOutput: 18\n\n\n \n\nConstraints:\n\n3 <= piles.length <= 10^5\npiles.length % 3 == 0\n1 <= piles[i] <= 10^4"},{"index":"1562","url":"https://leetcode.com/problems/find-latest-group-of-size-m","title":"Find Latest Group of Size M","difficulty":"Medium","description":"Given an array arr that represents a permutation of numbers from 1 to n. You have a binary string of size n that initially has all its bits set to zero.\n\nAt each step i (assuming both the binary string and arr are 1-indexed) from 1 to n, the bit at position arr[i] is set to 1. You are given an integer m and you need to find the latest step at which there exists a group of ones of length m. A group of ones is a contiguous substring of 1s such that it cannot be extended in either direction.\n\nReturn the latest step at which there exists a group of ones of length exactly m. If no such group exists, return -1.\n\n \n\nExample 1:\n\nInput: arr = [3,5,1,2,4], m = 1\nOutput: 4\nExplanation:\nStep 1: \"00100\", groups: [\"1\"]\nStep 2: \"00101\", groups: [\"1\", \"1\"]\nStep 3: \"10101\", groups: [\"1\", \"1\", \"1\"]\nStep 4: \"11101\", groups: [\"111\", \"1\"]\nStep 5: \"11111\", groups: [\"11111\"]\nThe latest step at which there exists a group of size 1 is step 4.\n\nExample 2:\n\nInput: arr = [3,1,5,4,2], m = 2\nOutput: -1\nExplanation:\nStep 1: \"00100\", groups: [\"1\"]\nStep 2: \"10100\", groups: [\"1\", \"1\"]\nStep 3: \"10101\", groups: [\"1\", \"1\", \"1\"]\nStep 4: \"10111\", groups: [\"1\", \"111\"]\nStep 5: \"11111\", groups: [\"11111\"]\nNo group of size 2 exists during any step.\n\n\nExample 3:\n\nInput: arr = [1], m = 1\nOutput: 1\n\n\nExample 4:\n\nInput: arr = [2,1], m = 2\nOutput: 2\n\n\n \n\nConstraints:\n\nn == arr.length\n1 <= n <= 10^5\n1 <= arr[i] <= n\nAll integers in arr are distinct.\n1 <= m <= arr.length"},{"index":"1563","url":"https://leetcode.com/problems/stone-game-v","title":"Stone Game V","difficulty":"Hard","description":"There are several stones arranged in a row, and each stone has an associated value which is an integer given in the array stoneValue.\n\nIn each round of the game, Alice divides the row into two non-empty rows (i.e. left row and right row), then Bob calculates the value of each row which is the sum of the values of all the stones in this row. Bob throws away the row which has the maximum value, and Alice's score increases by the value of the remaining row. If the value of the two rows are equal, Bob lets Alice decide which row will be thrown away. The next round starts with the remaining row.\n\nThe game ends when there is only one stone remaining. Alice's is initially zero.\n\nReturn the maximum score that Alice can obtain.\n\n \n\nExample 1:\n\nInput: stoneValue = [6,2,3,4,5,5]\nOutput: 18\nExplanation: In the first round, Alice divides the row to [6,2,3], [4,5,5]. The left row has the value 11 and the right row has value 14. Bob throws away the right row and Alice's score is now 11.\nIn the second round Alice divides the row to [6], [2,3]. This time Bob throws away the left row and Alice's score becomes 16 (11 + 5).\nThe last round Alice has only one choice to divide the row which is [2], [3]. Bob throws away the right row and Alice's score is now 18 (16 + 2). The game ends because only one stone is remaining in the row.\n\n\nExample 2:\n\nInput: stoneValue = [7,7,7,7,7,7,7]\nOutput: 28\n\n\nExample 3:\n\nInput: stoneValue = [4]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= stoneValue.length <= 500\n1 <= stoneValue[i] <= 10^6"},{"index":"1566","url":"https://leetcode.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times","title":"Detect Pattern of Length M Repeated K or More Times","difficulty":"Easy","description":"Given an array of positive integers arr,  find a pattern of length m that is repeated k or more times.\n\nA pattern is a subarray (consecutive sub-sequence) that consists of one or more values, repeated multiple times consecutively without overlapping. A pattern is defined by its length and the number of repetitions.\n\nReturn true if there exists a pattern of length m that is repeated k or more times, otherwise return false.\n\n \n\nExample 1:\n\nInput: arr = [1,2,4,4,4,4], m = 1, k = 3\nOutput: true\nExplanation: The pattern (4) of length 1 is repeated 4 consecutive times. Notice that pattern can be repeated k or more times but not less.\n\n\nExample 2:\n\nInput: arr = [1,2,1,2,1,1,1,3], m = 2, k = 2\nOutput: true\nExplanation: The pattern (1,2) of length 2 is repeated 2 consecutive times. Another valid pattern (2,1) is also repeated 2 times.\n\n\nExample 3:\n\nInput: arr = [1,2,1,2,1,3], m = 2, k = 3\nOutput: false\nExplanation: The pattern (1,2) is of length 2 but is repeated only 2 times. There is no pattern of length 2 that is repeated 3 or more times.\n\n\nExample 4:\n\nInput: arr = [1,2,3,1,2], m = 2, k = 2\nOutput: false\nExplanation: Notice that the pattern (1,2) exists twice but not consecutively, so it doesn't count.\n\n\nExample 5:\n\nInput: arr = [2,2,2,2], m = 2, k = 3\nOutput: false\nExplanation: The only pattern of length 2 is (2,2) however it's repeated only twice. Notice that we do not count overlapping repetitions.\n\n\n \n\nConstraints:\n\n2 <= arr.length <= 100\n1 <= arr[i] <= 100\n1 <= m <= 100\n2 <= k <= 100"},{"index":"1567","url":"https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product","title":"Maximum Length of Subarray With Positive Product","difficulty":"Medium","description":"Given an array of integers nums, find the maximum length of a subarray where the product of all its elements is positive.\n\nA subarray of an array is a consecutive sequence of zero or more values taken out of that array.\n\nReturn the maximum length of a subarray with positive product.\n\n \n\nExample 1:\n\nInput: nums = [1,-2,-3,4]\nOutput: 4\nExplanation: The array nums already has a positive product of 24.\n\n\nExample 2:\n\nInput: nums = [0,1,-2,-3,-4]\nOutput: 3\nExplanation: The longest subarray with positive product is [1,-2,-3] which has a product of 6.\nNotice that we cannot include 0 in the subarray since that'll make the product 0 which is not positive.\n\nExample 3:\n\nInput: nums = [-1,-2,-3,0,1]\nOutput: 2\nExplanation: The longest subarray with positive product is [-1,-2] or [-2,-3].\n\n\nExample 4:\n\nInput: nums = [-1,2]\nOutput: 1\n\n\nExample 5:\n\nInput: nums = [1,2,3,5,-6,4,0,10]\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 10^5\n-10^9 <= nums[i] <= 10^9"},{"index":"1568","url":"https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island","title":"Minimum Number of Days to Disconnect Island","difficulty":"Hard","description":"Given a 2D grid consisting of 1s (land) and 0s (water).  An island is a maximal 4-directionally (horizontal or vertical) connected group of 1s.\n\nThe grid is said to be connected if we have exactly one island, otherwise is said disconnected.\n\nIn one day, we are allowed to change any single land cell (1) into a water cell (0).\n\nReturn the minimum number of days to disconnect the grid.\n\n \n\nExample 1:\n\nInput: grid = [[0,1,1,0],[0,1,1,0],[0,0,0,0]]\nOutput: 2\nExplanation: We need at least 2 days to get a disconnected grid.\nChange land grid[1][1] and grid[0][2] to water and get 2 disconnected island.\n\n\nExample 2:\n\nInput: grid = [[1,1]]\nOutput: 2\nExplanation: Grid of full water is also disconnected ([[1,1]] -> [[0,0]]), 0 islands.\n\n\nExample 3:\n\nInput: grid = [[1,0,1,0]]\nOutput: 0\n\n\nExample 4:\n\nInput: grid = [[1,1,0,1,1],\n               [1,1,1,1,1],\n               [1,1,0,1,1],\n               [1,1,0,1,1]]\nOutput: 1\n\n\nExample 5:\n\nInput: grid = [[1,1,0,1,1],\n               [1,1,1,1,1],\n               [1,1,0,1,1],\n               [1,1,1,1,1]]\nOutput: 2\n\n\n \n\nConstraints:\n\n1 <= grid.length, grid[i].length <= 30\ngrid[i][j] is 0 or 1."},{"index":"1569","url":"https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst","title":"Number of Ways to Reorder Array to Get Same BST","difficulty":"Hard","description":"Given an array nums that represents a permutation of integers from 1 to n. We are going to construct a binary search tree (BST) by inserting the elements of nums in order into an initially empty BST. Find the number of different ways to reorder nums so that the constructed BST is identical to that formed from the original array nums.\n\nFor example, given nums = [2,1,3], we will have 2 as the root, 1 as a left child, and 3 as a right child. The array [2,3,1] also yields the same BST but [3,2,1] yields a different BST.\n\nReturn the number of ways to reorder nums such that the BST formed is identical to the original BST formed from nums.\n\nSince the answer may be very large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: nums = [2,1,3]\nOutput: 1\nExplanation: We can reorder nums to be [2,3,1] which will yield the same BST. There are no other ways to reorder nums which will yield the same BST.\n\n\nExample 2:\n\nInput: nums = [3,4,5,1,2]\nOutput: 5\nExplanation: The following 5 arrays will yield the same BST: \n[3,1,2,4,5]\n[3,1,4,2,5]\n[3,1,4,5,2]\n[3,4,1,2,5]\n[3,4,1,5,2]\n\n\nExample 3:\n\nInput: nums = [1,2,3]\nOutput: 0\nExplanation: There are no other orderings of nums that will yield the same BST.\n\n\nExample 4:\n\nInput: nums = [3,1,2,5,4,6]\nOutput: 19\n\n\nExample 5:\n\nInput: nums = [9,4,2,1,3,6,5,7,8,14,11,10,12,13,16,15,17,18]\nOutput: 216212978\nExplanation: The number of ways to reorder nums to get the same BST is 3216212999. Taking this number modulo 10^9 + 7 gives 216212978.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i] <= nums.length\nAll integers in nums are distinct."},{"index":"1572","url":"https://leetcode.com/problems/matrix-diagonal-sum","title":"Matrix Diagonal Sum","difficulty":"Easy","description":"Given a square matrix mat, return the sum of the matrix diagonals.\n\nOnly include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.\n\n \n\nExample 1:\n\nInput: mat = [[1,2,3],\n              [4,5,6],\n              [7,8,9]]\nOutput: 25\nExplanation: Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25\nNotice that element mat[1][1] = 5 is counted only once.\n\n\nExample 2:\n\nInput: mat = [[1,1,1,1],\n              [1,1,1,1],\n              [1,1,1,1],\n              [1,1,1,1]]\nOutput: 8\n\n\nExample 3:\n\nInput: mat = [[5]]\nOutput: 5\n\n\n \n\nConstraints:\n\nn == mat.length == mat[i].length\n1 <= n <= 100\n1 <= mat[i][j] <= 100"},{"index":"1573","url":"https://leetcode.com/problems/number-of-ways-to-split-a-string","title":"Number of Ways to Split a String","difficulty":"Medium","description":"Given a binary string s (a string consisting only of '0's and '1's), we can split s into 3 non-empty strings s1, s2, s3 (s1+ s2+ s3 = s).\n\nReturn the number of ways s can be split such that the number of characters '1' is the same in s1, s2, and s3.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: s = \"10101\"\nOutput: 4\nExplanation: There are four ways to split s in 3 parts where each part contain the same number of letters '1'.\n\"1|010|1\"\n\"1|01|01\"\n\"10|10|1\"\n\"10|1|01\"\n\n\nExample 2:\n\nInput: s = \"1001\"\nOutput: 0\n\n\nExample 3:\n\nInput: s = \"0000\"\nOutput: 3\nExplanation: There are three ways to split s in 3 parts.\n\"0|0|00\"\n\"0|00|0\"\n\"00|0|0\"\n\n\nExample 4:\n\nInput: s = \"100100010100110\"\nOutput: 12\n\n\n \n\nConstraints:\n\n3 <= s.length <= 10^5\ns[i] is '0' or '1'."},{"index":"1574","url":"https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted","title":"Shortest Subarray to be Removed to Make Array Sorted","difficulty":"Medium","description":"Given an integer array arr, remove a subarray (can be empty) from arr such that the remaining elements in arr are non-decreasing.\n\nA subarray is a contiguous subsequence of the array.\n\nReturn the length of the shortest subarray to remove.\n\n \n\nExample 1:\n\nInput: arr = [1,2,3,10,4,2,3,5]\nOutput: 3\nExplanation: The shortest subarray we can remove is [10,4,2] of length 3. The remaining elements after that will be [1,2,3,3,5] which are sorted.\nAnother correct solution is to remove the subarray [3,10,4].\n\nExample 2:\n\nInput: arr = [5,4,3,2,1]\nOutput: 4\nExplanation: Since the array is strictly decreasing, we can only keep a single element. Therefore we need to remove a subarray of length 4, either [5,4,3,2] or [4,3,2,1].\n\n\nExample 3:\n\nInput: arr = [1,2,3]\nOutput: 0\nExplanation: The array is already non-decreasing. We do not need to remove any elements.\n\n\nExample 4:\n\nInput: arr = [1]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 10^5\n0 <= arr[i] <= 10^9"},{"index":"1575","url":"https://leetcode.com/problems/count-all-possible-routes","title":"Count All Possible Routes","difficulty":"Hard","description":"You are given an array of distinct positive integers locations where locations[i] represents the position of city i. You are also given integers start, finish and fuel representing the starting city, ending city, and the initial amount of fuel you have, respectively.\n\nAt each step, if you are at city i, you can pick any city j such that j != i and 0 <= j < locations.length and move to city j. Moving from city i to city j reduces the amount of fuel you have by |locations[i] - locations[j]|. Please notice that |x| denotes the absolute value of x.\n\nNotice that fuel cannot become negative at any point in time, and that you are allowed to visit any city more than once (including start and finish).\n\nReturn the count of all possible routes from start to finish.\n\nSince the answer may be too large, return it modulo 10^9 + 7.\n\n \n\nExample 1:\n\nInput: locations = [2,3,6,8,4], start = 1, finish = 3, fuel = 5\nOutput: 4\nExplanation: The following are all possible routes, each uses 5 units of fuel:\n1 -> 3\n1 -> 2 -> 3\n1 -> 4 -> 3\n1 -> 4 -> 2 -> 3\n\n\nExample 2:\n\nInput: locations = [4,3,1], start = 1, finish = 0, fuel = 6\nOutput: 5\nExplanation: The following are all possible routes:\n1 -> 0, used fuel = 1\n1 -> 2 -> 0, used fuel = 5\n1 -> 2 -> 1 -> 0, used fuel = 5\n1 -> 0 -> 1 -> 0, used fuel = 3\n1 -> 0 -> 1 -> 0 -> 1 -> 0, used fuel = 5\n\n\nExample 3:\n\nInput: locations = [5,2,1], start = 0, finish = 2, fuel = 3\nOutput: 0\nExplanation: It's impossible to get from 0 to 2 using only 3 units of fuel since the shortest route needs 4 units of fuel.\n\nExample 4:\n\nInput: locations = [2,1,5], start = 0, finish = 0, fuel = 3\nOutput: 2\nExplanation: There are two possible routes, 0 and 0 -> 1 -> 0.\n\nExample 5:\n\nInput: locations = [1,2,3], start = 0, finish = 2, fuel = 40\nOutput: 615088286\nExplanation: The total number of possible routes is 2615088300. Taking this number modulo 10^9 + 7 gives us 615088286.\n\n\n \n\nConstraints:\n\n2 <= locations.length <= 100\n1 <= locations[i] <= 10^9\nAll integers in locations are distinct.\n0 <= start, finish < locations.length\n1 <= fuel <= 200"},{"index":"1576","url":"https://leetcode.com/problems/replace-all-s-to-avoid-consecutive-repeating-characters","title":"Replace All ?'s to Avoid Consecutive Repeating Characters","difficulty":"Easy","description":"Given a string s containing only lower case English letters and the '?' character, convert all the '?' characters into lower case letters such that the final string does not contain any consecutive repeating characters. You cannot modify the non '?' characters.\n\nIt is guaranteed that there are no consecutive repeating characters in the given string except for '?'.\n\nReturn the final string after all the conversions (possibly zero) have been made. If there is more than one solution, return any of them. It can be shown that an answer is always possible with the given constraints.\n\n \n\nExample 1:\n\nInput: s = \"?zs\"\nOutput: \"azs\"\nExplanation: There are 25 solutions for this problem. From \"azs\" to \"yzs\", all are valid. Only \"z\" is an invalid modification as the string will consist of consecutive repeating characters in \"zzs\".\n\nExample 2:\n\nInput: s = \"ubv?w\"\nOutput: \"ubvaw\"\nExplanation: There are 24 solutions for this problem. Only \"v\" and \"w\" are invalid modifications as the strings will consist of consecutive repeating characters in \"ubvvw\" and \"ubvww\".\n\n\nExample 3:\n\nInput: s = \"j?qg??b\"\nOutput: \"jaqgacb\"\n\n\nExample 4:\n\nInput: s = \"??yw?ipkj?\"\nOutput: \"acywaipkja\"\n\n\n \n\nConstraints:\n\n1 <= s.length <= 100\ns contains only lower case English letters and '?'."},{"index":"1577","url":"https://leetcode.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers","title":"Number of Ways Where Square of Number Is Equal to Product of Two Numbers","difficulty":"Medium","description":"Given two arrays of integers nums1 and nums2, return the number of triplets formed (type 1 and type 2) under the following rules:\n\nType 1: Triplet (i, j, k) if nums1[i]2 == nums2[j] * nums2[k] where 0 <= i < nums1.length and 0 <= j < k < nums2.length.\nType 2: Triplet (i, j, k) if nums2[i]2 == nums1[j] * nums1[k] where 0 <= i < nums2.length and 0 <= j < k < nums1.length.\n\n \n\nExample 1:\n\nInput: nums1 = [7,4], nums2 = [5,2,8,9]\nOutput: 1\nExplanation: Type 1: (1,1,2), nums1[1]^2 = nums2[1] * nums2[2]. (4^2 = 2 * 8). \n\n\nExample 2:\n\nInput: nums1 = [1,1], nums2 = [1,1,1]\nOutput: 9\nExplanation: All Triplets are valid, because 1^2 = 1 * 1.\nType 1: (0,0,1), (0,0,2), (0,1,2), (1,0,1), (1,0,2), (1,1,2).  nums1[i]^2 = nums2[j] * nums2[k].\nType 2: (0,0,1), (1,0,1), (2,0,1). nums2[i]^2 = nums1[j] * nums1[k].\n\n\nExample 3:\n\nInput: nums1 = [7,7,8,3], nums2 = [1,2,9,7]\nOutput: 2\nExplanation: There are 2 valid triplets.\nType 1: (3,0,2).  nums1[3]^2 = nums2[0] * nums2[2].\nType 2: (3,0,1).  nums2[3]^2 = nums1[0] * nums1[1].\n\n\nExample 4:\n\nInput: nums1 = [4,7,9,11,23], nums2 = [3,5,1024,12,18]\nOutput: 0\nExplanation: There are no valid triplets.\n\n\n \n\nConstraints:\n\n1 <= nums1.length, nums2.length <= 1000\n1 <= nums1[i], nums2[i] <= 10^5"},{"index":"1578","url":"https://leetcode.com/problems/minimum-deletion-cost-to-avoid-repeating-letters","title":"Minimum Deletion Cost to Avoid Repeating Letters","difficulty":"Medium","description":"Given a string s and an array of integers cost where cost[i] is the cost of deleting the ith character in s.\n\nReturn the minimum cost of deletions such that there are no two identical letters next to each other.\n\nNotice that you will delete the chosen characters at the same time, in other words, after deleting a character, the costs of deleting other characters will not change.\n\n \n\nExample 1:\n\nInput: s = \"abaac\", cost = [1,2,3,4,5]\nOutput: 3\nExplanation: Delete the letter \"a\" with cost 3 to get \"abac\" (String without two identical letters next to each other).\n\n\nExample 2:\n\nInput: s = \"abc\", cost = [1,2,3]\nOutput: 0\nExplanation: You don't need to delete any character because there are no identical letters next to each other.\n\n\nExample 3:\n\nInput: s = \"aabaa\", cost = [1,2,3,4,1]\nOutput: 2\nExplanation: Delete the first and the last character, getting the string (\"aba\").\n\n\n \n\nConstraints:\n\ns.length == cost.length\n1 <= s.length, cost.length <= 10^5\n1 <= cost[i] <= 10^4\ns contains only lowercase English letters."},{"index":"1579","url":"https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable","title":"Remove Max Number of Edges to Keep Graph Fully Traversable","difficulty":"Hard","description":"Alice and Bob have an undirected graph of n nodes and 3 types of edges:\n\nType 1: Can be traversed by Alice only.\nType 2: Can be traversed by Bob only.\nType 3: Can by traversed by both Alice and Bob.\n\nGiven an array edges where edges[i] = [typei, ui, vi] represents a bidirectional edge of type typei between nodes ui and vi, find the maximum number of edges you can remove so that after removing the edges, the graph can still be fully traversed by both Alice and Bob. The graph is fully traversed by Alice and Bob if starting from any node, they can reach all other nodes.\n\nReturn the maximum number of edges you can remove, or return -1 if it's impossible for the graph to be fully traversed by Alice and Bob.\n\n \n\nExample 1:\n\nInput: n = 4, edges = [[3,1,2],[3,2,3],[1,1,3],[1,2,4],[1,1,2],[2,3,4]]\nOutput: 2\nExplanation: If we remove the 2 edges [1,1,2] and [1,1,3]. The graph will still be fully traversable by Alice and Bob. Removing any additional edge will not make it so. So the maximum number of edges we can remove is 2.\n\n\nExample 2:\n\nInput: n = 4, edges = [[3,1,2],[3,2,3],[1,1,4],[2,1,4]]\nOutput: 0\nExplanation: Notice that removing any edge will not make the graph fully traversable by Alice and Bob.\n\n\nExample 3:\n\nInput: n = 4, edges = [[3,2,3],[1,1,2],[2,3,4]]\nOutput: -1\nExplanation: In the current graph, Alice cannot reach node 4 from the other nodes. Likewise, Bob cannot reach 1. Therefore it's impossible to make the graph fully traversable.\n\n \n\n \n\nConstraints:\n\n1 <= n <= 10^5\n1 <= edges.length <= min(10^5, 3 * n * (n-1) / 2)\nedges[i].length == 3\n1 <= edges[i][0] <= 3\n1 <= edges[i][1] < edges[i][2] <= n\nAll tuples (typei, ui, vi) are distinct."},{"index":"1582","url":"https://leetcode.com/problems/special-positions-in-a-binary-matrix","title":"Special Positions in a Binary Matrix","difficulty":"Easy","description":"Given a rows x cols matrix mat, where mat[i][j] is either 0 or 1, return the number of special positions in mat.\n\nA position (i,j) is called special if mat[i][j] == 1 and all other elements in row i and column j are 0 (rows and columns are 0-indexed).\n\n \n\nExample 1:\n\nInput: mat = [[1,0,0],\n              [0,0,1],\n              [1,0,0]]\nOutput: 1\nExplanation: (1,2) is a special position because mat[1][2] == 1 and all other elements in row 1 and column 2 are 0.\n\n\nExample 2:\n\nInput: mat = [[1,0,0],\n              [0,1,0],\n              [0,0,1]]\nOutput: 3\nExplanation: (0,0), (1,1) and (2,2) are special positions. \n\n\nExample 3:\n\nInput: mat = [[0,0,0,1],\n              [1,0,0,0],\n              [0,1,1,0],\n              [0,0,0,0]]\nOutput: 2\n\n\nExample 4:\n\nInput: mat = [[0,0,0,0,0],\n              [1,0,0,0,0],\n              [0,1,0,0,0],\n              [0,0,1,0,0],\n              [0,0,0,1,1]]\nOutput: 3\n\n\n \n\nConstraints:\n\nrows == mat.length\ncols == mat[i].length\n1 <= rows, cols <= 100\nmat[i][j] is 0 or 1."},{"index":"1583","url":"https://leetcode.com/problems/count-unhappy-friends","title":"Count Unhappy Friends","difficulty":"Medium","description":"You are given a list of preferences for n friends, where n is always even.\n\nFor each person i, preferences[i] contains a list of friends sorted in the order of preference. In other words, a friend earlier in the list is more preferred than a friend later in the list. Friends in each list are denoted by integers from 0 to n-1.\n\nAll the friends are divided into pairs. The pairings are given in a list pairs, where pairs[i] = [xi, yi] denotes xi is paired with yi and yi is paired with xi.\n\nHowever, this pairing may cause some of the friends to be unhappy. A friend x is unhappy if x is paired with y and there exists a friend u who is paired with v but:\n\nx prefers u over y, and\nu prefers x over v.\n\nReturn the number of unhappy friends.\n\n \n\nExample 1:\n\nInput: n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]\nOutput: 2\nExplanation:\nFriend 1 is unhappy because:\n- 1 is paired with 0 but prefers 3 over 0, and\n- 3 prefers 1 over 2.\nFriend 3 is unhappy because:\n- 3 is paired with 2 but prefers 1 over 2, and\n- 1 prefers 3 over 0.\nFriends 0 and 2 are happy.\n\n\nExample 2:\n\nInput: n = 2, preferences = [[1], [0]], pairs = [[1, 0]]\nOutput: 0\nExplanation: Both friends 0 and 1 are happy.\n\n\nExample 3:\n\nInput: n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]\nOutput: 4\n\n\n \n\nConstraints:\n\n2 <= n <= 500\nn is even.\npreferences.length == n\npreferences[i].length == n - 1\n0 <= preferences[i][j] <= n - 1\npreferences[i] does not contain i.\nAll values in preferences[i] are unique.\npairs.length == n/2\npairs[i].length == 2\nxi != yi\n0 <= xi, yi <= n - 1\nEach person is contained in exactly one pair."},{"index":"1584","url":"https://leetcode.com/problems/min-cost-to-connect-all-points","title":"Min Cost to Connect All Points","difficulty":"Medium","description":"You are given an array points representing integer coordinates of some points on a 2D-plane, where points[i] = [xi, yi].\n\nThe cost of connecting two points [xi, yi] and [xj, yj] is the manhattan distance between them: |xi - xj| + |yi - yj|, where |val| denotes the absolute value of val.\n\nReturn the minimum cost to make all points connected. All points are connected if there is exactly one simple path between any two points.\n\n \n\nExample 1:\n\nInput: points = [[0,0],[2,2],[3,10],[5,2],[7,0]]\nOutput: 20\nExplanation:\n\nWe can connect the points as shown above to get the minimum cost of 20.\nNotice that there is a unique path between every pair of points.\n\n\nExample 2:\n\nInput: points = [[3,12],[-2,5],[-4,1]]\nOutput: 18\n\n\nExample 3:\n\nInput: points = [[0,0],[1,1],[1,0],[-1,1]]\nOutput: 4\n\n\nExample 4:\n\nInput: points = [[-1000000,-1000000],[1000000,1000000]]\nOutput: 4000000\n\n\nExample 5:\n\nInput: points = [[0,0]]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= points.length <= 1000\n-106 <= xi, yi <= 106\nAll pairs (xi, yi) are distinct."},{"index":"1585","url":"https://leetcode.com/problems/check-if-string-is-transformable-with-substring-sort-operations","title":"Check If String Is Transformable With Substring Sort Operations","difficulty":"Hard","description":"Given two strings s and t, you want to transform string s into string t using the following operation any number of times:\n\nChoose a non-empty substring in s and sort it in-place so the characters are in ascending order.\n\nFor example, applying the operation on the underlined substring in \"14234\" results in \"12344\".\n\nReturn true if it is possible to transform string s into string t. Otherwise, return false.\n\nA substring is a contiguous sequence of characters within a string.\n\n \n\nExample 1:\n\nInput: s = \"84532\", t = \"34852\"\nOutput: true\nExplanation: You can transform s into t using the following sort operations:\n\"84532\" (from index 2 to 3) -> \"84352\"\n\"84352\" (from index 0 to 2) -> \"34852\"\n\n\nExample 2:\n\nInput: s = \"34521\", t = \"23415\"\nOutput: true\nExplanation: You can transform s into t using the following sort operations:\n\"34521\" -> \"23451\"\n\"23451\" -> \"23415\"\n\n\nExample 3:\n\nInput: s = \"12345\", t = \"12435\"\nOutput: false\n\n\nExample 4:\n\nInput: s = \"1\", t = \"2\"\nOutput: false\n\n\n \n\nConstraints:\n\ns.length == t.length\n1 <= s.length <= 105\ns and t only contain digits from '0' to '9'."},{"index":"1588","url":"https://leetcode.com/problems/sum-of-all-odd-length-subarrays","title":"Sum of All Odd Length Subarrays","difficulty":"Easy","description":"Given an array of positive integers arr, calculate the sum of all possible odd-length subarrays.\n\nA subarray is a contiguous subsequence of the array.\n\nReturn the sum of all odd-length subarrays of arr.\n\n \n\nExample 1:\n\nInput: arr = [1,4,2,5,3]\nOutput: 58\nExplanation: The odd-length subarrays of arr and their sums are:\n[1] = 1\n[4] = 4\n[2] = 2\n[5] = 5\n[3] = 3\n[1,4,2] = 7\n[4,2,5] = 11\n[2,5,3] = 10\n[1,4,2,5,3] = 15\nIf we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58\n\nExample 2:\n\nInput: arr = [1,2]\nOutput: 3\nExplanation: There are only 2 subarrays of odd length, [1] and [2]. Their sum is 3.\n\nExample 3:\n\nInput: arr = [10,11,12]\nOutput: 66\n\n\n \n\nConstraints:\n\n1 <= arr.length <= 100\n1 <= arr[i] <= 1000"},{"index":"1589","url":"https://leetcode.com/problems/maximum-sum-obtained-of-any-permutation","title":"Maximum Sum Obtained of Any Permutation","difficulty":"Medium","description":"We have an array of integers, nums, and an array of requests where requests[i] = [starti, endi]. The ith request asks for the sum of nums[starti] + nums[starti + 1] + ... + nums[endi - 1] + nums[endi]. Both starti and endi are 0-indexed.\n\nReturn the maximum total sum of all requests among all permutations of nums.\n\nSince the answer may be too large, return it modulo 109 + 7.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,4,5], requests = [[1,3],[0,1]]\nOutput: 19\nExplanation: One permutation of nums is [2,1,3,4,5] with the following result: \nrequests[0] -> nums[1] + nums[2] + nums[3] = 1 + 3 + 4 = 8\nrequests[1] -> nums[0] + nums[1] = 2 + 1 = 3\nTotal sum: 8 + 3 = 11.\nA permutation with a higher total sum is [3,5,4,2,1] with the following result:\nrequests[0] -> nums[1] + nums[2] + nums[3] = 5 + 4 + 2 = 11\nrequests[1] -> nums[0] + nums[1] = 3 + 5  = 8\nTotal sum: 11 + 8 = 19, which is the best that you can do.\n\n\nExample 2:\n\nInput: nums = [1,2,3,4,5,6], requests = [[0,1]]\nOutput: 11\nExplanation: A permutation with the max total sum is [6,5,4,3,2,1] with request sums [11].\n\nExample 3:\n\nInput: nums = [1,2,3,4,5,10], requests = [[0,2],[1,3],[1,1]]\nOutput: 47\nExplanation: A permutation with the max total sum is [4,10,5,3,2,1] with request sums [19,18,10].\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 105\n0 <= nums[i] <= 105\n1 <= requests.length <= 105\nrequests[i].length == 2\n0 <= starti <= endi < n"},{"index":"1590","url":"https://leetcode.com/problems/make-sum-divisible-by-p","title":"Make Sum Divisible by P","difficulty":"Medium","description":"Given an array of positive integers nums, remove the smallest subarray (possibly empty) such that the sum of the remaining elements is divisible by p. It is not allowed to remove the whole array.\n\nReturn the length of the smallest subarray that you need to remove, or -1 if it's impossible.\n\nA subarray is defined as a contiguous block of elements in the array.\n\n \n\nExample 1:\n\nInput: nums = [3,1,4,2], p = 6\nOutput: 1\nExplanation: The sum of the elements in nums is 10, which is not divisible by 6. We can remove the subarray [4], and the sum of the remaining elements is 6, which is divisible by 6.\n\n\nExample 2:\n\nInput: nums = [6,3,5,2], p = 9\nOutput: 2\nExplanation: We cannot remove a single element to get a sum divisible by 9. The best way is to remove the subarray [5,2], leaving us with [6,3] with sum 9.\n\n\nExample 3:\n\nInput: nums = [1,2,3], p = 3\nOutput: 0\nExplanation: Here the sum is 6. which is already divisible by 3. Thus we do not need to remove anything.\n\n\nExample 4:\n\nInput: nums = [1,2,3], p = 7\nOutput: -1\nExplanation: There is no way to remove a subarray in order to get a sum divisible by 7.\n\n\nExample 5:\n\nInput: nums = [1000000000,1000000000,1000000000], p = 3\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 105\n1 <= nums[i] <= 109\n1 <= p <= 109"},{"index":"1591","url":"https://leetcode.com/problems/strange-printer-ii","title":"Strange Printer II","difficulty":"Hard","description":"There is a strange printer with the following two special requirements:\n\nOn each turn, the printer will print a solid rectangular pattern of a single color on the grid. This will cover up the existing colors in the rectangle.\nOnce the printer has used a color for the above operation, the same color cannot be used again.\n\nYou are given a m x n matrix targetGrid, where targetGrid[row][col] is the color in the position (row, col) of the grid.\n\nReturn true if it is possible to print the matrix targetGrid, otherwise, return false.\n\n \n\nExample 1:\n\nInput: targetGrid = [[1,1,1,1],[1,2,2,1],[1,2,2,1],[1,1,1,1]]\nOutput: true\n\n\nExample 2:\n\nInput: targetGrid = [[1,1,1,1],[1,1,3,3],[1,1,3,4],[5,5,1,4]]\nOutput: true\n\n\nExample 3:\n\nInput: targetGrid = [[1,2,1],[2,1,2],[1,2,1]]\nOutput: false\nExplanation: It is impossible to form targetGrid because it is not allowed to print the same color in different turns.\n\nExample 4:\n\nInput: targetGrid = [[1,1,1],[3,1,3]]\nOutput: false\n\n\n \n\nConstraints:\n\nm == targetGrid.length\nn == targetGrid[i].length\n1 <= m, n <= 60\n1 <= targetGrid[row][col] <= 60"},{"index":"1592","url":"https://leetcode.com/problems/rearrange-spaces-between-words","title":"Rearrange Spaces Between Words","difficulty":"Easy","description":"You are given a string text of words that are placed among some number of spaces. Each word consists of one or more lowercase English letters and are separated by at least one space. It's guaranteed that text contains at least one word.\n\nRearrange the spaces so that there is an equal number of spaces between every pair of adjacent words and that number is maximized. If you cannot redistribute all the spaces equally, place the extra spaces at the end, meaning the returned string should be the same length as text.\n\nReturn the string after rearranging the spaces.\n\n \n\nExample 1:\n\nInput: text = \"  this   is  a sentence \"\nOutput: \"this   is   a   sentence\"\nExplanation: There are a total of 9 spaces and 4 words. We can evenly divide the 9 spaces between the words: 9 / (4-1) = 3 spaces.\n\n\nExample 2:\n\nInput: text = \" practice   makes   perfect\"\nOutput: \"practice   makes   perfect \"\nExplanation: There are a total of 7 spaces and 3 words. 7 / (3-1) = 3 spaces plus 1 extra space. We place this extra space at the end of the string.\n\n\nExample 3:\n\nInput: text = \"hello   world\"\nOutput: \"hello   world\"\n\n\nExample 4:\n\nInput: text = \"  walks  udp package   into  bar a\"\nOutput: \"walks  udp  package  into  bar  a \"\n\n\nExample 5:\n\nInput: text = \"a\"\nOutput: \"a\"\n\n\n \n\nConstraints:\n\n1 <= text.length <= 100\ntext consists of lowercase English letters and ' '.\ntext contains at least one word."},{"index":"1593","url":"https://leetcode.com/problems/split-a-string-into-the-max-number-of-unique-substrings","title":"Split a String Into the Max Number of Unique Substrings","difficulty":"Medium","description":"Given a string s, return the maximum number of unique substrings that the given string can be split into.\n\nYou can split string s into any list of non-empty substrings, where the concatenation of the substrings forms the original string. However, you must split the substrings such that all of them are unique.\n\nA substring is a contiguous sequence of characters within a string.\n\n \n\nExample 1:\n\nInput: s = \"ababccc\"\nOutput: 5\nExplanation: One way to split maximally is ['a', 'b', 'ab', 'c', 'cc']. Splitting like ['a', 'b', 'a', 'b', 'c', 'cc'] is not valid as you have 'a' and 'b' multiple times.\n\n\nExample 2:\n\nInput: s = \"aba\"\nOutput: 2\nExplanation: One way to split maximally is ['a', 'ba'].\n\n\nExample 3:\n\nInput: s = \"aa\"\nOutput: 1\nExplanation: It is impossible to split the string any further.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 16\n\ns contains only lower case English letters."},{"index":"1594","url":"https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix","title":"Maximum Non Negative Product in a Matrix","difficulty":"Medium","description":"You are given a rows x cols matrix grid. Initially, you are located at the top-left corner (0, 0), and in each step, you can only move right or down in the matrix.\n\nAmong all possible paths starting from the top-left corner (0, 0) and ending in the bottom-right corner (rows - 1, cols - 1), find the path with the maximum non-negative product. The product of a path is the product of all integers in the grid cells visited along the path.\n\nReturn the maximum non-negative product modulo 109 + 7. If the maximum product is negative return -1.\n\nNotice that the modulo is performed after getting the maximum product.\n\n \n\nExample 1:\n\nInput: grid = [[-1,-2,-3],\n               [-2,-3,-3],\n               [-3,-3,-2]]\nOutput: -1\nExplanation: It's not possible to get non-negative product in the path from (0, 0) to (2, 2), so return -1.\n\n\nExample 2:\n\nInput: grid = [[1,-2,1],\n               [1,-2,1],\n               [3,-4,1]]\nOutput: 8\nExplanation: Maximum non-negative product is in bold (1 * 1 * -2 * -4 * 1 = 8).\n\n\nExample 3:\n\nInput: grid = [[1, 3],\n               [0,-4]]\nOutput: 0\nExplanation: Maximum non-negative product is in bold (1 * 0 * -4 = 0).\n\n\nExample 4:\n\nInput: grid = [[ 1, 4,4,0],\n               [-2, 0,0,1],\n               [ 1,-1,1,1]]\nOutput: 2\nExplanation: Maximum non-negative product is in bold (1 * -2 * 1 * -1 * 1 * 1 = 2).\n\n\n \n\nConstraints:\n\n1 <= rows, cols <= 15\n-4 <= grid[i][j] <= 4"},{"index":"1595","url":"https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points","title":"Minimum Cost to Connect Two Groups of Points","difficulty":"Hard","description":"You are given two groups of points where the first group has size1 points, the second group has size2 points, and size1 >= size2.\n\nThe cost of the connection between any two points are given in an size1 x size2 matrix where cost[i][j] is the cost of connecting point i of the first group and point j of the second group. The groups are connected if each point in both groups is connected to one or more points in the opposite group. In other words, each point in the first group must be connected to at least one point in the second group, and each point in the second group must be connected to at least one point in the first group.\n\nReturn the minimum cost it takes to connect the two groups.\n\n \n\nExample 1:\n\nInput: cost = [[15, 96], [36, 2]]\nOutput: 17\nExplanation: The optimal way of connecting the groups is:\n1--A\n2--B\nThis results in a total cost of 17.\n\n\nExample 2:\n\nInput: cost = [[1, 3, 5], [4, 1, 1], [1, 5, 3]]\nOutput: 4\nExplanation: The optimal way of connecting the groups is:\n1--A\n2--B\n2--C\n3--A\nThis results in a total cost of 4.\nNote that there are multiple points connected to point 2 in the first group and point A in the second group. This does not matter as there is no limit to the number of points that can be connected. We only care about the minimum total cost.\n\n\nExample 3:\n\nInput: cost = [[2, 5, 1], [3, 4, 7], [8, 1, 2], [6, 2, 4], [3, 8, 8]]\nOutput: 10\n\n\n \n\nConstraints:\n\nsize1 == cost.length\nsize2 == cost[i].length\n1 <= size1, size2 <= 12\nsize1 >= size2\n0 <= cost[i][j] <= 100"},{"index":"1598","url":"https://leetcode.com/problems/crawler-log-folder","title":"Crawler Log Folder","difficulty":"Easy","description":"The Leetcode file system keeps a log each time some user performs a change folder operation.\n\nThe operations are described below:\n\n\"../\" : Move to the parent folder of the current folder. (If you are already in the main folder, remain in the same folder).\n\"./\" : Remain in the same folder.\n\"x/\" : Move to the child folder named x (This folder is guaranteed to always exist).\n\nYou are given a list of strings logs where logs[i] is the operation performed by the user at the ith step.\n\nThe file system starts in the main folder, then the operations in logs are performed.\n\nReturn the minimum number of operations needed to go back to the main folder after the change folder operations.\n\n \n\nExample 1:\n\nInput: logs = [\"d1/\",\"d2/\",\"../\",\"d21/\",\"./\"]\nOutput: 2\nExplanation: Use this change folder operation \"../\" 2 times and go back to the main folder.\n\n\nExample 2:\n\nInput: logs = [\"d1/\",\"d2/\",\"./\",\"d3/\",\"../\",\"d31/\"]\nOutput: 3\n\n\nExample 3:\n\nInput: logs = [\"d1/\",\"../\",\"../\",\"../\"]\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= logs.length <= 103\n2 <= logs[i].length <= 10\nlogs[i] contains lowercase English letters, digits, '.', and '/'.\nlogs[i] follows the format described in the statement.\nFolder names consist of lowercase English letters and digits."},{"index":"1599","url":"https://leetcode.com/problems/maximum-profit-of-operating-a-centennial-wheel","title":"Maximum Profit of Operating a Centennial Wheel","difficulty":"Medium","description":"You are the operator of a Centennial Wheel that has four gondolas, and each gondola has room for up to four people. You have the ability to rotate the gondolas counterclockwise, which costs you runningCost dollars.\n\nYou are given an array customers of length n where customers[i] is the number of new customers arriving just before the ith rotation (0-indexed). This means you must rotate the wheel i times before the customers[i] customers arrive. You cannot make customers wait if there is room in the gondola. Each customer pays boardingCost dollars when they board on the gondola closest to the ground and will exit once that gondola reaches the ground again.\n\nYou can stop the wheel at any time, including before serving all customers. If you decide to stop serving customers, all subsequent rotations are free in order to get all the customers down safely. Note that if there are currently more than four customers waiting at the wheel, only four will board the gondola, and the rest will wait for the next rotation.\n\nReturn the minimum number of rotations you need to perform to maximize your profit. If there is no scenario where the profit is positive, return -1.\n\n \n\nExample 1:\n\nInput: customers = [8,3], boardingCost = 5, runningCost = 6\nOutput: 3\nExplanation: The numbers written on the gondolas are the number of people currently there.\n1. 8 customers arrive, 4 board and 4 wait for the next gondola, the wheel rotates. Current profit is 4 * $5 - 1 * $6 = $14.\n2. 3 customers arrive, the 4 waiting board the wheel and the other 3 wait, the wheel rotates. Current profit is 8 * $5 - 2 * $6 = $28.\n3. The final 3 customers board the gondola, the wheel rotates. Current profit is 11 * $5 - 3 * $6 = $37.\nThe highest profit was $37 after rotating the wheel 3 times.\n\nExample 2:\n\nInput: customers = [10,9,6], boardingCost = 6, runningCost = 4\nOutput: 7\nExplanation:\n1. 10 customers arrive, 4 board and 6 wait for the next gondola, the wheel rotates. Current profit is 4 * $6 - 1 * $4 = $20.\n2. 9 customers arrive, 4 board and 11 wait (2 originally waiting, 9 newly waiting), the wheel rotates. Current profit is 8 * $6 - 2 * $4 = $40.\n3. The final 6 customers arrive, 4 board and 13 wait, the wheel rotates. Current profit is 12 * $6 - 3 * $4 = $60.\n4. 4 board and 9 wait, the wheel rotates. Current profit is 16 * $6 - 4 * $4 = $80.\n5. 4 board and 5 wait, the wheel rotates. Current profit is 20 * $6 - 5 * $4 = $100.\n6. 4 board and 1 waits, the wheel rotates. Current profit is 24 * $6 - 6 * $4 = $120.\n7. 1 boards, the wheel rotates. Current profit is 25 * $6 - 7 * $4 = $122.\nThe highest profit was $122 after rotating the wheel 7 times.\n\n\n\nExample 3:\n\nInput: customers = [3,4,0,5,1], boardingCost = 1, runningCost = 92\nOutput: -1\nExplanation:\n1. 3 customers arrive, 3 board and 0 wait, the wheel rotates. Current profit is 3 * $1 - 1 * $92 = -$89.\n2. 4 customers arrive, 4 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 2 * $92 = -$177.\n3. 0 customers arrive, 0 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 3 * $92 = -$269.\n4. 5 customers arrive, 4 board and 1 waits, the wheel rotates. Current profit is 11 * $1 - 4 * $92 = -$357.\n5. 1 customer arrives, 2 board and 0 wait, the wheel rotates. Current profit is 13 * $1 - 5 * $92 = -$447.\nThe profit was never positive, so return -1.\n\n\nExample 4:\n\nInput: customers = [10,10,6,4,7], boardingCost = 3, runningCost = 8\nOutput: 9\nExplanation:\n1. 10 customers arrive, 4 board and 6 wait, the wheel rotates. Current profit is 4 * $3 - 1 * $8 = $4.\n2. 10 customers arrive, 4 board and 12 wait, the wheel rotates. Current profit is 8 * $3 - 2 * $8 = $8.\n3. 6 customers arrive, 4 board and 14 wait, the wheel rotates. Current profit is 12 * $3 - 3 * $8 = $12.\n4. 4 customers arrive, 4 board and 14 wait, the wheel rotates. Current profit is 16 * $3 - 4 * $8 = $16.\n5. 7 customers arrive, 4 board and 17 wait, the wheel rotates. Current profit is 20 * $3 - 5 * $8 = $20.\n6. 4 board and 13 wait, the wheel rotates. Current profit is 24 * $3 - 6 * $8 = $24.\n7. 4 board and 9 wait, the wheel rotates. Current profit is 28 * $3 - 7 * $8 = $28.\n8. 4 board and 5 wait, the wheel rotates. Current profit is 32 * $3 - 8 * $8 = $32.\n9. 4 board and 1 waits, the wheel rotates. Current profit is 36 * $3 - 9 * $8 = $36.\n10. 1 board and 0 wait, the wheel rotates. Current profit is 37 * $3 - 10 * $8 = $31.\nThe highest profit was $36 after rotating the wheel 9 times.\n\n\n \n\nConstraints:\n\nn == customers.length\n1 <= n <= 105\n0 <= customers[i] <= 50\n1 <= boardingCost, runningCost <= 100"},{"index":"1600","url":"https://leetcode.com/problems/throne-inheritance","title":"Throne Inheritance","difficulty":"Medium","description":"A kingdom consists of a king, his children, his grandchildren, and so on. Every once in a while, someone in the family dies or a child is born.\n\nThe kingdom has a well-defined order of inheritance that consists of the king as the first member. Let's define the recursive function Successor(x, curOrder), which given a person x and the inheritance order so far, returns who should be the next person after x in the order of inheritance.\n\nSuccessor(x, curOrder):\n    if x has no children or all of x's children are in curOrder:\n        if x is the king return null\n        else return Successor(x's parent, curOrder)\n    else return x's oldest child who's not in curOrder\n\n\nFor example, assume we have a kingdom that consists of the king, his children Alice and Bob (Alice is older than Bob), and finally Alice's son Jack.\n\nIn the beginning, curOrder will be [\"king\"].\nCalling Successor(king, curOrder) will return Alice, so we append to curOrder to get [\"king\", \"Alice\"].\nCalling Successor(Alice, curOrder) will return Jack, so we append to curOrder to get [\"king\", \"Alice\", \"Jack\"].\nCalling Successor(Jack, curOrder) will return Bob, so we append to curOrder to get [\"king\", \"Alice\", \"Jack\", \"Bob\"].\nCalling Successor(Bob, curOrder) will return null. Thus the order of inheritance will be [\"king\", \"Alice\", \"Jack\", \"Bob\"].\n\nUsing the above function, we can always obtain a unique order of inheritance.\n\nImplement the ThroneInheritance class:\n\nThroneInheritance(string kingName) Initializes an object of the ThroneInheritance class. The name of the king is given as part of the constructor.\nvoid birth(string parentName, string childName) Indicates that parentName gave birth to childName.\nvoid death(string name) Indicates the death of name. The death of the person doesn't affect the Successor function nor the current inheritance order. You can treat it as just marking the person as dead.\nstring[] getInheritanceOrder() Returns a list representing the current order of inheritance excluding dead people.\n\n \n\nExample 1:\n\nInput\n[\"ThroneInheritance\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"getInheritanceOrder\", \"death\", \"getInheritanceOrder\"]\n[[\"king\"], [\"king\", \"andy\"], [\"king\", \"bob\"], [\"king\", \"catherine\"], [\"andy\", \"matthew\"], [\"bob\", \"alex\"], [\"bob\", \"asha\"], [null], [\"bob\"], [null]]\nOutput\n[null, null, null, null, null, null, null, [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"], null, [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]]\n\nExplanation\nThroneInheritance t= new ThroneInheritance(\"king\"); // order: king\nt.birth(\"king\", \"andy\"); // order: king > andy\nt.birth(\"king\", \"bob\"); // order: king > andy > bob\nt.birth(\"king\", \"catherine\"); // order: king > andy > bob > catherine\nt.birth(\"andy\", \"matthew\"); // order: king > andy > matthew > bob > catherine\nt.birth(\"bob\", \"alex\"); // order: king > andy > matthew > bob > alex > catherine\nt.birth(\"bob\", \"asha\"); // order: king > andy > matthew > bob > alex > asha > catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"]\nt.death(\"bob\"); // order: king > andy > matthew > bob > alex > asha > catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]\n\n\n \n\nConstraints:\n\n1 <= kingName.length, parentName.length, childName.length, name.length <= 15\nkingName, parentName, childName, and name consist of lowercase English letters only.\nAll arguments childName and kingName are distinct.\nAll name arguments of death will be passed to either the constructor or as childName to birth first.\nFor each call to birth(parentName, childName), it is guaranteed that parentName is alive.\nAt most 105 calls will be made to birth and death.\nAt most 10 calls will be made to getInheritanceOrder."},{"index":"1601","url":"https://leetcode.com/problems/maximum-number-of-achievable-transfer-requests","title":"Maximum Number of Achievable Transfer Requests","difficulty":"Hard","description":"We have n buildings numbered from 0 to n - 1. Each building has a number of employees. It's transfer season, and some employees want to change the building they reside in.\n\nYou are given an array requests where requests[i] = [fromi, toi] represents an employee's request to transfer from building fromi to building toi.\n\nAll buildings are full, so a list of requests is achievable only if for each building, the net change in employee transfers is zero. This means the number of employees leaving is equal to the number of employees moving in. For example if n = 3 and two employees are leaving building 0, one is leaving building 1, and one is leaving building 2, there should be two employees moving to building 0, one employee moving to building 1, and one employee moving to building 2.\n\nReturn the maximum number of achievable requests.\n\n \n\nExample 1:\n\nInput: n = 5, requests = [[0,1],[1,0],[0,1],[1,2],[2,0],[3,4]]\nOutput: 5\nExplantion: Let's see the requests:\nFrom building 0 we have employees x and y and both want to move to building 1.\nFrom building 1 we have employees a and b and they want to move to buildings 2 and 0 respectively.\nFrom building 2 we have employee z and they want to move to building 0.\nFrom building 3 we have employee c and they want to move to building 4.\nFrom building 4 we don't have any requests.\nWe can achieve the requests of users x and b by swapping their places.\nWe can achieve the requests of users y, a and z by swapping the places in the 3 buildings.\n\n\nExample 2:\n\nInput: n = 3, requests = [[0,0],[1,2],[2,1]]\nOutput: 3\nExplantion: Let's see the requests:\nFrom building 0 we have employee x and they want to stay in the same building 0.\nFrom building 1 we have employee y and they want to move to building 2.\nFrom building 2 we have employee z and they want to move to building 1.\nWe can achieve all the requests. \n\nExample 3:\n\nInput: n = 4, requests = [[0,3],[3,1],[1,2],[2,0]]\nOutput: 4\n\n\n \n\nConstraints:\n\n1 <= n <= 20\n1 <= requests.length <= 16\nrequests[i].length == 2\n0 <= fromi, toi < n"},{"index":"1603","url":"https://leetcode.com/problems/design-parking-system","title":"Design Parking System","difficulty":"Easy","description":"Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.\n\nImplement the ParkingSystem class:\n\nParkingSystem(int big, int medium, int small) Initializes object of the ParkingSystem class. The number of slots for each parking space are given as part of the constructor.\nbool addCar(int carType) Checks whether there is a parking space of carType for the car that wants to get into the parking lot. carType can be of three kinds: big, medium, or small, which are represented by 1, 2, and 3 respectively. A car can only park in a parking space of its carType. If there is no space available, return false, else park the car in that size space and return true.\n\n \n\nExample 1:\n\nInput\n[\"ParkingSystem\", \"addCar\", \"addCar\", \"addCar\", \"addCar\"]\n[[1, 1, 0], [1], [2], [3], [1]]\nOutput\n[null, true, true, false, false]\n\nExplanation\nParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);\nparkingSystem.addCar(1); // return true because there is 1 available slot for a big car\nparkingSystem.addCar(2); // return true because there is 1 available slot for a medium car\nparkingSystem.addCar(3); // return false because there is no available slot for a small car\nparkingSystem.addCar(1); // return false because there is no available slot for a big car. It is already occupied.\n\n\n \n\nConstraints:\n\n0 <= big, medium, small <= 1000\ncarType is 1, 2, or 3\nAt most 1000 calls will be made to addCar"},{"index":"1604","url":"https://leetcode.com/problems/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period","title":"Alert Using Same Key-Card Three or More Times in a One Hour Period","difficulty":"Medium","description":"LeetCode company workers use key-cards to unlock office doors. Each time a worker uses their key-card, the security system saves the worker's name and the time when it was used. The system emits an alert if any worker uses the key-card three or more times in a one-hour period.\n\nYou are given a list of strings keyName and keyTime where [keyName[i], keyTime[i]] corresponds to a person's name and the time when their key-card was used in a single day.\n\nAccess times are given in the 24-hour time format \"HH:MM\", such as \"23:51\" and \"09:49\".\n\nReturn a list of unique worker names who received an alert for frequent keycard use. Sort the names in ascending order alphabetically.\n\nNotice that \"10:00\" - \"11:00\" is considered to be within a one-hour period, while \"22:51\" - \"23:52\" is not considered to be within a one-hour period.\n\n \n\nExample 1:\n\nInput: keyName = [\"daniel\",\"daniel\",\"daniel\",\"luis\",\"luis\",\"luis\",\"luis\"], keyTime = [\"10:00\",\"10:40\",\"11:00\",\"09:00\",\"11:00\",\"13:00\",\"15:00\"]\nOutput: [\"daniel\"]\nExplanation: \"daniel\" used the keycard 3 times in a one-hour period (\"10:00\",\"10:40\", \"11:00\").\n\n\nExample 2:\n\nInput: keyName = [\"alice\",\"alice\",\"alice\",\"bob\",\"bob\",\"bob\",\"bob\"], keyTime = [\"12:01\",\"12:00\",\"18:00\",\"21:00\",\"21:20\",\"21:30\",\"23:00\"]\nOutput: [\"bob\"]\nExplanation: \"bob\" used the keycard 3 times in a one-hour period (\"21:00\",\"21:20\", \"21:30\").\n\n\nExample 3:\n\nInput: keyName = [\"john\",\"john\",\"john\"], keyTime = [\"23:58\",\"23:59\",\"00:01\"]\nOutput: []\n\n\nExample 4:\n\nInput: keyName = [\"leslie\",\"leslie\",\"leslie\",\"clare\",\"clare\",\"clare\",\"clare\"], keyTime = [\"13:00\",\"13:20\",\"14:00\",\"18:00\",\"18:51\",\"19:30\",\"19:49\"]\nOutput: [\"clare\",\"leslie\"]\n\n\n \n\nConstraints:\n\n1 <= keyName.length, keyTime.length <= 105\nkeyName.length == keyTime.length\nkeyTime[i] is in the format \"HH:MM\".\n[keyName[i], keyTime[i]] is unique.\n1 <= keyName[i].length <= 10\nkeyName[i] contains only lowercase English letters."},{"index":"1605","url":"https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums","title":"Find Valid Matrix Given Row and Column Sums","difficulty":"Medium","description":"You are given two arrays rowSum and colSum of non-negative integers where rowSum[i] is the sum of the elements in the ith row and colSum[j] is the sum of the elements of the jth column of a 2D matrix. In other words, you do not know the elements of the matrix, but you do know the sums of each row and column.\n\nFind any matrix of non-negative integers of size rowSum.length x colSum.length that satisfies the rowSum and colSum requirements.\n\nReturn a 2D array representing any matrix that fulfills the requirements. It's guaranteed that at least one matrix that fulfills the requirements exists.\n\n \n\nExample 1:\n\nInput: rowSum = [3,8], colSum = [4,7]\nOutput: [[3,0],\n         [1,7]]\nExplanation:\n0th row: 3 + 0 = 0 == rowSum[0]\n1st row: 1 + 7 = 8 == rowSum[1]\n0th column: 3 + 1 = 4 == colSum[0]\n1st column: 0 + 7 = 7 == colSum[1]\nThe row and column sums match, and all matrix elements are non-negative.\nAnother possible matrix is: [[1,2],\n                             [3,5]]\n\n\nExample 2:\n\nInput: rowSum = [5,7,10], colSum = [8,6,8]\nOutput: [[0,5,0],\n         [6,1,0],\n         [2,0,8]]\n\n\nExample 3:\n\nInput: rowSum = [14,9], colSum = [6,9,8]\nOutput: [[0,9,5],\n         [6,0,3]]\n\n\nExample 4:\n\nInput: rowSum = [1,0], colSum = [1]\nOutput: [[1],\n         [0]]\n\n\nExample 5:\n\nInput: rowSum = [0], colSum = [0]\nOutput: [[0]]\n\n\n \n\nConstraints:\n\n1 <= rowSum.length, colSum.length <= 500\n0 <= rowSum[i], colSum[i] <= 108\nsum(rows) == sum(columns)"},{"index":"1606","url":"https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests","title":"Find Servers That Handled Most Number of Requests","difficulty":"Hard","description":"You have k servers numbered from 0 to k-1 that are being used to handle multiple requests simultaneously. Each server has infinite computational capacity but cannot handle more than one request at a time. The requests are assigned to servers according to a specific algorithm:\n\nThe ith (0-indexed) request arrives.\nIf all servers are busy, the request is dropped (not handled at all).\nIf the (i % k)th server is available, assign the request to that server.\nOtherwise, assign the request to the next available server (wrapping around the list of servers and starting from 0 if necessary). For example, if the ith server is busy, try to assign the request to the (i+1)th server, then the (i+2)th server, and so on.\n\nYou are given a strictly increasing array arrival of positive integers, where arrival[i] represents the arrival time of the ith request, and another array load, where load[i] represents the load of the ith request (the time it takes to complete). Your goal is to find the busiest server(s). A server is considered busiest if it handled the most number of requests successfully among all the servers.\n\nReturn a list containing the IDs (0-indexed) of the busiest server(s). You may return the IDs in any order.\n\n \n\nExample 1:\n\nInput: k = 3, arrival = [1,2,3,4,5], load = [5,2,3,3,3] \nOutput: [1] \nExplanation:\nAll of the servers start out available.\nThe first 3 requests are handled by the first 3 servers in order.\nRequest 3 comes in. Server 0 is busy, so it's assigned to the next available server, which is 1.\nRequest 4 comes in. It cannot be handled since all servers are busy, so it is dropped.\nServers 0 and 2 handled one request each, while server 1 handled two requests. Hence server 1 is the busiest server.\n\n\nExample 2:\n\nInput: k = 3, arrival = [1,2,3,4], load = [1,2,1,2]\nOutput: [0]\nExplanation:\nThe first 3 requests are handled by first 3 servers.\nRequest 3 comes in. It is handled by server 0 since the server is available.\nServer 0 handled two requests, while servers 1 and 2 handled one request each. Hence server 0 is the busiest server.\n\n\nExample 3:\n\nInput: k = 3, arrival = [1,2,3], load = [10,12,11]\nOutput: [0,1,2]\nExplanation: Each server handles a single request, so they are all considered the busiest.\n\n\nExample 4:\n\nInput: k = 3, arrival = [1,2,3,4,8,9,10], load = [5,2,10,3,1,2,2]\nOutput: [1]\n\n\nExample 5:\n\nInput: k = 1, arrival = [1], load = [1]\nOutput: [0]\n\n\n \n\nConstraints:\n\n1 <= k <= 105\n1 <= arrival.length, load.length <= 105\narrival.length == load.length\n1 <= arrival[i], load[i] <= 109\narrival is strictly increasing."},{"index":"1608","url":"https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x","title":"Special Array With X Elements Greater Than or Equal X","difficulty":"Easy","description":"You are given an array nums of non-negative integers. nums is considered special if there exists a number x such that there are exactly x numbers in nums that are greater than or equal to x.\n\nNotice that x does not have to be an element in nums.\n\nReturn x if the array is special, otherwise, return -1. It can be proven that if nums is special, the value for x is unique.\n\n \n\nExample 1:\n\nInput: nums = [3,5]\nOutput: 2\nExplanation: There are 2 values (3 and 5) that are greater than or equal to 2.\n\n\nExample 2:\n\nInput: nums = [0,0]\nOutput: -1\nExplanation: No numbers fit the criteria for x.\nIf x = 0, there should be 0 numbers >= x, but there are 2.\nIf x = 1, there should be 1 number >= x, but there are 0.\nIf x = 2, there should be 2 numbers >= x, but there are 0.\nx cannot be greater since there are only 2 numbers in nums.\n\n\nExample 3:\n\nInput: nums = [0,4,3,0,4]\nOutput: 3\nExplanation: There are 3 values that are greater than or equal to 3.\n\n\nExample 4:\n\nInput: nums = [3,6,7,7,0]\nOutput: -1\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n0 <= nums[i] <= 1000"},{"index":"1609","url":"https://leetcode.com/problems/even-odd-tree","title":"Even Odd Tree","difficulty":"Medium","description":"A binary tree is named Even-Odd if it meets the following conditions:\n\nThe root of the binary tree is at level index 0, its children are at level index 1, their children are at level index 2, etc.\nFor every even-indexed level, all nodes at the level have odd integer values in strictly increasing order (from left to right).\nFor every odd-indexed level, all nodes at the level have even integer values in strictly decreasing order (from left to right).\n\nGiven the root of a binary tree, return true if the binary tree is Even-Odd, otherwise return false.\n\n \n\nExample 1:\n\nInput: root = [1,10,4,3,null,7,9,12,8,6,null,null,2]\nOutput: true\nExplanation: The node values on each level are:\nLevel 0: [1]\nLevel 1: [10,4]\nLevel 2: [3,7,9]\nLevel 3: [12,8,6,2]\nSince levels 0 and 2 are all odd and increasing, and levels 1 and 3 are all even and decreasing, the tree is Even-Odd.\n\n\nExample 2:\n\nInput: root = [5,4,2,3,3,7]\nOutput: false\nExplanation: The node values on each level are:\nLevel 0: [5]\nLevel 1: [4,2]\nLevel 2: [3,3,7]\nNode values in the level 2 must be in strictly increasing order, so the tree is not Even-Odd.\n\n\nExample 3:\n\nInput: root = [5,9,1,3,5,7]\nOutput: false\nExplanation: Node values in the level 1 should be even integers.\n\n\nExample 4:\n\nInput: root = [1]\nOutput: true\n\n\nExample 5:\n\nInput: root = [11,8,6,1,3,9,11,30,20,18,16,12,10,4,2,17]\nOutput: true\n\n\n \n\nConstraints:\n\nThe number of nodes in the tree is in the range [1, 105].\n1 <= Node.val <= 106"},{"index":"1610","url":"https://leetcode.com/problems/maximum-number-of-visible-points","title":"Maximum Number of Visible Points","difficulty":"Hard","description":"You are given an array points, an integer angle, and your location, where location = [posx, posy] and points[i] = [xi, yi] both denote integral coordinates on the X-Y plane.\n\nInitially, you are facing directly east from your position. You cannot move from your position, but you can rotate. In other words, posx and posy cannot be changed. Your field of view in degrees is represented by angle, determining how wide you can see from any given view direction. Let d be the amount in degrees that you rotate counterclockwise. Then, your field of view is the inclusive range of angles [d - angle/2, d + angle/2].\n\nYou can see some set of points if, for each point, the angle formed by the point, your position, and the immediate east direction from your position is in your field of view.\n\nThere can be multiple points at one coordinate. There may be points at your location, and you can always see these points regardless of your rotation. Points do not obstruct your vision to other points.\n\nReturn the maximum number of points you can see.\n\n \n\nExample 1:\n\nInput: points = [[2,1],[2,2],[3,3]], angle = 90, location = [1,1]\nOutput: 3\nExplanation: The shaded region represents your field of view. All points can be made visible in your field of view, including [3,3] even though [2,2] is in front and in the same line of sight.\n\n\nExample 2:\n\nInput: points = [[2,1],[2,2],[3,4],[1,1]], angle = 90, location = [1,1]\nOutput: 4\nExplanation: All points can be made visible in your field of view, including the one at your location.\n\n\nExample 3:\n\nInput: points = [[1,0],[2,1]], angle = 13, location = [1,1]\nOutput: 1\nExplanation: You can only see one of the two points, as shown above.\n\n\n \n\nConstraints:\n\n1 <= points.length <= 105\npoints[i].length == 2\nlocation.length == 2\n0 <= angle < 360\n0 <= posx, posy, xi, yi <= 109"},{"index":"1611","url":"https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero","title":"Minimum One Bit Operations to Make Integers Zero","difficulty":"Hard","description":"Given an integer n, you must transform it into 0 using the following operations any number of times:\n\nChange the rightmost (0th) bit in the binary representation of n.\nChange the ith bit in the binary representation of n if the (i-1)th bit is set to 1 and the (i-2)th through 0th bits are set to 0.\n\nReturn the minimum number of operations to transform n into 0.\n\n \n\nExample 1:\n\nInput: n = 0\nOutput: 0\n\n\nExample 2:\n\nInput: n = 3\nOutput: 2\nExplanation: The binary representation of 3 is \"11\".\n\"11\" -> \"01\" with the 2nd operation since the 0th bit is 1.\n\"01\" -> \"00\" with the 1st operation.\n\n\nExample 3:\n\nInput: n = 6\nOutput: 4\nExplanation: The binary representation of 6 is \"110\".\n\"110\" -> \"010\" with the 2nd operation since the 1st bit is 1 and 0th through 0th bits are 0.\n\"010\" -> \"011\" with the 1st operation.\n\"011\" -> \"001\" with the 2nd operation since the 0th bit is 1.\n\"001\" -> \"000\" with the 1st operation.\n\n\nExample 4:\n\nInput: n = 9\nOutput: 14\n\n\nExample 5:\n\nInput: n = 333\nOutput: 393\n\n\n \n\nConstraints:\n\n0 <= n <= 109"},{"index":"1614","url":"https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses","title":"Maximum Nesting Depth of the Parentheses","difficulty":"Easy","description":"A string is a valid parentheses string (denoted VPS) if it meets one of the following:\n\nIt is an empty string \"\", or a single character not equal to \"(\" or \")\",\nIt can be written as AB (A concatenated with B), where A and B are VPS's, or\nIt can be written as (A), where A is a VPS.\n\nWe can similarly define the nesting depth depth(S) of any VPS S as follows:\n\ndepth(\"\") = 0\ndepth(C) = 0, where C is a string with a single character not equal to \"(\" or \")\".\ndepth(A + B) = max(depth(A), depth(B)), where A and B are VPS's.\ndepth(\"(\" + A + \")\") = 1 + depth(A), where A is a VPS.\n\nFor example, \"\", \"()()\", and \"()(()())\" are VPS's (with nesting depths 0, 1, and 2), and \")(\" and \"(()\" are not VPS's.\n\nGiven a VPS represented as string s, return the nesting depth of s.\n\n \n\nExample 1:\n\nInput: s = \"(1+(2*3)+((8)/4))+1\"\nOutput: 3\nExplanation: Digit 8 is inside of 3 nested parentheses in the string.\n\n\nExample 2:\n\nInput: s = \"(1)+((2))+(((3)))\"\nOutput: 3\n\n\nExample 3:\n\nInput: s = \"1+(2*3)/(2-1)\"\nOutput: 1\n\n\nExample 4:\n\nInput: s = \"1\"\nOutput: 0\n\n\n \n\nConstraints:\n\n1 <= s.length <= 100\ns consists of digits 0-9 and characters '+', '-', '*', '/', '(', and ')'.\nIt is guaranteed that parentheses expression s is a VPS."},{"index":"1615","url":"https://leetcode.com/problems/maximal-network-rank","title":"Maximal Network Rank","difficulty":"Medium","description":"There is an infrastructure of n cities with some number of roads connecting these cities. Each roads[i] = [ai, bi] indicates that there is a bidirectional road between cities ai and bi.\n\nThe network rank of two different cities is defined as the total number of directly connected roads to either city. If a road is directly connected to both cities, it is only counted once.\n\nThe maximal network rank of the infrastructure is the maximum network rank of all pairs of different cities.\n\nGiven the integer n and the array roads, return the maximal network rank of the entire infrastructure.\n\n \n\nExample 1:\n\nInput: n = 4, roads = [[0,1],[0,3],[1,2],[1,3]]\nOutput: 4\nExplanation: The network rank of cities 0 and 1 is 4 as there are 4 roads that are connected to either 0 or 1. The road between 0 and 1 is only counted once.\n\n\nExample 2:\n\nInput: n = 5, roads = [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]\nOutput: 5\nExplanation: There are 5 roads that are connected to cities 1 or 2.\n\n\nExample 3:\n\nInput: n = 8, roads = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]\nOutput: 5\nExplanation: The network rank of 2 and 5 is 5. Notice that all the cities do not have to be connected.\n\n\n \n\nConstraints:\n\n2 <= n <= 100\n0 <= roads.length <= n * (n - 1) / 2\nroads[i].length == 2\n0 <= ai, bi <= n-1\nai != bi\nEach pair of cities has at most one road connecting them."},{"index":"1616","url":"https://leetcode.com/problems/split-two-strings-to-make-palindrome","title":"Split Two Strings to Make Palindrome","difficulty":"Medium","description":"You are given two strings a and b of the same length. Choose an index and split both strings at the same index, splitting a into two strings: aprefix and asuffix where a = aprefix + asuffix, and splitting b into two strings: bprefix and bsuffix where b = bprefix + bsuffix. Check if aprefix + bsuffix or bprefix + asuffix forms a palindrome.\n\nWhen you split a string s into sprefix and ssuffix, either ssuffix or sprefix is allowed to be empty. For example, if s = \"abc\", then \"\" + \"abc\", \"a\" + \"bc\", \"ab\" + \"c\" , and \"abc\" + \"\" are valid splits.\n\nReturn true if it is possible to form a palindrome string, otherwise return false.\n\nNotice that x + y denotes the concatenation of strings x and y.\n\n \n\nExample 1:\n\nInput: a = \"x\", b = \"y\"\nOutput: true\nExplaination: If either a or b are palindromes the answer is true since you can split in the following way:\naprefix = \"\", asuffix = \"x\"\nbprefix = \"\", bsuffix = \"y\"\nThen, aprefix + bsuffix = \"\" + \"y\" = \"y\", which is a palindrome.\n\n\nExample 2:\n\nInput: a = \"abdef\", b = \"fecab\"\nOutput: true\n\n\nExample 3:\n\nInput: a = \"ulacfd\", b = \"jizalu\"\nOutput: true\nExplaination: Split them at index 3:\naprefix = \"ula\", asuffix = \"cfd\"\nbprefix = \"jiz\", bsuffix = \"alu\"\nThen, aprefix + bsuffix = \"ula\" + \"alu\" = \"ulaalu\", which is a palindrome.\n\n\nExample 4:\n\nInput: a = \"xbdef\", b = \"xecab\"\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= a.length, b.length <= 105\na.length == b.length\na and b consist of lowercase English letters"},{"index":"1617","url":"https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities","title":"Count Subtrees With Max Distance Between Cities","difficulty":"Hard","description":"There are n cities numbered from 1 to n. You are given an array edges of size n-1, where edges[i] = [ui, vi] represents a bidirectional edge between cities ui and vi. There exists a unique path between each pair of cities. In other words, the cities form a tree.\n\nA subtree is a subset of cities where every city is reachable from every other city in the subset, where the path between each pair passes through only the cities from the subset. Two subtrees are different if there is a city in one subtree that is not present in the other.\n\nFor each d from 1 to n-1, find the number of subtrees in which the maximum distance between any two cities in the subtree is equal to d.\n\nReturn an array of size n-1 where the dth element (1-indexed) is the number of subtrees in which the maximum distance between any two cities is equal to d.\n\nNotice that the distance between the two cities is the number of edges in the path between them.\n\n \n\nExample 1:\n\nInput: n = 4, edges = [[1,2],[2,3],[2,4]]\nOutput: [3,4,0]\nExplanation:\nThe subtrees with subsets {1,2}, {2,3} and {2,4} have a max distance of 1.\nThe subtrees with subsets {1,2,3}, {1,2,4}, {2,3,4} and {1,2,3,4} have a max distance of 2.\nNo subtree has two nodes where the max distance between them is 3.\n\n\nExample 2:\n\nInput: n = 2, edges = [[1,2]]\nOutput: [1]\n\n\nExample 3:\n\nInput: n = 3, edges = [[1,2],[2,3]]\nOutput: [2,1]\n\n\n \n\nConstraints:\n\n2 <= n <= 15\nedges.length == n-1\nedges[i].length == 2\n1 <= ui, vi <= n\nAll pairs (ui, vi) are distinct."},{"index":"1619","url":"https://leetcode.com/problems/mean-of-array-after-removing-some-elements","title":"Mean of Array After Removing Some Elements","difficulty":"Easy","description":"Given an integer array arr, return the mean of the remaining integers after removing the smallest 5% and the largest 5% of the elements.\n\nAnswers within 10-5 of the actual answer will be considered accepted.\n\n \n\nExample 1:\n\nInput: arr = [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3]\nOutput: 2.00000\nExplanation: After erasing the minimum and the maximum values of this array, all elements are equal to 2, so the mean is 2.\n\n\nExample 2:\n\nInput: arr = [6,2,7,5,1,2,0,3,10,2,5,0,5,5,0,8,7,6,8,0]\nOutput: 4.00000\n\n\nExample 3:\n\nInput: arr = [6,0,7,0,7,5,7,8,3,4,0,7,8,1,6,8,1,1,2,4,8,1,9,5,4,3,8,5,10,8,6,6,1,0,6,10,8,2,3,4]\nOutput: 4.77778\n\n\nExample 4:\n\nInput: arr = [9,7,8,7,7,8,4,4,6,8,8,7,6,8,8,9,2,6,0,0,1,10,8,6,3,3,5,1,10,9,0,7,10,0,10,4,1,10,6,9,3,6,0,0,2,7,0,6,7,2,9,7,7,3,0,1,6,1,10,3]\nOutput: 5.27778\n\n\nExample 5:\n\nInput: arr = [4,8,4,10,0,7,1,3,7,8,8,3,4,1,6,2,1,1,8,0,9,8,0,3,9,10,3,10,1,10,7,3,2,1,4,9,10,7,6,4,0,8,5,1,2,1,6,2,5,0,7,10,9,10,3,7,10,5,8,5,7,6,7,6,10,9,5,10,5,5,7,2,10,7,7,8,2,0,1,1]\nOutput: 5.29167\n\n\n \n\nConstraints:\n\n20 <= arr.length <= 1000\narr.length is a multiple of 20.\n0 <= arr[i] <= 105"},{"index":"1620","url":"https://leetcode.com/problems/coordinate-with-maximum-network-quality","title":"Coordinate With Maximum Network Quality","difficulty":"Medium","description":"You are given an array of network towers towers and an integer radius, where towers[i] = [xi, yi, qi] denotes the ith network tower with location (xi, yi) and quality factor qi. All the coordinates are integral coordinates on the X-Y plane, and the distance between two coordinates is the Euclidean distance.\n\nThe integer radius denotes the maximum distance in which the tower is reachable. The tower is reachable if the distance is less than or equal to radius. Outside that distance, the signal becomes garbled, and the tower is not reachable.\n\nThe signal quality of the ith tower at a coordinate (x, y) is calculated with the formula ⌊qi / (1 + d)⌋, where d is the distance between the tower and the coordinate. The network quality at a coordinate is the sum of the signal qualities from all the reachable towers.\n\nReturn the integral coordinate where the network quality is maximum. If there are multiple coordinates with the same network quality, return the lexicographically minimum coordinate.\n\nNote:\n\nA coordinate (x1, y1) is lexicographically smaller than (x2, y2) if either x1 < x2 or x1 == x2 and y1 < y2.\n⌊val⌋ is the greatest integer less than or equal to val (the floor function).\n\n \n\nExample 1:\n\nInput: towers = [[1,2,5],[2,1,7],[3,1,9]], radius = 2\nOutput: [2,1]\nExplanation: \nAt coordinate (2, 1) the total quality is 13\n- Quality of 7 from (2, 1) results in ⌊7 / (1 + sqrt(0)⌋ = ⌊7⌋ = 7\n- Quality of 5 from (1, 2) results in ⌊5 / (1 + sqrt(2)⌋ = ⌊2.07⌋ = 2\n- Quality of 9 from (3, 1) results in ⌊9 / (1 + sqrt(1)⌋ = ⌊4.5⌋ = 4\nNo other coordinate has higher quality.\n\nExample 2:\n\nInput: towers = [[23,11,21]], radius = 9\nOutput: [23,11]\n\n\nExample 3:\n\nInput: towers = [[1,2,13],[2,1,7],[0,1,9]], radius = 2\nOutput: [1,2]\n\n\nExample 4:\n\nInput: towers = [[2,1,9],[0,1,9]], radius = 2\nOutput: [0,1]\nExplanation: Both (0, 1) and (2, 1) are optimal in terms of quality but (0, 1) is lexicograpically minimal.\n\n\n \n\nConstraints:\n\n1 <= towers.length <= 50\ntowers[i].length == 3\n0 <= xi, yi, qi <= 50\n1 <= radius <= 50"},{"index":"1621","url":"https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments","title":"Number of Sets of K Non-Overlapping Line Segments","difficulty":"Medium","description":"Given n points on a 1-D plane, where the ith point (from 0 to n-1) is at x = i, find the number of ways we can draw exactly k non-overlapping line segments such that each segment covers two or more points. The endpoints of each segment must have integral coordinates. The k line segments do not have to cover all n points, and they are allowed to share endpoints.\n\nReturn the number of ways we can draw k non-overlapping line segments. Since this number can be huge, return it modulo 109 + 7.\n\n \n\nExample 1:\n\nInput: n = 4, k = 2\nOutput: 5\nExplanation: \nThe two line segments are shown in red and blue.\nThe image above shows the 5 different ways {(0,2),(2,3)}, {(0,1),(1,3)}, {(0,1),(2,3)}, {(1,2),(2,3)}, {(0,1),(1,2)}.\n\nExample 2:\n\nInput: n = 3, k = 1\nOutput: 3\nExplanation: The 3 ways are {(0,1)}, {(0,2)}, {(1,2)}.\n\n\nExample 3:\n\nInput: n = 30, k = 7\nOutput: 796297179\nExplanation: The total number of possible ways to draw 7 line segments is 3796297200. Taking this number modulo 109 + 7 gives us 796297179.\n\n\nExample 4:\n\nInput: n = 5, k = 3\nOutput: 7\n\n\nExample 5:\n\nInput: n = 3, k = 2\nOutput: 1\n\n \n\nConstraints:\n\n2 <= n <= 1000\n1 <= k <= n-1"},{"index":"1622","url":"https://leetcode.com/problems/fancy-sequence","title":"Fancy Sequence","difficulty":"Hard","description":"Write an API that generates fancy sequences using the append, addAll, and multAll operations.\n\nImplement the Fancy class:\n\nFancy() Initializes the object with an empty sequence.\nvoid append(val) Appends an integer val to the end of the sequence.\nvoid addAll(inc) Increments all existing values in the sequence by an integer inc.\nvoid multAll(m) Multiplies all existing values in the sequence by an integer m.\nint getIndex(idx) Gets the current value at index idx (0-indexed) of the sequence modulo 109 + 7. If the index is greater or equal than the length of the sequence, return -1.\n\n \n\nExample 1:\n\nInput\n[\"Fancy\", \"append\", \"addAll\", \"append\", \"multAll\", \"getIndex\", \"addAll\", \"append\", \"multAll\", \"getIndex\", \"getIndex\", \"getIndex\"]\n[[], [2], [3], [7], [2], [0], [3], [10], [2], [0], [1], [2]]\nOutput\n[null, null, null, null, null, 10, null, null, null, 26, 34, 20]\n\nExplanation\nFancy fancy = new Fancy();\nfancy.append(2);   // fancy sequence: [2]\nfancy.addAll(3);   // fancy sequence: [2+3] -> [5]\nfancy.append(7);   // fancy sequence: [5, 7]\nfancy.multAll(2);  // fancy sequence: [5*2, 7*2] -> [10, 14]\nfancy.getIndex(0); // return 10\nfancy.addAll(3);   // fancy sequence: [10+3, 14+3] -> [13, 17]\nfancy.append(10);  // fancy sequence: [13, 17, 10]\nfancy.multAll(2);  // fancy sequence: [13*2, 17*2, 10*2] -> [26, 34, 20]\nfancy.getIndex(0); // return 26\nfancy.getIndex(1); // return 34\nfancy.getIndex(2); // return 20\n\n\n \n\nConstraints:\n\n1 <= val, inc, m <= 100\n0 <= idx <= 105\nAt most 105 calls total will be made to append, addAll, multAll, and getIndex."},{"index":"1624","url":"https://leetcode.com/problems/largest-substring-between-two-equal-characters","title":"Largest Substring Between Two Equal Characters","difficulty":"Easy","description":"Given a string s, return the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1.\n\nA substring is a contiguous sequence of characters within a string.\n\n \n\nExample 1:\n\nInput: s = \"aa\"\nOutput: 0\nExplanation: The optimal substring here is an empty substring between the two 'a's.\n\nExample 2:\n\nInput: s = \"abca\"\nOutput: 2\nExplanation: The optimal substring here is \"bc\".\n\n\nExample 3:\n\nInput: s = \"cbzxy\"\nOutput: -1\nExplanation: There are no characters that appear twice in s.\n\n\nExample 4:\n\nInput: s = \"cabbac\"\nOutput: 4\nExplanation: The optimal substring here is \"abba\". Other non-optimal substrings include \"bb\" and \"\".\n\n\n \n\nConstraints:\n\n1 <= s.length <= 300\ns contains only lowercase English letters."},{"index":"1625","url":"https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations","title":"Lexicographically Smallest String After Applying Operations","difficulty":"Medium","description":"You are given a string s of even length consisting of digits from 0 to 9, and two integers a and b.\n\nYou can apply either of the following two operations any number of times and in any order on s:\n\nAdd a to all odd indices of s (0-indexed). Digits post 9 are cycled back to 0. For example, if s = \"3456\" and a = 5, s becomes \"3951\".\nRotate s to the right by b positions. For example, if s = \"3456\" and b = 1, s becomes \"6345\".\n\nReturn the lexicographically smallest string you can obtain by applying the above operations any number of times on s.\n\nA string a is lexicographically smaller than a string b (of the same length) if in the first position where a and b differ, string a has a letter that appears earlier in the alphabet than the corresponding letter in b. For example, \"0158\" is lexicographically smaller than \"0190\" because the first position they differ is at the third letter, and '5' comes before '9'.\n\n \n\nExample 1:\n\nInput: s = \"5525\", a = 9, b = 2\nOutput: \"2050\"\nExplanation: We can apply the following operations:\nStart:  \"5525\"\nRotate: \"2555\"\nAdd:    \"2454\"\nAdd:    \"2353\"\nRotate: \"5323\"\nAdd:    \"5222\"\n​​​​​​​Add:    \"5121\"\n​​​​​​​Rotate: \"2151\"\n​​​​​​​Add:    \"2050\"​​​​​​​​​​​​\nThere is no way to obtain a string that is lexicographically smaller then \"2050\".\n\n\nExample 2:\n\nInput: s = \"74\", a = 5, b = 1\nOutput: \"24\"\nExplanation: We can apply the following operations:\nStart:  \"74\"\nRotate: \"47\"\n​​​​​​​Add:    \"42\"\n​​​​​​​Rotate: \"24\"​​​​​​​​​​​​\nThere is no way to obtain a string that is lexicographically smaller then \"24\".\n\n\nExample 3:\n\nInput: s = \"0011\", a = 4, b = 2\nOutput: \"0011\"\nExplanation: There are no sequence of operations that will give us a lexicographically smaller string than \"0011\".\n\n\nExample 4:\n\nInput: s = \"43987654\", a = 7, b = 3\nOutput: \"00553311\"\n\n\n \n\nConstraints:\n\n2 <= s.length <= 100\ns.length is even.\ns consists of digits from 0 to 9 only.\n1 <= a <= 9\n1 <= b <= s.length - 1"},{"index":"1626","url":"https://leetcode.com/problems/best-team-with-no-conflicts","title":"Best Team With No Conflicts","difficulty":"Medium","description":"You are the manager of a basketball team. For the upcoming tournament, you want to choose the team with the highest overall score. The score of the team is the sum of scores of all the players in the team.\n\nHowever, the basketball team is not allowed to have conflicts. A conflict exists if a younger player has a strictly higher score than an older player. A conflict does not occur between players of the same age.\n\nGiven two lists, scores and ages, where each scores[i] and ages[i] represents the score and age of the ith player, respectively, return the highest overall score of all possible basketball teams.\n\n \n\nExample 1:\n\nInput: scores = [1,3,5,10,15], ages = [1,2,3,4,5]\nOutput: 34\nExplanation: You can choose all the players.\n\n\nExample 2:\n\nInput: scores = [4,5,6,5], ages = [2,1,2,1]\nOutput: 16\nExplanation: It is best to choose the last 3 players. Notice that you are allowed to choose multiple people of the same age.\n\n\nExample 3:\n\nInput: scores = [1,2,3,5], ages = [8,9,10,1]\nOutput: 6\nExplanation: It is best to choose the first 3 players. \n\n\n \n\nConstraints:\n\n1 <= scores.length, ages.length <= 1000\nscores.length == ages.length\n1 <= scores[i] <= 106\n1 <= ages[i] <= 1000"},{"index":"1627","url":"https://leetcode.com/problems/graph-connectivity-with-threshold","title":"Graph Connectivity With Threshold","difficulty":"Hard","description":"We have n cities labeled from 1 to n. Two different cities with labels x and y are directly connected by a bidirectional road if and only if x and y share a common divisor strictly greater than some threshold. More formally, cities with labels x and y have a road between them if there exists an integer z such that all of the following are true:\n\nx % z == 0,\ny % z == 0, and\nz > threshold.\n\nGiven the two integers, n and threshold, and an array of queries, you must determine for each queries[i] = [ai, bi] if cities ai and bi are connected (i.e. there is some path between them).\n\nReturn an array answer, where answer.length == queries.length and answer[i] is true if for the ith query, there is a path between ai and bi, or answer[i] is false if there is no path.\n\n \n\nExample 1:\n\nInput: n = 6, threshold = 2, queries = [[1,4],[2,5],[3,6]]\nOutput: [false,false,true]\nExplanation: The divisors for each number:\n1:   1\n2:   1, 2\n3:   1, 3\n4:   1, 2, 4\n5:   1, 5\n6:   1, 2, 3, 6\nUsing the underlined divisors above the threshold, only cities 3 and 6 share a common divisor, so they are the\nonly ones directly connected. The result of each query:\n[1,4]   1 is not connected to 4\n[2,5]   2 is not connected to 5\n[3,6]   3 is connected to 6 through path 3--6\n\n\nExample 2:\n\nInput: n = 6, threshold = 0, queries = [[4,5],[3,4],[3,2],[2,6],[1,3]]\nOutput: [true,true,true,true,true]\nExplanation: The divisors for each number are the same as the previous example. However, since the threshold is 0,\nall divisors can be used. Since all numbers share 1 as a divisor, all cities are connected.\n\n\nExample 3:\n\nInput: n = 5, threshold = 1, queries = [[4,5],[4,5],[3,2],[2,3],[3,4]]\nOutput: [false,false,false,false,false]\nExplanation: Only cities 2 and 4 share a common divisor 2 which is strictly greater than the threshold 1, so they are the only ones directly connected.\nPlease notice that there can be multiple queries for the same pair of nodes [x, y], and that the query [x, y] is equivalent to the query [y, x].\n\n\n \n\nConstraints:\n\n2 <= n <= 104\n0 <= threshold <= n\n1 <= queries.length <= 105\nqueries[i].length == 2\n1 <= ai, bi <= cities\nai != bi"},{"index":"1629","url":"https://leetcode.com/problems/slowest-key","title":"Slowest Key","difficulty":"Easy","description":"A newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time.\n\nYou are given a string keysPressed of length n, where keysPressed[i] was the ith key pressed in the testing sequence, and a sorted list releaseTimes, where releaseTimes[i] was the time the ith key was released. Both arrays are 0-indexed. The 0th key was pressed at the time 0, and every subsequent key was pressed at the exact time the previous key was released.\n\nThe tester wants to know the key of the keypress that had the longest duration. The ith keypress had a duration of releaseTimes[i] - releaseTimes[i - 1], and the 0th keypress had a duration of releaseTimes[0].\n\nNote that the same key could have been pressed multiple times during the test, and these multiple presses of the same key may not have had the same duration.\n\nReturn the key of the keypress that had the longest duration. If there are multiple such keypresses, return the lexicographically largest key of the keypresses.\n\n \n\nExample 1:\n\nInput: releaseTimes = [9,29,49,50], keysPressed = \"cbcd\"\nOutput: \"c\"\nExplanation: The keypresses were as follows:\nKeypress for 'c' had a duration of 9 (pressed at time 0 and released at time 9).\nKeypress for 'b' had a duration of 29 - 9 = 20 (pressed at time 9 right after the release of the previous character and released at time 29).\nKeypress for 'c' had a duration of 49 - 29 = 20 (pressed at time 29 right after the release of the previous character and released at time 49).\nKeypress for 'd' had a duration of 50 - 49 = 1 (pressed at time 49 right after the release of the previous character and released at time 50).\nThe longest of these was the keypress for 'b' and the second keypress for 'c', both with duration 20.\n'c' is lexicographically larger than 'b', so the answer is 'c'.\n\n\nExample 2:\n\nInput: releaseTimes = [12,23,36,46,62], keysPressed = \"spuda\"\nOutput: \"a\"\nExplanation: The keypresses were as follows:\nKeypress for 's' had a duration of 12.\nKeypress for 'p' had a duration of 23 - 12 = 11.\nKeypress for 'u' had a duration of 36 - 23 = 13.\nKeypress for 'd' had a duration of 46 - 36 = 10.\nKeypress for 'a' had a duration of 62 - 46 = 16.\nThe longest of these was the keypress for 'a' with duration 16.\n\n \n\nConstraints:\n\nreleaseTimes.length == n\nkeysPressed.length == n\n2 <= n <= 1000\n1 <= releaseTimes[i] <= 109\nreleaseTimes[i] < releaseTimes[i+1]\nkeysPressed contains only lowercase English letters."},{"index":"1630","url":"https://leetcode.com/problems/arithmetic-subarrays","title":"Arithmetic Subarrays","difficulty":"Medium","description":"A sequence of numbers is called arithmetic if it consists of at least two elements, and the difference between every two consecutive elements is the same. More formally, a sequence s is arithmetic if and only if s[i+1] - s[i] == s[1] - s[0] for all valid i.\n\nFor example, these are arithmetic sequences:\n\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9\n\nThe following sequence is not arithmetic:\n\n1, 1, 2, 5, 7\n\nYou are given an array of n integers, nums, and two arrays of m integers each, l and r, representing the m range queries, where the ith query is the range [l[i], r[i]]. All the arrays are 0-indexed.\n\nReturn a list of boolean elements answer, where answer[i] is true if the subarray nums[l[i]], nums[l[i]+1], ... , nums[r[i]] can be rearranged to form an arithmetic sequence, and false otherwise.\n\n \n\nExample 1:\n\nInput: nums = [4,6,5,9,3,7], l = [0,0,2], r = [2,3,5]\nOutput: [true,false,true]\nExplanation:\nIn the 0th query, the subarray is [4,6,5]. This can be rearranged as [6,5,4], which is an arithmetic sequence.\nIn the 1st query, the subarray is [4,6,5,9]. This cannot be rearranged as an arithmetic sequence.\nIn the 2nd query, the subarray is [5,9,3,7]. This can be rearranged as [3,5,7,9], which is an arithmetic sequence.\n\nExample 2:\n\nInput: nums = [-12,-9,-3,-12,-6,15,20,-25,-20,-15,-10], l = [0,1,6,4,8,7], r = [4,4,9,7,9,10]\nOutput: [false,true,false,false,true,true]\n\n\n \n\nConstraints:\n\nn == nums.length\nm == l.length\nm == r.length\n2 <= n <= 500\n1 <= m <= 500\n0 <= l[i] < r[i] < n\n-105 <= nums[i] <= 105"},{"index":"1631","url":"https://leetcode.com/problems/path-with-minimum-effort","title":"Path With Minimum Effort","difficulty":"Medium","description":"You are a hiker preparing for an upcoming hike. You are given heights, a 2D array of size rows x columns, where heights[row][col] represents the height of cell (row, col). You are situated in the top-left cell, (0, 0), and you hope to travel to the bottom-right cell, (rows-1, columns-1) (i.e., 0-indexed). You can move up, down, left, or right, and you wish to find a route that requires the minimum effort.\n\nA route's effort is the maximum absolute difference in heights between two consecutive cells of the route.\n\nReturn the minimum effort required to travel from the top-left cell to the bottom-right cell.\n\n \n\nExample 1:\n\nInput: heights = [[1,2,2],[3,8,2],[5,3,5]]\nOutput: 2\nExplanation: The route of [1,3,5,3,5] has a maximum absolute difference of 2 in consecutive cells.\nThis is better than the route of [1,2,2,2,5], where the maximum absolute difference is 3.\n\n\nExample 2:\n\nInput: heights = [[1,2,3],[3,8,4],[5,3,5]]\nOutput: 1\nExplanation: The route of [1,2,3,4,5] has a maximum absolute difference of 1 in consecutive cells, which is better than route [1,3,5,3,5].\n\n\nExample 3:\n\nInput: heights = [[1,2,1,1,1],[1,2,1,2,1],[1,2,1,2,1],[1,2,1,2,1],[1,1,1,2,1]]\nOutput: 0\nExplanation: This route does not require any effort.\n\n\n \n\nConstraints:\n\nrows == heights.length\ncolumns == heights[i].length\n1 <= rows, columns <= 100\n1 <= heights[i][j] <= 106"},{"index":"1632","url":"https://leetcode.com/problems/rank-transform-of-a-matrix","title":"Rank Transform of a Matrix","difficulty":"Hard","description":"Given an m x n matrix, return a new matrix answer where answer[row][col] is the rank of matrix[row][col].\n\nThe rank is an integer that represents how large an element is compared to other elements. It is calculated using the following rules:\n\nThe rank is an integer starting from 1.\nIf two elements p and q are in the same row or column, then:\nIf p < q then rank(p) < rank(q)\nIf p == q then rank(p) == rank(q)\nIf p > q then rank(p) > rank(q)\nThe rank should be as small as possible.\n\nIt is guaranteed that answer is unique under the given rules.\n\n \n\nExample 1:\n\nInput: matrix = [[1,2],[3,4]]\nOutput: [[1,2],[2,3]]\nExplanation:\nThe rank of matrix[0][0] is 1 because it is the smallest integer in its row and column.\nThe rank of matrix[0][1] is 2 because matrix[0][1] > matrix[0][0] and matrix[0][0] is rank 1.\nThe rank of matrix[1][0] is 2 because matrix[1][0] > matrix[0][0] and matrix[0][0] is rank 1.\nThe rank of matrix[1][1] is 3 because matrix[1][1] > matrix[0][1], matrix[1][1] > matrix[1][0], and both matrix[0][1] and matrix[1][0] are rank 2.\n\n\nExample 2:\n\nInput: matrix = [[7,7],[7,7]]\nOutput: [[1,1],[1,1]]\n\n\nExample 3:\n\nInput: matrix = [[20,-21,14],[-19,4,19],[22,-47,24],[-19,4,19]]\nOutput: [[4,2,3],[1,3,4],[5,1,6],[1,3,4]]\n\n\nExample 4:\n\nInput: matrix = [[7,3,6],[1,4,5],[9,8,2]]\nOutput: [[5,1,4],[1,2,3],[6,3,1]]\n\n\n \n\nConstraints:\n\nm == matrix.length\nn == matrix[i].length\n1 <= m, n <= 500\n-109 <= matrix[row][col] <= 109"},{"index":"1636","url":"https://leetcode.com/problems/sort-array-by-increasing-frequency","title":"Sort Array by Increasing Frequency","difficulty":"Easy","description":"Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.\n\nReturn the sorted array.\n\n \n\nExample 1:\n\nInput: nums = [1,1,2,2,2,3]\nOutput: [3,1,1,2,2,2]\nExplanation: '3' has a frequency of 1, '1' has a frequency of 2, and '2' has a frequency of 3.\n\n\nExample 2:\n\nInput: nums = [2,3,1,3,2]\nOutput: [1,3,3,2,2]\nExplanation: '2' and '3' both have a frequency of 2, so they are sorted in decreasing order.\n\n\nExample 3:\n\nInput: nums = [-1,1,-6,4,5,-6,1,4,1]\nOutput: [5,-1,4,4,-6,-6,1,1,1]\n\n \n\nConstraints:\n\n1 <= nums.length <= 100\n-100 <= nums[i] <= 100"},{"index":"1637","url":"https://leetcode.com/problems/widest-vertical-area-between-two-points-containing-no-points","title":"Widest Vertical Area Between Two Points Containing No Points","difficulty":"Medium","description":"Given n points on a 2D plane where points[i] = [xi, yi], Return the widest vertical area between two points such that no points are inside the area.\n\nA vertical area is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The widest vertical area is the one with the maximum width.\n\nNote that points on the edge of a vertical area are not considered included in the area.\n\n \n\nExample 1:\n\n​\nInput: points = [[8,7],[9,9],[7,4],[9,7]]\nOutput: 1\nExplanation: Both the red and the blue area are optimal.\n\n\nExample 2:\n\nInput: points = [[3,1],[9,0],[1,0],[1,4],[5,3],[8,8]]\nOutput: 3\n\n\n \n\nConstraints:\n\nn == points.length\n2 <= n <= 105\npoints[i].length == 2\n0 <= xi, yi <= 109"},{"index":"1638","url":"https://leetcode.com/problems/count-substrings-that-differ-by-one-character","title":"Count Substrings That Differ by One Character","difficulty":"Medium","description":"Given two strings s and t, find the number of ways you can choose a non-empty substring of s and replace a single character by a different character such that the resulting substring is a substring of t. In other words, find the number of substrings in s that differ from some substring in t by exactly one character.\n\nFor example, the underlined substrings in \"computer\" and \"computation\" only differ by the 'e'/'a', so this is a valid way.\n\nReturn the number of substrings that satisfy the condition above.\n\nA substring is a contiguous sequence of characters within a string.\n\n \n\nExample 1:\n\nInput: s = \"aba\", t = \"baba\"\nOutput: 6\nExplanation: The following are the pairs of substrings from s and t that differ by exactly 1 character:\n(\"aba\", \"baba\")\n(\"aba\", \"baba\")\n(\"aba\", \"baba\")\n(\"aba\", \"baba\")\n(\"aba\", \"baba\")\n(\"aba\", \"baba\")\nThe underlined portions are the substrings that are chosen from s and t.\n\n​​Example 2:\nInput: s = \"ab\", t = \"bb\"\nOutput: 3\nExplanation: The following are the pairs of substrings from s and t that differ by 1 character:\n(\"ab\", \"bb\")\n(\"ab\", \"bb\")\n(\"ab\", \"bb\")\n​​​​The underlined portions are the substrings that are chosen from s and t.\n\nExample 3:\nInput: s = \"a\", t = \"a\"\nOutput: 0\n\n\nExample 4:\n\nInput: s = \"abe\", t = \"bbc\"\nOutput: 10\n\n\n \n\nConstraints:\n\n1 <= s.length, t.length <= 100\ns and t consist of lowercase English letters only."},{"index":"1639","url":"https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary","title":"Number of Ways to Form a Target String Given a Dictionary","difficulty":"Hard","description":"You are given a list of strings of the same length words and a string target.\n\nYour task is to form target using the given words under the following rules:\n\ntarget should be formed from left to right.\nTo form the ith character (0-indexed) of target, you can choose the kth character of the jth string in words if target[i] = words[j][k].\nOnce you use the kth character of the jth string of words, you can no longer use the xth character of any string in words where x <= k. In other words, all characters to the left of or at index k become unusuable for every string.\nRepeat the process until you form the string target.\n\nNotice that you can use multiple characters from the same string in words provided the conditions above are met.\n\nReturn the number of ways to form target from words. Since the answer may be too large, return it modulo 109 + 7.\n\n \n\nExample 1:\n\nInput: words = [\"acca\",\"bbbb\",\"caca\"], target = \"aba\"\nOutput: 6\nExplanation: There are 6 ways to form target.\n\"aba\" -> index 0 (\"acca\"), index 1 (\"bbbb\"), index 3 (\"caca\")\n\"aba\" -> index 0 (\"acca\"), index 2 (\"bbbb\"), index 3 (\"caca\")\n\"aba\" -> index 0 (\"acca\"), index 1 (\"bbbb\"), index 3 (\"acca\")\n\"aba\" -> index 0 (\"acca\"), index 2 (\"bbbb\"), index 3 (\"acca\")\n\"aba\" -> index 1 (\"caca\"), index 2 (\"bbbb\"), index 3 (\"acca\")\n\"aba\" -> index 1 (\"caca\"), index 2 (\"bbbb\"), index 3 (\"caca\")\n\n\nExample 2:\n\nInput: words = [\"abba\",\"baab\"], target = \"bab\"\nOutput: 4\nExplanation: There are 4 ways to form target.\n\"bab\" -> index 0 (\"baab\"), index 1 (\"baab\"), index 2 (\"abba\")\n\"bab\" -> index 0 (\"baab\"), index 1 (\"baab\"), index 3 (\"baab\")\n\"bab\" -> index 0 (\"baab\"), index 2 (\"baab\"), index 3 (\"baab\")\n\"bab\" -> index 1 (\"abba\"), index 2 (\"baab\"), index 3 (\"baab\")\n\n\nExample 3:\n\nInput: words = [\"abcd\"], target = \"abcd\"\nOutput: 1\n\n\nExample 4:\n\nInput: words = [\"abab\",\"baba\",\"abba\",\"baab\"], target = \"abba\"\nOutput: 16\n\n\n \n\nConstraints:\n\n1 <= words.length <= 1000\n1 <= words[i].length <= 1000\nAll strings in words have the same length.\n1 <= target.length <= 1000\nwords[i] and target contain only lowercase English letters."},{"index":"1640","url":"https://leetcode.com/problems/check-array-formation-through-concatenation","title":"Check Array Formation Through Concatenation","difficulty":"Easy","description":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\n\nReturn true if it is possible to form the array arr from pieces. Otherwise, return false.\n\n \n\nExample 1:\n\nInput: arr = [85], pieces = [[85]]\nOutput: true\n\n\nExample 2:\n\nInput: arr = [15,88], pieces = [[88],[15]]\nOutput: true\nExplanation: Concatenate [15] then [88]\n\n\nExample 3:\n\nInput: arr = [49,18,16], pieces = [[16,18,49]]\nOutput: false\nExplanation: Even though the numbers match, we cannot reorder pieces[0].\n\n\nExample 4:\n\nInput: arr = [91,4,64,78], pieces = [[78],[4,64],[91]]\nOutput: true\nExplanation: Concatenate [91] then [4,64] then [78]\n\nExample 5:\n\nInput: arr = [1,3,5,7], pieces = [[2,4,6,8]]\nOutput: false\n\n\n \n\nConstraints:\n\n1 <= pieces.length <= arr.length <= 100\nsum(pieces[i].length) == arr.length\n1 <= pieces[i].length <= arr.length\n1 <= arr[i], pieces[i][j] <= 100\nThe integers in arr are distinct.\nThe integers in pieces are distinct (i.e., If we flatten pieces in a 1D array, all the integers in this array are distinct)."},{"index":"1641","url":"https://leetcode.com/problems/count-sorted-vowel-strings","title":"Count Sorted Vowel Strings","difficulty":"Medium","description":"Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.\n\nA string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.\n\n \n\nExample 1:\n\nInput: n = 1\nOutput: 5\nExplanation: The 5 sorted strings that consist of vowels only are [\"a\",\"e\",\"i\",\"o\",\"u\"].\n\n\nExample 2:\n\nInput: n = 2\nOutput: 15\nExplanation: The 15 sorted strings that consist of vowels only are\n[\"aa\",\"ae\",\"ai\",\"ao\",\"au\",\"ee\",\"ei\",\"eo\",\"eu\",\"ii\",\"io\",\"iu\",\"oo\",\"ou\",\"uu\"].\nNote that \"ea\" is not a valid string since 'e' comes after 'a' in the alphabet.\n\n\nExample 3:\n\nInput: n = 33\nOutput: 66045\n\n\n \n\nConstraints:\n\n1 <= n <= 50 "},{"index":"1642","url":"https://leetcode.com/problems/furthest-building-you-can-reach","title":"Furthest Building You Can Reach","difficulty":"Medium","description":"You are given an integer array heights representing the heights of buildings, some bricks, and some ladders.\n\nYou start your journey from building 0 and move to the next building by possibly using bricks or ladders.\n\nWhile moving from building i to building i+1 (0-indexed),\n\nIf the current building's height is greater than or equal to the next building's height, you do not need a ladder or bricks.\nIf the current building's height is less than the next building's height, you can either use one ladder or (h[i+1] - h[i]) bricks.\n\nReturn the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.\n\n \n\nExample 1:\n\nInput: heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1\nOutput: 4\nExplanation: Starting at building 0, you can follow these steps:\n- Go to building 1 without using ladders nor bricks since 4 >= 2.\n- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 < 7.\n- Go to building 3 without using ladders nor bricks since 7 >= 6.\n- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 < 9.\nIt is impossible to go beyond building 4 because you do not have any more bricks or ladders.\n\n\nExample 2:\n\nInput: heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2\nOutput: 7\n\n\nExample 3:\n\nInput: heights = [14,3,19,3], bricks = 17, ladders = 0\nOutput: 3\n\n\n \n\nConstraints:\n\n1 <= heights.length <= 105\n1 <= heights[i] <= 106\n0 <= bricks <= 109\n0 <= ladders <= heights.length"},{"index":"1643","url":"https://leetcode.com/problems/kth-smallest-instructions","title":"Kth Smallest Instructions","difficulty":"Hard","description":"Bob is standing at cell (0, 0), and he wants to reach destination: (row, column). He can only travel right and down. You are going to help Bob by providing instructions for him to reach destination.\n\nThe instructions are represented as a string, where each character is either:\n\n'H', meaning move horizontally (go right), or\n'V', meaning move vertically (go down).\n\nMultiple instructions will lead Bob to destination. For example, if destination is (2, 3), both \"HHHVV\" and \"HVHVH\" are valid instructions.\n\nHowever, Bob is very picky. Bob has a lucky number k, and he wants the kth lexicographically smallest instructions that will lead him to destination. k is 1-indexed.\n\nGiven an integer array destination and an integer k, return the kth lexicographically smallest instructions that will take Bob to destination.\n\n \n\nExample 1:\n\nInput: destination = [2,3], k = 1\nOutput: \"HHHVV\"\nExplanation: All the instructions that reach (2, 3) in lexicographic order are as follows:\n[\"HHHVV\", \"HHVHV\", \"HHVVH\", \"HVHHV\", \"HVHVH\", \"HVVHH\", \"VHHHV\", \"VHHVH\", \"VHVHH\", \"VVHHH\"].\n\n\nExample 2:\n\nInput: destination = [2,3], k = 2\nOutput: \"HHVHV\"\n\n\nExample 3:\n\nInput: destination = [2,3], k = 3\nOutput: \"HHVVH\"\n\n\n \n\nConstraints:\n\ndestination.length == 2\n1 <= row, column <= 15\n1 <= k <= nCr(row + column, row), where nCr(a, b) denotes a choose b​​​​​."},{"index":"1646","url":"https://leetcode.com/problems/get-maximum-in-generated-array","title":"Get Maximum in Generated Array","difficulty":"Easy","description":"You are given an integer n. An array nums of length n + 1 is generated in the following way:\n\nnums[0] = 0\nnums[1] = 1\nnums[2 * i] = nums[i] when 2 <= 2 * i <= n\nnums[2 * i + 1] = nums[i] + nums[i + 1] when 2 <= 2 * i + 1 <= n\n\nReturn the maximum integer in the array nums​​​.\n\n \n\nExample 1:\n\nInput: n = 7\nOutput: 3\nExplanation: According to the given rules:\n  nums[0] = 0\n  nums[1] = 1\n  nums[(1 * 2) = 2] = nums[1] = 1\n  nums[(1 * 2) + 1 = 3] = nums[1] + nums[2] = 1 + 1 = 2\n  nums[(2 * 2) = 4] = nums[2] = 1\n  nums[(2 * 2) + 1 = 5] = nums[2] + nums[3] = 1 + 2 = 3\n  nums[(3 * 2) = 6] = nums[3] = 2\n  nums[(3 * 2) + 1 = 7] = nums[3] + nums[4] = 2 + 1 = 3\nHence, nums = [0,1,1,2,1,3,2,3], and the maximum is 3.\n\n\nExample 2:\n\nInput: n = 2\nOutput: 1\nExplanation: According to the given rules, the maximum between nums[0], nums[1], and nums[2] is 1.\n\n\nExample 3:\n\nInput: n = 3\nOutput: 2\nExplanation: According to the given rules, the maximum between nums[0], nums[1], nums[2], and nums[3] is 2.\n\n\n \n\nConstraints:\n\n0 <= n <= 100"},{"index":"1647","url":"https://leetcode.com/problems/minimum-deletions-to-make-character-frequencies-unique","title":"Minimum Deletions to Make Character Frequencies Unique","difficulty":"Medium","description":"A string s is called good if there are no two different characters in s that have the same frequency.\n\nGiven a string s, return the minimum number of characters you need to delete to make s good.\n\nThe frequency of a character in a string is the number of times it appears in the string. For example, in the string \"aab\", the frequency of 'a' is 2, while the frequency of 'b' is 1.\n\n \n\nExample 1:\n\nInput: s = \"aab\"\nOutput: 0\nExplanation: s is already good.\n\n\nExample 2:\n\nInput: s = \"aaabbbcc\"\nOutput: 2\nExplanation: You can delete two 'b's resulting in the good string \"aaabcc\".\nAnother way it to delete one 'b' and one 'c' resulting in the good string \"aaabbc\".\n\nExample 3:\n\nInput: s = \"ceabaacb\"\nOutput: 2\nExplanation: You can delete both 'c's resulting in the good string \"eabaab\".\nNote that we only care about characters that are still in the string at the end (i.e. frequency of 0 is ignored).\n\n\n \n\nConstraints:\n\n1 <= s.length <= 105\ns contains only lowercase English letters."},{"index":"1648","url":"https://leetcode.com/problems/sell-diminishing-valued-colored-balls","title":"Sell Diminishing-Valued Colored Balls","difficulty":"Medium","description":"You have an inventory of different colored balls, and there is a customer that wants orders balls of any color.\n\nThe customer weirdly values the colored balls. Each colored ball's value is the number of balls of that color you currently have in your inventory. For example, if you own 6 yellow balls, the customer would pay 6 for the first yellow ball. After the transaction, there are only 5 yellow balls left, so the next yellow ball is then valued at 5 (i.e., the value of the balls decreases as you sell more to the customer).\n\nYou are given an integer array, inventory, where inventory[i] represents the number of balls of the ith color that you initially own. You are also given an integer orders, which represents the total number of balls that the customer wants. You can sell the balls in any order.\n\nReturn the maximum total value that you can attain after selling orders colored balls. As the answer may be too large, return it modulo 109 + 7.\n\n \n\nExample 1:\n\nInput: inventory = [2,5], orders = 4\nOutput: 14\nExplanation: Sell the 1st color 1 time (2) and the 2nd color 3 times (5 + 4 + 3).\nThe maximum total value is 2 + 5 + 4 + 3 = 14.\n\n\nExample 2:\n\nInput: inventory = [3,5], orders = 6\nOutput: 19\nExplanation: Sell the 1st color 2 times (3 + 2) and the 2nd color 4 times (5 + 4 + 3 + 2).\nThe maximum total value is 3 + 2 + 5 + 4 + 3 + 2 = 19.\n\n\nExample 3:\n\nInput: inventory = [2,8,4,10,6], orders = 20\nOutput: 110\n\n\nExample 4:\n\nInput: inventory = [1000000000], orders = 1000000000\nOutput: 21\nExplanation: Sell the 1st color 1000000000 times for a total value of 500000000500000000. 500000000500000000 modulo 109 + 7 = 21.\n\n\n \n\nConstraints:\n\n1 <= inventory.length <= 105\n1 <= inventory[i] <= 109\n1 <= orders <= min(sum(inventory[i]), 109)"},{"index":"1649","url":"https://leetcode.com/problems/create-sorted-array-through-instructions","title":"Create Sorted Array through Instructions","difficulty":"Hard","description":"Given an integer array instructions, you are asked to create a sorted array from the elements in instructions. You start with an empty container nums. For each element from left to right in instructions, insert it into nums. The cost of each insertion is the minimum of the following:\n\nThe number of elements currently in nums that are strictly less than instructions[i].\nThe number of elements currently in nums that are strictly greater than instructions[i].\n\nFor example, if inserting element 3 into nums = [1,2,3,5], the cost of insertion is min(2, 1) (elements 1 and 2 are less than 3, element 5 is greater than 3) and nums will become [1,2,3,3,5].\n\nReturn the total cost to insert all elements from instructions into nums. Since the answer may be large, return it modulo 109 + 7\n\n \n\nExample 1:\n\nInput: instructions = [1,5,6,2]\nOutput: 1\nExplanation: Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 5 with cost min(1, 0) = 0, now nums = [1,5].\nInsert 6 with cost min(2, 0) = 0, now nums = [1,5,6].\nInsert 2 with cost min(1, 2) = 1, now nums = [1,2,5,6].\nThe total cost is 0 + 0 + 0 + 1 = 1.\n\nExample 2:\n\nInput: instructions = [1,2,3,6,5,4]\nOutput: 3\nExplanation: Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 2 with cost min(1, 0) = 0, now nums = [1,2].\nInsert 3 with cost min(2, 0) = 0, now nums = [1,2,3].\nInsert 6 with cost min(3, 0) = 0, now nums = [1,2,3,6].\nInsert 5 with cost min(3, 1) = 1, now nums = [1,2,3,5,6].\nInsert 4 with cost min(3, 2) = 2, now nums = [1,2,3,4,5,6].\nThe total cost is 0 + 0 + 0 + 0 + 1 + 2 = 3.\n\n\nExample 3:\n\nInput: instructions = [1,3,3,3,2,4,2,1,2]\nOutput: 4\nExplanation: Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 3 with cost min(1, 0) = 0, now nums = [1,3].\nInsert 3 with cost min(1, 0) = 0, now nums = [1,3,3].\nInsert 3 with cost min(1, 0) = 0, now nums = [1,3,3,3].\nInsert 2 with cost min(1, 3) = 1, now nums = [1,2,3,3,3].\nInsert 4 with cost min(5, 0) = 0, now nums = [1,2,3,3,3,4].\n​​​​​​​Insert 2 with cost min(1, 4) = 1, now nums = [1,2,2,3,3,3,4].\n​​​​​​​Insert 1 with cost min(0, 6) = 0, now nums = [1,1,2,2,3,3,3,4].\n​​​​​​​Insert 2 with cost min(2, 4) = 2, now nums = [1,1,2,2,2,3,3,3,4].\nThe total cost is 0 + 0 + 0 + 0 + 1 + 0 + 1 + 0 + 2 = 4.\n\n\n \n\nConstraints:\n\n1 <= instructions.length <= 105\n1 <= instructions[i] <= 105"},{"index":"1652","url":"https://leetcode.com/problems/defuse-the-bomb","title":"Defuse the Bomb","difficulty":"Easy","description":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\n\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\n\nIf k > 0, replace the ith number with the sum of the next k numbers.\nIf k < 0, replace the ith number with the sum of the previous k numbers.\nIf k == 0, replace the ith number with 0.\n\nAs code is circular, the next element of code[n-1] is code[0], and the previous element of code[0] is code[n-1].\n\nGiven the circular array code and an integer key k, return the decrypted code to defuse the bomb!\n\n \n\nExample 1:\n\nInput: code = [5,7,1,4], k = 3\nOutput: [12,10,16,13]\nExplanation: Each number is replaced by the sum of the next 3 numbers. The decrypted code is [7+1+4, 1+4+5, 4+5+7, 5+7+1]. Notice that the numbers wrap around.\n\n\nExample 2:\n\nInput: code = [1,2,3,4], k = 0\nOutput: [0,0,0,0]\nExplanation: When k is zero, the numbers are replaced by 0. \n\n\nExample 3:\n\nInput: code = [2,4,9,3], k = -2\nOutput: [12,5,6,13]\nExplanation: The decrypted code is [3+9, 2+3, 4+2, 9+4]. Notice that the numbers wrap around again. If k is negative, the sum is of the previous numbers.\n\n\n \n\nConstraints:\n\nn == code.length\n1 <= n <= 100\n1 <= code[i] <= 100\n-(n - 1) <= k <= n - 1"},{"index":"1653","url":"https://leetcode.com/problems/minimum-deletions-to-make-string-balanced","title":"Minimum Deletions to Make String Balanced","difficulty":"Medium","description":"You are given a string s consisting only of characters 'a' and 'b'​​​​.\n\nYou can delete any number of characters in s to make s balanced. s is balanced if there is no pair of indices (i,j) such that i < j and s[i] = 'b' and s[j]= 'a'.\n\nReturn the minimum number of deletions needed to make s balanced.\n\n \n\nExample 1:\n\nInput: s = \"aababbab\"\nOutput: 2\nExplanation: You can either:\nDelete the characters at 0-indexed positions 2 and 6 (\"aababbab\" -> \"aaabbb\"), or\nDelete the characters at 0-indexed positions 3 and 6 (\"aababbab\" -> \"aabbbb\").\n\n\nExample 2:\n\nInput: s = \"bbaaaaabb\"\nOutput: 2\nExplanation: The only solution is to delete the first two characters.\n\n\n \n\nConstraints:\n\n1 <= s.length <= 105\ns[i] is 'a' or 'b'​​."},{"index":"1654","url":"https://leetcode.com/problems/minimum-jumps-to-reach-home","title":"Minimum Jumps to Reach Home","difficulty":"Medium","description":"A certain bug's home is on the x-axis at position x. Help them get there from position 0.\n\nThe bug jumps according to the following rules:\n\nIt can jump exactly a positions forward (to the right).\nIt can jump exactly b positions backward (to the left).\nIt cannot jump backward twice in a row.\nIt cannot jump to any forbidden positions.\n\nThe bug may jump forward beyond its home, but it cannot jump to positions numbered with negative integers.\n\nGiven an array of integers forbidden, where forbidden[i] means that the bug cannot jump to the position forbidden[i], and integers a, b, and x, return the minimum number of jumps needed for the bug to reach its home. If there is no possible sequence of jumps that lands the bug on position x, return -1.\n\n \n\nExample 1:\n\nInput: forbidden = [14,4,18,1,15], a = 3, b = 15, x = 9\nOutput: 3\nExplanation: 3 jumps forward (0 -> 3 -> 6 -> 9) will get the bug home.\n\n\nExample 2:\n\nInput: forbidden = [8,3,16,6,12,20], a = 15, b = 13, x = 11\nOutput: -1\n\n\nExample 3:\n\nInput: forbidden = [1,6,2,14,5,17,4], a = 16, b = 9, x = 7\nOutput: 2\nExplanation: One jump forward (0 -> 16) then one jump backward (16 -> 7) will get the bug home.\n\n\n \n\nConstraints:\n\n1 <= forbidden.length <= 1000\n1 <= a, b, forbidden[i] <= 2000\n0 <= x <= 2000\nAll the elements in forbidden are distinct.\nPosition x is not forbidden."},{"index":"1655","url":"https://leetcode.com/problems/distribute-repeating-integers","title":"Distribute Repeating Integers","difficulty":"Hard","description":"You are given an array of n integers, nums, where there are at most 50 unique values in the array. You are also given an array of m customer order quantities, quantity, where quantity[i] is the amount of integers the ith customer ordered. Determine if it is possible to distribute nums such that:\n\nThe ith customer gets exactly quantity[i] integers,\nThe integers the ith customer gets are all equal, and\nEvery customer is satisfied.\n\nReturn true if it is possible to distribute nums according to the above conditions.\n\n \n\nExample 1:\n\nInput: nums = [1,2,3,4], quantity = [2]\nOutput: false\nExplanation: The 0th customer cannot be given two different integers.\n\n\nExample 2:\n\nInput: nums = [1,2,3,3], quantity = [2]\nOutput: true\nExplanation: The 0th customer is given [3,3]. The integers [1,2] are not used.\n\n\nExample 3:\n\nInput: nums = [1,1,2,2], quantity = [2,2]\nOutput: true\nExplanation: The 0th customer is given [1,1], and the 1st customer is given [2,2].\n\n\nExample 4:\n\nInput: nums = [1,1,2,3], quantity = [2,2]\nOutput: false\nExplanation: Although the 0th customer could be given [1,1], the 1st customer cannot be satisfied.\n\nExample 5:\n\nInput: nums = [1,1,1,1,1], quantity = [2,3]\nOutput: true\nExplanation: The 0th customer is given [1,1], and the 1st customer is given [1,1,1].\n\n\n \n\nConstraints:\n\nn == nums.length\n1 <= n <= 105\n1 <= nums[i] <= 1000\nm == quantity.length\n1 <= m <= 10\n1 <= quantity[i] <= 105\nThere are at most 50 unique values in nums."},{"index":"1656","url":"https://leetcode.com/problems/design-an-ordered-stream","title":"Design an Ordered Stream","difficulty":"Easy","description":"There is a stream of n (id, value) pairs arriving in an arbitrary order, where id is an integer between 1 and n and value is a string. No two pairs have the same id.\n\nDesign a stream that returns the values in increasing order of their IDs by returning a chunk (list) of values after each insertion. The concatenation of all the chunks should result in a list of the sorted values.\n\nImplement the OrderedStream class:\n\nOrderedStream(int n) Constructs the stream to take n values.\nString[] insert(int id, String value) Inserts the pair (id, value) into the stream, then returns the largest possible chunk of currently inserted values that appear next in the order.\n\n \n\nExample:\n\nInput\n[\"OrderedStream\", \"insert\", \"insert\", \"insert\", \"insert\", \"insert\"]\n[[5], [3, \"ccccc\"], [1, \"aaaaa\"], [2, \"bbbbb\"], [5, \"eeeee\"], [4, \"ddddd\"]]\nOutput\n[null, [], [\"aaaaa\"], [\"bbbbb\", \"ccccc\"], [], [\"ddddd\", \"eeeee\"]]\n\nExplanation\n// Note that the values ordered by ID is [\"aaaaa\", \"bbbbb\", \"ccccc\", \"ddddd\", \"eeeee\"].\nOrderedStream os = new OrderedStream(5);\nos.insert(3, \"ccccc\"); // Inserts (3, \"ccccc\"), returns [].\nos.insert(1, \"aaaaa\"); // Inserts (1, \"aaaaa\"), returns [\"aaaaa\"].\nos.insert(2, \"bbbbb\"); // Inserts (2, \"bbbbb\"), returns [\"bbbbb\", \"ccccc\"].\nos.insert(5, \"eeeee\"); // Inserts (5, \"eeeee\"), returns [].\nos.insert(4, \"ddddd\"); // Inserts (4, \"ddddd\"), returns [\"ddddd\", \"eeeee\"].\n// Concatentating all the chunks returned:\n// [] + [\"aaaaa\"] + [\"bbbbb\", \"ccccc\"] + [] + [\"ddddd\", \"eeeee\"] = [\"aaaaa\", \"bbbbb\", \"ccccc\", \"ddddd\", \"eeeee\"]\n// The resulting order is the same as the order above.\n\n\n \n\nConstraints:\n\n1 <= n <= 1000\n1 <= id <= n\nvalue.length == 5\nvalue consists only of lowercase letters.\nEach call to insert will have a unique id.\nExactly n calls will be made to insert."},{"index":"1657","url":"https://leetcode.com/problems/determine-if-two-strings-are-close","title":"Determine if Two Strings Are Close","difficulty":"Medium","description":"Two strings are considered close if you can attain one from the other using the following operations:\n\nOperation 1: Swap any two existing characters.\nFor example, abcde -> aecdb\nOperation 2: Transform every occurrence of one existing character into another existing character, and do the same with the other character.\nFor example, aacabb -> bbcbaa (all a's turn into b's, and all b's turn into a's)\n\nYou can use the operations on either string as many times as necessary.\n\nGiven two strings, word1 and word2, return true if word1 and word2 are close, and false otherwise.\n\n \n\nExample 1:\n\nInput: word1 = \"abc\", word2 = \"bca\"\nOutput: true\nExplanation: You can attain word2 from word1 in 2 operations.\nApply Operation 1: \"abc\" -> \"acb\"\nApply Operation 1: \"acb\" -> \"bca\"\n\n\nExample 2:\n\nInput: word1 = \"a\", word2 = \"aa\"\nOutput: false\nExplanation: It is impossible to attain word2 from word1, or vice versa, in any number of operations.\n\n\nExample 3:\n\nInput: word1 = \"cabbba\", word2 = \"abbccc\"\nOutput: true\nExplanation: You can attain word2 from word1 in 3 operations.\nApply Operation 1: \"cabbba\" -> \"caabbb\"\nApply Operation 2: \"caabbb\" -> \"baaccc\"\nApply Operation 2: \"baaccc\" -> \"abbccc\"\n\n\nExample 4:\n\nInput: word1 = \"cabbba\", word2 = \"aabbss\"\nOutput: false\nExplanation: It is impossible to attain word2 from word1, or vice versa, in any amount of operations.\n\n\n \n\nConstraints:\n\n1 <= word1.length, word2.length <= 105\nword1 and word2 contain only lowercase English letters."},{"index":"1658","url":"https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero","title":"Minimum Operations to Reduce X to Zero","difficulty":"Medium","description":"You are given an integer array nums and an integer x. In one operation, you can either remove the leftmost or the rightmost element from the array nums and subtract its value from x. Note that this modifies the array for future operations.\n\nReturn the minimum number of operations to reduce x to exactly 0 if it's possible, otherwise, return -1.\n\n \n\nExample 1:\n\nInput: nums = [1,1,4,2,3], x = 5\nOutput: 2\nExplanation: The optimal solution is to remove the last two elements to reduce x to zero.\n\n\nExample 2:\n\nInput: nums = [5,6,7,8,9], x = 4\nOutput: -1\n\n\nExample 3:\n\nInput: nums = [3,2,20,1,1,3], x = 10\nOutput: 5\nExplanation: The optimal solution is to remove the last three elements and the first two elements (5 operations in total) to reduce x to zero.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 105\n1 <= nums[i] <= 104\n1 <= x <= 109"},{"index":"1659","url":"https://leetcode.com/problems/maximize-grid-happiness","title":"Maximize Grid Happiness","difficulty":"Hard","description":"You are given four integers, m, n, introvertsCount, and extrovertsCount. You have an m x n grid, and there are two types of people: introverts and extroverts. There are introvertsCount introverts and extrovertsCount extroverts.\n\nYou should decide how many people you want to live in the grid and assign each of them one grid cell. Note that you do not have to have all the people living in the grid.\n\nThe happiness of each person is calculated as follows:\n\nIntroverts start with 120 happiness and lose 30 happiness for each neighbor (introvert or extrovert).\nExtroverts start with 40 happiness and gain 20 happiness for each neighbor (introvert or extrovert).\n\nNeighbors live in the directly adjacent cells north, east, south, and west of a person's cell.\n\nThe grid happiness is the sum of each person's happiness. Return the maximum possible grid happiness.\n\n \n\nExample 1:\n\nInput: m = 2, n = 3, introvertsCount = 1, extrovertsCount = 2\nOutput: 240\nExplanation: Assume the grid is 1-indexed with coordinates (row, column).\nWe can put the introvert in cell (1,1) and put the extroverts in cells (1,3) and (2,3).\n- Introvert at (1,1) happiness: 120 (starting happiness) - (0 * 30) (0 neighbors) = 120\n- Extrovert at (1,3) happiness: 40 (starting happiness) + (1 * 20) (1 neighbor) = 60\n- Extrovert at (2,3) happiness: 40 (starting happiness) + (1 * 20) (1 neighbor) = 60\nThe grid happiness is 120 + 60 + 60 = 240.\nThe above figure shows the grid in this example with each person's happiness. The introvert stays in the light green cell while the extroverts live on the light purple cells.\n\n\nExample 2:\n\nInput: m = 3, n = 1, introvertsCount = 2, extrovertsCount = 1\nOutput: 260\nExplanation: Place the two introverts in (1,1) and (3,1) and the extrovert at (2,1).\n- Introvert at (1,1) happiness: 120 (starting happiness) - (1 * 30) (1 neighbor) = 90\n- Extrovert at (2,1) happiness: 40 (starting happiness) + (2 * 20) (2 neighbors) = 80\n- Introvert at (3,1) happiness: 120 (starting happiness) - (1 * 30) (1 neighbor) = 90\nThe grid happiness is 90 + 80 + 90 = 260.\n\n\nExample 3:\n\nInput: m = 2, n = 2, introvertsCount = 4, extrovertsCount = 0\nOutput: 240\n\n\n \n\nConstraints:\n\n1 <= m, n <= 5\n0 <= introvertsCount, extrovertsCount <= min(m * n, 6)"},{"index":"1662","url":"https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent","title":"Check If Two String Arrays are Equivalent","difficulty":"Easy","description":"Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.\n\nA string is represented by an array if the array elements concatenated in order forms the string.\n\n \n\nExample 1:\n\nInput: word1 = [\"ab\", \"c\"], word2 = [\"a\", \"bc\"]\nOutput: true\nExplanation:\nword1 represents string \"ab\" + \"c\" -> \"abc\"\nword2 represents string \"a\" + \"bc\" -> \"abc\"\nThe strings are the same, so return true.\n\nExample 2:\n\nInput: word1 = [\"a\", \"cb\"], word2 = [\"ab\", \"c\"]\nOutput: false\n\n\nExample 3:\n\nInput: word1  = [\"abc\", \"d\", \"defg\"], word2 = [\"abcddefg\"]\nOutput: true\n\n\n \n\nConstraints:\n\n1 <= word1.length, word2.length <= 103\n1 <= word1[i].length, word2[i].length <= 103\n1 <= sum(word1[i].length), sum(word2[i].length) <= 103\nword1[i] and word2[i] consist of lowercase letters."},{"index":"1663","url":"https://leetcode.com/problems/smallest-string-with-a-given-numeric-value","title":"Smallest String With A Given Numeric Value","difficulty":"Medium","description":"The numeric value of a lowercase character is defined as its position (1-indexed) in the alphabet, so the numeric value of a is 1, the numeric value of b is 2, the numeric value of c is 3, and so on.\n\nThe numeric value of a string consisting of lowercase characters is defined as the sum of its characters' numeric values. For example, the numeric value of the string \"abe\" is equal to 1 + 2 + 5 = 8.\n\nYou are given two integers n and k. Return the lexicographically smallest string with length equal to n and numeric value equal to k.\n\nNote that a string x is lexicographically smaller than string y if x comes before y in dictionary order, that is, either x is a prefix of y, or if i is the first position such that x[i] != y[i], then x[i] comes before y[i] in alphabetic order.\n\n \n\nExample 1:\n\nInput: n = 3, k = 27\nOutput: \"aay\"\nExplanation: The numeric value of the string is 1 + 1 + 25 = 27, and it is the smallest string with such a value and length equal to 3.\n\n\nExample 2:\n\nInput: n = 5, k = 73\nOutput: \"aaszz\"\n\n\n \n\nConstraints:\n\n1 <= n <= 105\nn <= k <= 26 * n"},{"index":"1664","url":"https://leetcode.com/problems/ways-to-make-a-fair-array","title":"Ways to Make a Fair Array","difficulty":"Medium","description":"You are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal.\n\nFor example, if nums = [6,1,7,4,1]:\n\nChoosing to remove index 1 results in nums = [6,7,4,1].\nChoosing to remove index 2 results in nums = [6,1,4,1].\nChoosing to remove index 4 results in nums = [6,1,7,4].\n\nAn array is fair if the sum of the odd-indexed values equals the sum of the even-indexed values.\n\nReturn the number of indices that you could choose such that after the removal, nums is fair.\n\n \n\nExample 1:\n\nInput: nums = [2,1,6,4]\nOutput: 1\nExplanation:\nRemove index 0: [1,6,4] -> Even sum: 1 + 4 = 5. Odd sum: 6. Not fair.\nRemove index 1: [2,6,4] -> Even sum: 2 + 4 = 6. Odd sum: 6. Fair.\nRemove index 2: [2,1,4] -> Even sum: 2 + 4 = 6. Odd sum: 1. Not fair.\nRemove index 3: [2,1,6] -> Even sum: 2 + 6 = 8. Odd sum: 1. Not fair.\nThere is 1 index that you can remove to make nums fair.\n\n\nExample 2:\n\nInput: nums = [1,1,1]\nOutput: 3\nExplanation: You can remove any index and the remaining array is fair.\n\n\nExample 3:\n\nInput: nums = [1,2,3]\nOutput: 0\nExplanation: You cannot make a fair array after removing any index.\n\n\n \n\nConstraints:\n\n1 <= nums.length <= 105\n1 <= nums[i] <= 104"},{"index":"1665","url":"https://leetcode.com/problems/minimum-initial-energy-to-finish-tasks","title":"Minimum Initial Energy to Finish Tasks","difficulty":"Hard","description":"You are given an array tasks where tasks[i] = [actuali, minimumi]:\n\nactuali is the actual amount of energy you spend to finish the ith task.\nminimumi is the minimum amount of energy you require to begin the ith task.\n\nFor example, if the task is [10, 12] and your current energy is 11, you cannot start this task. However, if your current energy is 13, you can complete this task, and your energy will be 3 after finishing it.\n\nYou can finish the tasks in any order you like.\n\nReturn the minimum initial amount of energy you will need to finish all the tasks.\n\n \n\nExample 1:\n\nInput: tasks = [[1,2],[2,4],[4,8]]\nOutput: 8\nExplanation:\nStarting with 8 energy, we finish the tasks in the following order:\n    - 3rd task. Now energy = 8 - 4 = 4.\n    - 2nd task. Now energy = 4 - 2 = 2.\n    - 1st task. Now energy = 2 - 1 = 1.\nNotice that even though we have leftover energy, starting with 7 energy does not work because we cannot do the 3rd task.\n\nExample 2:\n\nInput: tasks = [[1,3],[2,4],[10,11],[10,12],[8,9]]\nOutput: 32\nExplanation:\nStarting with 32 energy, we finish the tasks in the following order:\n    - 1st task. Now energy = 32 - 1 = 31.\n    - 2nd task. Now energy = 31 - 2 = 29.\n    - 3rd task. Now energy = 29 - 10 = 19.\n    - 4th task. Now energy = 19 - 10 = 9.\n    - 5th task. Now energy = 9 - 8 = 1.\n\nExample 3:\n\nInput: tasks = [[1,7],[2,8],[3,9],[4,10],[5,11],[6,12]]\nOutput: 27\nExplanation:\nStarting with 27 energy, we finish the tasks in the following order:\n    - 5th task. Now energy = 27 - 5 = 22.\n    - 2nd task. Now energy = 22 - 2 = 20.\n    - 3rd task. Now energy = 20 - 3 = 17.\n    - 1st task. Now energy = 17 - 1 = 16.\n    - 4th task. Now energy = 16 - 4 = 12.\n    - 6th task. Now energy = 12 - 6 = 6.\n\n\n \n\nConstraints:\n\n1 <= tasks.length <= 105\n1 <= actual​i <= minimumi <= 104"}]